p: Project = input;

words : map[string] of int;
print: output collection of string;

visit(p, visitor {
	before node: Revision -> {
		splitwords := splitall(node.log, "[^0-9a-zA-Z]+");
		k := len(splitwords) - 1;
		str : string;
		while(k >= 0) {	
			str = lowercase(splitwords[k]);
			if(!haskey(words, str)) {
				words[str] = 1;			
			}
			else {
				words[str] = words[str] + 1;
			}
			k--;	
		}	
	}
	
});


K := keys(words);
V := values(words);
k := len(K) - 1;
while(k >= 0) {
	if(words[K[k]] > 10)
		print << K[k];
k--;
}
