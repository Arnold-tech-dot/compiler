// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ast.proto

package boa.types;

public final class Ast {
  private Ast() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code boa.types.TypeKind}
   *
   * <pre>
   ** The kinds of types in an AST 
   * </pre>
   */
  public enum TypeKind
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OTHER = 0;</code>
     *
     * <pre>
     ** Any other kind of Type 
     * </pre>
     */
    OTHER(0, 0),
    /**
     * <code>CLASS = 1;</code>
     *
     * <pre>
     ** A class type 
     * </pre>
     */
    CLASS(1, 1),
    /**
     * <code>INTERFACE = 2;</code>
     *
     * <pre>
     ** An interface type 
     * </pre>
     */
    INTERFACE(2, 2),
    /**
     * <code>ANONYMOUS = 3;</code>
     *
     * <pre>
     ** An anonymous type 
     * </pre>
     */
    ANONYMOUS(3, 3),
    /**
     * <code>STRUCT = 4;</code>
     *
     * <pre>
     ** A C-style struct 
     * </pre>
     */
    STRUCT(5, 4),
    /**
     * <code>ENUM = 5;</code>
     *
     * <pre>
     ** An enumerated type 
     * </pre>
     */
    ENUM(6, 5),
    /**
     * <code>ANNOTATION = 6;</code>
     *
     * <pre>
     ** An annotation type 
     * </pre>
     */
    ANNOTATION(8, 6),
    /**
     * <code>DELEGATE = 7;</code>
     *
     * <pre>
     ** A delegate type 
     * </pre>
     */
    DELEGATE(9, 7),
    /**
     * <code>GENERIC = 8;</code>
     *
     * <pre>
     ** A generic type 
     * </pre>
     */
    GENERIC(10, 8),
    ;

    /**
     * <code>ANON = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public static final TypeKind ANON = ANONYMOUS;
    /**
     * <code>ENUMERATION = 5;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public static final TypeKind ENUMERATION = ENUM;
    /**
     * <code>OTHER = 0;</code>
     *
     * <pre>
     ** Any other kind of Type 
     * </pre>
     */
    public static final int OTHER_VALUE = 0;
    /**
     * <code>CLASS = 1;</code>
     *
     * <pre>
     ** A class type 
     * </pre>
     */
    public static final int CLASS_VALUE = 1;
    /**
     * <code>INTERFACE = 2;</code>
     *
     * <pre>
     ** An interface type 
     * </pre>
     */
    public static final int INTERFACE_VALUE = 2;
    /**
     * <code>ANONYMOUS = 3;</code>
     *
     * <pre>
     ** An anonymous type 
     * </pre>
     */
    public static final int ANONYMOUS_VALUE = 3;
    /**
     * <code>ANON = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public static final int ANON_VALUE = 3;
    /**
     * <code>STRUCT = 4;</code>
     *
     * <pre>
     ** A C-style struct 
     * </pre>
     */
    public static final int STRUCT_VALUE = 4;
    /**
     * <code>ENUM = 5;</code>
     *
     * <pre>
     ** An enumerated type 
     * </pre>
     */
    public static final int ENUM_VALUE = 5;
    /**
     * <code>ENUMERATION = 5;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public static final int ENUMERATION_VALUE = 5;
    /**
     * <code>ANNOTATION = 6;</code>
     *
     * <pre>
     ** An annotation type 
     * </pre>
     */
    public static final int ANNOTATION_VALUE = 6;
    /**
     * <code>DELEGATE = 7;</code>
     *
     * <pre>
     ** A delegate type 
     * </pre>
     */
    public static final int DELEGATE_VALUE = 7;
    /**
     * <code>GENERIC = 8;</code>
     *
     * <pre>
     ** A generic type 
     * </pre>
     */
    public static final int GENERIC_VALUE = 8;


    public final int getNumber() { return value; }

    public static TypeKind valueOf(int value) {
      switch (value) {
        case 0: return OTHER;
        case 1: return CLASS;
        case 2: return INTERFACE;
        case 3: return ANONYMOUS;
        case 4: return STRUCT;
        case 5: return ENUM;
        case 6: return ANNOTATION;
        case 7: return DELEGATE;
        case 8: return GENERIC;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TypeKind>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<TypeKind>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TypeKind>() {
            public TypeKind findValueByNumber(int number) {
              return TypeKind.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return boa.types.Ast.getDescriptor().getEnumTypes().get(0);
    }

    private static final TypeKind[] VALUES = {
      OTHER, CLASS, INTERFACE, ANONYMOUS, ANON, STRUCT, ENUM, ENUMERATION, ANNOTATION, DELEGATE, GENERIC, 
    };

    public static TypeKind valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private TypeKind(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:boa.types.TypeKind)
  }

  public interface CommentsRootOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .boa.types.Comment comments = 1;
    /**
     * <code>repeated .boa.types.Comment comments = 1;</code>
     *
     * <pre>
     ** The list of all comments 
     * </pre>
     */
    java.util.List<boa.types.Ast.Comment> 
        getCommentsList();
    /**
     * <code>repeated .boa.types.Comment comments = 1;</code>
     *
     * <pre>
     ** The list of all comments 
     * </pre>
     */
    boa.types.Ast.Comment getComments(int index);
    /**
     * <code>repeated .boa.types.Comment comments = 1;</code>
     *
     * <pre>
     ** The list of all comments 
     * </pre>
     */
    int getCommentsCount();
    /**
     * <code>repeated .boa.types.Comment comments = 1;</code>
     *
     * <pre>
     ** The list of all comments 
     * </pre>
     */
    java.util.List<? extends boa.types.Ast.CommentOrBuilder> 
        getCommentsOrBuilderList();
    /**
     * <code>repeated .boa.types.Comment comments = 1;</code>
     *
     * <pre>
     ** The list of all comments 
     * </pre>
     */
    boa.types.Ast.CommentOrBuilder getCommentsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code boa.types.CommentsRoot}
   *
   * <pre>
   ** @exclude Container class that holds all comments for a file 
   * </pre>
   */
  public static final class CommentsRoot extends
      com.google.protobuf.GeneratedMessage
      implements CommentsRootOrBuilder {
    // Use CommentsRoot.newBuilder() to construct.
    private CommentsRoot(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CommentsRoot(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CommentsRoot defaultInstance;
    public static CommentsRoot getDefaultInstance() {
      return defaultInstance;
    }

    public CommentsRoot getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CommentsRoot(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                comments_ = new java.util.ArrayList<boa.types.Ast.Comment>();
                mutable_bitField0_ |= 0x00000001;
              }
              comments_.add(input.readMessage(boa.types.Ast.Comment.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          comments_ = java.util.Collections.unmodifiableList(comments_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return boa.types.Ast.internal_static_boa_types_CommentsRoot_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return boa.types.Ast.internal_static_boa_types_CommentsRoot_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              boa.types.Ast.CommentsRoot.class, boa.types.Ast.CommentsRoot.Builder.class);
    }

    public static com.google.protobuf.Parser<CommentsRoot> PARSER =
        new com.google.protobuf.AbstractParser<CommentsRoot>() {
      public CommentsRoot parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CommentsRoot(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CommentsRoot> getParserForType() {
      return PARSER;
    }

    // repeated .boa.types.Comment comments = 1;
    public static final int COMMENTS_FIELD_NUMBER = 1;
    private java.util.List<boa.types.Ast.Comment> comments_;
    /**
     * <code>repeated .boa.types.Comment comments = 1;</code>
     *
     * <pre>
     ** The list of all comments 
     * </pre>
     */
    public java.util.List<boa.types.Ast.Comment> getCommentsList() {
      return comments_;
    }
    /**
     * <code>repeated .boa.types.Comment comments = 1;</code>
     *
     * <pre>
     ** The list of all comments 
     * </pre>
     */
    public java.util.List<? extends boa.types.Ast.CommentOrBuilder> 
        getCommentsOrBuilderList() {
      return comments_;
    }
    /**
     * <code>repeated .boa.types.Comment comments = 1;</code>
     *
     * <pre>
     ** The list of all comments 
     * </pre>
     */
    public int getCommentsCount() {
      return comments_.size();
    }
    /**
     * <code>repeated .boa.types.Comment comments = 1;</code>
     *
     * <pre>
     ** The list of all comments 
     * </pre>
     */
    public boa.types.Ast.Comment getComments(int index) {
      return comments_.get(index);
    }
    /**
     * <code>repeated .boa.types.Comment comments = 1;</code>
     *
     * <pre>
     ** The list of all comments 
     * </pre>
     */
    public boa.types.Ast.CommentOrBuilder getCommentsOrBuilder(
        int index) {
      return comments_.get(index);
    }

    private void initFields() {
      comments_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getCommentsCount(); i++) {
        if (!getComments(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < comments_.size(); i++) {
        output.writeMessage(1, comments_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < comments_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, comments_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static boa.types.Ast.CommentsRoot parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static boa.types.Ast.CommentsRoot parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static boa.types.Ast.CommentsRoot parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static boa.types.Ast.CommentsRoot parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static boa.types.Ast.CommentsRoot parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static boa.types.Ast.CommentsRoot parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static boa.types.Ast.CommentsRoot parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static boa.types.Ast.CommentsRoot parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static boa.types.Ast.CommentsRoot parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static boa.types.Ast.CommentsRoot parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(boa.types.Ast.CommentsRoot prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code boa.types.CommentsRoot}
     *
     * <pre>
     ** @exclude Container class that holds all comments for a file 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements boa.types.Ast.CommentsRootOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_CommentsRoot_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_CommentsRoot_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.CommentsRoot.class, boa.types.Ast.CommentsRoot.Builder.class);
      }

      // Construct using boa.types.Ast.CommentsRoot.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCommentsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (commentsBuilder_ == null) {
          comments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          commentsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return boa.types.Ast.internal_static_boa_types_CommentsRoot_descriptor;
      }

      public boa.types.Ast.CommentsRoot getDefaultInstanceForType() {
        return boa.types.Ast.CommentsRoot.getDefaultInstance();
      }

      public boa.types.Ast.CommentsRoot build() {
        boa.types.Ast.CommentsRoot result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public boa.types.Ast.CommentsRoot buildPartial() {
        boa.types.Ast.CommentsRoot result = new boa.types.Ast.CommentsRoot(this);
        int from_bitField0_ = bitField0_;
        if (commentsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            comments_ = java.util.Collections.unmodifiableList(comments_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.comments_ = comments_;
        } else {
          result.comments_ = commentsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof boa.types.Ast.CommentsRoot) {
          return mergeFrom((boa.types.Ast.CommentsRoot)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(boa.types.Ast.CommentsRoot other) {
        if (other == boa.types.Ast.CommentsRoot.getDefaultInstance()) return this;
        if (commentsBuilder_ == null) {
          if (!other.comments_.isEmpty()) {
            if (comments_.isEmpty()) {
              comments_ = other.comments_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCommentsIsMutable();
              comments_.addAll(other.comments_);
            }
            onChanged();
          }
        } else {
          if (!other.comments_.isEmpty()) {
            if (commentsBuilder_.isEmpty()) {
              commentsBuilder_.dispose();
              commentsBuilder_ = null;
              comments_ = other.comments_;
              bitField0_ = (bitField0_ & ~0x00000001);
              commentsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCommentsFieldBuilder() : null;
            } else {
              commentsBuilder_.addAllMessages(other.comments_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getCommentsCount(); i++) {
          if (!getComments(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        boa.types.Ast.CommentsRoot parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (boa.types.Ast.CommentsRoot) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .boa.types.Comment comments = 1;
      private java.util.List<boa.types.Ast.Comment> comments_ =
        java.util.Collections.emptyList();
      private void ensureCommentsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          comments_ = new java.util.ArrayList<boa.types.Ast.Comment>(comments_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Comment, boa.types.Ast.Comment.Builder, boa.types.Ast.CommentOrBuilder> commentsBuilder_;

      /**
       * <code>repeated .boa.types.Comment comments = 1;</code>
       *
       * <pre>
       ** The list of all comments 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Comment> getCommentsList() {
        if (commentsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(comments_);
        } else {
          return commentsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .boa.types.Comment comments = 1;</code>
       *
       * <pre>
       ** The list of all comments 
       * </pre>
       */
      public int getCommentsCount() {
        if (commentsBuilder_ == null) {
          return comments_.size();
        } else {
          return commentsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .boa.types.Comment comments = 1;</code>
       *
       * <pre>
       ** The list of all comments 
       * </pre>
       */
      public boa.types.Ast.Comment getComments(int index) {
        if (commentsBuilder_ == null) {
          return comments_.get(index);
        } else {
          return commentsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .boa.types.Comment comments = 1;</code>
       *
       * <pre>
       ** The list of all comments 
       * </pre>
       */
      public Builder setComments(
          int index, boa.types.Ast.Comment value) {
        if (commentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCommentsIsMutable();
          comments_.set(index, value);
          onChanged();
        } else {
          commentsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Comment comments = 1;</code>
       *
       * <pre>
       ** The list of all comments 
       * </pre>
       */
      public Builder setComments(
          int index, boa.types.Ast.Comment.Builder builderForValue) {
        if (commentsBuilder_ == null) {
          ensureCommentsIsMutable();
          comments_.set(index, builderForValue.build());
          onChanged();
        } else {
          commentsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Comment comments = 1;</code>
       *
       * <pre>
       ** The list of all comments 
       * </pre>
       */
      public Builder addComments(boa.types.Ast.Comment value) {
        if (commentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCommentsIsMutable();
          comments_.add(value);
          onChanged();
        } else {
          commentsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Comment comments = 1;</code>
       *
       * <pre>
       ** The list of all comments 
       * </pre>
       */
      public Builder addComments(
          int index, boa.types.Ast.Comment value) {
        if (commentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCommentsIsMutable();
          comments_.add(index, value);
          onChanged();
        } else {
          commentsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Comment comments = 1;</code>
       *
       * <pre>
       ** The list of all comments 
       * </pre>
       */
      public Builder addComments(
          boa.types.Ast.Comment.Builder builderForValue) {
        if (commentsBuilder_ == null) {
          ensureCommentsIsMutable();
          comments_.add(builderForValue.build());
          onChanged();
        } else {
          commentsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Comment comments = 1;</code>
       *
       * <pre>
       ** The list of all comments 
       * </pre>
       */
      public Builder addComments(
          int index, boa.types.Ast.Comment.Builder builderForValue) {
        if (commentsBuilder_ == null) {
          ensureCommentsIsMutable();
          comments_.add(index, builderForValue.build());
          onChanged();
        } else {
          commentsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Comment comments = 1;</code>
       *
       * <pre>
       ** The list of all comments 
       * </pre>
       */
      public Builder addAllComments(
          java.lang.Iterable<? extends boa.types.Ast.Comment> values) {
        if (commentsBuilder_ == null) {
          ensureCommentsIsMutable();
          super.addAll(values, comments_);
          onChanged();
        } else {
          commentsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Comment comments = 1;</code>
       *
       * <pre>
       ** The list of all comments 
       * </pre>
       */
      public Builder clearComments() {
        if (commentsBuilder_ == null) {
          comments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          commentsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Comment comments = 1;</code>
       *
       * <pre>
       ** The list of all comments 
       * </pre>
       */
      public Builder removeComments(int index) {
        if (commentsBuilder_ == null) {
          ensureCommentsIsMutable();
          comments_.remove(index);
          onChanged();
        } else {
          commentsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Comment comments = 1;</code>
       *
       * <pre>
       ** The list of all comments 
       * </pre>
       */
      public boa.types.Ast.Comment.Builder getCommentsBuilder(
          int index) {
        return getCommentsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .boa.types.Comment comments = 1;</code>
       *
       * <pre>
       ** The list of all comments 
       * </pre>
       */
      public boa.types.Ast.CommentOrBuilder getCommentsOrBuilder(
          int index) {
        if (commentsBuilder_ == null) {
          return comments_.get(index);  } else {
          return commentsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .boa.types.Comment comments = 1;</code>
       *
       * <pre>
       ** The list of all comments 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.CommentOrBuilder> 
           getCommentsOrBuilderList() {
        if (commentsBuilder_ != null) {
          return commentsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(comments_);
        }
      }
      /**
       * <code>repeated .boa.types.Comment comments = 1;</code>
       *
       * <pre>
       ** The list of all comments 
       * </pre>
       */
      public boa.types.Ast.Comment.Builder addCommentsBuilder() {
        return getCommentsFieldBuilder().addBuilder(
            boa.types.Ast.Comment.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Comment comments = 1;</code>
       *
       * <pre>
       ** The list of all comments 
       * </pre>
       */
      public boa.types.Ast.Comment.Builder addCommentsBuilder(
          int index) {
        return getCommentsFieldBuilder().addBuilder(
            index, boa.types.Ast.Comment.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Comment comments = 1;</code>
       *
       * <pre>
       ** The list of all comments 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Comment.Builder> 
           getCommentsBuilderList() {
        return getCommentsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Comment, boa.types.Ast.Comment.Builder, boa.types.Ast.CommentOrBuilder> 
          getCommentsFieldBuilder() {
        if (commentsBuilder_ == null) {
          commentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Comment, boa.types.Ast.Comment.Builder, boa.types.Ast.CommentOrBuilder>(
                  comments_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          comments_ = null;
        }
        return commentsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:boa.types.CommentsRoot)
    }

    static {
      defaultInstance = new CommentsRoot(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:boa.types.CommentsRoot)
  }

  public interface ASTRootOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .boa.types.Namespace namespaces = 1;
    /**
     * <code>repeated .boa.types.Namespace namespaces = 1;</code>
     *
     * <pre>
     ** The top-level namespaces in the file 
     * </pre>
     */
    java.util.List<boa.types.Ast.Namespace> 
        getNamespacesList();
    /**
     * <code>repeated .boa.types.Namespace namespaces = 1;</code>
     *
     * <pre>
     ** The top-level namespaces in the file 
     * </pre>
     */
    boa.types.Ast.Namespace getNamespaces(int index);
    /**
     * <code>repeated .boa.types.Namespace namespaces = 1;</code>
     *
     * <pre>
     ** The top-level namespaces in the file 
     * </pre>
     */
    int getNamespacesCount();
    /**
     * <code>repeated .boa.types.Namespace namespaces = 1;</code>
     *
     * <pre>
     ** The top-level namespaces in the file 
     * </pre>
     */
    java.util.List<? extends boa.types.Ast.NamespaceOrBuilder> 
        getNamespacesOrBuilderList();
    /**
     * <code>repeated .boa.types.Namespace namespaces = 1;</code>
     *
     * <pre>
     ** The top-level namespaces in the file 
     * </pre>
     */
    boa.types.Ast.NamespaceOrBuilder getNamespacesOrBuilder(
        int index);

    // repeated string imports = 2;
    /**
     * <code>repeated string imports = 2;</code>
     *
     * <pre>
     ** The imported namespaces and types 
     * </pre>
     */
    java.util.List<java.lang.String>
    getImportsList();
    /**
     * <code>repeated string imports = 2;</code>
     *
     * <pre>
     ** The imported namespaces and types 
     * </pre>
     */
    int getImportsCount();
    /**
     * <code>repeated string imports = 2;</code>
     *
     * <pre>
     ** The imported namespaces and types 
     * </pre>
     */
    java.lang.String getImports(int index);
    /**
     * <code>repeated string imports = 2;</code>
     *
     * <pre>
     ** The imported namespaces and types 
     * </pre>
     */
    com.google.protobuf.ByteString
        getImportsBytes(int index);

    // repeated string names = 3;
    /**
     * <code>repeated string names = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    java.util.List<java.lang.String>
    getNamesList();
    /**
     * <code>repeated string names = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    int getNamesCount();
    /**
     * <code>repeated string names = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    java.lang.String getNames(int index);
    /**
     * <code>repeated string names = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    com.google.protobuf.ByteString
        getNamesBytes(int index);

    // optional .boa.types.ChangeKind structural_change_kind = 4;
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 4;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    boolean hasStructuralChangeKind();
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 4;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    boa.types.Shared.ChangeKind getStructuralChangeKind();

    // optional .boa.types.ChangeKind label_change_kind = 5;
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 5;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    boolean hasLabelChangeKind();
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 5;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    boa.types.Shared.ChangeKind getLabelChangeKind();
  }
  /**
   * Protobuf type {@code boa.types.ASTRoot}
   *
   * <pre>
   ** Container class that holds a file's parsed AST 
   * </pre>
   */
  public static final class ASTRoot extends
      com.google.protobuf.GeneratedMessage
      implements ASTRootOrBuilder {
    // Use ASTRoot.newBuilder() to construct.
    private ASTRoot(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ASTRoot(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ASTRoot defaultInstance;
    public static ASTRoot getDefaultInstance() {
      return defaultInstance;
    }

    public ASTRoot getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ASTRoot(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                namespaces_ = new java.util.ArrayList<boa.types.Ast.Namespace>();
                mutable_bitField0_ |= 0x00000001;
              }
              namespaces_.add(input.readMessage(boa.types.Ast.Namespace.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                imports_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              imports_.add(input.readBytes());
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                names_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              names_.add(input.readBytes());
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              boa.types.Shared.ChangeKind value = boa.types.Shared.ChangeKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                structuralChangeKind_ = value;
              }
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              boa.types.Shared.ChangeKind value = boa.types.Shared.ChangeKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                labelChangeKind_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          namespaces_ = java.util.Collections.unmodifiableList(namespaces_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          imports_ = new com.google.protobuf.UnmodifiableLazyStringList(imports_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          names_ = new com.google.protobuf.UnmodifiableLazyStringList(names_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return boa.types.Ast.internal_static_boa_types_ASTRoot_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return boa.types.Ast.internal_static_boa_types_ASTRoot_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              boa.types.Ast.ASTRoot.class, boa.types.Ast.ASTRoot.Builder.class);
    }

    public static com.google.protobuf.Parser<ASTRoot> PARSER =
        new com.google.protobuf.AbstractParser<ASTRoot>() {
      public ASTRoot parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ASTRoot(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ASTRoot> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .boa.types.Namespace namespaces = 1;
    public static final int NAMESPACES_FIELD_NUMBER = 1;
    private java.util.List<boa.types.Ast.Namespace> namespaces_;
    /**
     * <code>repeated .boa.types.Namespace namespaces = 1;</code>
     *
     * <pre>
     ** The top-level namespaces in the file 
     * </pre>
     */
    public java.util.List<boa.types.Ast.Namespace> getNamespacesList() {
      return namespaces_;
    }
    /**
     * <code>repeated .boa.types.Namespace namespaces = 1;</code>
     *
     * <pre>
     ** The top-level namespaces in the file 
     * </pre>
     */
    public java.util.List<? extends boa.types.Ast.NamespaceOrBuilder> 
        getNamespacesOrBuilderList() {
      return namespaces_;
    }
    /**
     * <code>repeated .boa.types.Namespace namespaces = 1;</code>
     *
     * <pre>
     ** The top-level namespaces in the file 
     * </pre>
     */
    public int getNamespacesCount() {
      return namespaces_.size();
    }
    /**
     * <code>repeated .boa.types.Namespace namespaces = 1;</code>
     *
     * <pre>
     ** The top-level namespaces in the file 
     * </pre>
     */
    public boa.types.Ast.Namespace getNamespaces(int index) {
      return namespaces_.get(index);
    }
    /**
     * <code>repeated .boa.types.Namespace namespaces = 1;</code>
     *
     * <pre>
     ** The top-level namespaces in the file 
     * </pre>
     */
    public boa.types.Ast.NamespaceOrBuilder getNamespacesOrBuilder(
        int index) {
      return namespaces_.get(index);
    }

    // repeated string imports = 2;
    public static final int IMPORTS_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList imports_;
    /**
     * <code>repeated string imports = 2;</code>
     *
     * <pre>
     ** The imported namespaces and types 
     * </pre>
     */
    public java.util.List<java.lang.String>
        getImportsList() {
      return imports_;
    }
    /**
     * <code>repeated string imports = 2;</code>
     *
     * <pre>
     ** The imported namespaces and types 
     * </pre>
     */
    public int getImportsCount() {
      return imports_.size();
    }
    /**
     * <code>repeated string imports = 2;</code>
     *
     * <pre>
     ** The imported namespaces and types 
     * </pre>
     */
    public java.lang.String getImports(int index) {
      return imports_.get(index);
    }
    /**
     * <code>repeated string imports = 2;</code>
     *
     * <pre>
     ** The imported namespaces and types 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getImportsBytes(int index) {
      return imports_.getByteString(index);
    }

    // repeated string names = 3;
    public static final int NAMES_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList names_;
    /**
     * <code>repeated string names = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public java.util.List<java.lang.String>
        getNamesList() {
      return names_;
    }
    /**
     * <code>repeated string names = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public int getNamesCount() {
      return names_.size();
    }
    /**
     * <code>repeated string names = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public java.lang.String getNames(int index) {
      return names_.get(index);
    }
    /**
     * <code>repeated string names = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNamesBytes(int index) {
      return names_.getByteString(index);
    }

    // optional .boa.types.ChangeKind structural_change_kind = 4;
    public static final int STRUCTURAL_CHANGE_KIND_FIELD_NUMBER = 4;
    private boa.types.Shared.ChangeKind structuralChangeKind_;
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 4;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    public boolean hasStructuralChangeKind() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 4;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    public boa.types.Shared.ChangeKind getStructuralChangeKind() {
      return structuralChangeKind_;
    }

    // optional .boa.types.ChangeKind label_change_kind = 5;
    public static final int LABEL_CHANGE_KIND_FIELD_NUMBER = 5;
    private boa.types.Shared.ChangeKind labelChangeKind_;
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 5;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    public boolean hasLabelChangeKind() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 5;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    public boa.types.Shared.ChangeKind getLabelChangeKind() {
      return labelChangeKind_;
    }

    private void initFields() {
      namespaces_ = java.util.Collections.emptyList();
      imports_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      names_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
      labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getNamespacesCount(); i++) {
        if (!getNamespaces(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < namespaces_.size(); i++) {
        output.writeMessage(1, namespaces_.get(i));
      }
      for (int i = 0; i < imports_.size(); i++) {
        output.writeBytes(2, imports_.getByteString(i));
      }
      for (int i = 0; i < names_.size(); i++) {
        output.writeBytes(3, names_.getByteString(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(4, structuralChangeKind_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(5, labelChangeKind_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < namespaces_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, namespaces_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < imports_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(imports_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getImportsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < names_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(names_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getNamesList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, structuralChangeKind_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, labelChangeKind_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static boa.types.Ast.ASTRoot parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static boa.types.Ast.ASTRoot parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static boa.types.Ast.ASTRoot parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static boa.types.Ast.ASTRoot parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static boa.types.Ast.ASTRoot parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static boa.types.Ast.ASTRoot parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static boa.types.Ast.ASTRoot parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static boa.types.Ast.ASTRoot parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static boa.types.Ast.ASTRoot parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static boa.types.Ast.ASTRoot parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(boa.types.Ast.ASTRoot prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code boa.types.ASTRoot}
     *
     * <pre>
     ** Container class that holds a file's parsed AST 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements boa.types.Ast.ASTRootOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_ASTRoot_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_ASTRoot_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.ASTRoot.class, boa.types.Ast.ASTRoot.Builder.class);
      }

      // Construct using boa.types.Ast.ASTRoot.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getNamespacesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (namespacesBuilder_ == null) {
          namespaces_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          namespacesBuilder_.clear();
        }
        imports_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        names_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        bitField0_ = (bitField0_ & ~0x00000008);
        labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return boa.types.Ast.internal_static_boa_types_ASTRoot_descriptor;
      }

      public boa.types.Ast.ASTRoot getDefaultInstanceForType() {
        return boa.types.Ast.ASTRoot.getDefaultInstance();
      }

      public boa.types.Ast.ASTRoot build() {
        boa.types.Ast.ASTRoot result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public boa.types.Ast.ASTRoot buildPartial() {
        boa.types.Ast.ASTRoot result = new boa.types.Ast.ASTRoot(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (namespacesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            namespaces_ = java.util.Collections.unmodifiableList(namespaces_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.namespaces_ = namespaces_;
        } else {
          result.namespaces_ = namespacesBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          imports_ = new com.google.protobuf.UnmodifiableLazyStringList(
              imports_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.imports_ = imports_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          names_ = new com.google.protobuf.UnmodifiableLazyStringList(
              names_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.names_ = names_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000001;
        }
        result.structuralChangeKind_ = structuralChangeKind_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000002;
        }
        result.labelChangeKind_ = labelChangeKind_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof boa.types.Ast.ASTRoot) {
          return mergeFrom((boa.types.Ast.ASTRoot)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(boa.types.Ast.ASTRoot other) {
        if (other == boa.types.Ast.ASTRoot.getDefaultInstance()) return this;
        if (namespacesBuilder_ == null) {
          if (!other.namespaces_.isEmpty()) {
            if (namespaces_.isEmpty()) {
              namespaces_ = other.namespaces_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureNamespacesIsMutable();
              namespaces_.addAll(other.namespaces_);
            }
            onChanged();
          }
        } else {
          if (!other.namespaces_.isEmpty()) {
            if (namespacesBuilder_.isEmpty()) {
              namespacesBuilder_.dispose();
              namespacesBuilder_ = null;
              namespaces_ = other.namespaces_;
              bitField0_ = (bitField0_ & ~0x00000001);
              namespacesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getNamespacesFieldBuilder() : null;
            } else {
              namespacesBuilder_.addAllMessages(other.namespaces_);
            }
          }
        }
        if (!other.imports_.isEmpty()) {
          if (imports_.isEmpty()) {
            imports_ = other.imports_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureImportsIsMutable();
            imports_.addAll(other.imports_);
          }
          onChanged();
        }
        if (!other.names_.isEmpty()) {
          if (names_.isEmpty()) {
            names_ = other.names_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureNamesIsMutable();
            names_.addAll(other.names_);
          }
          onChanged();
        }
        if (other.hasStructuralChangeKind()) {
          setStructuralChangeKind(other.getStructuralChangeKind());
        }
        if (other.hasLabelChangeKind()) {
          setLabelChangeKind(other.getLabelChangeKind());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getNamespacesCount(); i++) {
          if (!getNamespaces(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        boa.types.Ast.ASTRoot parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (boa.types.Ast.ASTRoot) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .boa.types.Namespace namespaces = 1;
      private java.util.List<boa.types.Ast.Namespace> namespaces_ =
        java.util.Collections.emptyList();
      private void ensureNamespacesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          namespaces_ = new java.util.ArrayList<boa.types.Ast.Namespace>(namespaces_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Namespace, boa.types.Ast.Namespace.Builder, boa.types.Ast.NamespaceOrBuilder> namespacesBuilder_;

      /**
       * <code>repeated .boa.types.Namespace namespaces = 1;</code>
       *
       * <pre>
       ** The top-level namespaces in the file 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Namespace> getNamespacesList() {
        if (namespacesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(namespaces_);
        } else {
          return namespacesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .boa.types.Namespace namespaces = 1;</code>
       *
       * <pre>
       ** The top-level namespaces in the file 
       * </pre>
       */
      public int getNamespacesCount() {
        if (namespacesBuilder_ == null) {
          return namespaces_.size();
        } else {
          return namespacesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .boa.types.Namespace namespaces = 1;</code>
       *
       * <pre>
       ** The top-level namespaces in the file 
       * </pre>
       */
      public boa.types.Ast.Namespace getNamespaces(int index) {
        if (namespacesBuilder_ == null) {
          return namespaces_.get(index);
        } else {
          return namespacesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .boa.types.Namespace namespaces = 1;</code>
       *
       * <pre>
       ** The top-level namespaces in the file 
       * </pre>
       */
      public Builder setNamespaces(
          int index, boa.types.Ast.Namespace value) {
        if (namespacesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNamespacesIsMutable();
          namespaces_.set(index, value);
          onChanged();
        } else {
          namespacesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Namespace namespaces = 1;</code>
       *
       * <pre>
       ** The top-level namespaces in the file 
       * </pre>
       */
      public Builder setNamespaces(
          int index, boa.types.Ast.Namespace.Builder builderForValue) {
        if (namespacesBuilder_ == null) {
          ensureNamespacesIsMutable();
          namespaces_.set(index, builderForValue.build());
          onChanged();
        } else {
          namespacesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Namespace namespaces = 1;</code>
       *
       * <pre>
       ** The top-level namespaces in the file 
       * </pre>
       */
      public Builder addNamespaces(boa.types.Ast.Namespace value) {
        if (namespacesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNamespacesIsMutable();
          namespaces_.add(value);
          onChanged();
        } else {
          namespacesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Namespace namespaces = 1;</code>
       *
       * <pre>
       ** The top-level namespaces in the file 
       * </pre>
       */
      public Builder addNamespaces(
          int index, boa.types.Ast.Namespace value) {
        if (namespacesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNamespacesIsMutable();
          namespaces_.add(index, value);
          onChanged();
        } else {
          namespacesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Namespace namespaces = 1;</code>
       *
       * <pre>
       ** The top-level namespaces in the file 
       * </pre>
       */
      public Builder addNamespaces(
          boa.types.Ast.Namespace.Builder builderForValue) {
        if (namespacesBuilder_ == null) {
          ensureNamespacesIsMutable();
          namespaces_.add(builderForValue.build());
          onChanged();
        } else {
          namespacesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Namespace namespaces = 1;</code>
       *
       * <pre>
       ** The top-level namespaces in the file 
       * </pre>
       */
      public Builder addNamespaces(
          int index, boa.types.Ast.Namespace.Builder builderForValue) {
        if (namespacesBuilder_ == null) {
          ensureNamespacesIsMutable();
          namespaces_.add(index, builderForValue.build());
          onChanged();
        } else {
          namespacesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Namespace namespaces = 1;</code>
       *
       * <pre>
       ** The top-level namespaces in the file 
       * </pre>
       */
      public Builder addAllNamespaces(
          java.lang.Iterable<? extends boa.types.Ast.Namespace> values) {
        if (namespacesBuilder_ == null) {
          ensureNamespacesIsMutable();
          super.addAll(values, namespaces_);
          onChanged();
        } else {
          namespacesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Namespace namespaces = 1;</code>
       *
       * <pre>
       ** The top-level namespaces in the file 
       * </pre>
       */
      public Builder clearNamespaces() {
        if (namespacesBuilder_ == null) {
          namespaces_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          namespacesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Namespace namespaces = 1;</code>
       *
       * <pre>
       ** The top-level namespaces in the file 
       * </pre>
       */
      public Builder removeNamespaces(int index) {
        if (namespacesBuilder_ == null) {
          ensureNamespacesIsMutable();
          namespaces_.remove(index);
          onChanged();
        } else {
          namespacesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Namespace namespaces = 1;</code>
       *
       * <pre>
       ** The top-level namespaces in the file 
       * </pre>
       */
      public boa.types.Ast.Namespace.Builder getNamespacesBuilder(
          int index) {
        return getNamespacesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .boa.types.Namespace namespaces = 1;</code>
       *
       * <pre>
       ** The top-level namespaces in the file 
       * </pre>
       */
      public boa.types.Ast.NamespaceOrBuilder getNamespacesOrBuilder(
          int index) {
        if (namespacesBuilder_ == null) {
          return namespaces_.get(index);  } else {
          return namespacesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .boa.types.Namespace namespaces = 1;</code>
       *
       * <pre>
       ** The top-level namespaces in the file 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.NamespaceOrBuilder> 
           getNamespacesOrBuilderList() {
        if (namespacesBuilder_ != null) {
          return namespacesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(namespaces_);
        }
      }
      /**
       * <code>repeated .boa.types.Namespace namespaces = 1;</code>
       *
       * <pre>
       ** The top-level namespaces in the file 
       * </pre>
       */
      public boa.types.Ast.Namespace.Builder addNamespacesBuilder() {
        return getNamespacesFieldBuilder().addBuilder(
            boa.types.Ast.Namespace.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Namespace namespaces = 1;</code>
       *
       * <pre>
       ** The top-level namespaces in the file 
       * </pre>
       */
      public boa.types.Ast.Namespace.Builder addNamespacesBuilder(
          int index) {
        return getNamespacesFieldBuilder().addBuilder(
            index, boa.types.Ast.Namespace.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Namespace namespaces = 1;</code>
       *
       * <pre>
       ** The top-level namespaces in the file 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Namespace.Builder> 
           getNamespacesBuilderList() {
        return getNamespacesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Namespace, boa.types.Ast.Namespace.Builder, boa.types.Ast.NamespaceOrBuilder> 
          getNamespacesFieldBuilder() {
        if (namespacesBuilder_ == null) {
          namespacesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Namespace, boa.types.Ast.Namespace.Builder, boa.types.Ast.NamespaceOrBuilder>(
                  namespaces_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          namespaces_ = null;
        }
        return namespacesBuilder_;
      }

      // repeated string imports = 2;
      private com.google.protobuf.LazyStringList imports_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureImportsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          imports_ = new com.google.protobuf.LazyStringArrayList(imports_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string imports = 2;</code>
       *
       * <pre>
       ** The imported namespaces and types 
       * </pre>
       */
      public java.util.List<java.lang.String>
          getImportsList() {
        return java.util.Collections.unmodifiableList(imports_);
      }
      /**
       * <code>repeated string imports = 2;</code>
       *
       * <pre>
       ** The imported namespaces and types 
       * </pre>
       */
      public int getImportsCount() {
        return imports_.size();
      }
      /**
       * <code>repeated string imports = 2;</code>
       *
       * <pre>
       ** The imported namespaces and types 
       * </pre>
       */
      public java.lang.String getImports(int index) {
        return imports_.get(index);
      }
      /**
       * <code>repeated string imports = 2;</code>
       *
       * <pre>
       ** The imported namespaces and types 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getImportsBytes(int index) {
        return imports_.getByteString(index);
      }
      /**
       * <code>repeated string imports = 2;</code>
       *
       * <pre>
       ** The imported namespaces and types 
       * </pre>
       */
      public Builder setImports(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureImportsIsMutable();
        imports_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string imports = 2;</code>
       *
       * <pre>
       ** The imported namespaces and types 
       * </pre>
       */
      public Builder addImports(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureImportsIsMutable();
        imports_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string imports = 2;</code>
       *
       * <pre>
       ** The imported namespaces and types 
       * </pre>
       */
      public Builder addAllImports(
          java.lang.Iterable<java.lang.String> values) {
        ensureImportsIsMutable();
        super.addAll(values, imports_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string imports = 2;</code>
       *
       * <pre>
       ** The imported namespaces and types 
       * </pre>
       */
      public Builder clearImports() {
        imports_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string imports = 2;</code>
       *
       * <pre>
       ** The imported namespaces and types 
       * </pre>
       */
      public Builder addImportsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureImportsIsMutable();
        imports_.add(value);
        onChanged();
        return this;
      }

      // repeated string names = 3;
      private com.google.protobuf.LazyStringList names_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureNamesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          names_ = new com.google.protobuf.LazyStringArrayList(names_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated string names = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.util.List<java.lang.String>
          getNamesList() {
        return java.util.Collections.unmodifiableList(names_);
      }
      /**
       * <code>repeated string names = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public int getNamesCount() {
        return names_.size();
      }
      /**
       * <code>repeated string names = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.lang.String getNames(int index) {
        return names_.get(index);
      }
      /**
       * <code>repeated string names = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNamesBytes(int index) {
        return names_.getByteString(index);
      }
      /**
       * <code>repeated string names = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setNames(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureNamesIsMutable();
        names_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string names = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addNames(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureNamesIsMutable();
        names_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string names = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addAllNames(
          java.lang.Iterable<java.lang.String> values) {
        ensureNamesIsMutable();
        super.addAll(values, names_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string names = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearNames() {
        names_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string names = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addNamesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureNamesIsMutable();
        names_.add(value);
        onChanged();
        return this;
      }

      // optional .boa.types.ChangeKind structural_change_kind = 4;
      private boa.types.Shared.ChangeKind structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 4;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public boolean hasStructuralChangeKind() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 4;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public boa.types.Shared.ChangeKind getStructuralChangeKind() {
        return structuralChangeKind_;
      }
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 4;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public Builder setStructuralChangeKind(boa.types.Shared.ChangeKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        structuralChangeKind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 4;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public Builder clearStructuralChangeKind() {
        bitField0_ = (bitField0_ & ~0x00000008);
        structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        onChanged();
        return this;
      }

      // optional .boa.types.ChangeKind label_change_kind = 5;
      private boa.types.Shared.ChangeKind labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 5;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public boolean hasLabelChangeKind() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 5;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public boa.types.Shared.ChangeKind getLabelChangeKind() {
        return labelChangeKind_;
      }
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 5;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public Builder setLabelChangeKind(boa.types.Shared.ChangeKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        labelChangeKind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 5;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public Builder clearLabelChangeKind() {
        bitField0_ = (bitField0_ & ~0x00000010);
        labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:boa.types.ASTRoot)
    }

    static {
      defaultInstance = new ASTRoot(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:boa.types.ASTRoot)
  }

  public interface NamespaceOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string name = 1;
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     ** The name of the namespace 
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     ** The name of the namespace 
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     ** The name of the namespace 
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // repeated .boa.types.Modifier modifiers = 2;
    /**
     * <code>repeated .boa.types.Modifier modifiers = 2;</code>
     *
     * <pre>
     ** Any modifiers/annotations on the namespace 
     * </pre>
     */
    java.util.List<boa.types.Ast.Modifier> 
        getModifiersList();
    /**
     * <code>repeated .boa.types.Modifier modifiers = 2;</code>
     *
     * <pre>
     ** Any modifiers/annotations on the namespace 
     * </pre>
     */
    boa.types.Ast.Modifier getModifiers(int index);
    /**
     * <code>repeated .boa.types.Modifier modifiers = 2;</code>
     *
     * <pre>
     ** Any modifiers/annotations on the namespace 
     * </pre>
     */
    int getModifiersCount();
    /**
     * <code>repeated .boa.types.Modifier modifiers = 2;</code>
     *
     * <pre>
     ** Any modifiers/annotations on the namespace 
     * </pre>
     */
    java.util.List<? extends boa.types.Ast.ModifierOrBuilder> 
        getModifiersOrBuilderList();
    /**
     * <code>repeated .boa.types.Modifier modifiers = 2;</code>
     *
     * <pre>
     ** Any modifiers/annotations on the namespace 
     * </pre>
     */
    boa.types.Ast.ModifierOrBuilder getModifiersOrBuilder(
        int index);

    // repeated .boa.types.Declaration declarations = 3;
    /**
     * <code>repeated .boa.types.Declaration declarations = 3;</code>
     *
     * <pre>
     ** Declarations contained in this namespace 
     * </pre>
     */
    java.util.List<boa.types.Ast.Declaration> 
        getDeclarationsList();
    /**
     * <code>repeated .boa.types.Declaration declarations = 3;</code>
     *
     * <pre>
     ** Declarations contained in this namespace 
     * </pre>
     */
    boa.types.Ast.Declaration getDeclarations(int index);
    /**
     * <code>repeated .boa.types.Declaration declarations = 3;</code>
     *
     * <pre>
     ** Declarations contained in this namespace 
     * </pre>
     */
    int getDeclarationsCount();
    /**
     * <code>repeated .boa.types.Declaration declarations = 3;</code>
     *
     * <pre>
     ** Declarations contained in this namespace 
     * </pre>
     */
    java.util.List<? extends boa.types.Ast.DeclarationOrBuilder> 
        getDeclarationsOrBuilderList();
    /**
     * <code>repeated .boa.types.Declaration declarations = 3;</code>
     *
     * <pre>
     ** Declarations contained in this namespace 
     * </pre>
     */
    boa.types.Ast.DeclarationOrBuilder getDeclarationsOrBuilder(
        int index);

    // repeated .boa.types.Statement statements = 4;
    /**
     * <code>repeated .boa.types.Statement statements = 4;</code>
     *
     * <pre>
     ** Statements contained in this namespace 
     * </pre>
     */
    java.util.List<boa.types.Ast.Statement> 
        getStatementsList();
    /**
     * <code>repeated .boa.types.Statement statements = 4;</code>
     *
     * <pre>
     ** Statements contained in this namespace 
     * </pre>
     */
    boa.types.Ast.Statement getStatements(int index);
    /**
     * <code>repeated .boa.types.Statement statements = 4;</code>
     *
     * <pre>
     ** Statements contained in this namespace 
     * </pre>
     */
    int getStatementsCount();
    /**
     * <code>repeated .boa.types.Statement statements = 4;</code>
     *
     * <pre>
     ** Statements contained in this namespace 
     * </pre>
     */
    java.util.List<? extends boa.types.Ast.StatementOrBuilder> 
        getStatementsOrBuilderList();
    /**
     * <code>repeated .boa.types.Statement statements = 4;</code>
     *
     * <pre>
     ** Statements contained in this namespace 
     * </pre>
     */
    boa.types.Ast.StatementOrBuilder getStatementsOrBuilder(
        int index);

    // repeated .boa.types.Method methods = 5;
    /**
     * <code>repeated .boa.types.Method methods = 5;</code>
     *
     * <pre>
     ** Methods contained in this namespace 
     * </pre>
     */
    java.util.List<boa.types.Ast.Method> 
        getMethodsList();
    /**
     * <code>repeated .boa.types.Method methods = 5;</code>
     *
     * <pre>
     ** Methods contained in this namespace 
     * </pre>
     */
    boa.types.Ast.Method getMethods(int index);
    /**
     * <code>repeated .boa.types.Method methods = 5;</code>
     *
     * <pre>
     ** Methods contained in this namespace 
     * </pre>
     */
    int getMethodsCount();
    /**
     * <code>repeated .boa.types.Method methods = 5;</code>
     *
     * <pre>
     ** Methods contained in this namespace 
     * </pre>
     */
    java.util.List<? extends boa.types.Ast.MethodOrBuilder> 
        getMethodsOrBuilderList();
    /**
     * <code>repeated .boa.types.Method methods = 5;</code>
     *
     * <pre>
     ** Methods contained in this namespace 
     * </pre>
     */
    boa.types.Ast.MethodOrBuilder getMethodsOrBuilder(
        int index);

    // repeated .boa.types.Expression expressions = 6;
    /**
     * <code>repeated .boa.types.Expression expressions = 6;</code>
     *
     * <pre>
     ** Expressions contained in this namespace 
     * </pre>
     */
    java.util.List<boa.types.Ast.Expression> 
        getExpressionsList();
    /**
     * <code>repeated .boa.types.Expression expressions = 6;</code>
     *
     * <pre>
     ** Expressions contained in this namespace 
     * </pre>
     */
    boa.types.Ast.Expression getExpressions(int index);
    /**
     * <code>repeated .boa.types.Expression expressions = 6;</code>
     *
     * <pre>
     ** Expressions contained in this namespace 
     * </pre>
     */
    int getExpressionsCount();
    /**
     * <code>repeated .boa.types.Expression expressions = 6;</code>
     *
     * <pre>
     ** Expressions contained in this namespace 
     * </pre>
     */
    java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
        getExpressionsOrBuilderList();
    /**
     * <code>repeated .boa.types.Expression expressions = 6;</code>
     *
     * <pre>
     ** Expressions contained in this namespace 
     * </pre>
     */
    boa.types.Ast.ExpressionOrBuilder getExpressionsOrBuilder(
        int index);

    // optional .boa.types.ChangeKind structural_change_kind = 7;
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 7;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    boolean hasStructuralChangeKind();
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 7;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    boa.types.Shared.ChangeKind getStructuralChangeKind();

    // optional .boa.types.ChangeKind label_change_kind = 8;
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 8;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    boolean hasLabelChangeKind();
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 8;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    boa.types.Shared.ChangeKind getLabelChangeKind();
  }
  /**
   * Protobuf type {@code boa.types.Namespace}
   *
   * <pre>
   ** A namespace (aka, package) in a source file 
   * </pre>
   */
  public static final class Namespace extends
      com.google.protobuf.GeneratedMessage
      implements NamespaceOrBuilder {
    // Use Namespace.newBuilder() to construct.
    private Namespace(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Namespace(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Namespace defaultInstance;
    public static Namespace getDefaultInstance() {
      return defaultInstance;
    }

    public Namespace getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Namespace(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                modifiers_ = new java.util.ArrayList<boa.types.Ast.Modifier>();
                mutable_bitField0_ |= 0x00000002;
              }
              modifiers_.add(input.readMessage(boa.types.Ast.Modifier.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                declarations_ = new java.util.ArrayList<boa.types.Ast.Declaration>();
                mutable_bitField0_ |= 0x00000004;
              }
              declarations_.add(input.readMessage(boa.types.Ast.Declaration.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                statements_ = new java.util.ArrayList<boa.types.Ast.Statement>();
                mutable_bitField0_ |= 0x00000008;
              }
              statements_.add(input.readMessage(boa.types.Ast.Statement.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                methods_ = new java.util.ArrayList<boa.types.Ast.Method>();
                mutable_bitField0_ |= 0x00000010;
              }
              methods_.add(input.readMessage(boa.types.Ast.Method.PARSER, extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                expressions_ = new java.util.ArrayList<boa.types.Ast.Expression>();
                mutable_bitField0_ |= 0x00000020;
              }
              expressions_.add(input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry));
              break;
            }
            case 56: {
              int rawValue = input.readEnum();
              boa.types.Shared.ChangeKind value = boa.types.Shared.ChangeKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(7, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                structuralChangeKind_ = value;
              }
              break;
            }
            case 64: {
              int rawValue = input.readEnum();
              boa.types.Shared.ChangeKind value = boa.types.Shared.ChangeKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(8, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                labelChangeKind_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          modifiers_ = java.util.Collections.unmodifiableList(modifiers_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          declarations_ = java.util.Collections.unmodifiableList(declarations_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          statements_ = java.util.Collections.unmodifiableList(statements_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          methods_ = java.util.Collections.unmodifiableList(methods_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          expressions_ = java.util.Collections.unmodifiableList(expressions_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return boa.types.Ast.internal_static_boa_types_Namespace_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return boa.types.Ast.internal_static_boa_types_Namespace_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              boa.types.Ast.Namespace.class, boa.types.Ast.Namespace.Builder.class);
    }

    public static com.google.protobuf.Parser<Namespace> PARSER =
        new com.google.protobuf.AbstractParser<Namespace>() {
      public Namespace parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Namespace(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Namespace> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     ** The name of the namespace 
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     ** The name of the namespace 
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     ** The name of the namespace 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .boa.types.Modifier modifiers = 2;
    public static final int MODIFIERS_FIELD_NUMBER = 2;
    private java.util.List<boa.types.Ast.Modifier> modifiers_;
    /**
     * <code>repeated .boa.types.Modifier modifiers = 2;</code>
     *
     * <pre>
     ** Any modifiers/annotations on the namespace 
     * </pre>
     */
    public java.util.List<boa.types.Ast.Modifier> getModifiersList() {
      return modifiers_;
    }
    /**
     * <code>repeated .boa.types.Modifier modifiers = 2;</code>
     *
     * <pre>
     ** Any modifiers/annotations on the namespace 
     * </pre>
     */
    public java.util.List<? extends boa.types.Ast.ModifierOrBuilder> 
        getModifiersOrBuilderList() {
      return modifiers_;
    }
    /**
     * <code>repeated .boa.types.Modifier modifiers = 2;</code>
     *
     * <pre>
     ** Any modifiers/annotations on the namespace 
     * </pre>
     */
    public int getModifiersCount() {
      return modifiers_.size();
    }
    /**
     * <code>repeated .boa.types.Modifier modifiers = 2;</code>
     *
     * <pre>
     ** Any modifiers/annotations on the namespace 
     * </pre>
     */
    public boa.types.Ast.Modifier getModifiers(int index) {
      return modifiers_.get(index);
    }
    /**
     * <code>repeated .boa.types.Modifier modifiers = 2;</code>
     *
     * <pre>
     ** Any modifiers/annotations on the namespace 
     * </pre>
     */
    public boa.types.Ast.ModifierOrBuilder getModifiersOrBuilder(
        int index) {
      return modifiers_.get(index);
    }

    // repeated .boa.types.Declaration declarations = 3;
    public static final int DECLARATIONS_FIELD_NUMBER = 3;
    private java.util.List<boa.types.Ast.Declaration> declarations_;
    /**
     * <code>repeated .boa.types.Declaration declarations = 3;</code>
     *
     * <pre>
     ** Declarations contained in this namespace 
     * </pre>
     */
    public java.util.List<boa.types.Ast.Declaration> getDeclarationsList() {
      return declarations_;
    }
    /**
     * <code>repeated .boa.types.Declaration declarations = 3;</code>
     *
     * <pre>
     ** Declarations contained in this namespace 
     * </pre>
     */
    public java.util.List<? extends boa.types.Ast.DeclarationOrBuilder> 
        getDeclarationsOrBuilderList() {
      return declarations_;
    }
    /**
     * <code>repeated .boa.types.Declaration declarations = 3;</code>
     *
     * <pre>
     ** Declarations contained in this namespace 
     * </pre>
     */
    public int getDeclarationsCount() {
      return declarations_.size();
    }
    /**
     * <code>repeated .boa.types.Declaration declarations = 3;</code>
     *
     * <pre>
     ** Declarations contained in this namespace 
     * </pre>
     */
    public boa.types.Ast.Declaration getDeclarations(int index) {
      return declarations_.get(index);
    }
    /**
     * <code>repeated .boa.types.Declaration declarations = 3;</code>
     *
     * <pre>
     ** Declarations contained in this namespace 
     * </pre>
     */
    public boa.types.Ast.DeclarationOrBuilder getDeclarationsOrBuilder(
        int index) {
      return declarations_.get(index);
    }

    // repeated .boa.types.Statement statements = 4;
    public static final int STATEMENTS_FIELD_NUMBER = 4;
    private java.util.List<boa.types.Ast.Statement> statements_;
    /**
     * <code>repeated .boa.types.Statement statements = 4;</code>
     *
     * <pre>
     ** Statements contained in this namespace 
     * </pre>
     */
    public java.util.List<boa.types.Ast.Statement> getStatementsList() {
      return statements_;
    }
    /**
     * <code>repeated .boa.types.Statement statements = 4;</code>
     *
     * <pre>
     ** Statements contained in this namespace 
     * </pre>
     */
    public java.util.List<? extends boa.types.Ast.StatementOrBuilder> 
        getStatementsOrBuilderList() {
      return statements_;
    }
    /**
     * <code>repeated .boa.types.Statement statements = 4;</code>
     *
     * <pre>
     ** Statements contained in this namespace 
     * </pre>
     */
    public int getStatementsCount() {
      return statements_.size();
    }
    /**
     * <code>repeated .boa.types.Statement statements = 4;</code>
     *
     * <pre>
     ** Statements contained in this namespace 
     * </pre>
     */
    public boa.types.Ast.Statement getStatements(int index) {
      return statements_.get(index);
    }
    /**
     * <code>repeated .boa.types.Statement statements = 4;</code>
     *
     * <pre>
     ** Statements contained in this namespace 
     * </pre>
     */
    public boa.types.Ast.StatementOrBuilder getStatementsOrBuilder(
        int index) {
      return statements_.get(index);
    }

    // repeated .boa.types.Method methods = 5;
    public static final int METHODS_FIELD_NUMBER = 5;
    private java.util.List<boa.types.Ast.Method> methods_;
    /**
     * <code>repeated .boa.types.Method methods = 5;</code>
     *
     * <pre>
     ** Methods contained in this namespace 
     * </pre>
     */
    public java.util.List<boa.types.Ast.Method> getMethodsList() {
      return methods_;
    }
    /**
     * <code>repeated .boa.types.Method methods = 5;</code>
     *
     * <pre>
     ** Methods contained in this namespace 
     * </pre>
     */
    public java.util.List<? extends boa.types.Ast.MethodOrBuilder> 
        getMethodsOrBuilderList() {
      return methods_;
    }
    /**
     * <code>repeated .boa.types.Method methods = 5;</code>
     *
     * <pre>
     ** Methods contained in this namespace 
     * </pre>
     */
    public int getMethodsCount() {
      return methods_.size();
    }
    /**
     * <code>repeated .boa.types.Method methods = 5;</code>
     *
     * <pre>
     ** Methods contained in this namespace 
     * </pre>
     */
    public boa.types.Ast.Method getMethods(int index) {
      return methods_.get(index);
    }
    /**
     * <code>repeated .boa.types.Method methods = 5;</code>
     *
     * <pre>
     ** Methods contained in this namespace 
     * </pre>
     */
    public boa.types.Ast.MethodOrBuilder getMethodsOrBuilder(
        int index) {
      return methods_.get(index);
    }

    // repeated .boa.types.Expression expressions = 6;
    public static final int EXPRESSIONS_FIELD_NUMBER = 6;
    private java.util.List<boa.types.Ast.Expression> expressions_;
    /**
     * <code>repeated .boa.types.Expression expressions = 6;</code>
     *
     * <pre>
     ** Expressions contained in this namespace 
     * </pre>
     */
    public java.util.List<boa.types.Ast.Expression> getExpressionsList() {
      return expressions_;
    }
    /**
     * <code>repeated .boa.types.Expression expressions = 6;</code>
     *
     * <pre>
     ** Expressions contained in this namespace 
     * </pre>
     */
    public java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
        getExpressionsOrBuilderList() {
      return expressions_;
    }
    /**
     * <code>repeated .boa.types.Expression expressions = 6;</code>
     *
     * <pre>
     ** Expressions contained in this namespace 
     * </pre>
     */
    public int getExpressionsCount() {
      return expressions_.size();
    }
    /**
     * <code>repeated .boa.types.Expression expressions = 6;</code>
     *
     * <pre>
     ** Expressions contained in this namespace 
     * </pre>
     */
    public boa.types.Ast.Expression getExpressions(int index) {
      return expressions_.get(index);
    }
    /**
     * <code>repeated .boa.types.Expression expressions = 6;</code>
     *
     * <pre>
     ** Expressions contained in this namespace 
     * </pre>
     */
    public boa.types.Ast.ExpressionOrBuilder getExpressionsOrBuilder(
        int index) {
      return expressions_.get(index);
    }

    // optional .boa.types.ChangeKind structural_change_kind = 7;
    public static final int STRUCTURAL_CHANGE_KIND_FIELD_NUMBER = 7;
    private boa.types.Shared.ChangeKind structuralChangeKind_;
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 7;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    public boolean hasStructuralChangeKind() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 7;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    public boa.types.Shared.ChangeKind getStructuralChangeKind() {
      return structuralChangeKind_;
    }

    // optional .boa.types.ChangeKind label_change_kind = 8;
    public static final int LABEL_CHANGE_KIND_FIELD_NUMBER = 8;
    private boa.types.Shared.ChangeKind labelChangeKind_;
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 8;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    public boolean hasLabelChangeKind() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 8;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    public boa.types.Shared.ChangeKind getLabelChangeKind() {
      return labelChangeKind_;
    }

    private void initFields() {
      name_ = "";
      modifiers_ = java.util.Collections.emptyList();
      declarations_ = java.util.Collections.emptyList();
      statements_ = java.util.Collections.emptyList();
      methods_ = java.util.Collections.emptyList();
      expressions_ = java.util.Collections.emptyList();
      structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
      labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getModifiersCount(); i++) {
        if (!getModifiers(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getDeclarationsCount(); i++) {
        if (!getDeclarations(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getStatementsCount(); i++) {
        if (!getStatements(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getMethodsCount(); i++) {
        if (!getMethods(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getExpressionsCount(); i++) {
        if (!getExpressions(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      for (int i = 0; i < modifiers_.size(); i++) {
        output.writeMessage(2, modifiers_.get(i));
      }
      for (int i = 0; i < declarations_.size(); i++) {
        output.writeMessage(3, declarations_.get(i));
      }
      for (int i = 0; i < statements_.size(); i++) {
        output.writeMessage(4, statements_.get(i));
      }
      for (int i = 0; i < methods_.size(); i++) {
        output.writeMessage(5, methods_.get(i));
      }
      for (int i = 0; i < expressions_.size(); i++) {
        output.writeMessage(6, expressions_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(7, structuralChangeKind_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(8, labelChangeKind_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      for (int i = 0; i < modifiers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, modifiers_.get(i));
      }
      for (int i = 0; i < declarations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, declarations_.get(i));
      }
      for (int i = 0; i < statements_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, statements_.get(i));
      }
      for (int i = 0; i < methods_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, methods_.get(i));
      }
      for (int i = 0; i < expressions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, expressions_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, structuralChangeKind_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, labelChangeKind_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static boa.types.Ast.Namespace parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static boa.types.Ast.Namespace parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static boa.types.Ast.Namespace parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static boa.types.Ast.Namespace parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static boa.types.Ast.Namespace parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static boa.types.Ast.Namespace parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static boa.types.Ast.Namespace parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static boa.types.Ast.Namespace parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static boa.types.Ast.Namespace parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static boa.types.Ast.Namespace parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(boa.types.Ast.Namespace prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code boa.types.Namespace}
     *
     * <pre>
     ** A namespace (aka, package) in a source file 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements boa.types.Ast.NamespaceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Namespace_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Namespace_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Namespace.class, boa.types.Ast.Namespace.Builder.class);
      }

      // Construct using boa.types.Ast.Namespace.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getModifiersFieldBuilder();
          getDeclarationsFieldBuilder();
          getStatementsFieldBuilder();
          getMethodsFieldBuilder();
          getExpressionsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (modifiersBuilder_ == null) {
          modifiers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          modifiersBuilder_.clear();
        }
        if (declarationsBuilder_ == null) {
          declarations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          declarationsBuilder_.clear();
        }
        if (statementsBuilder_ == null) {
          statements_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          statementsBuilder_.clear();
        }
        if (methodsBuilder_ == null) {
          methods_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          methodsBuilder_.clear();
        }
        if (expressionsBuilder_ == null) {
          expressions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          expressionsBuilder_.clear();
        }
        structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        bitField0_ = (bitField0_ & ~0x00000040);
        labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return boa.types.Ast.internal_static_boa_types_Namespace_descriptor;
      }

      public boa.types.Ast.Namespace getDefaultInstanceForType() {
        return boa.types.Ast.Namespace.getDefaultInstance();
      }

      public boa.types.Ast.Namespace build() {
        boa.types.Ast.Namespace result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public boa.types.Ast.Namespace buildPartial() {
        boa.types.Ast.Namespace result = new boa.types.Ast.Namespace(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (modifiersBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            modifiers_ = java.util.Collections.unmodifiableList(modifiers_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.modifiers_ = modifiers_;
        } else {
          result.modifiers_ = modifiersBuilder_.build();
        }
        if (declarationsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            declarations_ = java.util.Collections.unmodifiableList(declarations_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.declarations_ = declarations_;
        } else {
          result.declarations_ = declarationsBuilder_.build();
        }
        if (statementsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            statements_ = java.util.Collections.unmodifiableList(statements_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.statements_ = statements_;
        } else {
          result.statements_ = statementsBuilder_.build();
        }
        if (methodsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            methods_ = java.util.Collections.unmodifiableList(methods_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.methods_ = methods_;
        } else {
          result.methods_ = methodsBuilder_.build();
        }
        if (expressionsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            expressions_ = java.util.Collections.unmodifiableList(expressions_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.expressions_ = expressions_;
        } else {
          result.expressions_ = expressionsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000002;
        }
        result.structuralChangeKind_ = structuralChangeKind_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000004;
        }
        result.labelChangeKind_ = labelChangeKind_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof boa.types.Ast.Namespace) {
          return mergeFrom((boa.types.Ast.Namespace)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(boa.types.Ast.Namespace other) {
        if (other == boa.types.Ast.Namespace.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (modifiersBuilder_ == null) {
          if (!other.modifiers_.isEmpty()) {
            if (modifiers_.isEmpty()) {
              modifiers_ = other.modifiers_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureModifiersIsMutable();
              modifiers_.addAll(other.modifiers_);
            }
            onChanged();
          }
        } else {
          if (!other.modifiers_.isEmpty()) {
            if (modifiersBuilder_.isEmpty()) {
              modifiersBuilder_.dispose();
              modifiersBuilder_ = null;
              modifiers_ = other.modifiers_;
              bitField0_ = (bitField0_ & ~0x00000002);
              modifiersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getModifiersFieldBuilder() : null;
            } else {
              modifiersBuilder_.addAllMessages(other.modifiers_);
            }
          }
        }
        if (declarationsBuilder_ == null) {
          if (!other.declarations_.isEmpty()) {
            if (declarations_.isEmpty()) {
              declarations_ = other.declarations_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureDeclarationsIsMutable();
              declarations_.addAll(other.declarations_);
            }
            onChanged();
          }
        } else {
          if (!other.declarations_.isEmpty()) {
            if (declarationsBuilder_.isEmpty()) {
              declarationsBuilder_.dispose();
              declarationsBuilder_ = null;
              declarations_ = other.declarations_;
              bitField0_ = (bitField0_ & ~0x00000004);
              declarationsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDeclarationsFieldBuilder() : null;
            } else {
              declarationsBuilder_.addAllMessages(other.declarations_);
            }
          }
        }
        if (statementsBuilder_ == null) {
          if (!other.statements_.isEmpty()) {
            if (statements_.isEmpty()) {
              statements_ = other.statements_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureStatementsIsMutable();
              statements_.addAll(other.statements_);
            }
            onChanged();
          }
        } else {
          if (!other.statements_.isEmpty()) {
            if (statementsBuilder_.isEmpty()) {
              statementsBuilder_.dispose();
              statementsBuilder_ = null;
              statements_ = other.statements_;
              bitField0_ = (bitField0_ & ~0x00000008);
              statementsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getStatementsFieldBuilder() : null;
            } else {
              statementsBuilder_.addAllMessages(other.statements_);
            }
          }
        }
        if (methodsBuilder_ == null) {
          if (!other.methods_.isEmpty()) {
            if (methods_.isEmpty()) {
              methods_ = other.methods_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureMethodsIsMutable();
              methods_.addAll(other.methods_);
            }
            onChanged();
          }
        } else {
          if (!other.methods_.isEmpty()) {
            if (methodsBuilder_.isEmpty()) {
              methodsBuilder_.dispose();
              methodsBuilder_ = null;
              methods_ = other.methods_;
              bitField0_ = (bitField0_ & ~0x00000010);
              methodsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMethodsFieldBuilder() : null;
            } else {
              methodsBuilder_.addAllMessages(other.methods_);
            }
          }
        }
        if (expressionsBuilder_ == null) {
          if (!other.expressions_.isEmpty()) {
            if (expressions_.isEmpty()) {
              expressions_ = other.expressions_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureExpressionsIsMutable();
              expressions_.addAll(other.expressions_);
            }
            onChanged();
          }
        } else {
          if (!other.expressions_.isEmpty()) {
            if (expressionsBuilder_.isEmpty()) {
              expressionsBuilder_.dispose();
              expressionsBuilder_ = null;
              expressions_ = other.expressions_;
              bitField0_ = (bitField0_ & ~0x00000020);
              expressionsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getExpressionsFieldBuilder() : null;
            } else {
              expressionsBuilder_.addAllMessages(other.expressions_);
            }
          }
        }
        if (other.hasStructuralChangeKind()) {
          setStructuralChangeKind(other.getStructuralChangeKind());
        }
        if (other.hasLabelChangeKind()) {
          setLabelChangeKind(other.getLabelChangeKind());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        for (int i = 0; i < getModifiersCount(); i++) {
          if (!getModifiers(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getDeclarationsCount(); i++) {
          if (!getDeclarations(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getStatementsCount(); i++) {
          if (!getStatements(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getMethodsCount(); i++) {
          if (!getMethods(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getExpressionsCount(); i++) {
          if (!getExpressions(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        boa.types.Ast.Namespace parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (boa.types.Ast.Namespace) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string name = 1;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       ** The name of the namespace 
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       ** The name of the namespace 
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       ** The name of the namespace 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       ** The name of the namespace 
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       ** The name of the namespace 
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       ** The name of the namespace 
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      // repeated .boa.types.Modifier modifiers = 2;
      private java.util.List<boa.types.Ast.Modifier> modifiers_ =
        java.util.Collections.emptyList();
      private void ensureModifiersIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          modifiers_ = new java.util.ArrayList<boa.types.Ast.Modifier>(modifiers_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Modifier, boa.types.Ast.Modifier.Builder, boa.types.Ast.ModifierOrBuilder> modifiersBuilder_;

      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** Any modifiers/annotations on the namespace 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Modifier> getModifiersList() {
        if (modifiersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(modifiers_);
        } else {
          return modifiersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** Any modifiers/annotations on the namespace 
       * </pre>
       */
      public int getModifiersCount() {
        if (modifiersBuilder_ == null) {
          return modifiers_.size();
        } else {
          return modifiersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** Any modifiers/annotations on the namespace 
       * </pre>
       */
      public boa.types.Ast.Modifier getModifiers(int index) {
        if (modifiersBuilder_ == null) {
          return modifiers_.get(index);
        } else {
          return modifiersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** Any modifiers/annotations on the namespace 
       * </pre>
       */
      public Builder setModifiers(
          int index, boa.types.Ast.Modifier value) {
        if (modifiersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModifiersIsMutable();
          modifiers_.set(index, value);
          onChanged();
        } else {
          modifiersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** Any modifiers/annotations on the namespace 
       * </pre>
       */
      public Builder setModifiers(
          int index, boa.types.Ast.Modifier.Builder builderForValue) {
        if (modifiersBuilder_ == null) {
          ensureModifiersIsMutable();
          modifiers_.set(index, builderForValue.build());
          onChanged();
        } else {
          modifiersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** Any modifiers/annotations on the namespace 
       * </pre>
       */
      public Builder addModifiers(boa.types.Ast.Modifier value) {
        if (modifiersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModifiersIsMutable();
          modifiers_.add(value);
          onChanged();
        } else {
          modifiersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** Any modifiers/annotations on the namespace 
       * </pre>
       */
      public Builder addModifiers(
          int index, boa.types.Ast.Modifier value) {
        if (modifiersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModifiersIsMutable();
          modifiers_.add(index, value);
          onChanged();
        } else {
          modifiersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** Any modifiers/annotations on the namespace 
       * </pre>
       */
      public Builder addModifiers(
          boa.types.Ast.Modifier.Builder builderForValue) {
        if (modifiersBuilder_ == null) {
          ensureModifiersIsMutable();
          modifiers_.add(builderForValue.build());
          onChanged();
        } else {
          modifiersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** Any modifiers/annotations on the namespace 
       * </pre>
       */
      public Builder addModifiers(
          int index, boa.types.Ast.Modifier.Builder builderForValue) {
        if (modifiersBuilder_ == null) {
          ensureModifiersIsMutable();
          modifiers_.add(index, builderForValue.build());
          onChanged();
        } else {
          modifiersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** Any modifiers/annotations on the namespace 
       * </pre>
       */
      public Builder addAllModifiers(
          java.lang.Iterable<? extends boa.types.Ast.Modifier> values) {
        if (modifiersBuilder_ == null) {
          ensureModifiersIsMutable();
          super.addAll(values, modifiers_);
          onChanged();
        } else {
          modifiersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** Any modifiers/annotations on the namespace 
       * </pre>
       */
      public Builder clearModifiers() {
        if (modifiersBuilder_ == null) {
          modifiers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          modifiersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** Any modifiers/annotations on the namespace 
       * </pre>
       */
      public Builder removeModifiers(int index) {
        if (modifiersBuilder_ == null) {
          ensureModifiersIsMutable();
          modifiers_.remove(index);
          onChanged();
        } else {
          modifiersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** Any modifiers/annotations on the namespace 
       * </pre>
       */
      public boa.types.Ast.Modifier.Builder getModifiersBuilder(
          int index) {
        return getModifiersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** Any modifiers/annotations on the namespace 
       * </pre>
       */
      public boa.types.Ast.ModifierOrBuilder getModifiersOrBuilder(
          int index) {
        if (modifiersBuilder_ == null) {
          return modifiers_.get(index);  } else {
          return modifiersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** Any modifiers/annotations on the namespace 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.ModifierOrBuilder> 
           getModifiersOrBuilderList() {
        if (modifiersBuilder_ != null) {
          return modifiersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(modifiers_);
        }
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** Any modifiers/annotations on the namespace 
       * </pre>
       */
      public boa.types.Ast.Modifier.Builder addModifiersBuilder() {
        return getModifiersFieldBuilder().addBuilder(
            boa.types.Ast.Modifier.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** Any modifiers/annotations on the namespace 
       * </pre>
       */
      public boa.types.Ast.Modifier.Builder addModifiersBuilder(
          int index) {
        return getModifiersFieldBuilder().addBuilder(
            index, boa.types.Ast.Modifier.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** Any modifiers/annotations on the namespace 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Modifier.Builder> 
           getModifiersBuilderList() {
        return getModifiersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Modifier, boa.types.Ast.Modifier.Builder, boa.types.Ast.ModifierOrBuilder> 
          getModifiersFieldBuilder() {
        if (modifiersBuilder_ == null) {
          modifiersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Modifier, boa.types.Ast.Modifier.Builder, boa.types.Ast.ModifierOrBuilder>(
                  modifiers_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          modifiers_ = null;
        }
        return modifiersBuilder_;
      }

      // repeated .boa.types.Declaration declarations = 3;
      private java.util.List<boa.types.Ast.Declaration> declarations_ =
        java.util.Collections.emptyList();
      private void ensureDeclarationsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          declarations_ = new java.util.ArrayList<boa.types.Ast.Declaration>(declarations_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Declaration, boa.types.Ast.Declaration.Builder, boa.types.Ast.DeclarationOrBuilder> declarationsBuilder_;

      /**
       * <code>repeated .boa.types.Declaration declarations = 3;</code>
       *
       * <pre>
       ** Declarations contained in this namespace 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Declaration> getDeclarationsList() {
        if (declarationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(declarations_);
        } else {
          return declarationsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .boa.types.Declaration declarations = 3;</code>
       *
       * <pre>
       ** Declarations contained in this namespace 
       * </pre>
       */
      public int getDeclarationsCount() {
        if (declarationsBuilder_ == null) {
          return declarations_.size();
        } else {
          return declarationsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .boa.types.Declaration declarations = 3;</code>
       *
       * <pre>
       ** Declarations contained in this namespace 
       * </pre>
       */
      public boa.types.Ast.Declaration getDeclarations(int index) {
        if (declarationsBuilder_ == null) {
          return declarations_.get(index);
        } else {
          return declarationsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .boa.types.Declaration declarations = 3;</code>
       *
       * <pre>
       ** Declarations contained in this namespace 
       * </pre>
       */
      public Builder setDeclarations(
          int index, boa.types.Ast.Declaration value) {
        if (declarationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDeclarationsIsMutable();
          declarations_.set(index, value);
          onChanged();
        } else {
          declarationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Declaration declarations = 3;</code>
       *
       * <pre>
       ** Declarations contained in this namespace 
       * </pre>
       */
      public Builder setDeclarations(
          int index, boa.types.Ast.Declaration.Builder builderForValue) {
        if (declarationsBuilder_ == null) {
          ensureDeclarationsIsMutable();
          declarations_.set(index, builderForValue.build());
          onChanged();
        } else {
          declarationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Declaration declarations = 3;</code>
       *
       * <pre>
       ** Declarations contained in this namespace 
       * </pre>
       */
      public Builder addDeclarations(boa.types.Ast.Declaration value) {
        if (declarationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDeclarationsIsMutable();
          declarations_.add(value);
          onChanged();
        } else {
          declarationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Declaration declarations = 3;</code>
       *
       * <pre>
       ** Declarations contained in this namespace 
       * </pre>
       */
      public Builder addDeclarations(
          int index, boa.types.Ast.Declaration value) {
        if (declarationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDeclarationsIsMutable();
          declarations_.add(index, value);
          onChanged();
        } else {
          declarationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Declaration declarations = 3;</code>
       *
       * <pre>
       ** Declarations contained in this namespace 
       * </pre>
       */
      public Builder addDeclarations(
          boa.types.Ast.Declaration.Builder builderForValue) {
        if (declarationsBuilder_ == null) {
          ensureDeclarationsIsMutable();
          declarations_.add(builderForValue.build());
          onChanged();
        } else {
          declarationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Declaration declarations = 3;</code>
       *
       * <pre>
       ** Declarations contained in this namespace 
       * </pre>
       */
      public Builder addDeclarations(
          int index, boa.types.Ast.Declaration.Builder builderForValue) {
        if (declarationsBuilder_ == null) {
          ensureDeclarationsIsMutable();
          declarations_.add(index, builderForValue.build());
          onChanged();
        } else {
          declarationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Declaration declarations = 3;</code>
       *
       * <pre>
       ** Declarations contained in this namespace 
       * </pre>
       */
      public Builder addAllDeclarations(
          java.lang.Iterable<? extends boa.types.Ast.Declaration> values) {
        if (declarationsBuilder_ == null) {
          ensureDeclarationsIsMutable();
          super.addAll(values, declarations_);
          onChanged();
        } else {
          declarationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Declaration declarations = 3;</code>
       *
       * <pre>
       ** Declarations contained in this namespace 
       * </pre>
       */
      public Builder clearDeclarations() {
        if (declarationsBuilder_ == null) {
          declarations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          declarationsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Declaration declarations = 3;</code>
       *
       * <pre>
       ** Declarations contained in this namespace 
       * </pre>
       */
      public Builder removeDeclarations(int index) {
        if (declarationsBuilder_ == null) {
          ensureDeclarationsIsMutable();
          declarations_.remove(index);
          onChanged();
        } else {
          declarationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Declaration declarations = 3;</code>
       *
       * <pre>
       ** Declarations contained in this namespace 
       * </pre>
       */
      public boa.types.Ast.Declaration.Builder getDeclarationsBuilder(
          int index) {
        return getDeclarationsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .boa.types.Declaration declarations = 3;</code>
       *
       * <pre>
       ** Declarations contained in this namespace 
       * </pre>
       */
      public boa.types.Ast.DeclarationOrBuilder getDeclarationsOrBuilder(
          int index) {
        if (declarationsBuilder_ == null) {
          return declarations_.get(index);  } else {
          return declarationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .boa.types.Declaration declarations = 3;</code>
       *
       * <pre>
       ** Declarations contained in this namespace 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.DeclarationOrBuilder> 
           getDeclarationsOrBuilderList() {
        if (declarationsBuilder_ != null) {
          return declarationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(declarations_);
        }
      }
      /**
       * <code>repeated .boa.types.Declaration declarations = 3;</code>
       *
       * <pre>
       ** Declarations contained in this namespace 
       * </pre>
       */
      public boa.types.Ast.Declaration.Builder addDeclarationsBuilder() {
        return getDeclarationsFieldBuilder().addBuilder(
            boa.types.Ast.Declaration.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Declaration declarations = 3;</code>
       *
       * <pre>
       ** Declarations contained in this namespace 
       * </pre>
       */
      public boa.types.Ast.Declaration.Builder addDeclarationsBuilder(
          int index) {
        return getDeclarationsFieldBuilder().addBuilder(
            index, boa.types.Ast.Declaration.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Declaration declarations = 3;</code>
       *
       * <pre>
       ** Declarations contained in this namespace 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Declaration.Builder> 
           getDeclarationsBuilderList() {
        return getDeclarationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Declaration, boa.types.Ast.Declaration.Builder, boa.types.Ast.DeclarationOrBuilder> 
          getDeclarationsFieldBuilder() {
        if (declarationsBuilder_ == null) {
          declarationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Declaration, boa.types.Ast.Declaration.Builder, boa.types.Ast.DeclarationOrBuilder>(
                  declarations_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          declarations_ = null;
        }
        return declarationsBuilder_;
      }

      // repeated .boa.types.Statement statements = 4;
      private java.util.List<boa.types.Ast.Statement> statements_ =
        java.util.Collections.emptyList();
      private void ensureStatementsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          statements_ = new java.util.ArrayList<boa.types.Ast.Statement>(statements_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> statementsBuilder_;

      /**
       * <code>repeated .boa.types.Statement statements = 4;</code>
       *
       * <pre>
       ** Statements contained in this namespace 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Statement> getStatementsList() {
        if (statementsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(statements_);
        } else {
          return statementsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .boa.types.Statement statements = 4;</code>
       *
       * <pre>
       ** Statements contained in this namespace 
       * </pre>
       */
      public int getStatementsCount() {
        if (statementsBuilder_ == null) {
          return statements_.size();
        } else {
          return statementsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .boa.types.Statement statements = 4;</code>
       *
       * <pre>
       ** Statements contained in this namespace 
       * </pre>
       */
      public boa.types.Ast.Statement getStatements(int index) {
        if (statementsBuilder_ == null) {
          return statements_.get(index);
        } else {
          return statementsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .boa.types.Statement statements = 4;</code>
       *
       * <pre>
       ** Statements contained in this namespace 
       * </pre>
       */
      public Builder setStatements(
          int index, boa.types.Ast.Statement value) {
        if (statementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatementsIsMutable();
          statements_.set(index, value);
          onChanged();
        } else {
          statementsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements = 4;</code>
       *
       * <pre>
       ** Statements contained in this namespace 
       * </pre>
       */
      public Builder setStatements(
          int index, boa.types.Ast.Statement.Builder builderForValue) {
        if (statementsBuilder_ == null) {
          ensureStatementsIsMutable();
          statements_.set(index, builderForValue.build());
          onChanged();
        } else {
          statementsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements = 4;</code>
       *
       * <pre>
       ** Statements contained in this namespace 
       * </pre>
       */
      public Builder addStatements(boa.types.Ast.Statement value) {
        if (statementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatementsIsMutable();
          statements_.add(value);
          onChanged();
        } else {
          statementsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements = 4;</code>
       *
       * <pre>
       ** Statements contained in this namespace 
       * </pre>
       */
      public Builder addStatements(
          int index, boa.types.Ast.Statement value) {
        if (statementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatementsIsMutable();
          statements_.add(index, value);
          onChanged();
        } else {
          statementsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements = 4;</code>
       *
       * <pre>
       ** Statements contained in this namespace 
       * </pre>
       */
      public Builder addStatements(
          boa.types.Ast.Statement.Builder builderForValue) {
        if (statementsBuilder_ == null) {
          ensureStatementsIsMutable();
          statements_.add(builderForValue.build());
          onChanged();
        } else {
          statementsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements = 4;</code>
       *
       * <pre>
       ** Statements contained in this namespace 
       * </pre>
       */
      public Builder addStatements(
          int index, boa.types.Ast.Statement.Builder builderForValue) {
        if (statementsBuilder_ == null) {
          ensureStatementsIsMutable();
          statements_.add(index, builderForValue.build());
          onChanged();
        } else {
          statementsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements = 4;</code>
       *
       * <pre>
       ** Statements contained in this namespace 
       * </pre>
       */
      public Builder addAllStatements(
          java.lang.Iterable<? extends boa.types.Ast.Statement> values) {
        if (statementsBuilder_ == null) {
          ensureStatementsIsMutable();
          super.addAll(values, statements_);
          onChanged();
        } else {
          statementsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements = 4;</code>
       *
       * <pre>
       ** Statements contained in this namespace 
       * </pre>
       */
      public Builder clearStatements() {
        if (statementsBuilder_ == null) {
          statements_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          statementsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements = 4;</code>
       *
       * <pre>
       ** Statements contained in this namespace 
       * </pre>
       */
      public Builder removeStatements(int index) {
        if (statementsBuilder_ == null) {
          ensureStatementsIsMutable();
          statements_.remove(index);
          onChanged();
        } else {
          statementsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements = 4;</code>
       *
       * <pre>
       ** Statements contained in this namespace 
       * </pre>
       */
      public boa.types.Ast.Statement.Builder getStatementsBuilder(
          int index) {
        return getStatementsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .boa.types.Statement statements = 4;</code>
       *
       * <pre>
       ** Statements contained in this namespace 
       * </pre>
       */
      public boa.types.Ast.StatementOrBuilder getStatementsOrBuilder(
          int index) {
        if (statementsBuilder_ == null) {
          return statements_.get(index);  } else {
          return statementsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .boa.types.Statement statements = 4;</code>
       *
       * <pre>
       ** Statements contained in this namespace 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.StatementOrBuilder> 
           getStatementsOrBuilderList() {
        if (statementsBuilder_ != null) {
          return statementsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(statements_);
        }
      }
      /**
       * <code>repeated .boa.types.Statement statements = 4;</code>
       *
       * <pre>
       ** Statements contained in this namespace 
       * </pre>
       */
      public boa.types.Ast.Statement.Builder addStatementsBuilder() {
        return getStatementsFieldBuilder().addBuilder(
            boa.types.Ast.Statement.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Statement statements = 4;</code>
       *
       * <pre>
       ** Statements contained in this namespace 
       * </pre>
       */
      public boa.types.Ast.Statement.Builder addStatementsBuilder(
          int index) {
        return getStatementsFieldBuilder().addBuilder(
            index, boa.types.Ast.Statement.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Statement statements = 4;</code>
       *
       * <pre>
       ** Statements contained in this namespace 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Statement.Builder> 
           getStatementsBuilderList() {
        return getStatementsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> 
          getStatementsFieldBuilder() {
        if (statementsBuilder_ == null) {
          statementsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder>(
                  statements_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          statements_ = null;
        }
        return statementsBuilder_;
      }

      // repeated .boa.types.Method methods = 5;
      private java.util.List<boa.types.Ast.Method> methods_ =
        java.util.Collections.emptyList();
      private void ensureMethodsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          methods_ = new java.util.ArrayList<boa.types.Ast.Method>(methods_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Method, boa.types.Ast.Method.Builder, boa.types.Ast.MethodOrBuilder> methodsBuilder_;

      /**
       * <code>repeated .boa.types.Method methods = 5;</code>
       *
       * <pre>
       ** Methods contained in this namespace 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Method> getMethodsList() {
        if (methodsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(methods_);
        } else {
          return methodsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .boa.types.Method methods = 5;</code>
       *
       * <pre>
       ** Methods contained in this namespace 
       * </pre>
       */
      public int getMethodsCount() {
        if (methodsBuilder_ == null) {
          return methods_.size();
        } else {
          return methodsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .boa.types.Method methods = 5;</code>
       *
       * <pre>
       ** Methods contained in this namespace 
       * </pre>
       */
      public boa.types.Ast.Method getMethods(int index) {
        if (methodsBuilder_ == null) {
          return methods_.get(index);
        } else {
          return methodsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .boa.types.Method methods = 5;</code>
       *
       * <pre>
       ** Methods contained in this namespace 
       * </pre>
       */
      public Builder setMethods(
          int index, boa.types.Ast.Method value) {
        if (methodsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMethodsIsMutable();
          methods_.set(index, value);
          onChanged();
        } else {
          methodsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Method methods = 5;</code>
       *
       * <pre>
       ** Methods contained in this namespace 
       * </pre>
       */
      public Builder setMethods(
          int index, boa.types.Ast.Method.Builder builderForValue) {
        if (methodsBuilder_ == null) {
          ensureMethodsIsMutable();
          methods_.set(index, builderForValue.build());
          onChanged();
        } else {
          methodsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Method methods = 5;</code>
       *
       * <pre>
       ** Methods contained in this namespace 
       * </pre>
       */
      public Builder addMethods(boa.types.Ast.Method value) {
        if (methodsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMethodsIsMutable();
          methods_.add(value);
          onChanged();
        } else {
          methodsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Method methods = 5;</code>
       *
       * <pre>
       ** Methods contained in this namespace 
       * </pre>
       */
      public Builder addMethods(
          int index, boa.types.Ast.Method value) {
        if (methodsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMethodsIsMutable();
          methods_.add(index, value);
          onChanged();
        } else {
          methodsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Method methods = 5;</code>
       *
       * <pre>
       ** Methods contained in this namespace 
       * </pre>
       */
      public Builder addMethods(
          boa.types.Ast.Method.Builder builderForValue) {
        if (methodsBuilder_ == null) {
          ensureMethodsIsMutable();
          methods_.add(builderForValue.build());
          onChanged();
        } else {
          methodsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Method methods = 5;</code>
       *
       * <pre>
       ** Methods contained in this namespace 
       * </pre>
       */
      public Builder addMethods(
          int index, boa.types.Ast.Method.Builder builderForValue) {
        if (methodsBuilder_ == null) {
          ensureMethodsIsMutable();
          methods_.add(index, builderForValue.build());
          onChanged();
        } else {
          methodsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Method methods = 5;</code>
       *
       * <pre>
       ** Methods contained in this namespace 
       * </pre>
       */
      public Builder addAllMethods(
          java.lang.Iterable<? extends boa.types.Ast.Method> values) {
        if (methodsBuilder_ == null) {
          ensureMethodsIsMutable();
          super.addAll(values, methods_);
          onChanged();
        } else {
          methodsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Method methods = 5;</code>
       *
       * <pre>
       ** Methods contained in this namespace 
       * </pre>
       */
      public Builder clearMethods() {
        if (methodsBuilder_ == null) {
          methods_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          methodsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Method methods = 5;</code>
       *
       * <pre>
       ** Methods contained in this namespace 
       * </pre>
       */
      public Builder removeMethods(int index) {
        if (methodsBuilder_ == null) {
          ensureMethodsIsMutable();
          methods_.remove(index);
          onChanged();
        } else {
          methodsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Method methods = 5;</code>
       *
       * <pre>
       ** Methods contained in this namespace 
       * </pre>
       */
      public boa.types.Ast.Method.Builder getMethodsBuilder(
          int index) {
        return getMethodsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .boa.types.Method methods = 5;</code>
       *
       * <pre>
       ** Methods contained in this namespace 
       * </pre>
       */
      public boa.types.Ast.MethodOrBuilder getMethodsOrBuilder(
          int index) {
        if (methodsBuilder_ == null) {
          return methods_.get(index);  } else {
          return methodsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .boa.types.Method methods = 5;</code>
       *
       * <pre>
       ** Methods contained in this namespace 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.MethodOrBuilder> 
           getMethodsOrBuilderList() {
        if (methodsBuilder_ != null) {
          return methodsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(methods_);
        }
      }
      /**
       * <code>repeated .boa.types.Method methods = 5;</code>
       *
       * <pre>
       ** Methods contained in this namespace 
       * </pre>
       */
      public boa.types.Ast.Method.Builder addMethodsBuilder() {
        return getMethodsFieldBuilder().addBuilder(
            boa.types.Ast.Method.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Method methods = 5;</code>
       *
       * <pre>
       ** Methods contained in this namespace 
       * </pre>
       */
      public boa.types.Ast.Method.Builder addMethodsBuilder(
          int index) {
        return getMethodsFieldBuilder().addBuilder(
            index, boa.types.Ast.Method.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Method methods = 5;</code>
       *
       * <pre>
       ** Methods contained in this namespace 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Method.Builder> 
           getMethodsBuilderList() {
        return getMethodsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Method, boa.types.Ast.Method.Builder, boa.types.Ast.MethodOrBuilder> 
          getMethodsFieldBuilder() {
        if (methodsBuilder_ == null) {
          methodsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Method, boa.types.Ast.Method.Builder, boa.types.Ast.MethodOrBuilder>(
                  methods_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          methods_ = null;
        }
        return methodsBuilder_;
      }

      // repeated .boa.types.Expression expressions = 6;
      private java.util.List<boa.types.Ast.Expression> expressions_ =
        java.util.Collections.emptyList();
      private void ensureExpressionsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          expressions_ = new java.util.ArrayList<boa.types.Ast.Expression>(expressions_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> expressionsBuilder_;

      /**
       * <code>repeated .boa.types.Expression expressions = 6;</code>
       *
       * <pre>
       ** Expressions contained in this namespace 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Expression> getExpressionsList() {
        if (expressionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(expressions_);
        } else {
          return expressionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .boa.types.Expression expressions = 6;</code>
       *
       * <pre>
       ** Expressions contained in this namespace 
       * </pre>
       */
      public int getExpressionsCount() {
        if (expressionsBuilder_ == null) {
          return expressions_.size();
        } else {
          return expressionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .boa.types.Expression expressions = 6;</code>
       *
       * <pre>
       ** Expressions contained in this namespace 
       * </pre>
       */
      public boa.types.Ast.Expression getExpressions(int index) {
        if (expressionsBuilder_ == null) {
          return expressions_.get(index);
        } else {
          return expressionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .boa.types.Expression expressions = 6;</code>
       *
       * <pre>
       ** Expressions contained in this namespace 
       * </pre>
       */
      public Builder setExpressions(
          int index, boa.types.Ast.Expression value) {
        if (expressionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExpressionsIsMutable();
          expressions_.set(index, value);
          onChanged();
        } else {
          expressionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions = 6;</code>
       *
       * <pre>
       ** Expressions contained in this namespace 
       * </pre>
       */
      public Builder setExpressions(
          int index, boa.types.Ast.Expression.Builder builderForValue) {
        if (expressionsBuilder_ == null) {
          ensureExpressionsIsMutable();
          expressions_.set(index, builderForValue.build());
          onChanged();
        } else {
          expressionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions = 6;</code>
       *
       * <pre>
       ** Expressions contained in this namespace 
       * </pre>
       */
      public Builder addExpressions(boa.types.Ast.Expression value) {
        if (expressionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExpressionsIsMutable();
          expressions_.add(value);
          onChanged();
        } else {
          expressionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions = 6;</code>
       *
       * <pre>
       ** Expressions contained in this namespace 
       * </pre>
       */
      public Builder addExpressions(
          int index, boa.types.Ast.Expression value) {
        if (expressionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExpressionsIsMutable();
          expressions_.add(index, value);
          onChanged();
        } else {
          expressionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions = 6;</code>
       *
       * <pre>
       ** Expressions contained in this namespace 
       * </pre>
       */
      public Builder addExpressions(
          boa.types.Ast.Expression.Builder builderForValue) {
        if (expressionsBuilder_ == null) {
          ensureExpressionsIsMutable();
          expressions_.add(builderForValue.build());
          onChanged();
        } else {
          expressionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions = 6;</code>
       *
       * <pre>
       ** Expressions contained in this namespace 
       * </pre>
       */
      public Builder addExpressions(
          int index, boa.types.Ast.Expression.Builder builderForValue) {
        if (expressionsBuilder_ == null) {
          ensureExpressionsIsMutable();
          expressions_.add(index, builderForValue.build());
          onChanged();
        } else {
          expressionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions = 6;</code>
       *
       * <pre>
       ** Expressions contained in this namespace 
       * </pre>
       */
      public Builder addAllExpressions(
          java.lang.Iterable<? extends boa.types.Ast.Expression> values) {
        if (expressionsBuilder_ == null) {
          ensureExpressionsIsMutable();
          super.addAll(values, expressions_);
          onChanged();
        } else {
          expressionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions = 6;</code>
       *
       * <pre>
       ** Expressions contained in this namespace 
       * </pre>
       */
      public Builder clearExpressions() {
        if (expressionsBuilder_ == null) {
          expressions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          expressionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions = 6;</code>
       *
       * <pre>
       ** Expressions contained in this namespace 
       * </pre>
       */
      public Builder removeExpressions(int index) {
        if (expressionsBuilder_ == null) {
          ensureExpressionsIsMutable();
          expressions_.remove(index);
          onChanged();
        } else {
          expressionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions = 6;</code>
       *
       * <pre>
       ** Expressions contained in this namespace 
       * </pre>
       */
      public boa.types.Ast.Expression.Builder getExpressionsBuilder(
          int index) {
        return getExpressionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .boa.types.Expression expressions = 6;</code>
       *
       * <pre>
       ** Expressions contained in this namespace 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getExpressionsOrBuilder(
          int index) {
        if (expressionsBuilder_ == null) {
          return expressions_.get(index);  } else {
          return expressionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .boa.types.Expression expressions = 6;</code>
       *
       * <pre>
       ** Expressions contained in this namespace 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
           getExpressionsOrBuilderList() {
        if (expressionsBuilder_ != null) {
          return expressionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(expressions_);
        }
      }
      /**
       * <code>repeated .boa.types.Expression expressions = 6;</code>
       *
       * <pre>
       ** Expressions contained in this namespace 
       * </pre>
       */
      public boa.types.Ast.Expression.Builder addExpressionsBuilder() {
        return getExpressionsFieldBuilder().addBuilder(
            boa.types.Ast.Expression.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Expression expressions = 6;</code>
       *
       * <pre>
       ** Expressions contained in this namespace 
       * </pre>
       */
      public boa.types.Ast.Expression.Builder addExpressionsBuilder(
          int index) {
        return getExpressionsFieldBuilder().addBuilder(
            index, boa.types.Ast.Expression.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Expression expressions = 6;</code>
       *
       * <pre>
       ** Expressions contained in this namespace 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Expression.Builder> 
           getExpressionsBuilderList() {
        return getExpressionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
          getExpressionsFieldBuilder() {
        if (expressionsBuilder_ == null) {
          expressionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                  expressions_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          expressions_ = null;
        }
        return expressionsBuilder_;
      }

      // optional .boa.types.ChangeKind structural_change_kind = 7;
      private boa.types.Shared.ChangeKind structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 7;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public boolean hasStructuralChangeKind() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 7;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public boa.types.Shared.ChangeKind getStructuralChangeKind() {
        return structuralChangeKind_;
      }
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 7;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public Builder setStructuralChangeKind(boa.types.Shared.ChangeKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        structuralChangeKind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 7;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public Builder clearStructuralChangeKind() {
        bitField0_ = (bitField0_ & ~0x00000040);
        structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        onChanged();
        return this;
      }

      // optional .boa.types.ChangeKind label_change_kind = 8;
      private boa.types.Shared.ChangeKind labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 8;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public boolean hasLabelChangeKind() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 8;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public boa.types.Shared.ChangeKind getLabelChangeKind() {
        return labelChangeKind_;
      }
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 8;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public Builder setLabelChangeKind(boa.types.Shared.ChangeKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        labelChangeKind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 8;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public Builder clearLabelChangeKind() {
        bitField0_ = (bitField0_ & ~0x00000080);
        labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:boa.types.Namespace)
    }

    static {
      defaultInstance = new Namespace(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:boa.types.Namespace)
  }

  public interface DeclarationOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string name = 1;
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     ** The name of this declaration 
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     ** The name of this declaration 
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     ** The name of this declaration 
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required .boa.types.TypeKind kind = 2;
    /**
     * <code>required .boa.types.TypeKind kind = 2;</code>
     *
     * <pre>
     ** The kind of this declaration 
     * </pre>
     */
    boolean hasKind();
    /**
     * <code>required .boa.types.TypeKind kind = 2;</code>
     *
     * <pre>
     ** The kind of this declaration 
     * </pre>
     */
    boa.types.Ast.TypeKind getKind();

    // repeated .boa.types.Modifier modifiers = 3;
    /**
     * <code>repeated .boa.types.Modifier modifiers = 3;</code>
     *
     * <pre>
     ** The modifiers/annotations on this declaration 
     * </pre>
     */
    java.util.List<boa.types.Ast.Modifier> 
        getModifiersList();
    /**
     * <code>repeated .boa.types.Modifier modifiers = 3;</code>
     *
     * <pre>
     ** The modifiers/annotations on this declaration 
     * </pre>
     */
    boa.types.Ast.Modifier getModifiers(int index);
    /**
     * <code>repeated .boa.types.Modifier modifiers = 3;</code>
     *
     * <pre>
     ** The modifiers/annotations on this declaration 
     * </pre>
     */
    int getModifiersCount();
    /**
     * <code>repeated .boa.types.Modifier modifiers = 3;</code>
     *
     * <pre>
     ** The modifiers/annotations on this declaration 
     * </pre>
     */
    java.util.List<? extends boa.types.Ast.ModifierOrBuilder> 
        getModifiersOrBuilderList();
    /**
     * <code>repeated .boa.types.Modifier modifiers = 3;</code>
     *
     * <pre>
     ** The modifiers/annotations on this declaration 
     * </pre>
     */
    boa.types.Ast.ModifierOrBuilder getModifiersOrBuilder(
        int index);

    // repeated .boa.types.Type generic_parameters = 4;
    /**
     * <code>repeated .boa.types.Type generic_parameters = 4;</code>
     *
     * <pre>
     ** Any generic parameters to this declaration 
     * </pre>
     */
    java.util.List<boa.types.Ast.Type> 
        getGenericParametersList();
    /**
     * <code>repeated .boa.types.Type generic_parameters = 4;</code>
     *
     * <pre>
     ** Any generic parameters to this declaration 
     * </pre>
     */
    boa.types.Ast.Type getGenericParameters(int index);
    /**
     * <code>repeated .boa.types.Type generic_parameters = 4;</code>
     *
     * <pre>
     ** Any generic parameters to this declaration 
     * </pre>
     */
    int getGenericParametersCount();
    /**
     * <code>repeated .boa.types.Type generic_parameters = 4;</code>
     *
     * <pre>
     ** Any generic parameters to this declaration 
     * </pre>
     */
    java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
        getGenericParametersOrBuilderList();
    /**
     * <code>repeated .boa.types.Type generic_parameters = 4;</code>
     *
     * <pre>
     ** Any generic parameters to this declaration 
     * </pre>
     */
    boa.types.Ast.TypeOrBuilder getGenericParametersOrBuilder(
        int index);

    // repeated .boa.types.Type parents = 5;
    /**
     * <code>repeated .boa.types.Type parents = 5;</code>
     *
     * <pre>
     ** The explicitly named parent type(s) of this declaration 
     * </pre>
     */
    java.util.List<boa.types.Ast.Type> 
        getParentsList();
    /**
     * <code>repeated .boa.types.Type parents = 5;</code>
     *
     * <pre>
     ** The explicitly named parent type(s) of this declaration 
     * </pre>
     */
    boa.types.Ast.Type getParents(int index);
    /**
     * <code>repeated .boa.types.Type parents = 5;</code>
     *
     * <pre>
     ** The explicitly named parent type(s) of this declaration 
     * </pre>
     */
    int getParentsCount();
    /**
     * <code>repeated .boa.types.Type parents = 5;</code>
     *
     * <pre>
     ** The explicitly named parent type(s) of this declaration 
     * </pre>
     */
    java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
        getParentsOrBuilderList();
    /**
     * <code>repeated .boa.types.Type parents = 5;</code>
     *
     * <pre>
     ** The explicitly named parent type(s) of this declaration 
     * </pre>
     */
    boa.types.Ast.TypeOrBuilder getParentsOrBuilder(
        int index);

    // repeated .boa.types.Method methods = 6;
    /**
     * <code>repeated .boa.types.Method methods = 6;</code>
     *
     * <pre>
     ** The methods in the declaration 
     * </pre>
     */
    java.util.List<boa.types.Ast.Method> 
        getMethodsList();
    /**
     * <code>repeated .boa.types.Method methods = 6;</code>
     *
     * <pre>
     ** The methods in the declaration 
     * </pre>
     */
    boa.types.Ast.Method getMethods(int index);
    /**
     * <code>repeated .boa.types.Method methods = 6;</code>
     *
     * <pre>
     ** The methods in the declaration 
     * </pre>
     */
    int getMethodsCount();
    /**
     * <code>repeated .boa.types.Method methods = 6;</code>
     *
     * <pre>
     ** The methods in the declaration 
     * </pre>
     */
    java.util.List<? extends boa.types.Ast.MethodOrBuilder> 
        getMethodsOrBuilderList();
    /**
     * <code>repeated .boa.types.Method methods = 6;</code>
     *
     * <pre>
     ** The methods in the declaration 
     * </pre>
     */
    boa.types.Ast.MethodOrBuilder getMethodsOrBuilder(
        int index);

    // repeated .boa.types.Variable fields = 7;
    /**
     * <code>repeated .boa.types.Variable fields = 7;</code>
     *
     * <pre>
     ** The fields in the declaration 
     * </pre>
     */
    java.util.List<boa.types.Ast.Variable> 
        getFieldsList();
    /**
     * <code>repeated .boa.types.Variable fields = 7;</code>
     *
     * <pre>
     ** The fields in the declaration 
     * </pre>
     */
    boa.types.Ast.Variable getFields(int index);
    /**
     * <code>repeated .boa.types.Variable fields = 7;</code>
     *
     * <pre>
     ** The fields in the declaration 
     * </pre>
     */
    int getFieldsCount();
    /**
     * <code>repeated .boa.types.Variable fields = 7;</code>
     *
     * <pre>
     ** The fields in the declaration 
     * </pre>
     */
    java.util.List<? extends boa.types.Ast.VariableOrBuilder> 
        getFieldsOrBuilderList();
    /**
     * <code>repeated .boa.types.Variable fields = 7;</code>
     *
     * <pre>
     ** The fields in the declaration 
     * </pre>
     */
    boa.types.Ast.VariableOrBuilder getFieldsOrBuilder(
        int index);

    // repeated .boa.types.Declaration nested_declarations = 8;
    /**
     * <code>repeated .boa.types.Declaration nested_declarations = 8;</code>
     *
     * <pre>
     ** Any nested declarations 
     * </pre>
     */
    java.util.List<boa.types.Ast.Declaration> 
        getNestedDeclarationsList();
    /**
     * <code>repeated .boa.types.Declaration nested_declarations = 8;</code>
     *
     * <pre>
     ** Any nested declarations 
     * </pre>
     */
    boa.types.Ast.Declaration getNestedDeclarations(int index);
    /**
     * <code>repeated .boa.types.Declaration nested_declarations = 8;</code>
     *
     * <pre>
     ** Any nested declarations 
     * </pre>
     */
    int getNestedDeclarationsCount();
    /**
     * <code>repeated .boa.types.Declaration nested_declarations = 8;</code>
     *
     * <pre>
     ** Any nested declarations 
     * </pre>
     */
    java.util.List<? extends boa.types.Ast.DeclarationOrBuilder> 
        getNestedDeclarationsOrBuilderList();
    /**
     * <code>repeated .boa.types.Declaration nested_declarations = 8;</code>
     *
     * <pre>
     ** Any nested declarations 
     * </pre>
     */
    boa.types.Ast.DeclarationOrBuilder getNestedDeclarationsOrBuilder(
        int index);

    // optional .boa.types.ChangeKind structural_change_kind = 9;
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 9;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    boolean hasStructuralChangeKind();
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 9;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    boa.types.Shared.ChangeKind getStructuralChangeKind();

    // optional .boa.types.ChangeKind label_change_kind = 10;
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 10;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    boolean hasLabelChangeKind();
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 10;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    boa.types.Shared.ChangeKind getLabelChangeKind();
  }
  /**
   * Protobuf type {@code boa.types.Declaration}
   *
   * <pre>
   ** A type declaration, such as a class or interface 
   * </pre>
   */
  public static final class Declaration extends
      com.google.protobuf.GeneratedMessage
      implements DeclarationOrBuilder {
    // Use Declaration.newBuilder() to construct.
    private Declaration(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Declaration(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Declaration defaultInstance;
    public static Declaration getDefaultInstance() {
      return defaultInstance;
    }

    public Declaration getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Declaration(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              boa.types.Ast.TypeKind value = boa.types.Ast.TypeKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                kind_ = value;
              }
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                modifiers_ = new java.util.ArrayList<boa.types.Ast.Modifier>();
                mutable_bitField0_ |= 0x00000004;
              }
              modifiers_.add(input.readMessage(boa.types.Ast.Modifier.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                genericParameters_ = new java.util.ArrayList<boa.types.Ast.Type>();
                mutable_bitField0_ |= 0x00000008;
              }
              genericParameters_.add(input.readMessage(boa.types.Ast.Type.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                parents_ = new java.util.ArrayList<boa.types.Ast.Type>();
                mutable_bitField0_ |= 0x00000010;
              }
              parents_.add(input.readMessage(boa.types.Ast.Type.PARSER, extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                methods_ = new java.util.ArrayList<boa.types.Ast.Method>();
                mutable_bitField0_ |= 0x00000020;
              }
              methods_.add(input.readMessage(boa.types.Ast.Method.PARSER, extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                fields_ = new java.util.ArrayList<boa.types.Ast.Variable>();
                mutable_bitField0_ |= 0x00000040;
              }
              fields_.add(input.readMessage(boa.types.Ast.Variable.PARSER, extensionRegistry));
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                nestedDeclarations_ = new java.util.ArrayList<boa.types.Ast.Declaration>();
                mutable_bitField0_ |= 0x00000080;
              }
              nestedDeclarations_.add(input.readMessage(boa.types.Ast.Declaration.PARSER, extensionRegistry));
              break;
            }
            case 72: {
              int rawValue = input.readEnum();
              boa.types.Shared.ChangeKind value = boa.types.Shared.ChangeKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(9, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                structuralChangeKind_ = value;
              }
              break;
            }
            case 80: {
              int rawValue = input.readEnum();
              boa.types.Shared.ChangeKind value = boa.types.Shared.ChangeKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(10, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                labelChangeKind_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          modifiers_ = java.util.Collections.unmodifiableList(modifiers_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          genericParameters_ = java.util.Collections.unmodifiableList(genericParameters_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          parents_ = java.util.Collections.unmodifiableList(parents_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          methods_ = java.util.Collections.unmodifiableList(methods_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          fields_ = java.util.Collections.unmodifiableList(fields_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          nestedDeclarations_ = java.util.Collections.unmodifiableList(nestedDeclarations_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return boa.types.Ast.internal_static_boa_types_Declaration_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return boa.types.Ast.internal_static_boa_types_Declaration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              boa.types.Ast.Declaration.class, boa.types.Ast.Declaration.Builder.class);
    }

    public static com.google.protobuf.Parser<Declaration> PARSER =
        new com.google.protobuf.AbstractParser<Declaration>() {
      public Declaration parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Declaration(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Declaration> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     ** The name of this declaration 
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     ** The name of this declaration 
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     ** The name of this declaration 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .boa.types.TypeKind kind = 2;
    public static final int KIND_FIELD_NUMBER = 2;
    private boa.types.Ast.TypeKind kind_;
    /**
     * <code>required .boa.types.TypeKind kind = 2;</code>
     *
     * <pre>
     ** The kind of this declaration 
     * </pre>
     */
    public boolean hasKind() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .boa.types.TypeKind kind = 2;</code>
     *
     * <pre>
     ** The kind of this declaration 
     * </pre>
     */
    public boa.types.Ast.TypeKind getKind() {
      return kind_;
    }

    // repeated .boa.types.Modifier modifiers = 3;
    public static final int MODIFIERS_FIELD_NUMBER = 3;
    private java.util.List<boa.types.Ast.Modifier> modifiers_;
    /**
     * <code>repeated .boa.types.Modifier modifiers = 3;</code>
     *
     * <pre>
     ** The modifiers/annotations on this declaration 
     * </pre>
     */
    public java.util.List<boa.types.Ast.Modifier> getModifiersList() {
      return modifiers_;
    }
    /**
     * <code>repeated .boa.types.Modifier modifiers = 3;</code>
     *
     * <pre>
     ** The modifiers/annotations on this declaration 
     * </pre>
     */
    public java.util.List<? extends boa.types.Ast.ModifierOrBuilder> 
        getModifiersOrBuilderList() {
      return modifiers_;
    }
    /**
     * <code>repeated .boa.types.Modifier modifiers = 3;</code>
     *
     * <pre>
     ** The modifiers/annotations on this declaration 
     * </pre>
     */
    public int getModifiersCount() {
      return modifiers_.size();
    }
    /**
     * <code>repeated .boa.types.Modifier modifiers = 3;</code>
     *
     * <pre>
     ** The modifiers/annotations on this declaration 
     * </pre>
     */
    public boa.types.Ast.Modifier getModifiers(int index) {
      return modifiers_.get(index);
    }
    /**
     * <code>repeated .boa.types.Modifier modifiers = 3;</code>
     *
     * <pre>
     ** The modifiers/annotations on this declaration 
     * </pre>
     */
    public boa.types.Ast.ModifierOrBuilder getModifiersOrBuilder(
        int index) {
      return modifiers_.get(index);
    }

    // repeated .boa.types.Type generic_parameters = 4;
    public static final int GENERIC_PARAMETERS_FIELD_NUMBER = 4;
    private java.util.List<boa.types.Ast.Type> genericParameters_;
    /**
     * <code>repeated .boa.types.Type generic_parameters = 4;</code>
     *
     * <pre>
     ** Any generic parameters to this declaration 
     * </pre>
     */
    public java.util.List<boa.types.Ast.Type> getGenericParametersList() {
      return genericParameters_;
    }
    /**
     * <code>repeated .boa.types.Type generic_parameters = 4;</code>
     *
     * <pre>
     ** Any generic parameters to this declaration 
     * </pre>
     */
    public java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
        getGenericParametersOrBuilderList() {
      return genericParameters_;
    }
    /**
     * <code>repeated .boa.types.Type generic_parameters = 4;</code>
     *
     * <pre>
     ** Any generic parameters to this declaration 
     * </pre>
     */
    public int getGenericParametersCount() {
      return genericParameters_.size();
    }
    /**
     * <code>repeated .boa.types.Type generic_parameters = 4;</code>
     *
     * <pre>
     ** Any generic parameters to this declaration 
     * </pre>
     */
    public boa.types.Ast.Type getGenericParameters(int index) {
      return genericParameters_.get(index);
    }
    /**
     * <code>repeated .boa.types.Type generic_parameters = 4;</code>
     *
     * <pre>
     ** Any generic parameters to this declaration 
     * </pre>
     */
    public boa.types.Ast.TypeOrBuilder getGenericParametersOrBuilder(
        int index) {
      return genericParameters_.get(index);
    }

    // repeated .boa.types.Type parents = 5;
    public static final int PARENTS_FIELD_NUMBER = 5;
    private java.util.List<boa.types.Ast.Type> parents_;
    /**
     * <code>repeated .boa.types.Type parents = 5;</code>
     *
     * <pre>
     ** The explicitly named parent type(s) of this declaration 
     * </pre>
     */
    public java.util.List<boa.types.Ast.Type> getParentsList() {
      return parents_;
    }
    /**
     * <code>repeated .boa.types.Type parents = 5;</code>
     *
     * <pre>
     ** The explicitly named parent type(s) of this declaration 
     * </pre>
     */
    public java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
        getParentsOrBuilderList() {
      return parents_;
    }
    /**
     * <code>repeated .boa.types.Type parents = 5;</code>
     *
     * <pre>
     ** The explicitly named parent type(s) of this declaration 
     * </pre>
     */
    public int getParentsCount() {
      return parents_.size();
    }
    /**
     * <code>repeated .boa.types.Type parents = 5;</code>
     *
     * <pre>
     ** The explicitly named parent type(s) of this declaration 
     * </pre>
     */
    public boa.types.Ast.Type getParents(int index) {
      return parents_.get(index);
    }
    /**
     * <code>repeated .boa.types.Type parents = 5;</code>
     *
     * <pre>
     ** The explicitly named parent type(s) of this declaration 
     * </pre>
     */
    public boa.types.Ast.TypeOrBuilder getParentsOrBuilder(
        int index) {
      return parents_.get(index);
    }

    // repeated .boa.types.Method methods = 6;
    public static final int METHODS_FIELD_NUMBER = 6;
    private java.util.List<boa.types.Ast.Method> methods_;
    /**
     * <code>repeated .boa.types.Method methods = 6;</code>
     *
     * <pre>
     ** The methods in the declaration 
     * </pre>
     */
    public java.util.List<boa.types.Ast.Method> getMethodsList() {
      return methods_;
    }
    /**
     * <code>repeated .boa.types.Method methods = 6;</code>
     *
     * <pre>
     ** The methods in the declaration 
     * </pre>
     */
    public java.util.List<? extends boa.types.Ast.MethodOrBuilder> 
        getMethodsOrBuilderList() {
      return methods_;
    }
    /**
     * <code>repeated .boa.types.Method methods = 6;</code>
     *
     * <pre>
     ** The methods in the declaration 
     * </pre>
     */
    public int getMethodsCount() {
      return methods_.size();
    }
    /**
     * <code>repeated .boa.types.Method methods = 6;</code>
     *
     * <pre>
     ** The methods in the declaration 
     * </pre>
     */
    public boa.types.Ast.Method getMethods(int index) {
      return methods_.get(index);
    }
    /**
     * <code>repeated .boa.types.Method methods = 6;</code>
     *
     * <pre>
     ** The methods in the declaration 
     * </pre>
     */
    public boa.types.Ast.MethodOrBuilder getMethodsOrBuilder(
        int index) {
      return methods_.get(index);
    }

    // repeated .boa.types.Variable fields = 7;
    public static final int FIELDS_FIELD_NUMBER = 7;
    private java.util.List<boa.types.Ast.Variable> fields_;
    /**
     * <code>repeated .boa.types.Variable fields = 7;</code>
     *
     * <pre>
     ** The fields in the declaration 
     * </pre>
     */
    public java.util.List<boa.types.Ast.Variable> getFieldsList() {
      return fields_;
    }
    /**
     * <code>repeated .boa.types.Variable fields = 7;</code>
     *
     * <pre>
     ** The fields in the declaration 
     * </pre>
     */
    public java.util.List<? extends boa.types.Ast.VariableOrBuilder> 
        getFieldsOrBuilderList() {
      return fields_;
    }
    /**
     * <code>repeated .boa.types.Variable fields = 7;</code>
     *
     * <pre>
     ** The fields in the declaration 
     * </pre>
     */
    public int getFieldsCount() {
      return fields_.size();
    }
    /**
     * <code>repeated .boa.types.Variable fields = 7;</code>
     *
     * <pre>
     ** The fields in the declaration 
     * </pre>
     */
    public boa.types.Ast.Variable getFields(int index) {
      return fields_.get(index);
    }
    /**
     * <code>repeated .boa.types.Variable fields = 7;</code>
     *
     * <pre>
     ** The fields in the declaration 
     * </pre>
     */
    public boa.types.Ast.VariableOrBuilder getFieldsOrBuilder(
        int index) {
      return fields_.get(index);
    }

    // repeated .boa.types.Declaration nested_declarations = 8;
    public static final int NESTED_DECLARATIONS_FIELD_NUMBER = 8;
    private java.util.List<boa.types.Ast.Declaration> nestedDeclarations_;
    /**
     * <code>repeated .boa.types.Declaration nested_declarations = 8;</code>
     *
     * <pre>
     ** Any nested declarations 
     * </pre>
     */
    public java.util.List<boa.types.Ast.Declaration> getNestedDeclarationsList() {
      return nestedDeclarations_;
    }
    /**
     * <code>repeated .boa.types.Declaration nested_declarations = 8;</code>
     *
     * <pre>
     ** Any nested declarations 
     * </pre>
     */
    public java.util.List<? extends boa.types.Ast.DeclarationOrBuilder> 
        getNestedDeclarationsOrBuilderList() {
      return nestedDeclarations_;
    }
    /**
     * <code>repeated .boa.types.Declaration nested_declarations = 8;</code>
     *
     * <pre>
     ** Any nested declarations 
     * </pre>
     */
    public int getNestedDeclarationsCount() {
      return nestedDeclarations_.size();
    }
    /**
     * <code>repeated .boa.types.Declaration nested_declarations = 8;</code>
     *
     * <pre>
     ** Any nested declarations 
     * </pre>
     */
    public boa.types.Ast.Declaration getNestedDeclarations(int index) {
      return nestedDeclarations_.get(index);
    }
    /**
     * <code>repeated .boa.types.Declaration nested_declarations = 8;</code>
     *
     * <pre>
     ** Any nested declarations 
     * </pre>
     */
    public boa.types.Ast.DeclarationOrBuilder getNestedDeclarationsOrBuilder(
        int index) {
      return nestedDeclarations_.get(index);
    }

    // optional .boa.types.ChangeKind structural_change_kind = 9;
    public static final int STRUCTURAL_CHANGE_KIND_FIELD_NUMBER = 9;
    private boa.types.Shared.ChangeKind structuralChangeKind_;
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 9;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    public boolean hasStructuralChangeKind() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 9;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    public boa.types.Shared.ChangeKind getStructuralChangeKind() {
      return structuralChangeKind_;
    }

    // optional .boa.types.ChangeKind label_change_kind = 10;
    public static final int LABEL_CHANGE_KIND_FIELD_NUMBER = 10;
    private boa.types.Shared.ChangeKind labelChangeKind_;
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 10;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    public boolean hasLabelChangeKind() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 10;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    public boa.types.Shared.ChangeKind getLabelChangeKind() {
      return labelChangeKind_;
    }

    private void initFields() {
      name_ = "";
      kind_ = boa.types.Ast.TypeKind.OTHER;
      modifiers_ = java.util.Collections.emptyList();
      genericParameters_ = java.util.Collections.emptyList();
      parents_ = java.util.Collections.emptyList();
      methods_ = java.util.Collections.emptyList();
      fields_ = java.util.Collections.emptyList();
      nestedDeclarations_ = java.util.Collections.emptyList();
      structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
      labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasKind()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getModifiersCount(); i++) {
        if (!getModifiers(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getGenericParametersCount(); i++) {
        if (!getGenericParameters(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getParentsCount(); i++) {
        if (!getParents(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getMethodsCount(); i++) {
        if (!getMethods(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getFieldsCount(); i++) {
        if (!getFields(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getNestedDeclarationsCount(); i++) {
        if (!getNestedDeclarations(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, kind_.getNumber());
      }
      for (int i = 0; i < modifiers_.size(); i++) {
        output.writeMessage(3, modifiers_.get(i));
      }
      for (int i = 0; i < genericParameters_.size(); i++) {
        output.writeMessage(4, genericParameters_.get(i));
      }
      for (int i = 0; i < parents_.size(); i++) {
        output.writeMessage(5, parents_.get(i));
      }
      for (int i = 0; i < methods_.size(); i++) {
        output.writeMessage(6, methods_.get(i));
      }
      for (int i = 0; i < fields_.size(); i++) {
        output.writeMessage(7, fields_.get(i));
      }
      for (int i = 0; i < nestedDeclarations_.size(); i++) {
        output.writeMessage(8, nestedDeclarations_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(9, structuralChangeKind_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(10, labelChangeKind_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, kind_.getNumber());
      }
      for (int i = 0; i < modifiers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, modifiers_.get(i));
      }
      for (int i = 0; i < genericParameters_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, genericParameters_.get(i));
      }
      for (int i = 0; i < parents_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, parents_.get(i));
      }
      for (int i = 0; i < methods_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, methods_.get(i));
      }
      for (int i = 0; i < fields_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, fields_.get(i));
      }
      for (int i = 0; i < nestedDeclarations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, nestedDeclarations_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, structuralChangeKind_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, labelChangeKind_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static boa.types.Ast.Declaration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static boa.types.Ast.Declaration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static boa.types.Ast.Declaration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static boa.types.Ast.Declaration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static boa.types.Ast.Declaration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static boa.types.Ast.Declaration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static boa.types.Ast.Declaration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static boa.types.Ast.Declaration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static boa.types.Ast.Declaration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static boa.types.Ast.Declaration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(boa.types.Ast.Declaration prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code boa.types.Declaration}
     *
     * <pre>
     ** A type declaration, such as a class or interface 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements boa.types.Ast.DeclarationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Declaration_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Declaration_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Declaration.class, boa.types.Ast.Declaration.Builder.class);
      }

      // Construct using boa.types.Ast.Declaration.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getModifiersFieldBuilder();
          getGenericParametersFieldBuilder();
          getParentsFieldBuilder();
          getMethodsFieldBuilder();
          getFieldsFieldBuilder();
          getNestedDeclarationsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        kind_ = boa.types.Ast.TypeKind.OTHER;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (modifiersBuilder_ == null) {
          modifiers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          modifiersBuilder_.clear();
        }
        if (genericParametersBuilder_ == null) {
          genericParameters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          genericParametersBuilder_.clear();
        }
        if (parentsBuilder_ == null) {
          parents_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          parentsBuilder_.clear();
        }
        if (methodsBuilder_ == null) {
          methods_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          methodsBuilder_.clear();
        }
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          fieldsBuilder_.clear();
        }
        if (nestedDeclarationsBuilder_ == null) {
          nestedDeclarations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          nestedDeclarationsBuilder_.clear();
        }
        structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        bitField0_ = (bitField0_ & ~0x00000100);
        labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return boa.types.Ast.internal_static_boa_types_Declaration_descriptor;
      }

      public boa.types.Ast.Declaration getDefaultInstanceForType() {
        return boa.types.Ast.Declaration.getDefaultInstance();
      }

      public boa.types.Ast.Declaration build() {
        boa.types.Ast.Declaration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public boa.types.Ast.Declaration buildPartial() {
        boa.types.Ast.Declaration result = new boa.types.Ast.Declaration(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.kind_ = kind_;
        if (modifiersBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            modifiers_ = java.util.Collections.unmodifiableList(modifiers_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.modifiers_ = modifiers_;
        } else {
          result.modifiers_ = modifiersBuilder_.build();
        }
        if (genericParametersBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            genericParameters_ = java.util.Collections.unmodifiableList(genericParameters_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.genericParameters_ = genericParameters_;
        } else {
          result.genericParameters_ = genericParametersBuilder_.build();
        }
        if (parentsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            parents_ = java.util.Collections.unmodifiableList(parents_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.parents_ = parents_;
        } else {
          result.parents_ = parentsBuilder_.build();
        }
        if (methodsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            methods_ = java.util.Collections.unmodifiableList(methods_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.methods_ = methods_;
        } else {
          result.methods_ = methodsBuilder_.build();
        }
        if (fieldsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            fields_ = java.util.Collections.unmodifiableList(fields_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.fields_ = fields_;
        } else {
          result.fields_ = fieldsBuilder_.build();
        }
        if (nestedDeclarationsBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            nestedDeclarations_ = java.util.Collections.unmodifiableList(nestedDeclarations_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.nestedDeclarations_ = nestedDeclarations_;
        } else {
          result.nestedDeclarations_ = nestedDeclarationsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000004;
        }
        result.structuralChangeKind_ = structuralChangeKind_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000008;
        }
        result.labelChangeKind_ = labelChangeKind_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof boa.types.Ast.Declaration) {
          return mergeFrom((boa.types.Ast.Declaration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(boa.types.Ast.Declaration other) {
        if (other == boa.types.Ast.Declaration.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasKind()) {
          setKind(other.getKind());
        }
        if (modifiersBuilder_ == null) {
          if (!other.modifiers_.isEmpty()) {
            if (modifiers_.isEmpty()) {
              modifiers_ = other.modifiers_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureModifiersIsMutable();
              modifiers_.addAll(other.modifiers_);
            }
            onChanged();
          }
        } else {
          if (!other.modifiers_.isEmpty()) {
            if (modifiersBuilder_.isEmpty()) {
              modifiersBuilder_.dispose();
              modifiersBuilder_ = null;
              modifiers_ = other.modifiers_;
              bitField0_ = (bitField0_ & ~0x00000004);
              modifiersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getModifiersFieldBuilder() : null;
            } else {
              modifiersBuilder_.addAllMessages(other.modifiers_);
            }
          }
        }
        if (genericParametersBuilder_ == null) {
          if (!other.genericParameters_.isEmpty()) {
            if (genericParameters_.isEmpty()) {
              genericParameters_ = other.genericParameters_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureGenericParametersIsMutable();
              genericParameters_.addAll(other.genericParameters_);
            }
            onChanged();
          }
        } else {
          if (!other.genericParameters_.isEmpty()) {
            if (genericParametersBuilder_.isEmpty()) {
              genericParametersBuilder_.dispose();
              genericParametersBuilder_ = null;
              genericParameters_ = other.genericParameters_;
              bitField0_ = (bitField0_ & ~0x00000008);
              genericParametersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGenericParametersFieldBuilder() : null;
            } else {
              genericParametersBuilder_.addAllMessages(other.genericParameters_);
            }
          }
        }
        if (parentsBuilder_ == null) {
          if (!other.parents_.isEmpty()) {
            if (parents_.isEmpty()) {
              parents_ = other.parents_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureParentsIsMutable();
              parents_.addAll(other.parents_);
            }
            onChanged();
          }
        } else {
          if (!other.parents_.isEmpty()) {
            if (parentsBuilder_.isEmpty()) {
              parentsBuilder_.dispose();
              parentsBuilder_ = null;
              parents_ = other.parents_;
              bitField0_ = (bitField0_ & ~0x00000010);
              parentsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getParentsFieldBuilder() : null;
            } else {
              parentsBuilder_.addAllMessages(other.parents_);
            }
          }
        }
        if (methodsBuilder_ == null) {
          if (!other.methods_.isEmpty()) {
            if (methods_.isEmpty()) {
              methods_ = other.methods_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureMethodsIsMutable();
              methods_.addAll(other.methods_);
            }
            onChanged();
          }
        } else {
          if (!other.methods_.isEmpty()) {
            if (methodsBuilder_.isEmpty()) {
              methodsBuilder_.dispose();
              methodsBuilder_ = null;
              methods_ = other.methods_;
              bitField0_ = (bitField0_ & ~0x00000020);
              methodsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMethodsFieldBuilder() : null;
            } else {
              methodsBuilder_.addAllMessages(other.methods_);
            }
          }
        }
        if (fieldsBuilder_ == null) {
          if (!other.fields_.isEmpty()) {
            if (fields_.isEmpty()) {
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureFieldsIsMutable();
              fields_.addAll(other.fields_);
            }
            onChanged();
          }
        } else {
          if (!other.fields_.isEmpty()) {
            if (fieldsBuilder_.isEmpty()) {
              fieldsBuilder_.dispose();
              fieldsBuilder_ = null;
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000040);
              fieldsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFieldsFieldBuilder() : null;
            } else {
              fieldsBuilder_.addAllMessages(other.fields_);
            }
          }
        }
        if (nestedDeclarationsBuilder_ == null) {
          if (!other.nestedDeclarations_.isEmpty()) {
            if (nestedDeclarations_.isEmpty()) {
              nestedDeclarations_ = other.nestedDeclarations_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureNestedDeclarationsIsMutable();
              nestedDeclarations_.addAll(other.nestedDeclarations_);
            }
            onChanged();
          }
        } else {
          if (!other.nestedDeclarations_.isEmpty()) {
            if (nestedDeclarationsBuilder_.isEmpty()) {
              nestedDeclarationsBuilder_.dispose();
              nestedDeclarationsBuilder_ = null;
              nestedDeclarations_ = other.nestedDeclarations_;
              bitField0_ = (bitField0_ & ~0x00000080);
              nestedDeclarationsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getNestedDeclarationsFieldBuilder() : null;
            } else {
              nestedDeclarationsBuilder_.addAllMessages(other.nestedDeclarations_);
            }
          }
        }
        if (other.hasStructuralChangeKind()) {
          setStructuralChangeKind(other.getStructuralChangeKind());
        }
        if (other.hasLabelChangeKind()) {
          setLabelChangeKind(other.getLabelChangeKind());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasKind()) {
          
          return false;
        }
        for (int i = 0; i < getModifiersCount(); i++) {
          if (!getModifiers(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getGenericParametersCount(); i++) {
          if (!getGenericParameters(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getParentsCount(); i++) {
          if (!getParents(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getMethodsCount(); i++) {
          if (!getMethods(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getFieldsCount(); i++) {
          if (!getFields(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getNestedDeclarationsCount(); i++) {
          if (!getNestedDeclarations(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        boa.types.Ast.Declaration parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (boa.types.Ast.Declaration) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string name = 1;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       ** The name of this declaration 
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       ** The name of this declaration 
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       ** The name of this declaration 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       ** The name of this declaration 
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       ** The name of this declaration 
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       ** The name of this declaration 
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      // required .boa.types.TypeKind kind = 2;
      private boa.types.Ast.TypeKind kind_ = boa.types.Ast.TypeKind.OTHER;
      /**
       * <code>required .boa.types.TypeKind kind = 2;</code>
       *
       * <pre>
       ** The kind of this declaration 
       * </pre>
       */
      public boolean hasKind() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .boa.types.TypeKind kind = 2;</code>
       *
       * <pre>
       ** The kind of this declaration 
       * </pre>
       */
      public boa.types.Ast.TypeKind getKind() {
        return kind_;
      }
      /**
       * <code>required .boa.types.TypeKind kind = 2;</code>
       *
       * <pre>
       ** The kind of this declaration 
       * </pre>
       */
      public Builder setKind(boa.types.Ast.TypeKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        kind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .boa.types.TypeKind kind = 2;</code>
       *
       * <pre>
       ** The kind of this declaration 
       * </pre>
       */
      public Builder clearKind() {
        bitField0_ = (bitField0_ & ~0x00000002);
        kind_ = boa.types.Ast.TypeKind.OTHER;
        onChanged();
        return this;
      }

      // repeated .boa.types.Modifier modifiers = 3;
      private java.util.List<boa.types.Ast.Modifier> modifiers_ =
        java.util.Collections.emptyList();
      private void ensureModifiersIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          modifiers_ = new java.util.ArrayList<boa.types.Ast.Modifier>(modifiers_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Modifier, boa.types.Ast.Modifier.Builder, boa.types.Ast.ModifierOrBuilder> modifiersBuilder_;

      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** The modifiers/annotations on this declaration 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Modifier> getModifiersList() {
        if (modifiersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(modifiers_);
        } else {
          return modifiersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** The modifiers/annotations on this declaration 
       * </pre>
       */
      public int getModifiersCount() {
        if (modifiersBuilder_ == null) {
          return modifiers_.size();
        } else {
          return modifiersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** The modifiers/annotations on this declaration 
       * </pre>
       */
      public boa.types.Ast.Modifier getModifiers(int index) {
        if (modifiersBuilder_ == null) {
          return modifiers_.get(index);
        } else {
          return modifiersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** The modifiers/annotations on this declaration 
       * </pre>
       */
      public Builder setModifiers(
          int index, boa.types.Ast.Modifier value) {
        if (modifiersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModifiersIsMutable();
          modifiers_.set(index, value);
          onChanged();
        } else {
          modifiersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** The modifiers/annotations on this declaration 
       * </pre>
       */
      public Builder setModifiers(
          int index, boa.types.Ast.Modifier.Builder builderForValue) {
        if (modifiersBuilder_ == null) {
          ensureModifiersIsMutable();
          modifiers_.set(index, builderForValue.build());
          onChanged();
        } else {
          modifiersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** The modifiers/annotations on this declaration 
       * </pre>
       */
      public Builder addModifiers(boa.types.Ast.Modifier value) {
        if (modifiersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModifiersIsMutable();
          modifiers_.add(value);
          onChanged();
        } else {
          modifiersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** The modifiers/annotations on this declaration 
       * </pre>
       */
      public Builder addModifiers(
          int index, boa.types.Ast.Modifier value) {
        if (modifiersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModifiersIsMutable();
          modifiers_.add(index, value);
          onChanged();
        } else {
          modifiersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** The modifiers/annotations on this declaration 
       * </pre>
       */
      public Builder addModifiers(
          boa.types.Ast.Modifier.Builder builderForValue) {
        if (modifiersBuilder_ == null) {
          ensureModifiersIsMutable();
          modifiers_.add(builderForValue.build());
          onChanged();
        } else {
          modifiersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** The modifiers/annotations on this declaration 
       * </pre>
       */
      public Builder addModifiers(
          int index, boa.types.Ast.Modifier.Builder builderForValue) {
        if (modifiersBuilder_ == null) {
          ensureModifiersIsMutable();
          modifiers_.add(index, builderForValue.build());
          onChanged();
        } else {
          modifiersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** The modifiers/annotations on this declaration 
       * </pre>
       */
      public Builder addAllModifiers(
          java.lang.Iterable<? extends boa.types.Ast.Modifier> values) {
        if (modifiersBuilder_ == null) {
          ensureModifiersIsMutable();
          super.addAll(values, modifiers_);
          onChanged();
        } else {
          modifiersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** The modifiers/annotations on this declaration 
       * </pre>
       */
      public Builder clearModifiers() {
        if (modifiersBuilder_ == null) {
          modifiers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          modifiersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** The modifiers/annotations on this declaration 
       * </pre>
       */
      public Builder removeModifiers(int index) {
        if (modifiersBuilder_ == null) {
          ensureModifiersIsMutable();
          modifiers_.remove(index);
          onChanged();
        } else {
          modifiersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** The modifiers/annotations on this declaration 
       * </pre>
       */
      public boa.types.Ast.Modifier.Builder getModifiersBuilder(
          int index) {
        return getModifiersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** The modifiers/annotations on this declaration 
       * </pre>
       */
      public boa.types.Ast.ModifierOrBuilder getModifiersOrBuilder(
          int index) {
        if (modifiersBuilder_ == null) {
          return modifiers_.get(index);  } else {
          return modifiersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** The modifiers/annotations on this declaration 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.ModifierOrBuilder> 
           getModifiersOrBuilderList() {
        if (modifiersBuilder_ != null) {
          return modifiersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(modifiers_);
        }
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** The modifiers/annotations on this declaration 
       * </pre>
       */
      public boa.types.Ast.Modifier.Builder addModifiersBuilder() {
        return getModifiersFieldBuilder().addBuilder(
            boa.types.Ast.Modifier.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** The modifiers/annotations on this declaration 
       * </pre>
       */
      public boa.types.Ast.Modifier.Builder addModifiersBuilder(
          int index) {
        return getModifiersFieldBuilder().addBuilder(
            index, boa.types.Ast.Modifier.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** The modifiers/annotations on this declaration 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Modifier.Builder> 
           getModifiersBuilderList() {
        return getModifiersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Modifier, boa.types.Ast.Modifier.Builder, boa.types.Ast.ModifierOrBuilder> 
          getModifiersFieldBuilder() {
        if (modifiersBuilder_ == null) {
          modifiersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Modifier, boa.types.Ast.Modifier.Builder, boa.types.Ast.ModifierOrBuilder>(
                  modifiers_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          modifiers_ = null;
        }
        return modifiersBuilder_;
      }

      // repeated .boa.types.Type generic_parameters = 4;
      private java.util.List<boa.types.Ast.Type> genericParameters_ =
        java.util.Collections.emptyList();
      private void ensureGenericParametersIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          genericParameters_ = new java.util.ArrayList<boa.types.Ast.Type>(genericParameters_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> genericParametersBuilder_;

      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** Any generic parameters to this declaration 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Type> getGenericParametersList() {
        if (genericParametersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(genericParameters_);
        } else {
          return genericParametersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** Any generic parameters to this declaration 
       * </pre>
       */
      public int getGenericParametersCount() {
        if (genericParametersBuilder_ == null) {
          return genericParameters_.size();
        } else {
          return genericParametersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** Any generic parameters to this declaration 
       * </pre>
       */
      public boa.types.Ast.Type getGenericParameters(int index) {
        if (genericParametersBuilder_ == null) {
          return genericParameters_.get(index);
        } else {
          return genericParametersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** Any generic parameters to this declaration 
       * </pre>
       */
      public Builder setGenericParameters(
          int index, boa.types.Ast.Type value) {
        if (genericParametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGenericParametersIsMutable();
          genericParameters_.set(index, value);
          onChanged();
        } else {
          genericParametersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** Any generic parameters to this declaration 
       * </pre>
       */
      public Builder setGenericParameters(
          int index, boa.types.Ast.Type.Builder builderForValue) {
        if (genericParametersBuilder_ == null) {
          ensureGenericParametersIsMutable();
          genericParameters_.set(index, builderForValue.build());
          onChanged();
        } else {
          genericParametersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** Any generic parameters to this declaration 
       * </pre>
       */
      public Builder addGenericParameters(boa.types.Ast.Type value) {
        if (genericParametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGenericParametersIsMutable();
          genericParameters_.add(value);
          onChanged();
        } else {
          genericParametersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** Any generic parameters to this declaration 
       * </pre>
       */
      public Builder addGenericParameters(
          int index, boa.types.Ast.Type value) {
        if (genericParametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGenericParametersIsMutable();
          genericParameters_.add(index, value);
          onChanged();
        } else {
          genericParametersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** Any generic parameters to this declaration 
       * </pre>
       */
      public Builder addGenericParameters(
          boa.types.Ast.Type.Builder builderForValue) {
        if (genericParametersBuilder_ == null) {
          ensureGenericParametersIsMutable();
          genericParameters_.add(builderForValue.build());
          onChanged();
        } else {
          genericParametersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** Any generic parameters to this declaration 
       * </pre>
       */
      public Builder addGenericParameters(
          int index, boa.types.Ast.Type.Builder builderForValue) {
        if (genericParametersBuilder_ == null) {
          ensureGenericParametersIsMutable();
          genericParameters_.add(index, builderForValue.build());
          onChanged();
        } else {
          genericParametersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** Any generic parameters to this declaration 
       * </pre>
       */
      public Builder addAllGenericParameters(
          java.lang.Iterable<? extends boa.types.Ast.Type> values) {
        if (genericParametersBuilder_ == null) {
          ensureGenericParametersIsMutable();
          super.addAll(values, genericParameters_);
          onChanged();
        } else {
          genericParametersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** Any generic parameters to this declaration 
       * </pre>
       */
      public Builder clearGenericParameters() {
        if (genericParametersBuilder_ == null) {
          genericParameters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          genericParametersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** Any generic parameters to this declaration 
       * </pre>
       */
      public Builder removeGenericParameters(int index) {
        if (genericParametersBuilder_ == null) {
          ensureGenericParametersIsMutable();
          genericParameters_.remove(index);
          onChanged();
        } else {
          genericParametersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** Any generic parameters to this declaration 
       * </pre>
       */
      public boa.types.Ast.Type.Builder getGenericParametersBuilder(
          int index) {
        return getGenericParametersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** Any generic parameters to this declaration 
       * </pre>
       */
      public boa.types.Ast.TypeOrBuilder getGenericParametersOrBuilder(
          int index) {
        if (genericParametersBuilder_ == null) {
          return genericParameters_.get(index);  } else {
          return genericParametersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** Any generic parameters to this declaration 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
           getGenericParametersOrBuilderList() {
        if (genericParametersBuilder_ != null) {
          return genericParametersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(genericParameters_);
        }
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** Any generic parameters to this declaration 
       * </pre>
       */
      public boa.types.Ast.Type.Builder addGenericParametersBuilder() {
        return getGenericParametersFieldBuilder().addBuilder(
            boa.types.Ast.Type.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** Any generic parameters to this declaration 
       * </pre>
       */
      public boa.types.Ast.Type.Builder addGenericParametersBuilder(
          int index) {
        return getGenericParametersFieldBuilder().addBuilder(
            index, boa.types.Ast.Type.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** Any generic parameters to this declaration 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Type.Builder> 
           getGenericParametersBuilderList() {
        return getGenericParametersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> 
          getGenericParametersFieldBuilder() {
        if (genericParametersBuilder_ == null) {
          genericParametersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder>(
                  genericParameters_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          genericParameters_ = null;
        }
        return genericParametersBuilder_;
      }

      // repeated .boa.types.Type parents = 5;
      private java.util.List<boa.types.Ast.Type> parents_ =
        java.util.Collections.emptyList();
      private void ensureParentsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          parents_ = new java.util.ArrayList<boa.types.Ast.Type>(parents_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> parentsBuilder_;

      /**
       * <code>repeated .boa.types.Type parents = 5;</code>
       *
       * <pre>
       ** The explicitly named parent type(s) of this declaration 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Type> getParentsList() {
        if (parentsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(parents_);
        } else {
          return parentsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .boa.types.Type parents = 5;</code>
       *
       * <pre>
       ** The explicitly named parent type(s) of this declaration 
       * </pre>
       */
      public int getParentsCount() {
        if (parentsBuilder_ == null) {
          return parents_.size();
        } else {
          return parentsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .boa.types.Type parents = 5;</code>
       *
       * <pre>
       ** The explicitly named parent type(s) of this declaration 
       * </pre>
       */
      public boa.types.Ast.Type getParents(int index) {
        if (parentsBuilder_ == null) {
          return parents_.get(index);
        } else {
          return parentsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .boa.types.Type parents = 5;</code>
       *
       * <pre>
       ** The explicitly named parent type(s) of this declaration 
       * </pre>
       */
      public Builder setParents(
          int index, boa.types.Ast.Type value) {
        if (parentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParentsIsMutable();
          parents_.set(index, value);
          onChanged();
        } else {
          parentsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type parents = 5;</code>
       *
       * <pre>
       ** The explicitly named parent type(s) of this declaration 
       * </pre>
       */
      public Builder setParents(
          int index, boa.types.Ast.Type.Builder builderForValue) {
        if (parentsBuilder_ == null) {
          ensureParentsIsMutable();
          parents_.set(index, builderForValue.build());
          onChanged();
        } else {
          parentsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type parents = 5;</code>
       *
       * <pre>
       ** The explicitly named parent type(s) of this declaration 
       * </pre>
       */
      public Builder addParents(boa.types.Ast.Type value) {
        if (parentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParentsIsMutable();
          parents_.add(value);
          onChanged();
        } else {
          parentsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type parents = 5;</code>
       *
       * <pre>
       ** The explicitly named parent type(s) of this declaration 
       * </pre>
       */
      public Builder addParents(
          int index, boa.types.Ast.Type value) {
        if (parentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParentsIsMutable();
          parents_.add(index, value);
          onChanged();
        } else {
          parentsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type parents = 5;</code>
       *
       * <pre>
       ** The explicitly named parent type(s) of this declaration 
       * </pre>
       */
      public Builder addParents(
          boa.types.Ast.Type.Builder builderForValue) {
        if (parentsBuilder_ == null) {
          ensureParentsIsMutable();
          parents_.add(builderForValue.build());
          onChanged();
        } else {
          parentsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type parents = 5;</code>
       *
       * <pre>
       ** The explicitly named parent type(s) of this declaration 
       * </pre>
       */
      public Builder addParents(
          int index, boa.types.Ast.Type.Builder builderForValue) {
        if (parentsBuilder_ == null) {
          ensureParentsIsMutable();
          parents_.add(index, builderForValue.build());
          onChanged();
        } else {
          parentsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type parents = 5;</code>
       *
       * <pre>
       ** The explicitly named parent type(s) of this declaration 
       * </pre>
       */
      public Builder addAllParents(
          java.lang.Iterable<? extends boa.types.Ast.Type> values) {
        if (parentsBuilder_ == null) {
          ensureParentsIsMutable();
          super.addAll(values, parents_);
          onChanged();
        } else {
          parentsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type parents = 5;</code>
       *
       * <pre>
       ** The explicitly named parent type(s) of this declaration 
       * </pre>
       */
      public Builder clearParents() {
        if (parentsBuilder_ == null) {
          parents_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          parentsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type parents = 5;</code>
       *
       * <pre>
       ** The explicitly named parent type(s) of this declaration 
       * </pre>
       */
      public Builder removeParents(int index) {
        if (parentsBuilder_ == null) {
          ensureParentsIsMutable();
          parents_.remove(index);
          onChanged();
        } else {
          parentsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type parents = 5;</code>
       *
       * <pre>
       ** The explicitly named parent type(s) of this declaration 
       * </pre>
       */
      public boa.types.Ast.Type.Builder getParentsBuilder(
          int index) {
        return getParentsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .boa.types.Type parents = 5;</code>
       *
       * <pre>
       ** The explicitly named parent type(s) of this declaration 
       * </pre>
       */
      public boa.types.Ast.TypeOrBuilder getParentsOrBuilder(
          int index) {
        if (parentsBuilder_ == null) {
          return parents_.get(index);  } else {
          return parentsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .boa.types.Type parents = 5;</code>
       *
       * <pre>
       ** The explicitly named parent type(s) of this declaration 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
           getParentsOrBuilderList() {
        if (parentsBuilder_ != null) {
          return parentsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(parents_);
        }
      }
      /**
       * <code>repeated .boa.types.Type parents = 5;</code>
       *
       * <pre>
       ** The explicitly named parent type(s) of this declaration 
       * </pre>
       */
      public boa.types.Ast.Type.Builder addParentsBuilder() {
        return getParentsFieldBuilder().addBuilder(
            boa.types.Ast.Type.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Type parents = 5;</code>
       *
       * <pre>
       ** The explicitly named parent type(s) of this declaration 
       * </pre>
       */
      public boa.types.Ast.Type.Builder addParentsBuilder(
          int index) {
        return getParentsFieldBuilder().addBuilder(
            index, boa.types.Ast.Type.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Type parents = 5;</code>
       *
       * <pre>
       ** The explicitly named parent type(s) of this declaration 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Type.Builder> 
           getParentsBuilderList() {
        return getParentsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> 
          getParentsFieldBuilder() {
        if (parentsBuilder_ == null) {
          parentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder>(
                  parents_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          parents_ = null;
        }
        return parentsBuilder_;
      }

      // repeated .boa.types.Method methods = 6;
      private java.util.List<boa.types.Ast.Method> methods_ =
        java.util.Collections.emptyList();
      private void ensureMethodsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          methods_ = new java.util.ArrayList<boa.types.Ast.Method>(methods_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Method, boa.types.Ast.Method.Builder, boa.types.Ast.MethodOrBuilder> methodsBuilder_;

      /**
       * <code>repeated .boa.types.Method methods = 6;</code>
       *
       * <pre>
       ** The methods in the declaration 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Method> getMethodsList() {
        if (methodsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(methods_);
        } else {
          return methodsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .boa.types.Method methods = 6;</code>
       *
       * <pre>
       ** The methods in the declaration 
       * </pre>
       */
      public int getMethodsCount() {
        if (methodsBuilder_ == null) {
          return methods_.size();
        } else {
          return methodsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .boa.types.Method methods = 6;</code>
       *
       * <pre>
       ** The methods in the declaration 
       * </pre>
       */
      public boa.types.Ast.Method getMethods(int index) {
        if (methodsBuilder_ == null) {
          return methods_.get(index);
        } else {
          return methodsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .boa.types.Method methods = 6;</code>
       *
       * <pre>
       ** The methods in the declaration 
       * </pre>
       */
      public Builder setMethods(
          int index, boa.types.Ast.Method value) {
        if (methodsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMethodsIsMutable();
          methods_.set(index, value);
          onChanged();
        } else {
          methodsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Method methods = 6;</code>
       *
       * <pre>
       ** The methods in the declaration 
       * </pre>
       */
      public Builder setMethods(
          int index, boa.types.Ast.Method.Builder builderForValue) {
        if (methodsBuilder_ == null) {
          ensureMethodsIsMutable();
          methods_.set(index, builderForValue.build());
          onChanged();
        } else {
          methodsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Method methods = 6;</code>
       *
       * <pre>
       ** The methods in the declaration 
       * </pre>
       */
      public Builder addMethods(boa.types.Ast.Method value) {
        if (methodsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMethodsIsMutable();
          methods_.add(value);
          onChanged();
        } else {
          methodsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Method methods = 6;</code>
       *
       * <pre>
       ** The methods in the declaration 
       * </pre>
       */
      public Builder addMethods(
          int index, boa.types.Ast.Method value) {
        if (methodsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMethodsIsMutable();
          methods_.add(index, value);
          onChanged();
        } else {
          methodsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Method methods = 6;</code>
       *
       * <pre>
       ** The methods in the declaration 
       * </pre>
       */
      public Builder addMethods(
          boa.types.Ast.Method.Builder builderForValue) {
        if (methodsBuilder_ == null) {
          ensureMethodsIsMutable();
          methods_.add(builderForValue.build());
          onChanged();
        } else {
          methodsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Method methods = 6;</code>
       *
       * <pre>
       ** The methods in the declaration 
       * </pre>
       */
      public Builder addMethods(
          int index, boa.types.Ast.Method.Builder builderForValue) {
        if (methodsBuilder_ == null) {
          ensureMethodsIsMutable();
          methods_.add(index, builderForValue.build());
          onChanged();
        } else {
          methodsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Method methods = 6;</code>
       *
       * <pre>
       ** The methods in the declaration 
       * </pre>
       */
      public Builder addAllMethods(
          java.lang.Iterable<? extends boa.types.Ast.Method> values) {
        if (methodsBuilder_ == null) {
          ensureMethodsIsMutable();
          super.addAll(values, methods_);
          onChanged();
        } else {
          methodsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Method methods = 6;</code>
       *
       * <pre>
       ** The methods in the declaration 
       * </pre>
       */
      public Builder clearMethods() {
        if (methodsBuilder_ == null) {
          methods_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          methodsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Method methods = 6;</code>
       *
       * <pre>
       ** The methods in the declaration 
       * </pre>
       */
      public Builder removeMethods(int index) {
        if (methodsBuilder_ == null) {
          ensureMethodsIsMutable();
          methods_.remove(index);
          onChanged();
        } else {
          methodsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Method methods = 6;</code>
       *
       * <pre>
       ** The methods in the declaration 
       * </pre>
       */
      public boa.types.Ast.Method.Builder getMethodsBuilder(
          int index) {
        return getMethodsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .boa.types.Method methods = 6;</code>
       *
       * <pre>
       ** The methods in the declaration 
       * </pre>
       */
      public boa.types.Ast.MethodOrBuilder getMethodsOrBuilder(
          int index) {
        if (methodsBuilder_ == null) {
          return methods_.get(index);  } else {
          return methodsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .boa.types.Method methods = 6;</code>
       *
       * <pre>
       ** The methods in the declaration 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.MethodOrBuilder> 
           getMethodsOrBuilderList() {
        if (methodsBuilder_ != null) {
          return methodsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(methods_);
        }
      }
      /**
       * <code>repeated .boa.types.Method methods = 6;</code>
       *
       * <pre>
       ** The methods in the declaration 
       * </pre>
       */
      public boa.types.Ast.Method.Builder addMethodsBuilder() {
        return getMethodsFieldBuilder().addBuilder(
            boa.types.Ast.Method.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Method methods = 6;</code>
       *
       * <pre>
       ** The methods in the declaration 
       * </pre>
       */
      public boa.types.Ast.Method.Builder addMethodsBuilder(
          int index) {
        return getMethodsFieldBuilder().addBuilder(
            index, boa.types.Ast.Method.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Method methods = 6;</code>
       *
       * <pre>
       ** The methods in the declaration 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Method.Builder> 
           getMethodsBuilderList() {
        return getMethodsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Method, boa.types.Ast.Method.Builder, boa.types.Ast.MethodOrBuilder> 
          getMethodsFieldBuilder() {
        if (methodsBuilder_ == null) {
          methodsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Method, boa.types.Ast.Method.Builder, boa.types.Ast.MethodOrBuilder>(
                  methods_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          methods_ = null;
        }
        return methodsBuilder_;
      }

      // repeated .boa.types.Variable fields = 7;
      private java.util.List<boa.types.Ast.Variable> fields_ =
        java.util.Collections.emptyList();
      private void ensureFieldsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          fields_ = new java.util.ArrayList<boa.types.Ast.Variable>(fields_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Variable, boa.types.Ast.Variable.Builder, boa.types.Ast.VariableOrBuilder> fieldsBuilder_;

      /**
       * <code>repeated .boa.types.Variable fields = 7;</code>
       *
       * <pre>
       ** The fields in the declaration 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Variable> getFieldsList() {
        if (fieldsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fields_);
        } else {
          return fieldsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .boa.types.Variable fields = 7;</code>
       *
       * <pre>
       ** The fields in the declaration 
       * </pre>
       */
      public int getFieldsCount() {
        if (fieldsBuilder_ == null) {
          return fields_.size();
        } else {
          return fieldsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .boa.types.Variable fields = 7;</code>
       *
       * <pre>
       ** The fields in the declaration 
       * </pre>
       */
      public boa.types.Ast.Variable getFields(int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);
        } else {
          return fieldsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .boa.types.Variable fields = 7;</code>
       *
       * <pre>
       ** The fields in the declaration 
       * </pre>
       */
      public Builder setFields(
          int index, boa.types.Ast.Variable value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.set(index, value);
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Variable fields = 7;</code>
       *
       * <pre>
       ** The fields in the declaration 
       * </pre>
       */
      public Builder setFields(
          int index, boa.types.Ast.Variable.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Variable fields = 7;</code>
       *
       * <pre>
       ** The fields in the declaration 
       * </pre>
       */
      public Builder addFields(boa.types.Ast.Variable value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Variable fields = 7;</code>
       *
       * <pre>
       ** The fields in the declaration 
       * </pre>
       */
      public Builder addFields(
          int index, boa.types.Ast.Variable value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(index, value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Variable fields = 7;</code>
       *
       * <pre>
       ** The fields in the declaration 
       * </pre>
       */
      public Builder addFields(
          boa.types.Ast.Variable.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Variable fields = 7;</code>
       *
       * <pre>
       ** The fields in the declaration 
       * </pre>
       */
      public Builder addFields(
          int index, boa.types.Ast.Variable.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Variable fields = 7;</code>
       *
       * <pre>
       ** The fields in the declaration 
       * </pre>
       */
      public Builder addAllFields(
          java.lang.Iterable<? extends boa.types.Ast.Variable> values) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          super.addAll(values, fields_);
          onChanged();
        } else {
          fieldsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Variable fields = 7;</code>
       *
       * <pre>
       ** The fields in the declaration 
       * </pre>
       */
      public Builder clearFields() {
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Variable fields = 7;</code>
       *
       * <pre>
       ** The fields in the declaration 
       * </pre>
       */
      public Builder removeFields(int index) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.remove(index);
          onChanged();
        } else {
          fieldsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Variable fields = 7;</code>
       *
       * <pre>
       ** The fields in the declaration 
       * </pre>
       */
      public boa.types.Ast.Variable.Builder getFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .boa.types.Variable fields = 7;</code>
       *
       * <pre>
       ** The fields in the declaration 
       * </pre>
       */
      public boa.types.Ast.VariableOrBuilder getFieldsOrBuilder(
          int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);  } else {
          return fieldsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .boa.types.Variable fields = 7;</code>
       *
       * <pre>
       ** The fields in the declaration 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.VariableOrBuilder> 
           getFieldsOrBuilderList() {
        if (fieldsBuilder_ != null) {
          return fieldsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fields_);
        }
      }
      /**
       * <code>repeated .boa.types.Variable fields = 7;</code>
       *
       * <pre>
       ** The fields in the declaration 
       * </pre>
       */
      public boa.types.Ast.Variable.Builder addFieldsBuilder() {
        return getFieldsFieldBuilder().addBuilder(
            boa.types.Ast.Variable.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Variable fields = 7;</code>
       *
       * <pre>
       ** The fields in the declaration 
       * </pre>
       */
      public boa.types.Ast.Variable.Builder addFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().addBuilder(
            index, boa.types.Ast.Variable.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Variable fields = 7;</code>
       *
       * <pre>
       ** The fields in the declaration 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Variable.Builder> 
           getFieldsBuilderList() {
        return getFieldsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Variable, boa.types.Ast.Variable.Builder, boa.types.Ast.VariableOrBuilder> 
          getFieldsFieldBuilder() {
        if (fieldsBuilder_ == null) {
          fieldsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Variable, boa.types.Ast.Variable.Builder, boa.types.Ast.VariableOrBuilder>(
                  fields_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          fields_ = null;
        }
        return fieldsBuilder_;
      }

      // repeated .boa.types.Declaration nested_declarations = 8;
      private java.util.List<boa.types.Ast.Declaration> nestedDeclarations_ =
        java.util.Collections.emptyList();
      private void ensureNestedDeclarationsIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          nestedDeclarations_ = new java.util.ArrayList<boa.types.Ast.Declaration>(nestedDeclarations_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Declaration, boa.types.Ast.Declaration.Builder, boa.types.Ast.DeclarationOrBuilder> nestedDeclarationsBuilder_;

      /**
       * <code>repeated .boa.types.Declaration nested_declarations = 8;</code>
       *
       * <pre>
       ** Any nested declarations 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Declaration> getNestedDeclarationsList() {
        if (nestedDeclarationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nestedDeclarations_);
        } else {
          return nestedDeclarationsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .boa.types.Declaration nested_declarations = 8;</code>
       *
       * <pre>
       ** Any nested declarations 
       * </pre>
       */
      public int getNestedDeclarationsCount() {
        if (nestedDeclarationsBuilder_ == null) {
          return nestedDeclarations_.size();
        } else {
          return nestedDeclarationsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .boa.types.Declaration nested_declarations = 8;</code>
       *
       * <pre>
       ** Any nested declarations 
       * </pre>
       */
      public boa.types.Ast.Declaration getNestedDeclarations(int index) {
        if (nestedDeclarationsBuilder_ == null) {
          return nestedDeclarations_.get(index);
        } else {
          return nestedDeclarationsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .boa.types.Declaration nested_declarations = 8;</code>
       *
       * <pre>
       ** Any nested declarations 
       * </pre>
       */
      public Builder setNestedDeclarations(
          int index, boa.types.Ast.Declaration value) {
        if (nestedDeclarationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNestedDeclarationsIsMutable();
          nestedDeclarations_.set(index, value);
          onChanged();
        } else {
          nestedDeclarationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Declaration nested_declarations = 8;</code>
       *
       * <pre>
       ** Any nested declarations 
       * </pre>
       */
      public Builder setNestedDeclarations(
          int index, boa.types.Ast.Declaration.Builder builderForValue) {
        if (nestedDeclarationsBuilder_ == null) {
          ensureNestedDeclarationsIsMutable();
          nestedDeclarations_.set(index, builderForValue.build());
          onChanged();
        } else {
          nestedDeclarationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Declaration nested_declarations = 8;</code>
       *
       * <pre>
       ** Any nested declarations 
       * </pre>
       */
      public Builder addNestedDeclarations(boa.types.Ast.Declaration value) {
        if (nestedDeclarationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNestedDeclarationsIsMutable();
          nestedDeclarations_.add(value);
          onChanged();
        } else {
          nestedDeclarationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Declaration nested_declarations = 8;</code>
       *
       * <pre>
       ** Any nested declarations 
       * </pre>
       */
      public Builder addNestedDeclarations(
          int index, boa.types.Ast.Declaration value) {
        if (nestedDeclarationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNestedDeclarationsIsMutable();
          nestedDeclarations_.add(index, value);
          onChanged();
        } else {
          nestedDeclarationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Declaration nested_declarations = 8;</code>
       *
       * <pre>
       ** Any nested declarations 
       * </pre>
       */
      public Builder addNestedDeclarations(
          boa.types.Ast.Declaration.Builder builderForValue) {
        if (nestedDeclarationsBuilder_ == null) {
          ensureNestedDeclarationsIsMutable();
          nestedDeclarations_.add(builderForValue.build());
          onChanged();
        } else {
          nestedDeclarationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Declaration nested_declarations = 8;</code>
       *
       * <pre>
       ** Any nested declarations 
       * </pre>
       */
      public Builder addNestedDeclarations(
          int index, boa.types.Ast.Declaration.Builder builderForValue) {
        if (nestedDeclarationsBuilder_ == null) {
          ensureNestedDeclarationsIsMutable();
          nestedDeclarations_.add(index, builderForValue.build());
          onChanged();
        } else {
          nestedDeclarationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Declaration nested_declarations = 8;</code>
       *
       * <pre>
       ** Any nested declarations 
       * </pre>
       */
      public Builder addAllNestedDeclarations(
          java.lang.Iterable<? extends boa.types.Ast.Declaration> values) {
        if (nestedDeclarationsBuilder_ == null) {
          ensureNestedDeclarationsIsMutable();
          super.addAll(values, nestedDeclarations_);
          onChanged();
        } else {
          nestedDeclarationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Declaration nested_declarations = 8;</code>
       *
       * <pre>
       ** Any nested declarations 
       * </pre>
       */
      public Builder clearNestedDeclarations() {
        if (nestedDeclarationsBuilder_ == null) {
          nestedDeclarations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          nestedDeclarationsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Declaration nested_declarations = 8;</code>
       *
       * <pre>
       ** Any nested declarations 
       * </pre>
       */
      public Builder removeNestedDeclarations(int index) {
        if (nestedDeclarationsBuilder_ == null) {
          ensureNestedDeclarationsIsMutable();
          nestedDeclarations_.remove(index);
          onChanged();
        } else {
          nestedDeclarationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Declaration nested_declarations = 8;</code>
       *
       * <pre>
       ** Any nested declarations 
       * </pre>
       */
      public boa.types.Ast.Declaration.Builder getNestedDeclarationsBuilder(
          int index) {
        return getNestedDeclarationsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .boa.types.Declaration nested_declarations = 8;</code>
       *
       * <pre>
       ** Any nested declarations 
       * </pre>
       */
      public boa.types.Ast.DeclarationOrBuilder getNestedDeclarationsOrBuilder(
          int index) {
        if (nestedDeclarationsBuilder_ == null) {
          return nestedDeclarations_.get(index);  } else {
          return nestedDeclarationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .boa.types.Declaration nested_declarations = 8;</code>
       *
       * <pre>
       ** Any nested declarations 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.DeclarationOrBuilder> 
           getNestedDeclarationsOrBuilderList() {
        if (nestedDeclarationsBuilder_ != null) {
          return nestedDeclarationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nestedDeclarations_);
        }
      }
      /**
       * <code>repeated .boa.types.Declaration nested_declarations = 8;</code>
       *
       * <pre>
       ** Any nested declarations 
       * </pre>
       */
      public boa.types.Ast.Declaration.Builder addNestedDeclarationsBuilder() {
        return getNestedDeclarationsFieldBuilder().addBuilder(
            boa.types.Ast.Declaration.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Declaration nested_declarations = 8;</code>
       *
       * <pre>
       ** Any nested declarations 
       * </pre>
       */
      public boa.types.Ast.Declaration.Builder addNestedDeclarationsBuilder(
          int index) {
        return getNestedDeclarationsFieldBuilder().addBuilder(
            index, boa.types.Ast.Declaration.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Declaration nested_declarations = 8;</code>
       *
       * <pre>
       ** Any nested declarations 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Declaration.Builder> 
           getNestedDeclarationsBuilderList() {
        return getNestedDeclarationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Declaration, boa.types.Ast.Declaration.Builder, boa.types.Ast.DeclarationOrBuilder> 
          getNestedDeclarationsFieldBuilder() {
        if (nestedDeclarationsBuilder_ == null) {
          nestedDeclarationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Declaration, boa.types.Ast.Declaration.Builder, boa.types.Ast.DeclarationOrBuilder>(
                  nestedDeclarations_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          nestedDeclarations_ = null;
        }
        return nestedDeclarationsBuilder_;
      }

      // optional .boa.types.ChangeKind structural_change_kind = 9;
      private boa.types.Shared.ChangeKind structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 9;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public boolean hasStructuralChangeKind() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 9;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public boa.types.Shared.ChangeKind getStructuralChangeKind() {
        return structuralChangeKind_;
      }
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 9;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public Builder setStructuralChangeKind(boa.types.Shared.ChangeKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        structuralChangeKind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 9;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public Builder clearStructuralChangeKind() {
        bitField0_ = (bitField0_ & ~0x00000100);
        structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        onChanged();
        return this;
      }

      // optional .boa.types.ChangeKind label_change_kind = 10;
      private boa.types.Shared.ChangeKind labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 10;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public boolean hasLabelChangeKind() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 10;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public boa.types.Shared.ChangeKind getLabelChangeKind() {
        return labelChangeKind_;
      }
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 10;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public Builder setLabelChangeKind(boa.types.Shared.ChangeKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000200;
        labelChangeKind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 10;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public Builder clearLabelChangeKind() {
        bitField0_ = (bitField0_ & ~0x00000200);
        labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:boa.types.Declaration)
    }

    static {
      defaultInstance = new Declaration(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:boa.types.Declaration)
  }

  public interface TypeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string name = 1;
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     ** The name of the type 
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     ** The name of the type 
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     ** The name of the type 
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required .boa.types.TypeKind kind = 2;
    /**
     * <code>required .boa.types.TypeKind kind = 2;</code>
     *
     * <pre>
     ** The kind of the type 
     * </pre>
     */
    boolean hasKind();
    /**
     * <code>required .boa.types.TypeKind kind = 2;</code>
     *
     * <pre>
     ** The kind of the type 
     * </pre>
     */
    boa.types.Ast.TypeKind getKind();

    // optional string id = 3;
    /**
     * <code>optional string id = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional string id = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    java.lang.String getId();
    /**
     * <code>optional string id = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    // optional .boa.types.ChangeKind structural_change_kind = 4;
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 4;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    boolean hasStructuralChangeKind();
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 4;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    boa.types.Shared.ChangeKind getStructuralChangeKind();

    // optional .boa.types.ChangeKind label_change_kind = 5;
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 5;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    boolean hasLabelChangeKind();
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 5;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    boa.types.Shared.ChangeKind getLabelChangeKind();
  }
  /**
   * Protobuf type {@code boa.types.Type}
   *
   * <pre>
   ** A type in an AST 
   * </pre>
   */
  public static final class Type extends
      com.google.protobuf.GeneratedMessage
      implements TypeOrBuilder {
    // Use Type.newBuilder() to construct.
    private Type(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Type(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Type defaultInstance;
    public static Type getDefaultInstance() {
      return defaultInstance;
    }

    public Type getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Type(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              boa.types.Ast.TypeKind value = boa.types.Ast.TypeKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                kind_ = value;
              }
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              id_ = input.readBytes();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              boa.types.Shared.ChangeKind value = boa.types.Shared.ChangeKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                structuralChangeKind_ = value;
              }
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              boa.types.Shared.ChangeKind value = boa.types.Shared.ChangeKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                labelChangeKind_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return boa.types.Ast.internal_static_boa_types_Type_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return boa.types.Ast.internal_static_boa_types_Type_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              boa.types.Ast.Type.class, boa.types.Ast.Type.Builder.class);
    }

    public static com.google.protobuf.Parser<Type> PARSER =
        new com.google.protobuf.AbstractParser<Type>() {
      public Type parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Type(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Type> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     ** The name of the type 
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     ** The name of the type 
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     ** The name of the type 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .boa.types.TypeKind kind = 2;
    public static final int KIND_FIELD_NUMBER = 2;
    private boa.types.Ast.TypeKind kind_;
    /**
     * <code>required .boa.types.TypeKind kind = 2;</code>
     *
     * <pre>
     ** The kind of the type 
     * </pre>
     */
    public boolean hasKind() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .boa.types.TypeKind kind = 2;</code>
     *
     * <pre>
     ** The kind of the type 
     * </pre>
     */
    public boa.types.Ast.TypeKind getKind() {
      return kind_;
    }

    // optional string id = 3;
    public static final int ID_FIELD_NUMBER = 3;
    private java.lang.Object id_;
    /**
     * <code>optional string id = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string id = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string id = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .boa.types.ChangeKind structural_change_kind = 4;
    public static final int STRUCTURAL_CHANGE_KIND_FIELD_NUMBER = 4;
    private boa.types.Shared.ChangeKind structuralChangeKind_;
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 4;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    public boolean hasStructuralChangeKind() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 4;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    public boa.types.Shared.ChangeKind getStructuralChangeKind() {
      return structuralChangeKind_;
    }

    // optional .boa.types.ChangeKind label_change_kind = 5;
    public static final int LABEL_CHANGE_KIND_FIELD_NUMBER = 5;
    private boa.types.Shared.ChangeKind labelChangeKind_;
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 5;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    public boolean hasLabelChangeKind() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 5;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    public boa.types.Shared.ChangeKind getLabelChangeKind() {
      return labelChangeKind_;
    }

    private void initFields() {
      name_ = "";
      kind_ = boa.types.Ast.TypeKind.OTHER;
      id_ = "";
      structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
      labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasKind()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, kind_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getIdBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, structuralChangeKind_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, labelChangeKind_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, kind_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getIdBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, structuralChangeKind_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, labelChangeKind_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static boa.types.Ast.Type parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static boa.types.Ast.Type parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static boa.types.Ast.Type parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static boa.types.Ast.Type parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static boa.types.Ast.Type parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static boa.types.Ast.Type parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static boa.types.Ast.Type parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static boa.types.Ast.Type parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static boa.types.Ast.Type parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static boa.types.Ast.Type parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(boa.types.Ast.Type prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code boa.types.Type}
     *
     * <pre>
     ** A type in an AST 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements boa.types.Ast.TypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Type_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Type_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Type.class, boa.types.Ast.Type.Builder.class);
      }

      // Construct using boa.types.Ast.Type.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        kind_ = boa.types.Ast.TypeKind.OTHER;
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        bitField0_ = (bitField0_ & ~0x00000008);
        labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return boa.types.Ast.internal_static_boa_types_Type_descriptor;
      }

      public boa.types.Ast.Type getDefaultInstanceForType() {
        return boa.types.Ast.Type.getDefaultInstance();
      }

      public boa.types.Ast.Type build() {
        boa.types.Ast.Type result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public boa.types.Ast.Type buildPartial() {
        boa.types.Ast.Type result = new boa.types.Ast.Type(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.kind_ = kind_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.structuralChangeKind_ = structuralChangeKind_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.labelChangeKind_ = labelChangeKind_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof boa.types.Ast.Type) {
          return mergeFrom((boa.types.Ast.Type)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(boa.types.Ast.Type other) {
        if (other == boa.types.Ast.Type.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasKind()) {
          setKind(other.getKind());
        }
        if (other.hasId()) {
          bitField0_ |= 0x00000004;
          id_ = other.id_;
          onChanged();
        }
        if (other.hasStructuralChangeKind()) {
          setStructuralChangeKind(other.getStructuralChangeKind());
        }
        if (other.hasLabelChangeKind()) {
          setLabelChangeKind(other.getLabelChangeKind());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasKind()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        boa.types.Ast.Type parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (boa.types.Ast.Type) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string name = 1;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       ** The name of the type 
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       ** The name of the type 
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       ** The name of the type 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       ** The name of the type 
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       ** The name of the type 
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       ** The name of the type 
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      // required .boa.types.TypeKind kind = 2;
      private boa.types.Ast.TypeKind kind_ = boa.types.Ast.TypeKind.OTHER;
      /**
       * <code>required .boa.types.TypeKind kind = 2;</code>
       *
       * <pre>
       ** The kind of the type 
       * </pre>
       */
      public boolean hasKind() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .boa.types.TypeKind kind = 2;</code>
       *
       * <pre>
       ** The kind of the type 
       * </pre>
       */
      public boa.types.Ast.TypeKind getKind() {
        return kind_;
      }
      /**
       * <code>required .boa.types.TypeKind kind = 2;</code>
       *
       * <pre>
       ** The kind of the type 
       * </pre>
       */
      public Builder setKind(boa.types.Ast.TypeKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        kind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .boa.types.TypeKind kind = 2;</code>
       *
       * <pre>
       ** The kind of the type 
       * </pre>
       */
      public Builder clearKind() {
        bitField0_ = (bitField0_ & ~0x00000002);
        kind_ = boa.types.Ast.TypeKind.OTHER;
        onChanged();
        return this;
      }

      // optional string id = 3;
      private java.lang.Object id_ = "";
      /**
       * <code>optional string id = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string id = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string id = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string id = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        id_ = value;
        onChanged();
        return this;
      }

      // optional .boa.types.ChangeKind structural_change_kind = 4;
      private boa.types.Shared.ChangeKind structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 4;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public boolean hasStructuralChangeKind() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 4;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public boa.types.Shared.ChangeKind getStructuralChangeKind() {
        return structuralChangeKind_;
      }
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 4;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public Builder setStructuralChangeKind(boa.types.Shared.ChangeKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        structuralChangeKind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 4;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public Builder clearStructuralChangeKind() {
        bitField0_ = (bitField0_ & ~0x00000008);
        structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        onChanged();
        return this;
      }

      // optional .boa.types.ChangeKind label_change_kind = 5;
      private boa.types.Shared.ChangeKind labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 5;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public boolean hasLabelChangeKind() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 5;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public boa.types.Shared.ChangeKind getLabelChangeKind() {
        return labelChangeKind_;
      }
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 5;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public Builder setLabelChangeKind(boa.types.Shared.ChangeKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        labelChangeKind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 5;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public Builder clearLabelChangeKind() {
        bitField0_ = (bitField0_ & ~0x00000010);
        labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:boa.types.Type)
    }

    static {
      defaultInstance = new Type(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:boa.types.Type)
  }

  public interface MethodOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string name = 1;
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     ** The name of the method 
     * </pre>
     */
    boolean hasName();
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     ** The name of the method 
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     ** The name of the method 
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // repeated .boa.types.Modifier modifiers = 2;
    /**
     * <code>repeated .boa.types.Modifier modifiers = 2;</code>
     *
     * <pre>
     ** A list of all modifiers on the variable 
     * </pre>
     */
    java.util.List<boa.types.Ast.Modifier> 
        getModifiersList();
    /**
     * <code>repeated .boa.types.Modifier modifiers = 2;</code>
     *
     * <pre>
     ** A list of all modifiers on the variable 
     * </pre>
     */
    boa.types.Ast.Modifier getModifiers(int index);
    /**
     * <code>repeated .boa.types.Modifier modifiers = 2;</code>
     *
     * <pre>
     ** A list of all modifiers on the variable 
     * </pre>
     */
    int getModifiersCount();
    /**
     * <code>repeated .boa.types.Modifier modifiers = 2;</code>
     *
     * <pre>
     ** A list of all modifiers on the variable 
     * </pre>
     */
    java.util.List<? extends boa.types.Ast.ModifierOrBuilder> 
        getModifiersOrBuilderList();
    /**
     * <code>repeated .boa.types.Modifier modifiers = 2;</code>
     *
     * <pre>
     ** A list of all modifiers on the variable 
     * </pre>
     */
    boa.types.Ast.ModifierOrBuilder getModifiersOrBuilder(
        int index);

    // required .boa.types.Type return_type = 3;
    /**
     * <code>required .boa.types.Type return_type = 3;</code>
     *
     * <pre>
     ** The type returned from the method; if the method returns nothing, this type will be void 
     * </pre>
     */
    boolean hasReturnType();
    /**
     * <code>required .boa.types.Type return_type = 3;</code>
     *
     * <pre>
     ** The type returned from the method; if the method returns nothing, this type will be void 
     * </pre>
     */
    boa.types.Ast.Type getReturnType();
    /**
     * <code>required .boa.types.Type return_type = 3;</code>
     *
     * <pre>
     ** The type returned from the method; if the method returns nothing, this type will be void 
     * </pre>
     */
    boa.types.Ast.TypeOrBuilder getReturnTypeOrBuilder();

    // repeated .boa.types.Type generic_parameters = 4;
    /**
     * <code>repeated .boa.types.Type generic_parameters = 4;</code>
     *
     * <pre>
     ** The list of generic parameters for this method 
     * </pre>
     */
    java.util.List<boa.types.Ast.Type> 
        getGenericParametersList();
    /**
     * <code>repeated .boa.types.Type generic_parameters = 4;</code>
     *
     * <pre>
     ** The list of generic parameters for this method 
     * </pre>
     */
    boa.types.Ast.Type getGenericParameters(int index);
    /**
     * <code>repeated .boa.types.Type generic_parameters = 4;</code>
     *
     * <pre>
     ** The list of generic parameters for this method 
     * </pre>
     */
    int getGenericParametersCount();
    /**
     * <code>repeated .boa.types.Type generic_parameters = 4;</code>
     *
     * <pre>
     ** The list of generic parameters for this method 
     * </pre>
     */
    java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
        getGenericParametersOrBuilderList();
    /**
     * <code>repeated .boa.types.Type generic_parameters = 4;</code>
     *
     * <pre>
     ** The list of generic parameters for this method 
     * </pre>
     */
    boa.types.Ast.TypeOrBuilder getGenericParametersOrBuilder(
        int index);

    // repeated .boa.types.Variable arguments = 5;
    /**
     * <code>repeated .boa.types.Variable arguments = 5;</code>
     *
     * <pre>
     ** The arguments the method takes 
     * </pre>
     */
    java.util.List<boa.types.Ast.Variable> 
        getArgumentsList();
    /**
     * <code>repeated .boa.types.Variable arguments = 5;</code>
     *
     * <pre>
     ** The arguments the method takes 
     * </pre>
     */
    boa.types.Ast.Variable getArguments(int index);
    /**
     * <code>repeated .boa.types.Variable arguments = 5;</code>
     *
     * <pre>
     ** The arguments the method takes 
     * </pre>
     */
    int getArgumentsCount();
    /**
     * <code>repeated .boa.types.Variable arguments = 5;</code>
     *
     * <pre>
     ** The arguments the method takes 
     * </pre>
     */
    java.util.List<? extends boa.types.Ast.VariableOrBuilder> 
        getArgumentsOrBuilderList();
    /**
     * <code>repeated .boa.types.Variable arguments = 5;</code>
     *
     * <pre>
     ** The arguments the method takes 
     * </pre>
     */
    boa.types.Ast.VariableOrBuilder getArgumentsOrBuilder(
        int index);

    // repeated .boa.types.Type exception_types = 6;
    /**
     * <code>repeated .boa.types.Type exception_types = 6;</code>
     *
     * <pre>
     ** The list of exceptions thrown by this method 
     * </pre>
     */
    java.util.List<boa.types.Ast.Type> 
        getExceptionTypesList();
    /**
     * <code>repeated .boa.types.Type exception_types = 6;</code>
     *
     * <pre>
     ** The list of exceptions thrown by this method 
     * </pre>
     */
    boa.types.Ast.Type getExceptionTypes(int index);
    /**
     * <code>repeated .boa.types.Type exception_types = 6;</code>
     *
     * <pre>
     ** The list of exceptions thrown by this method 
     * </pre>
     */
    int getExceptionTypesCount();
    /**
     * <code>repeated .boa.types.Type exception_types = 6;</code>
     *
     * <pre>
     ** The list of exceptions thrown by this method 
     * </pre>
     */
    java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
        getExceptionTypesOrBuilderList();
    /**
     * <code>repeated .boa.types.Type exception_types = 6;</code>
     *
     * <pre>
     ** The list of exceptions thrown by this method 
     * </pre>
     */
    boa.types.Ast.TypeOrBuilder getExceptionTypesOrBuilder(
        int index);

    // repeated .boa.types.Statement statements = 7;
    /**
     * <code>repeated .boa.types.Statement statements = 7;</code>
     *
     * <pre>
     **
     * The statements in the method body. Note that most methods (in C-like
     * languages, such as Java) contain a single statement of type BLOCK, which
     * contains the list of statements within it!
     * </pre>
     */
    java.util.List<boa.types.Ast.Statement> 
        getStatementsList();
    /**
     * <code>repeated .boa.types.Statement statements = 7;</code>
     *
     * <pre>
     **
     * The statements in the method body. Note that most methods (in C-like
     * languages, such as Java) contain a single statement of type BLOCK, which
     * contains the list of statements within it!
     * </pre>
     */
    boa.types.Ast.Statement getStatements(int index);
    /**
     * <code>repeated .boa.types.Statement statements = 7;</code>
     *
     * <pre>
     **
     * The statements in the method body. Note that most methods (in C-like
     * languages, such as Java) contain a single statement of type BLOCK, which
     * contains the list of statements within it!
     * </pre>
     */
    int getStatementsCount();
    /**
     * <code>repeated .boa.types.Statement statements = 7;</code>
     *
     * <pre>
     **
     * The statements in the method body. Note that most methods (in C-like
     * languages, such as Java) contain a single statement of type BLOCK, which
     * contains the list of statements within it!
     * </pre>
     */
    java.util.List<? extends boa.types.Ast.StatementOrBuilder> 
        getStatementsOrBuilderList();
    /**
     * <code>repeated .boa.types.Statement statements = 7;</code>
     *
     * <pre>
     **
     * The statements in the method body. Note that most methods (in C-like
     * languages, such as Java) contain a single statement of type BLOCK, which
     * contains the list of statements within it!
     * </pre>
     */
    boa.types.Ast.StatementOrBuilder getStatementsOrBuilder(
        int index);

    // optional .boa.types.ChangeKind structural_change_kind = 8;
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 8;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    boolean hasStructuralChangeKind();
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 8;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    boa.types.Shared.ChangeKind getStructuralChangeKind();

    // optional .boa.types.ChangeKind label_change_kind = 9;
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 9;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    boolean hasLabelChangeKind();
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 9;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    boa.types.Shared.ChangeKind getLabelChangeKind();
  }
  /**
   * Protobuf type {@code boa.types.Method}
   *
   * <pre>
   ** A method declaration 
   * </pre>
   */
  public static final class Method extends
      com.google.protobuf.GeneratedMessage
      implements MethodOrBuilder {
    // Use Method.newBuilder() to construct.
    private Method(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Method(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Method defaultInstance;
    public static Method getDefaultInstance() {
      return defaultInstance;
    }

    public Method getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Method(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                modifiers_ = new java.util.ArrayList<boa.types.Ast.Modifier>();
                mutable_bitField0_ |= 0x00000002;
              }
              modifiers_.add(input.readMessage(boa.types.Ast.Modifier.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              boa.types.Ast.Type.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = returnType_.toBuilder();
              }
              returnType_ = input.readMessage(boa.types.Ast.Type.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(returnType_);
                returnType_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                genericParameters_ = new java.util.ArrayList<boa.types.Ast.Type>();
                mutable_bitField0_ |= 0x00000008;
              }
              genericParameters_.add(input.readMessage(boa.types.Ast.Type.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                arguments_ = new java.util.ArrayList<boa.types.Ast.Variable>();
                mutable_bitField0_ |= 0x00000010;
              }
              arguments_.add(input.readMessage(boa.types.Ast.Variable.PARSER, extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                exceptionTypes_ = new java.util.ArrayList<boa.types.Ast.Type>();
                mutable_bitField0_ |= 0x00000020;
              }
              exceptionTypes_.add(input.readMessage(boa.types.Ast.Type.PARSER, extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                statements_ = new java.util.ArrayList<boa.types.Ast.Statement>();
                mutable_bitField0_ |= 0x00000040;
              }
              statements_.add(input.readMessage(boa.types.Ast.Statement.PARSER, extensionRegistry));
              break;
            }
            case 64: {
              int rawValue = input.readEnum();
              boa.types.Shared.ChangeKind value = boa.types.Shared.ChangeKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(8, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                structuralChangeKind_ = value;
              }
              break;
            }
            case 72: {
              int rawValue = input.readEnum();
              boa.types.Shared.ChangeKind value = boa.types.Shared.ChangeKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(9, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                labelChangeKind_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          modifiers_ = java.util.Collections.unmodifiableList(modifiers_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          genericParameters_ = java.util.Collections.unmodifiableList(genericParameters_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          arguments_ = java.util.Collections.unmodifiableList(arguments_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          exceptionTypes_ = java.util.Collections.unmodifiableList(exceptionTypes_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          statements_ = java.util.Collections.unmodifiableList(statements_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return boa.types.Ast.internal_static_boa_types_Method_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return boa.types.Ast.internal_static_boa_types_Method_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              boa.types.Ast.Method.class, boa.types.Ast.Method.Builder.class);
    }

    public static com.google.protobuf.Parser<Method> PARSER =
        new com.google.protobuf.AbstractParser<Method>() {
      public Method parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Method(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Method> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     ** The name of the method 
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     ** The name of the method 
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     ** The name of the method 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .boa.types.Modifier modifiers = 2;
    public static final int MODIFIERS_FIELD_NUMBER = 2;
    private java.util.List<boa.types.Ast.Modifier> modifiers_;
    /**
     * <code>repeated .boa.types.Modifier modifiers = 2;</code>
     *
     * <pre>
     ** A list of all modifiers on the variable 
     * </pre>
     */
    public java.util.List<boa.types.Ast.Modifier> getModifiersList() {
      return modifiers_;
    }
    /**
     * <code>repeated .boa.types.Modifier modifiers = 2;</code>
     *
     * <pre>
     ** A list of all modifiers on the variable 
     * </pre>
     */
    public java.util.List<? extends boa.types.Ast.ModifierOrBuilder> 
        getModifiersOrBuilderList() {
      return modifiers_;
    }
    /**
     * <code>repeated .boa.types.Modifier modifiers = 2;</code>
     *
     * <pre>
     ** A list of all modifiers on the variable 
     * </pre>
     */
    public int getModifiersCount() {
      return modifiers_.size();
    }
    /**
     * <code>repeated .boa.types.Modifier modifiers = 2;</code>
     *
     * <pre>
     ** A list of all modifiers on the variable 
     * </pre>
     */
    public boa.types.Ast.Modifier getModifiers(int index) {
      return modifiers_.get(index);
    }
    /**
     * <code>repeated .boa.types.Modifier modifiers = 2;</code>
     *
     * <pre>
     ** A list of all modifiers on the variable 
     * </pre>
     */
    public boa.types.Ast.ModifierOrBuilder getModifiersOrBuilder(
        int index) {
      return modifiers_.get(index);
    }

    // required .boa.types.Type return_type = 3;
    public static final int RETURN_TYPE_FIELD_NUMBER = 3;
    private boa.types.Ast.Type returnType_;
    /**
     * <code>required .boa.types.Type return_type = 3;</code>
     *
     * <pre>
     ** The type returned from the method; if the method returns nothing, this type will be void 
     * </pre>
     */
    public boolean hasReturnType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .boa.types.Type return_type = 3;</code>
     *
     * <pre>
     ** The type returned from the method; if the method returns nothing, this type will be void 
     * </pre>
     */
    public boa.types.Ast.Type getReturnType() {
      return returnType_;
    }
    /**
     * <code>required .boa.types.Type return_type = 3;</code>
     *
     * <pre>
     ** The type returned from the method; if the method returns nothing, this type will be void 
     * </pre>
     */
    public boa.types.Ast.TypeOrBuilder getReturnTypeOrBuilder() {
      return returnType_;
    }

    // repeated .boa.types.Type generic_parameters = 4;
    public static final int GENERIC_PARAMETERS_FIELD_NUMBER = 4;
    private java.util.List<boa.types.Ast.Type> genericParameters_;
    /**
     * <code>repeated .boa.types.Type generic_parameters = 4;</code>
     *
     * <pre>
     ** The list of generic parameters for this method 
     * </pre>
     */
    public java.util.List<boa.types.Ast.Type> getGenericParametersList() {
      return genericParameters_;
    }
    /**
     * <code>repeated .boa.types.Type generic_parameters = 4;</code>
     *
     * <pre>
     ** The list of generic parameters for this method 
     * </pre>
     */
    public java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
        getGenericParametersOrBuilderList() {
      return genericParameters_;
    }
    /**
     * <code>repeated .boa.types.Type generic_parameters = 4;</code>
     *
     * <pre>
     ** The list of generic parameters for this method 
     * </pre>
     */
    public int getGenericParametersCount() {
      return genericParameters_.size();
    }
    /**
     * <code>repeated .boa.types.Type generic_parameters = 4;</code>
     *
     * <pre>
     ** The list of generic parameters for this method 
     * </pre>
     */
    public boa.types.Ast.Type getGenericParameters(int index) {
      return genericParameters_.get(index);
    }
    /**
     * <code>repeated .boa.types.Type generic_parameters = 4;</code>
     *
     * <pre>
     ** The list of generic parameters for this method 
     * </pre>
     */
    public boa.types.Ast.TypeOrBuilder getGenericParametersOrBuilder(
        int index) {
      return genericParameters_.get(index);
    }

    // repeated .boa.types.Variable arguments = 5;
    public static final int ARGUMENTS_FIELD_NUMBER = 5;
    private java.util.List<boa.types.Ast.Variable> arguments_;
    /**
     * <code>repeated .boa.types.Variable arguments = 5;</code>
     *
     * <pre>
     ** The arguments the method takes 
     * </pre>
     */
    public java.util.List<boa.types.Ast.Variable> getArgumentsList() {
      return arguments_;
    }
    /**
     * <code>repeated .boa.types.Variable arguments = 5;</code>
     *
     * <pre>
     ** The arguments the method takes 
     * </pre>
     */
    public java.util.List<? extends boa.types.Ast.VariableOrBuilder> 
        getArgumentsOrBuilderList() {
      return arguments_;
    }
    /**
     * <code>repeated .boa.types.Variable arguments = 5;</code>
     *
     * <pre>
     ** The arguments the method takes 
     * </pre>
     */
    public int getArgumentsCount() {
      return arguments_.size();
    }
    /**
     * <code>repeated .boa.types.Variable arguments = 5;</code>
     *
     * <pre>
     ** The arguments the method takes 
     * </pre>
     */
    public boa.types.Ast.Variable getArguments(int index) {
      return arguments_.get(index);
    }
    /**
     * <code>repeated .boa.types.Variable arguments = 5;</code>
     *
     * <pre>
     ** The arguments the method takes 
     * </pre>
     */
    public boa.types.Ast.VariableOrBuilder getArgumentsOrBuilder(
        int index) {
      return arguments_.get(index);
    }

    // repeated .boa.types.Type exception_types = 6;
    public static final int EXCEPTION_TYPES_FIELD_NUMBER = 6;
    private java.util.List<boa.types.Ast.Type> exceptionTypes_;
    /**
     * <code>repeated .boa.types.Type exception_types = 6;</code>
     *
     * <pre>
     ** The list of exceptions thrown by this method 
     * </pre>
     */
    public java.util.List<boa.types.Ast.Type> getExceptionTypesList() {
      return exceptionTypes_;
    }
    /**
     * <code>repeated .boa.types.Type exception_types = 6;</code>
     *
     * <pre>
     ** The list of exceptions thrown by this method 
     * </pre>
     */
    public java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
        getExceptionTypesOrBuilderList() {
      return exceptionTypes_;
    }
    /**
     * <code>repeated .boa.types.Type exception_types = 6;</code>
     *
     * <pre>
     ** The list of exceptions thrown by this method 
     * </pre>
     */
    public int getExceptionTypesCount() {
      return exceptionTypes_.size();
    }
    /**
     * <code>repeated .boa.types.Type exception_types = 6;</code>
     *
     * <pre>
     ** The list of exceptions thrown by this method 
     * </pre>
     */
    public boa.types.Ast.Type getExceptionTypes(int index) {
      return exceptionTypes_.get(index);
    }
    /**
     * <code>repeated .boa.types.Type exception_types = 6;</code>
     *
     * <pre>
     ** The list of exceptions thrown by this method 
     * </pre>
     */
    public boa.types.Ast.TypeOrBuilder getExceptionTypesOrBuilder(
        int index) {
      return exceptionTypes_.get(index);
    }

    // repeated .boa.types.Statement statements = 7;
    public static final int STATEMENTS_FIELD_NUMBER = 7;
    private java.util.List<boa.types.Ast.Statement> statements_;
    /**
     * <code>repeated .boa.types.Statement statements = 7;</code>
     *
     * <pre>
     **
     * The statements in the method body. Note that most methods (in C-like
     * languages, such as Java) contain a single statement of type BLOCK, which
     * contains the list of statements within it!
     * </pre>
     */
    public java.util.List<boa.types.Ast.Statement> getStatementsList() {
      return statements_;
    }
    /**
     * <code>repeated .boa.types.Statement statements = 7;</code>
     *
     * <pre>
     **
     * The statements in the method body. Note that most methods (in C-like
     * languages, such as Java) contain a single statement of type BLOCK, which
     * contains the list of statements within it!
     * </pre>
     */
    public java.util.List<? extends boa.types.Ast.StatementOrBuilder> 
        getStatementsOrBuilderList() {
      return statements_;
    }
    /**
     * <code>repeated .boa.types.Statement statements = 7;</code>
     *
     * <pre>
     **
     * The statements in the method body. Note that most methods (in C-like
     * languages, such as Java) contain a single statement of type BLOCK, which
     * contains the list of statements within it!
     * </pre>
     */
    public int getStatementsCount() {
      return statements_.size();
    }
    /**
     * <code>repeated .boa.types.Statement statements = 7;</code>
     *
     * <pre>
     **
     * The statements in the method body. Note that most methods (in C-like
     * languages, such as Java) contain a single statement of type BLOCK, which
     * contains the list of statements within it!
     * </pre>
     */
    public boa.types.Ast.Statement getStatements(int index) {
      return statements_.get(index);
    }
    /**
     * <code>repeated .boa.types.Statement statements = 7;</code>
     *
     * <pre>
     **
     * The statements in the method body. Note that most methods (in C-like
     * languages, such as Java) contain a single statement of type BLOCK, which
     * contains the list of statements within it!
     * </pre>
     */
    public boa.types.Ast.StatementOrBuilder getStatementsOrBuilder(
        int index) {
      return statements_.get(index);
    }

    // optional .boa.types.ChangeKind structural_change_kind = 8;
    public static final int STRUCTURAL_CHANGE_KIND_FIELD_NUMBER = 8;
    private boa.types.Shared.ChangeKind structuralChangeKind_;
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 8;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    public boolean hasStructuralChangeKind() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 8;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    public boa.types.Shared.ChangeKind getStructuralChangeKind() {
      return structuralChangeKind_;
    }

    // optional .boa.types.ChangeKind label_change_kind = 9;
    public static final int LABEL_CHANGE_KIND_FIELD_NUMBER = 9;
    private boa.types.Shared.ChangeKind labelChangeKind_;
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 9;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    public boolean hasLabelChangeKind() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 9;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    public boa.types.Shared.ChangeKind getLabelChangeKind() {
      return labelChangeKind_;
    }

    private void initFields() {
      name_ = "";
      modifiers_ = java.util.Collections.emptyList();
      returnType_ = boa.types.Ast.Type.getDefaultInstance();
      genericParameters_ = java.util.Collections.emptyList();
      arguments_ = java.util.Collections.emptyList();
      exceptionTypes_ = java.util.Collections.emptyList();
      statements_ = java.util.Collections.emptyList();
      structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
      labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasReturnType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getModifiersCount(); i++) {
        if (!getModifiers(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!getReturnType().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getGenericParametersCount(); i++) {
        if (!getGenericParameters(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getArgumentsCount(); i++) {
        if (!getArguments(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getExceptionTypesCount(); i++) {
        if (!getExceptionTypes(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getStatementsCount(); i++) {
        if (!getStatements(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      for (int i = 0; i < modifiers_.size(); i++) {
        output.writeMessage(2, modifiers_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, returnType_);
      }
      for (int i = 0; i < genericParameters_.size(); i++) {
        output.writeMessage(4, genericParameters_.get(i));
      }
      for (int i = 0; i < arguments_.size(); i++) {
        output.writeMessage(5, arguments_.get(i));
      }
      for (int i = 0; i < exceptionTypes_.size(); i++) {
        output.writeMessage(6, exceptionTypes_.get(i));
      }
      for (int i = 0; i < statements_.size(); i++) {
        output.writeMessage(7, statements_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(8, structuralChangeKind_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(9, labelChangeKind_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      for (int i = 0; i < modifiers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, modifiers_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, returnType_);
      }
      for (int i = 0; i < genericParameters_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, genericParameters_.get(i));
      }
      for (int i = 0; i < arguments_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, arguments_.get(i));
      }
      for (int i = 0; i < exceptionTypes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, exceptionTypes_.get(i));
      }
      for (int i = 0; i < statements_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, statements_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, structuralChangeKind_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, labelChangeKind_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static boa.types.Ast.Method parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static boa.types.Ast.Method parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static boa.types.Ast.Method parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static boa.types.Ast.Method parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static boa.types.Ast.Method parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static boa.types.Ast.Method parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static boa.types.Ast.Method parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static boa.types.Ast.Method parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static boa.types.Ast.Method parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static boa.types.Ast.Method parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(boa.types.Ast.Method prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code boa.types.Method}
     *
     * <pre>
     ** A method declaration 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements boa.types.Ast.MethodOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Method_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Method_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Method.class, boa.types.Ast.Method.Builder.class);
      }

      // Construct using boa.types.Ast.Method.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getModifiersFieldBuilder();
          getReturnTypeFieldBuilder();
          getGenericParametersFieldBuilder();
          getArgumentsFieldBuilder();
          getExceptionTypesFieldBuilder();
          getStatementsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (modifiersBuilder_ == null) {
          modifiers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          modifiersBuilder_.clear();
        }
        if (returnTypeBuilder_ == null) {
          returnType_ = boa.types.Ast.Type.getDefaultInstance();
        } else {
          returnTypeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (genericParametersBuilder_ == null) {
          genericParameters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          genericParametersBuilder_.clear();
        }
        if (argumentsBuilder_ == null) {
          arguments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          argumentsBuilder_.clear();
        }
        if (exceptionTypesBuilder_ == null) {
          exceptionTypes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          exceptionTypesBuilder_.clear();
        }
        if (statementsBuilder_ == null) {
          statements_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          statementsBuilder_.clear();
        }
        structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        bitField0_ = (bitField0_ & ~0x00000080);
        labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return boa.types.Ast.internal_static_boa_types_Method_descriptor;
      }

      public boa.types.Ast.Method getDefaultInstanceForType() {
        return boa.types.Ast.Method.getDefaultInstance();
      }

      public boa.types.Ast.Method build() {
        boa.types.Ast.Method result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public boa.types.Ast.Method buildPartial() {
        boa.types.Ast.Method result = new boa.types.Ast.Method(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (modifiersBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            modifiers_ = java.util.Collections.unmodifiableList(modifiers_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.modifiers_ = modifiers_;
        } else {
          result.modifiers_ = modifiersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        if (returnTypeBuilder_ == null) {
          result.returnType_ = returnType_;
        } else {
          result.returnType_ = returnTypeBuilder_.build();
        }
        if (genericParametersBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            genericParameters_ = java.util.Collections.unmodifiableList(genericParameters_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.genericParameters_ = genericParameters_;
        } else {
          result.genericParameters_ = genericParametersBuilder_.build();
        }
        if (argumentsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            arguments_ = java.util.Collections.unmodifiableList(arguments_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.arguments_ = arguments_;
        } else {
          result.arguments_ = argumentsBuilder_.build();
        }
        if (exceptionTypesBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            exceptionTypes_ = java.util.Collections.unmodifiableList(exceptionTypes_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.exceptionTypes_ = exceptionTypes_;
        } else {
          result.exceptionTypes_ = exceptionTypesBuilder_.build();
        }
        if (statementsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            statements_ = java.util.Collections.unmodifiableList(statements_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.statements_ = statements_;
        } else {
          result.statements_ = statementsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000004;
        }
        result.structuralChangeKind_ = structuralChangeKind_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000008;
        }
        result.labelChangeKind_ = labelChangeKind_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof boa.types.Ast.Method) {
          return mergeFrom((boa.types.Ast.Method)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(boa.types.Ast.Method other) {
        if (other == boa.types.Ast.Method.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (modifiersBuilder_ == null) {
          if (!other.modifiers_.isEmpty()) {
            if (modifiers_.isEmpty()) {
              modifiers_ = other.modifiers_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureModifiersIsMutable();
              modifiers_.addAll(other.modifiers_);
            }
            onChanged();
          }
        } else {
          if (!other.modifiers_.isEmpty()) {
            if (modifiersBuilder_.isEmpty()) {
              modifiersBuilder_.dispose();
              modifiersBuilder_ = null;
              modifiers_ = other.modifiers_;
              bitField0_ = (bitField0_ & ~0x00000002);
              modifiersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getModifiersFieldBuilder() : null;
            } else {
              modifiersBuilder_.addAllMessages(other.modifiers_);
            }
          }
        }
        if (other.hasReturnType()) {
          mergeReturnType(other.getReturnType());
        }
        if (genericParametersBuilder_ == null) {
          if (!other.genericParameters_.isEmpty()) {
            if (genericParameters_.isEmpty()) {
              genericParameters_ = other.genericParameters_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureGenericParametersIsMutable();
              genericParameters_.addAll(other.genericParameters_);
            }
            onChanged();
          }
        } else {
          if (!other.genericParameters_.isEmpty()) {
            if (genericParametersBuilder_.isEmpty()) {
              genericParametersBuilder_.dispose();
              genericParametersBuilder_ = null;
              genericParameters_ = other.genericParameters_;
              bitField0_ = (bitField0_ & ~0x00000008);
              genericParametersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGenericParametersFieldBuilder() : null;
            } else {
              genericParametersBuilder_.addAllMessages(other.genericParameters_);
            }
          }
        }
        if (argumentsBuilder_ == null) {
          if (!other.arguments_.isEmpty()) {
            if (arguments_.isEmpty()) {
              arguments_ = other.arguments_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureArgumentsIsMutable();
              arguments_.addAll(other.arguments_);
            }
            onChanged();
          }
        } else {
          if (!other.arguments_.isEmpty()) {
            if (argumentsBuilder_.isEmpty()) {
              argumentsBuilder_.dispose();
              argumentsBuilder_ = null;
              arguments_ = other.arguments_;
              bitField0_ = (bitField0_ & ~0x00000010);
              argumentsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getArgumentsFieldBuilder() : null;
            } else {
              argumentsBuilder_.addAllMessages(other.arguments_);
            }
          }
        }
        if (exceptionTypesBuilder_ == null) {
          if (!other.exceptionTypes_.isEmpty()) {
            if (exceptionTypes_.isEmpty()) {
              exceptionTypes_ = other.exceptionTypes_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureExceptionTypesIsMutable();
              exceptionTypes_.addAll(other.exceptionTypes_);
            }
            onChanged();
          }
        } else {
          if (!other.exceptionTypes_.isEmpty()) {
            if (exceptionTypesBuilder_.isEmpty()) {
              exceptionTypesBuilder_.dispose();
              exceptionTypesBuilder_ = null;
              exceptionTypes_ = other.exceptionTypes_;
              bitField0_ = (bitField0_ & ~0x00000020);
              exceptionTypesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getExceptionTypesFieldBuilder() : null;
            } else {
              exceptionTypesBuilder_.addAllMessages(other.exceptionTypes_);
            }
          }
        }
        if (statementsBuilder_ == null) {
          if (!other.statements_.isEmpty()) {
            if (statements_.isEmpty()) {
              statements_ = other.statements_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureStatementsIsMutable();
              statements_.addAll(other.statements_);
            }
            onChanged();
          }
        } else {
          if (!other.statements_.isEmpty()) {
            if (statementsBuilder_.isEmpty()) {
              statementsBuilder_.dispose();
              statementsBuilder_ = null;
              statements_ = other.statements_;
              bitField0_ = (bitField0_ & ~0x00000040);
              statementsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getStatementsFieldBuilder() : null;
            } else {
              statementsBuilder_.addAllMessages(other.statements_);
            }
          }
        }
        if (other.hasStructuralChangeKind()) {
          setStructuralChangeKind(other.getStructuralChangeKind());
        }
        if (other.hasLabelChangeKind()) {
          setLabelChangeKind(other.getLabelChangeKind());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasReturnType()) {
          
          return false;
        }
        for (int i = 0; i < getModifiersCount(); i++) {
          if (!getModifiers(i).isInitialized()) {
            
            return false;
          }
        }
        if (!getReturnType().isInitialized()) {
          
          return false;
        }
        for (int i = 0; i < getGenericParametersCount(); i++) {
          if (!getGenericParameters(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getArgumentsCount(); i++) {
          if (!getArguments(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getExceptionTypesCount(); i++) {
          if (!getExceptionTypes(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getStatementsCount(); i++) {
          if (!getStatements(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        boa.types.Ast.Method parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (boa.types.Ast.Method) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string name = 1;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       ** The name of the method 
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       ** The name of the method 
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       ** The name of the method 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       ** The name of the method 
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       ** The name of the method 
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       ** The name of the method 
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      // repeated .boa.types.Modifier modifiers = 2;
      private java.util.List<boa.types.Ast.Modifier> modifiers_ =
        java.util.Collections.emptyList();
      private void ensureModifiersIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          modifiers_ = new java.util.ArrayList<boa.types.Ast.Modifier>(modifiers_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Modifier, boa.types.Ast.Modifier.Builder, boa.types.Ast.ModifierOrBuilder> modifiersBuilder_;

      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Modifier> getModifiersList() {
        if (modifiersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(modifiers_);
        } else {
          return modifiersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public int getModifiersCount() {
        if (modifiersBuilder_ == null) {
          return modifiers_.size();
        } else {
          return modifiersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public boa.types.Ast.Modifier getModifiers(int index) {
        if (modifiersBuilder_ == null) {
          return modifiers_.get(index);
        } else {
          return modifiersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public Builder setModifiers(
          int index, boa.types.Ast.Modifier value) {
        if (modifiersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModifiersIsMutable();
          modifiers_.set(index, value);
          onChanged();
        } else {
          modifiersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public Builder setModifiers(
          int index, boa.types.Ast.Modifier.Builder builderForValue) {
        if (modifiersBuilder_ == null) {
          ensureModifiersIsMutable();
          modifiers_.set(index, builderForValue.build());
          onChanged();
        } else {
          modifiersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public Builder addModifiers(boa.types.Ast.Modifier value) {
        if (modifiersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModifiersIsMutable();
          modifiers_.add(value);
          onChanged();
        } else {
          modifiersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public Builder addModifiers(
          int index, boa.types.Ast.Modifier value) {
        if (modifiersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModifiersIsMutable();
          modifiers_.add(index, value);
          onChanged();
        } else {
          modifiersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public Builder addModifiers(
          boa.types.Ast.Modifier.Builder builderForValue) {
        if (modifiersBuilder_ == null) {
          ensureModifiersIsMutable();
          modifiers_.add(builderForValue.build());
          onChanged();
        } else {
          modifiersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public Builder addModifiers(
          int index, boa.types.Ast.Modifier.Builder builderForValue) {
        if (modifiersBuilder_ == null) {
          ensureModifiersIsMutable();
          modifiers_.add(index, builderForValue.build());
          onChanged();
        } else {
          modifiersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public Builder addAllModifiers(
          java.lang.Iterable<? extends boa.types.Ast.Modifier> values) {
        if (modifiersBuilder_ == null) {
          ensureModifiersIsMutable();
          super.addAll(values, modifiers_);
          onChanged();
        } else {
          modifiersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public Builder clearModifiers() {
        if (modifiersBuilder_ == null) {
          modifiers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          modifiersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public Builder removeModifiers(int index) {
        if (modifiersBuilder_ == null) {
          ensureModifiersIsMutable();
          modifiers_.remove(index);
          onChanged();
        } else {
          modifiersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public boa.types.Ast.Modifier.Builder getModifiersBuilder(
          int index) {
        return getModifiersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public boa.types.Ast.ModifierOrBuilder getModifiersOrBuilder(
          int index) {
        if (modifiersBuilder_ == null) {
          return modifiers_.get(index);  } else {
          return modifiersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.ModifierOrBuilder> 
           getModifiersOrBuilderList() {
        if (modifiersBuilder_ != null) {
          return modifiersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(modifiers_);
        }
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public boa.types.Ast.Modifier.Builder addModifiersBuilder() {
        return getModifiersFieldBuilder().addBuilder(
            boa.types.Ast.Modifier.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public boa.types.Ast.Modifier.Builder addModifiersBuilder(
          int index) {
        return getModifiersFieldBuilder().addBuilder(
            index, boa.types.Ast.Modifier.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Modifier.Builder> 
           getModifiersBuilderList() {
        return getModifiersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Modifier, boa.types.Ast.Modifier.Builder, boa.types.Ast.ModifierOrBuilder> 
          getModifiersFieldBuilder() {
        if (modifiersBuilder_ == null) {
          modifiersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Modifier, boa.types.Ast.Modifier.Builder, boa.types.Ast.ModifierOrBuilder>(
                  modifiers_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          modifiers_ = null;
        }
        return modifiersBuilder_;
      }

      // required .boa.types.Type return_type = 3;
      private boa.types.Ast.Type returnType_ = boa.types.Ast.Type.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> returnTypeBuilder_;
      /**
       * <code>required .boa.types.Type return_type = 3;</code>
       *
       * <pre>
       ** The type returned from the method; if the method returns nothing, this type will be void 
       * </pre>
       */
      public boolean hasReturnType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .boa.types.Type return_type = 3;</code>
       *
       * <pre>
       ** The type returned from the method; if the method returns nothing, this type will be void 
       * </pre>
       */
      public boa.types.Ast.Type getReturnType() {
        if (returnTypeBuilder_ == null) {
          return returnType_;
        } else {
          return returnTypeBuilder_.getMessage();
        }
      }
      /**
       * <code>required .boa.types.Type return_type = 3;</code>
       *
       * <pre>
       ** The type returned from the method; if the method returns nothing, this type will be void 
       * </pre>
       */
      public Builder setReturnType(boa.types.Ast.Type value) {
        if (returnTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          returnType_ = value;
          onChanged();
        } else {
          returnTypeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .boa.types.Type return_type = 3;</code>
       *
       * <pre>
       ** The type returned from the method; if the method returns nothing, this type will be void 
       * </pre>
       */
      public Builder setReturnType(
          boa.types.Ast.Type.Builder builderForValue) {
        if (returnTypeBuilder_ == null) {
          returnType_ = builderForValue.build();
          onChanged();
        } else {
          returnTypeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .boa.types.Type return_type = 3;</code>
       *
       * <pre>
       ** The type returned from the method; if the method returns nothing, this type will be void 
       * </pre>
       */
      public Builder mergeReturnType(boa.types.Ast.Type value) {
        if (returnTypeBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              returnType_ != boa.types.Ast.Type.getDefaultInstance()) {
            returnType_ =
              boa.types.Ast.Type.newBuilder(returnType_).mergeFrom(value).buildPartial();
          } else {
            returnType_ = value;
          }
          onChanged();
        } else {
          returnTypeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .boa.types.Type return_type = 3;</code>
       *
       * <pre>
       ** The type returned from the method; if the method returns nothing, this type will be void 
       * </pre>
       */
      public Builder clearReturnType() {
        if (returnTypeBuilder_ == null) {
          returnType_ = boa.types.Ast.Type.getDefaultInstance();
          onChanged();
        } else {
          returnTypeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>required .boa.types.Type return_type = 3;</code>
       *
       * <pre>
       ** The type returned from the method; if the method returns nothing, this type will be void 
       * </pre>
       */
      public boa.types.Ast.Type.Builder getReturnTypeBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getReturnTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>required .boa.types.Type return_type = 3;</code>
       *
       * <pre>
       ** The type returned from the method; if the method returns nothing, this type will be void 
       * </pre>
       */
      public boa.types.Ast.TypeOrBuilder getReturnTypeOrBuilder() {
        if (returnTypeBuilder_ != null) {
          return returnTypeBuilder_.getMessageOrBuilder();
        } else {
          return returnType_;
        }
      }
      /**
       * <code>required .boa.types.Type return_type = 3;</code>
       *
       * <pre>
       ** The type returned from the method; if the method returns nothing, this type will be void 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> 
          getReturnTypeFieldBuilder() {
        if (returnTypeBuilder_ == null) {
          returnTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder>(
                  returnType_,
                  getParentForChildren(),
                  isClean());
          returnType_ = null;
        }
        return returnTypeBuilder_;
      }

      // repeated .boa.types.Type generic_parameters = 4;
      private java.util.List<boa.types.Ast.Type> genericParameters_ =
        java.util.Collections.emptyList();
      private void ensureGenericParametersIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          genericParameters_ = new java.util.ArrayList<boa.types.Ast.Type>(genericParameters_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> genericParametersBuilder_;

      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** The list of generic parameters for this method 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Type> getGenericParametersList() {
        if (genericParametersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(genericParameters_);
        } else {
          return genericParametersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** The list of generic parameters for this method 
       * </pre>
       */
      public int getGenericParametersCount() {
        if (genericParametersBuilder_ == null) {
          return genericParameters_.size();
        } else {
          return genericParametersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** The list of generic parameters for this method 
       * </pre>
       */
      public boa.types.Ast.Type getGenericParameters(int index) {
        if (genericParametersBuilder_ == null) {
          return genericParameters_.get(index);
        } else {
          return genericParametersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** The list of generic parameters for this method 
       * </pre>
       */
      public Builder setGenericParameters(
          int index, boa.types.Ast.Type value) {
        if (genericParametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGenericParametersIsMutable();
          genericParameters_.set(index, value);
          onChanged();
        } else {
          genericParametersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** The list of generic parameters for this method 
       * </pre>
       */
      public Builder setGenericParameters(
          int index, boa.types.Ast.Type.Builder builderForValue) {
        if (genericParametersBuilder_ == null) {
          ensureGenericParametersIsMutable();
          genericParameters_.set(index, builderForValue.build());
          onChanged();
        } else {
          genericParametersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** The list of generic parameters for this method 
       * </pre>
       */
      public Builder addGenericParameters(boa.types.Ast.Type value) {
        if (genericParametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGenericParametersIsMutable();
          genericParameters_.add(value);
          onChanged();
        } else {
          genericParametersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** The list of generic parameters for this method 
       * </pre>
       */
      public Builder addGenericParameters(
          int index, boa.types.Ast.Type value) {
        if (genericParametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGenericParametersIsMutable();
          genericParameters_.add(index, value);
          onChanged();
        } else {
          genericParametersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** The list of generic parameters for this method 
       * </pre>
       */
      public Builder addGenericParameters(
          boa.types.Ast.Type.Builder builderForValue) {
        if (genericParametersBuilder_ == null) {
          ensureGenericParametersIsMutable();
          genericParameters_.add(builderForValue.build());
          onChanged();
        } else {
          genericParametersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** The list of generic parameters for this method 
       * </pre>
       */
      public Builder addGenericParameters(
          int index, boa.types.Ast.Type.Builder builderForValue) {
        if (genericParametersBuilder_ == null) {
          ensureGenericParametersIsMutable();
          genericParameters_.add(index, builderForValue.build());
          onChanged();
        } else {
          genericParametersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** The list of generic parameters for this method 
       * </pre>
       */
      public Builder addAllGenericParameters(
          java.lang.Iterable<? extends boa.types.Ast.Type> values) {
        if (genericParametersBuilder_ == null) {
          ensureGenericParametersIsMutable();
          super.addAll(values, genericParameters_);
          onChanged();
        } else {
          genericParametersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** The list of generic parameters for this method 
       * </pre>
       */
      public Builder clearGenericParameters() {
        if (genericParametersBuilder_ == null) {
          genericParameters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          genericParametersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** The list of generic parameters for this method 
       * </pre>
       */
      public Builder removeGenericParameters(int index) {
        if (genericParametersBuilder_ == null) {
          ensureGenericParametersIsMutable();
          genericParameters_.remove(index);
          onChanged();
        } else {
          genericParametersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** The list of generic parameters for this method 
       * </pre>
       */
      public boa.types.Ast.Type.Builder getGenericParametersBuilder(
          int index) {
        return getGenericParametersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** The list of generic parameters for this method 
       * </pre>
       */
      public boa.types.Ast.TypeOrBuilder getGenericParametersOrBuilder(
          int index) {
        if (genericParametersBuilder_ == null) {
          return genericParameters_.get(index);  } else {
          return genericParametersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** The list of generic parameters for this method 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
           getGenericParametersOrBuilderList() {
        if (genericParametersBuilder_ != null) {
          return genericParametersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(genericParameters_);
        }
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** The list of generic parameters for this method 
       * </pre>
       */
      public boa.types.Ast.Type.Builder addGenericParametersBuilder() {
        return getGenericParametersFieldBuilder().addBuilder(
            boa.types.Ast.Type.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** The list of generic parameters for this method 
       * </pre>
       */
      public boa.types.Ast.Type.Builder addGenericParametersBuilder(
          int index) {
        return getGenericParametersFieldBuilder().addBuilder(
            index, boa.types.Ast.Type.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Type generic_parameters = 4;</code>
       *
       * <pre>
       ** The list of generic parameters for this method 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Type.Builder> 
           getGenericParametersBuilderList() {
        return getGenericParametersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> 
          getGenericParametersFieldBuilder() {
        if (genericParametersBuilder_ == null) {
          genericParametersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder>(
                  genericParameters_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          genericParameters_ = null;
        }
        return genericParametersBuilder_;
      }

      // repeated .boa.types.Variable arguments = 5;
      private java.util.List<boa.types.Ast.Variable> arguments_ =
        java.util.Collections.emptyList();
      private void ensureArgumentsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          arguments_ = new java.util.ArrayList<boa.types.Ast.Variable>(arguments_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Variable, boa.types.Ast.Variable.Builder, boa.types.Ast.VariableOrBuilder> argumentsBuilder_;

      /**
       * <code>repeated .boa.types.Variable arguments = 5;</code>
       *
       * <pre>
       ** The arguments the method takes 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Variable> getArgumentsList() {
        if (argumentsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(arguments_);
        } else {
          return argumentsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .boa.types.Variable arguments = 5;</code>
       *
       * <pre>
       ** The arguments the method takes 
       * </pre>
       */
      public int getArgumentsCount() {
        if (argumentsBuilder_ == null) {
          return arguments_.size();
        } else {
          return argumentsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .boa.types.Variable arguments = 5;</code>
       *
       * <pre>
       ** The arguments the method takes 
       * </pre>
       */
      public boa.types.Ast.Variable getArguments(int index) {
        if (argumentsBuilder_ == null) {
          return arguments_.get(index);
        } else {
          return argumentsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .boa.types.Variable arguments = 5;</code>
       *
       * <pre>
       ** The arguments the method takes 
       * </pre>
       */
      public Builder setArguments(
          int index, boa.types.Ast.Variable value) {
        if (argumentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArgumentsIsMutable();
          arguments_.set(index, value);
          onChanged();
        } else {
          argumentsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Variable arguments = 5;</code>
       *
       * <pre>
       ** The arguments the method takes 
       * </pre>
       */
      public Builder setArguments(
          int index, boa.types.Ast.Variable.Builder builderForValue) {
        if (argumentsBuilder_ == null) {
          ensureArgumentsIsMutable();
          arguments_.set(index, builderForValue.build());
          onChanged();
        } else {
          argumentsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Variable arguments = 5;</code>
       *
       * <pre>
       ** The arguments the method takes 
       * </pre>
       */
      public Builder addArguments(boa.types.Ast.Variable value) {
        if (argumentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArgumentsIsMutable();
          arguments_.add(value);
          onChanged();
        } else {
          argumentsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Variable arguments = 5;</code>
       *
       * <pre>
       ** The arguments the method takes 
       * </pre>
       */
      public Builder addArguments(
          int index, boa.types.Ast.Variable value) {
        if (argumentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArgumentsIsMutable();
          arguments_.add(index, value);
          onChanged();
        } else {
          argumentsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Variable arguments = 5;</code>
       *
       * <pre>
       ** The arguments the method takes 
       * </pre>
       */
      public Builder addArguments(
          boa.types.Ast.Variable.Builder builderForValue) {
        if (argumentsBuilder_ == null) {
          ensureArgumentsIsMutable();
          arguments_.add(builderForValue.build());
          onChanged();
        } else {
          argumentsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Variable arguments = 5;</code>
       *
       * <pre>
       ** The arguments the method takes 
       * </pre>
       */
      public Builder addArguments(
          int index, boa.types.Ast.Variable.Builder builderForValue) {
        if (argumentsBuilder_ == null) {
          ensureArgumentsIsMutable();
          arguments_.add(index, builderForValue.build());
          onChanged();
        } else {
          argumentsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Variable arguments = 5;</code>
       *
       * <pre>
       ** The arguments the method takes 
       * </pre>
       */
      public Builder addAllArguments(
          java.lang.Iterable<? extends boa.types.Ast.Variable> values) {
        if (argumentsBuilder_ == null) {
          ensureArgumentsIsMutable();
          super.addAll(values, arguments_);
          onChanged();
        } else {
          argumentsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Variable arguments = 5;</code>
       *
       * <pre>
       ** The arguments the method takes 
       * </pre>
       */
      public Builder clearArguments() {
        if (argumentsBuilder_ == null) {
          arguments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          argumentsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Variable arguments = 5;</code>
       *
       * <pre>
       ** The arguments the method takes 
       * </pre>
       */
      public Builder removeArguments(int index) {
        if (argumentsBuilder_ == null) {
          ensureArgumentsIsMutable();
          arguments_.remove(index);
          onChanged();
        } else {
          argumentsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Variable arguments = 5;</code>
       *
       * <pre>
       ** The arguments the method takes 
       * </pre>
       */
      public boa.types.Ast.Variable.Builder getArgumentsBuilder(
          int index) {
        return getArgumentsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .boa.types.Variable arguments = 5;</code>
       *
       * <pre>
       ** The arguments the method takes 
       * </pre>
       */
      public boa.types.Ast.VariableOrBuilder getArgumentsOrBuilder(
          int index) {
        if (argumentsBuilder_ == null) {
          return arguments_.get(index);  } else {
          return argumentsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .boa.types.Variable arguments = 5;</code>
       *
       * <pre>
       ** The arguments the method takes 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.VariableOrBuilder> 
           getArgumentsOrBuilderList() {
        if (argumentsBuilder_ != null) {
          return argumentsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(arguments_);
        }
      }
      /**
       * <code>repeated .boa.types.Variable arguments = 5;</code>
       *
       * <pre>
       ** The arguments the method takes 
       * </pre>
       */
      public boa.types.Ast.Variable.Builder addArgumentsBuilder() {
        return getArgumentsFieldBuilder().addBuilder(
            boa.types.Ast.Variable.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Variable arguments = 5;</code>
       *
       * <pre>
       ** The arguments the method takes 
       * </pre>
       */
      public boa.types.Ast.Variable.Builder addArgumentsBuilder(
          int index) {
        return getArgumentsFieldBuilder().addBuilder(
            index, boa.types.Ast.Variable.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Variable arguments = 5;</code>
       *
       * <pre>
       ** The arguments the method takes 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Variable.Builder> 
           getArgumentsBuilderList() {
        return getArgumentsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Variable, boa.types.Ast.Variable.Builder, boa.types.Ast.VariableOrBuilder> 
          getArgumentsFieldBuilder() {
        if (argumentsBuilder_ == null) {
          argumentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Variable, boa.types.Ast.Variable.Builder, boa.types.Ast.VariableOrBuilder>(
                  arguments_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          arguments_ = null;
        }
        return argumentsBuilder_;
      }

      // repeated .boa.types.Type exception_types = 6;
      private java.util.List<boa.types.Ast.Type> exceptionTypes_ =
        java.util.Collections.emptyList();
      private void ensureExceptionTypesIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          exceptionTypes_ = new java.util.ArrayList<boa.types.Ast.Type>(exceptionTypes_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> exceptionTypesBuilder_;

      /**
       * <code>repeated .boa.types.Type exception_types = 6;</code>
       *
       * <pre>
       ** The list of exceptions thrown by this method 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Type> getExceptionTypesList() {
        if (exceptionTypesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(exceptionTypes_);
        } else {
          return exceptionTypesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .boa.types.Type exception_types = 6;</code>
       *
       * <pre>
       ** The list of exceptions thrown by this method 
       * </pre>
       */
      public int getExceptionTypesCount() {
        if (exceptionTypesBuilder_ == null) {
          return exceptionTypes_.size();
        } else {
          return exceptionTypesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .boa.types.Type exception_types = 6;</code>
       *
       * <pre>
       ** The list of exceptions thrown by this method 
       * </pre>
       */
      public boa.types.Ast.Type getExceptionTypes(int index) {
        if (exceptionTypesBuilder_ == null) {
          return exceptionTypes_.get(index);
        } else {
          return exceptionTypesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .boa.types.Type exception_types = 6;</code>
       *
       * <pre>
       ** The list of exceptions thrown by this method 
       * </pre>
       */
      public Builder setExceptionTypes(
          int index, boa.types.Ast.Type value) {
        if (exceptionTypesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExceptionTypesIsMutable();
          exceptionTypes_.set(index, value);
          onChanged();
        } else {
          exceptionTypesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type exception_types = 6;</code>
       *
       * <pre>
       ** The list of exceptions thrown by this method 
       * </pre>
       */
      public Builder setExceptionTypes(
          int index, boa.types.Ast.Type.Builder builderForValue) {
        if (exceptionTypesBuilder_ == null) {
          ensureExceptionTypesIsMutable();
          exceptionTypes_.set(index, builderForValue.build());
          onChanged();
        } else {
          exceptionTypesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type exception_types = 6;</code>
       *
       * <pre>
       ** The list of exceptions thrown by this method 
       * </pre>
       */
      public Builder addExceptionTypes(boa.types.Ast.Type value) {
        if (exceptionTypesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExceptionTypesIsMutable();
          exceptionTypes_.add(value);
          onChanged();
        } else {
          exceptionTypesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type exception_types = 6;</code>
       *
       * <pre>
       ** The list of exceptions thrown by this method 
       * </pre>
       */
      public Builder addExceptionTypes(
          int index, boa.types.Ast.Type value) {
        if (exceptionTypesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExceptionTypesIsMutable();
          exceptionTypes_.add(index, value);
          onChanged();
        } else {
          exceptionTypesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type exception_types = 6;</code>
       *
       * <pre>
       ** The list of exceptions thrown by this method 
       * </pre>
       */
      public Builder addExceptionTypes(
          boa.types.Ast.Type.Builder builderForValue) {
        if (exceptionTypesBuilder_ == null) {
          ensureExceptionTypesIsMutable();
          exceptionTypes_.add(builderForValue.build());
          onChanged();
        } else {
          exceptionTypesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type exception_types = 6;</code>
       *
       * <pre>
       ** The list of exceptions thrown by this method 
       * </pre>
       */
      public Builder addExceptionTypes(
          int index, boa.types.Ast.Type.Builder builderForValue) {
        if (exceptionTypesBuilder_ == null) {
          ensureExceptionTypesIsMutable();
          exceptionTypes_.add(index, builderForValue.build());
          onChanged();
        } else {
          exceptionTypesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type exception_types = 6;</code>
       *
       * <pre>
       ** The list of exceptions thrown by this method 
       * </pre>
       */
      public Builder addAllExceptionTypes(
          java.lang.Iterable<? extends boa.types.Ast.Type> values) {
        if (exceptionTypesBuilder_ == null) {
          ensureExceptionTypesIsMutable();
          super.addAll(values, exceptionTypes_);
          onChanged();
        } else {
          exceptionTypesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type exception_types = 6;</code>
       *
       * <pre>
       ** The list of exceptions thrown by this method 
       * </pre>
       */
      public Builder clearExceptionTypes() {
        if (exceptionTypesBuilder_ == null) {
          exceptionTypes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          exceptionTypesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type exception_types = 6;</code>
       *
       * <pre>
       ** The list of exceptions thrown by this method 
       * </pre>
       */
      public Builder removeExceptionTypes(int index) {
        if (exceptionTypesBuilder_ == null) {
          ensureExceptionTypesIsMutable();
          exceptionTypes_.remove(index);
          onChanged();
        } else {
          exceptionTypesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type exception_types = 6;</code>
       *
       * <pre>
       ** The list of exceptions thrown by this method 
       * </pre>
       */
      public boa.types.Ast.Type.Builder getExceptionTypesBuilder(
          int index) {
        return getExceptionTypesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .boa.types.Type exception_types = 6;</code>
       *
       * <pre>
       ** The list of exceptions thrown by this method 
       * </pre>
       */
      public boa.types.Ast.TypeOrBuilder getExceptionTypesOrBuilder(
          int index) {
        if (exceptionTypesBuilder_ == null) {
          return exceptionTypes_.get(index);  } else {
          return exceptionTypesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .boa.types.Type exception_types = 6;</code>
       *
       * <pre>
       ** The list of exceptions thrown by this method 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
           getExceptionTypesOrBuilderList() {
        if (exceptionTypesBuilder_ != null) {
          return exceptionTypesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(exceptionTypes_);
        }
      }
      /**
       * <code>repeated .boa.types.Type exception_types = 6;</code>
       *
       * <pre>
       ** The list of exceptions thrown by this method 
       * </pre>
       */
      public boa.types.Ast.Type.Builder addExceptionTypesBuilder() {
        return getExceptionTypesFieldBuilder().addBuilder(
            boa.types.Ast.Type.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Type exception_types = 6;</code>
       *
       * <pre>
       ** The list of exceptions thrown by this method 
       * </pre>
       */
      public boa.types.Ast.Type.Builder addExceptionTypesBuilder(
          int index) {
        return getExceptionTypesFieldBuilder().addBuilder(
            index, boa.types.Ast.Type.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Type exception_types = 6;</code>
       *
       * <pre>
       ** The list of exceptions thrown by this method 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Type.Builder> 
           getExceptionTypesBuilderList() {
        return getExceptionTypesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> 
          getExceptionTypesFieldBuilder() {
        if (exceptionTypesBuilder_ == null) {
          exceptionTypesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder>(
                  exceptionTypes_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          exceptionTypes_ = null;
        }
        return exceptionTypesBuilder_;
      }

      // repeated .boa.types.Statement statements = 7;
      private java.util.List<boa.types.Ast.Statement> statements_ =
        java.util.Collections.emptyList();
      private void ensureStatementsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          statements_ = new java.util.ArrayList<boa.types.Ast.Statement>(statements_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> statementsBuilder_;

      /**
       * <code>repeated .boa.types.Statement statements = 7;</code>
       *
       * <pre>
       **
       * The statements in the method body. Note that most methods (in C-like
       * languages, such as Java) contain a single statement of type BLOCK, which
       * contains the list of statements within it!
       * </pre>
       */
      public java.util.List<boa.types.Ast.Statement> getStatementsList() {
        if (statementsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(statements_);
        } else {
          return statementsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .boa.types.Statement statements = 7;</code>
       *
       * <pre>
       **
       * The statements in the method body. Note that most methods (in C-like
       * languages, such as Java) contain a single statement of type BLOCK, which
       * contains the list of statements within it!
       * </pre>
       */
      public int getStatementsCount() {
        if (statementsBuilder_ == null) {
          return statements_.size();
        } else {
          return statementsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .boa.types.Statement statements = 7;</code>
       *
       * <pre>
       **
       * The statements in the method body. Note that most methods (in C-like
       * languages, such as Java) contain a single statement of type BLOCK, which
       * contains the list of statements within it!
       * </pre>
       */
      public boa.types.Ast.Statement getStatements(int index) {
        if (statementsBuilder_ == null) {
          return statements_.get(index);
        } else {
          return statementsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .boa.types.Statement statements = 7;</code>
       *
       * <pre>
       **
       * The statements in the method body. Note that most methods (in C-like
       * languages, such as Java) contain a single statement of type BLOCK, which
       * contains the list of statements within it!
       * </pre>
       */
      public Builder setStatements(
          int index, boa.types.Ast.Statement value) {
        if (statementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatementsIsMutable();
          statements_.set(index, value);
          onChanged();
        } else {
          statementsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements = 7;</code>
       *
       * <pre>
       **
       * The statements in the method body. Note that most methods (in C-like
       * languages, such as Java) contain a single statement of type BLOCK, which
       * contains the list of statements within it!
       * </pre>
       */
      public Builder setStatements(
          int index, boa.types.Ast.Statement.Builder builderForValue) {
        if (statementsBuilder_ == null) {
          ensureStatementsIsMutable();
          statements_.set(index, builderForValue.build());
          onChanged();
        } else {
          statementsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements = 7;</code>
       *
       * <pre>
       **
       * The statements in the method body. Note that most methods (in C-like
       * languages, such as Java) contain a single statement of type BLOCK, which
       * contains the list of statements within it!
       * </pre>
       */
      public Builder addStatements(boa.types.Ast.Statement value) {
        if (statementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatementsIsMutable();
          statements_.add(value);
          onChanged();
        } else {
          statementsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements = 7;</code>
       *
       * <pre>
       **
       * The statements in the method body. Note that most methods (in C-like
       * languages, such as Java) contain a single statement of type BLOCK, which
       * contains the list of statements within it!
       * </pre>
       */
      public Builder addStatements(
          int index, boa.types.Ast.Statement value) {
        if (statementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatementsIsMutable();
          statements_.add(index, value);
          onChanged();
        } else {
          statementsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements = 7;</code>
       *
       * <pre>
       **
       * The statements in the method body. Note that most methods (in C-like
       * languages, such as Java) contain a single statement of type BLOCK, which
       * contains the list of statements within it!
       * </pre>
       */
      public Builder addStatements(
          boa.types.Ast.Statement.Builder builderForValue) {
        if (statementsBuilder_ == null) {
          ensureStatementsIsMutable();
          statements_.add(builderForValue.build());
          onChanged();
        } else {
          statementsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements = 7;</code>
       *
       * <pre>
       **
       * The statements in the method body. Note that most methods (in C-like
       * languages, such as Java) contain a single statement of type BLOCK, which
       * contains the list of statements within it!
       * </pre>
       */
      public Builder addStatements(
          int index, boa.types.Ast.Statement.Builder builderForValue) {
        if (statementsBuilder_ == null) {
          ensureStatementsIsMutable();
          statements_.add(index, builderForValue.build());
          onChanged();
        } else {
          statementsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements = 7;</code>
       *
       * <pre>
       **
       * The statements in the method body. Note that most methods (in C-like
       * languages, such as Java) contain a single statement of type BLOCK, which
       * contains the list of statements within it!
       * </pre>
       */
      public Builder addAllStatements(
          java.lang.Iterable<? extends boa.types.Ast.Statement> values) {
        if (statementsBuilder_ == null) {
          ensureStatementsIsMutable();
          super.addAll(values, statements_);
          onChanged();
        } else {
          statementsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements = 7;</code>
       *
       * <pre>
       **
       * The statements in the method body. Note that most methods (in C-like
       * languages, such as Java) contain a single statement of type BLOCK, which
       * contains the list of statements within it!
       * </pre>
       */
      public Builder clearStatements() {
        if (statementsBuilder_ == null) {
          statements_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          statementsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements = 7;</code>
       *
       * <pre>
       **
       * The statements in the method body. Note that most methods (in C-like
       * languages, such as Java) contain a single statement of type BLOCK, which
       * contains the list of statements within it!
       * </pre>
       */
      public Builder removeStatements(int index) {
        if (statementsBuilder_ == null) {
          ensureStatementsIsMutable();
          statements_.remove(index);
          onChanged();
        } else {
          statementsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements = 7;</code>
       *
       * <pre>
       **
       * The statements in the method body. Note that most methods (in C-like
       * languages, such as Java) contain a single statement of type BLOCK, which
       * contains the list of statements within it!
       * </pre>
       */
      public boa.types.Ast.Statement.Builder getStatementsBuilder(
          int index) {
        return getStatementsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .boa.types.Statement statements = 7;</code>
       *
       * <pre>
       **
       * The statements in the method body. Note that most methods (in C-like
       * languages, such as Java) contain a single statement of type BLOCK, which
       * contains the list of statements within it!
       * </pre>
       */
      public boa.types.Ast.StatementOrBuilder getStatementsOrBuilder(
          int index) {
        if (statementsBuilder_ == null) {
          return statements_.get(index);  } else {
          return statementsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .boa.types.Statement statements = 7;</code>
       *
       * <pre>
       **
       * The statements in the method body. Note that most methods (in C-like
       * languages, such as Java) contain a single statement of type BLOCK, which
       * contains the list of statements within it!
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.StatementOrBuilder> 
           getStatementsOrBuilderList() {
        if (statementsBuilder_ != null) {
          return statementsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(statements_);
        }
      }
      /**
       * <code>repeated .boa.types.Statement statements = 7;</code>
       *
       * <pre>
       **
       * The statements in the method body. Note that most methods (in C-like
       * languages, such as Java) contain a single statement of type BLOCK, which
       * contains the list of statements within it!
       * </pre>
       */
      public boa.types.Ast.Statement.Builder addStatementsBuilder() {
        return getStatementsFieldBuilder().addBuilder(
            boa.types.Ast.Statement.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Statement statements = 7;</code>
       *
       * <pre>
       **
       * The statements in the method body. Note that most methods (in C-like
       * languages, such as Java) contain a single statement of type BLOCK, which
       * contains the list of statements within it!
       * </pre>
       */
      public boa.types.Ast.Statement.Builder addStatementsBuilder(
          int index) {
        return getStatementsFieldBuilder().addBuilder(
            index, boa.types.Ast.Statement.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Statement statements = 7;</code>
       *
       * <pre>
       **
       * The statements in the method body. Note that most methods (in C-like
       * languages, such as Java) contain a single statement of type BLOCK, which
       * contains the list of statements within it!
       * </pre>
       */
      public java.util.List<boa.types.Ast.Statement.Builder> 
           getStatementsBuilderList() {
        return getStatementsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> 
          getStatementsFieldBuilder() {
        if (statementsBuilder_ == null) {
          statementsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder>(
                  statements_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          statements_ = null;
        }
        return statementsBuilder_;
      }

      // optional .boa.types.ChangeKind structural_change_kind = 8;
      private boa.types.Shared.ChangeKind structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 8;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public boolean hasStructuralChangeKind() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 8;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public boa.types.Shared.ChangeKind getStructuralChangeKind() {
        return structuralChangeKind_;
      }
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 8;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public Builder setStructuralChangeKind(boa.types.Shared.ChangeKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        structuralChangeKind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 8;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public Builder clearStructuralChangeKind() {
        bitField0_ = (bitField0_ & ~0x00000080);
        structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        onChanged();
        return this;
      }

      // optional .boa.types.ChangeKind label_change_kind = 9;
      private boa.types.Shared.ChangeKind labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 9;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public boolean hasLabelChangeKind() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 9;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public boa.types.Shared.ChangeKind getLabelChangeKind() {
        return labelChangeKind_;
      }
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 9;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public Builder setLabelChangeKind(boa.types.Shared.ChangeKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        labelChangeKind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 9;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public Builder clearLabelChangeKind() {
        bitField0_ = (bitField0_ & ~0x00000100);
        labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:boa.types.Method)
    }

    static {
      defaultInstance = new Method(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:boa.types.Method)
  }

  public interface VariableOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string name = 1;
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     ** The name of the variable 
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     ** The name of the variable 
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     ** The name of the variable 
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required .boa.types.Type variable_type = 2;
    /**
     * <code>required .boa.types.Type variable_type = 2;</code>
     *
     * <pre>
     ** The type of the variable 
     * </pre>
     */
    boolean hasVariableType();
    /**
     * <code>required .boa.types.Type variable_type = 2;</code>
     *
     * <pre>
     ** The type of the variable 
     * </pre>
     */
    boa.types.Ast.Type getVariableType();
    /**
     * <code>required .boa.types.Type variable_type = 2;</code>
     *
     * <pre>
     ** The type of the variable 
     * </pre>
     */
    boa.types.Ast.TypeOrBuilder getVariableTypeOrBuilder();

    // repeated .boa.types.Modifier modifiers = 3;
    /**
     * <code>repeated .boa.types.Modifier modifiers = 3;</code>
     *
     * <pre>
     ** A list of all modifiers on the variable 
     * </pre>
     */
    java.util.List<boa.types.Ast.Modifier> 
        getModifiersList();
    /**
     * <code>repeated .boa.types.Modifier modifiers = 3;</code>
     *
     * <pre>
     ** A list of all modifiers on the variable 
     * </pre>
     */
    boa.types.Ast.Modifier getModifiers(int index);
    /**
     * <code>repeated .boa.types.Modifier modifiers = 3;</code>
     *
     * <pre>
     ** A list of all modifiers on the variable 
     * </pre>
     */
    int getModifiersCount();
    /**
     * <code>repeated .boa.types.Modifier modifiers = 3;</code>
     *
     * <pre>
     ** A list of all modifiers on the variable 
     * </pre>
     */
    java.util.List<? extends boa.types.Ast.ModifierOrBuilder> 
        getModifiersOrBuilderList();
    /**
     * <code>repeated .boa.types.Modifier modifiers = 3;</code>
     *
     * <pre>
     ** A list of all modifiers on the variable 
     * </pre>
     */
    boa.types.Ast.ModifierOrBuilder getModifiersOrBuilder(
        int index);

    // optional .boa.types.Expression initializer = 4;
    /**
     * <code>optional .boa.types.Expression initializer = 4;</code>
     *
     * <pre>
     ** If the variable has an initial assignment, the expression is stored here 
     * </pre>
     */
    boolean hasInitializer();
    /**
     * <code>optional .boa.types.Expression initializer = 4;</code>
     *
     * <pre>
     ** If the variable has an initial assignment, the expression is stored here 
     * </pre>
     */
    boa.types.Ast.Expression getInitializer();
    /**
     * <code>optional .boa.types.Expression initializer = 4;</code>
     *
     * <pre>
     ** If the variable has an initial assignment, the expression is stored here 
     * </pre>
     */
    boa.types.Ast.ExpressionOrBuilder getInitializerOrBuilder();

    // optional .boa.types.ChangeKind structural_change_kind = 5;
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 5;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    boolean hasStructuralChangeKind();
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 5;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    boa.types.Shared.ChangeKind getStructuralChangeKind();

    // optional .boa.types.ChangeKind label_change_kind = 6;
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 6;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    boolean hasLabelChangeKind();
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 6;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    boa.types.Shared.ChangeKind getLabelChangeKind();
  }
  /**
   * Protobuf type {@code boa.types.Variable}
   *
   * <pre>
   ** A variable declaration - can be a field, local, parameter, etc 
   * </pre>
   */
  public static final class Variable extends
      com.google.protobuf.GeneratedMessage
      implements VariableOrBuilder {
    // Use Variable.newBuilder() to construct.
    private Variable(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Variable(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Variable defaultInstance;
    public static Variable getDefaultInstance() {
      return defaultInstance;
    }

    public Variable getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Variable(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 18: {
              boa.types.Ast.Type.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = variableType_.toBuilder();
              }
              variableType_ = input.readMessage(boa.types.Ast.Type.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(variableType_);
                variableType_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                modifiers_ = new java.util.ArrayList<boa.types.Ast.Modifier>();
                mutable_bitField0_ |= 0x00000004;
              }
              modifiers_.add(input.readMessage(boa.types.Ast.Modifier.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              boa.types.Ast.Expression.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = initializer_.toBuilder();
              }
              initializer_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(initializer_);
                initializer_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              boa.types.Shared.ChangeKind value = boa.types.Shared.ChangeKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                structuralChangeKind_ = value;
              }
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              boa.types.Shared.ChangeKind value = boa.types.Shared.ChangeKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                labelChangeKind_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          modifiers_ = java.util.Collections.unmodifiableList(modifiers_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return boa.types.Ast.internal_static_boa_types_Variable_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return boa.types.Ast.internal_static_boa_types_Variable_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              boa.types.Ast.Variable.class, boa.types.Ast.Variable.Builder.class);
    }

    public static com.google.protobuf.Parser<Variable> PARSER =
        new com.google.protobuf.AbstractParser<Variable>() {
      public Variable parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Variable(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Variable> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     ** The name of the variable 
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     ** The name of the variable 
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     ** The name of the variable 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .boa.types.Type variable_type = 2;
    public static final int VARIABLE_TYPE_FIELD_NUMBER = 2;
    private boa.types.Ast.Type variableType_;
    /**
     * <code>required .boa.types.Type variable_type = 2;</code>
     *
     * <pre>
     ** The type of the variable 
     * </pre>
     */
    public boolean hasVariableType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .boa.types.Type variable_type = 2;</code>
     *
     * <pre>
     ** The type of the variable 
     * </pre>
     */
    public boa.types.Ast.Type getVariableType() {
      return variableType_;
    }
    /**
     * <code>required .boa.types.Type variable_type = 2;</code>
     *
     * <pre>
     ** The type of the variable 
     * </pre>
     */
    public boa.types.Ast.TypeOrBuilder getVariableTypeOrBuilder() {
      return variableType_;
    }

    // repeated .boa.types.Modifier modifiers = 3;
    public static final int MODIFIERS_FIELD_NUMBER = 3;
    private java.util.List<boa.types.Ast.Modifier> modifiers_;
    /**
     * <code>repeated .boa.types.Modifier modifiers = 3;</code>
     *
     * <pre>
     ** A list of all modifiers on the variable 
     * </pre>
     */
    public java.util.List<boa.types.Ast.Modifier> getModifiersList() {
      return modifiers_;
    }
    /**
     * <code>repeated .boa.types.Modifier modifiers = 3;</code>
     *
     * <pre>
     ** A list of all modifiers on the variable 
     * </pre>
     */
    public java.util.List<? extends boa.types.Ast.ModifierOrBuilder> 
        getModifiersOrBuilderList() {
      return modifiers_;
    }
    /**
     * <code>repeated .boa.types.Modifier modifiers = 3;</code>
     *
     * <pre>
     ** A list of all modifiers on the variable 
     * </pre>
     */
    public int getModifiersCount() {
      return modifiers_.size();
    }
    /**
     * <code>repeated .boa.types.Modifier modifiers = 3;</code>
     *
     * <pre>
     ** A list of all modifiers on the variable 
     * </pre>
     */
    public boa.types.Ast.Modifier getModifiers(int index) {
      return modifiers_.get(index);
    }
    /**
     * <code>repeated .boa.types.Modifier modifiers = 3;</code>
     *
     * <pre>
     ** A list of all modifiers on the variable 
     * </pre>
     */
    public boa.types.Ast.ModifierOrBuilder getModifiersOrBuilder(
        int index) {
      return modifiers_.get(index);
    }

    // optional .boa.types.Expression initializer = 4;
    public static final int INITIALIZER_FIELD_NUMBER = 4;
    private boa.types.Ast.Expression initializer_;
    /**
     * <code>optional .boa.types.Expression initializer = 4;</code>
     *
     * <pre>
     ** If the variable has an initial assignment, the expression is stored here 
     * </pre>
     */
    public boolean hasInitializer() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .boa.types.Expression initializer = 4;</code>
     *
     * <pre>
     ** If the variable has an initial assignment, the expression is stored here 
     * </pre>
     */
    public boa.types.Ast.Expression getInitializer() {
      return initializer_;
    }
    /**
     * <code>optional .boa.types.Expression initializer = 4;</code>
     *
     * <pre>
     ** If the variable has an initial assignment, the expression is stored here 
     * </pre>
     */
    public boa.types.Ast.ExpressionOrBuilder getInitializerOrBuilder() {
      return initializer_;
    }

    // optional .boa.types.ChangeKind structural_change_kind = 5;
    public static final int STRUCTURAL_CHANGE_KIND_FIELD_NUMBER = 5;
    private boa.types.Shared.ChangeKind structuralChangeKind_;
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 5;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    public boolean hasStructuralChangeKind() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 5;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    public boa.types.Shared.ChangeKind getStructuralChangeKind() {
      return structuralChangeKind_;
    }

    // optional .boa.types.ChangeKind label_change_kind = 6;
    public static final int LABEL_CHANGE_KIND_FIELD_NUMBER = 6;
    private boa.types.Shared.ChangeKind labelChangeKind_;
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 6;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    public boolean hasLabelChangeKind() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 6;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    public boa.types.Shared.ChangeKind getLabelChangeKind() {
      return labelChangeKind_;
    }

    private void initFields() {
      name_ = "";
      variableType_ = boa.types.Ast.Type.getDefaultInstance();
      modifiers_ = java.util.Collections.emptyList();
      initializer_ = boa.types.Ast.Expression.getDefaultInstance();
      structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
      labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVariableType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getVariableType().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getModifiersCount(); i++) {
        if (!getModifiers(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasInitializer()) {
        if (!getInitializer().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, variableType_);
      }
      for (int i = 0; i < modifiers_.size(); i++) {
        output.writeMessage(3, modifiers_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(4, initializer_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(5, structuralChangeKind_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(6, labelChangeKind_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, variableType_);
      }
      for (int i = 0; i < modifiers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, modifiers_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, initializer_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, structuralChangeKind_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, labelChangeKind_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static boa.types.Ast.Variable parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static boa.types.Ast.Variable parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static boa.types.Ast.Variable parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static boa.types.Ast.Variable parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static boa.types.Ast.Variable parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static boa.types.Ast.Variable parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static boa.types.Ast.Variable parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static boa.types.Ast.Variable parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static boa.types.Ast.Variable parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static boa.types.Ast.Variable parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(boa.types.Ast.Variable prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code boa.types.Variable}
     *
     * <pre>
     ** A variable declaration - can be a field, local, parameter, etc 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements boa.types.Ast.VariableOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Variable_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Variable_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Variable.class, boa.types.Ast.Variable.Builder.class);
      }

      // Construct using boa.types.Ast.Variable.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getVariableTypeFieldBuilder();
          getModifiersFieldBuilder();
          getInitializerFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (variableTypeBuilder_ == null) {
          variableType_ = boa.types.Ast.Type.getDefaultInstance();
        } else {
          variableTypeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (modifiersBuilder_ == null) {
          modifiers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          modifiersBuilder_.clear();
        }
        if (initializerBuilder_ == null) {
          initializer_ = boa.types.Ast.Expression.getDefaultInstance();
        } else {
          initializerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        bitField0_ = (bitField0_ & ~0x00000010);
        labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return boa.types.Ast.internal_static_boa_types_Variable_descriptor;
      }

      public boa.types.Ast.Variable getDefaultInstanceForType() {
        return boa.types.Ast.Variable.getDefaultInstance();
      }

      public boa.types.Ast.Variable build() {
        boa.types.Ast.Variable result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public boa.types.Ast.Variable buildPartial() {
        boa.types.Ast.Variable result = new boa.types.Ast.Variable(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (variableTypeBuilder_ == null) {
          result.variableType_ = variableType_;
        } else {
          result.variableType_ = variableTypeBuilder_.build();
        }
        if (modifiersBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            modifiers_ = java.util.Collections.unmodifiableList(modifiers_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.modifiers_ = modifiers_;
        } else {
          result.modifiers_ = modifiersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        if (initializerBuilder_ == null) {
          result.initializer_ = initializer_;
        } else {
          result.initializer_ = initializerBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.structuralChangeKind_ = structuralChangeKind_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.labelChangeKind_ = labelChangeKind_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof boa.types.Ast.Variable) {
          return mergeFrom((boa.types.Ast.Variable)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(boa.types.Ast.Variable other) {
        if (other == boa.types.Ast.Variable.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasVariableType()) {
          mergeVariableType(other.getVariableType());
        }
        if (modifiersBuilder_ == null) {
          if (!other.modifiers_.isEmpty()) {
            if (modifiers_.isEmpty()) {
              modifiers_ = other.modifiers_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureModifiersIsMutable();
              modifiers_.addAll(other.modifiers_);
            }
            onChanged();
          }
        } else {
          if (!other.modifiers_.isEmpty()) {
            if (modifiersBuilder_.isEmpty()) {
              modifiersBuilder_.dispose();
              modifiersBuilder_ = null;
              modifiers_ = other.modifiers_;
              bitField0_ = (bitField0_ & ~0x00000004);
              modifiersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getModifiersFieldBuilder() : null;
            } else {
              modifiersBuilder_.addAllMessages(other.modifiers_);
            }
          }
        }
        if (other.hasInitializer()) {
          mergeInitializer(other.getInitializer());
        }
        if (other.hasStructuralChangeKind()) {
          setStructuralChangeKind(other.getStructuralChangeKind());
        }
        if (other.hasLabelChangeKind()) {
          setLabelChangeKind(other.getLabelChangeKind());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasVariableType()) {
          
          return false;
        }
        if (!getVariableType().isInitialized()) {
          
          return false;
        }
        for (int i = 0; i < getModifiersCount(); i++) {
          if (!getModifiers(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasInitializer()) {
          if (!getInitializer().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        boa.types.Ast.Variable parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (boa.types.Ast.Variable) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string name = 1;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       ** The name of the variable 
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       ** The name of the variable 
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       ** The name of the variable 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       ** The name of the variable 
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       ** The name of the variable 
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       ** The name of the variable 
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      // required .boa.types.Type variable_type = 2;
      private boa.types.Ast.Type variableType_ = boa.types.Ast.Type.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> variableTypeBuilder_;
      /**
       * <code>required .boa.types.Type variable_type = 2;</code>
       *
       * <pre>
       ** The type of the variable 
       * </pre>
       */
      public boolean hasVariableType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .boa.types.Type variable_type = 2;</code>
       *
       * <pre>
       ** The type of the variable 
       * </pre>
       */
      public boa.types.Ast.Type getVariableType() {
        if (variableTypeBuilder_ == null) {
          return variableType_;
        } else {
          return variableTypeBuilder_.getMessage();
        }
      }
      /**
       * <code>required .boa.types.Type variable_type = 2;</code>
       *
       * <pre>
       ** The type of the variable 
       * </pre>
       */
      public Builder setVariableType(boa.types.Ast.Type value) {
        if (variableTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          variableType_ = value;
          onChanged();
        } else {
          variableTypeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .boa.types.Type variable_type = 2;</code>
       *
       * <pre>
       ** The type of the variable 
       * </pre>
       */
      public Builder setVariableType(
          boa.types.Ast.Type.Builder builderForValue) {
        if (variableTypeBuilder_ == null) {
          variableType_ = builderForValue.build();
          onChanged();
        } else {
          variableTypeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .boa.types.Type variable_type = 2;</code>
       *
       * <pre>
       ** The type of the variable 
       * </pre>
       */
      public Builder mergeVariableType(boa.types.Ast.Type value) {
        if (variableTypeBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              variableType_ != boa.types.Ast.Type.getDefaultInstance()) {
            variableType_ =
              boa.types.Ast.Type.newBuilder(variableType_).mergeFrom(value).buildPartial();
          } else {
            variableType_ = value;
          }
          onChanged();
        } else {
          variableTypeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .boa.types.Type variable_type = 2;</code>
       *
       * <pre>
       ** The type of the variable 
       * </pre>
       */
      public Builder clearVariableType() {
        if (variableTypeBuilder_ == null) {
          variableType_ = boa.types.Ast.Type.getDefaultInstance();
          onChanged();
        } else {
          variableTypeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .boa.types.Type variable_type = 2;</code>
       *
       * <pre>
       ** The type of the variable 
       * </pre>
       */
      public boa.types.Ast.Type.Builder getVariableTypeBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getVariableTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>required .boa.types.Type variable_type = 2;</code>
       *
       * <pre>
       ** The type of the variable 
       * </pre>
       */
      public boa.types.Ast.TypeOrBuilder getVariableTypeOrBuilder() {
        if (variableTypeBuilder_ != null) {
          return variableTypeBuilder_.getMessageOrBuilder();
        } else {
          return variableType_;
        }
      }
      /**
       * <code>required .boa.types.Type variable_type = 2;</code>
       *
       * <pre>
       ** The type of the variable 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> 
          getVariableTypeFieldBuilder() {
        if (variableTypeBuilder_ == null) {
          variableTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder>(
                  variableType_,
                  getParentForChildren(),
                  isClean());
          variableType_ = null;
        }
        return variableTypeBuilder_;
      }

      // repeated .boa.types.Modifier modifiers = 3;
      private java.util.List<boa.types.Ast.Modifier> modifiers_ =
        java.util.Collections.emptyList();
      private void ensureModifiersIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          modifiers_ = new java.util.ArrayList<boa.types.Ast.Modifier>(modifiers_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Modifier, boa.types.Ast.Modifier.Builder, boa.types.Ast.ModifierOrBuilder> modifiersBuilder_;

      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Modifier> getModifiersList() {
        if (modifiersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(modifiers_);
        } else {
          return modifiersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public int getModifiersCount() {
        if (modifiersBuilder_ == null) {
          return modifiers_.size();
        } else {
          return modifiersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public boa.types.Ast.Modifier getModifiers(int index) {
        if (modifiersBuilder_ == null) {
          return modifiers_.get(index);
        } else {
          return modifiersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public Builder setModifiers(
          int index, boa.types.Ast.Modifier value) {
        if (modifiersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModifiersIsMutable();
          modifiers_.set(index, value);
          onChanged();
        } else {
          modifiersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public Builder setModifiers(
          int index, boa.types.Ast.Modifier.Builder builderForValue) {
        if (modifiersBuilder_ == null) {
          ensureModifiersIsMutable();
          modifiers_.set(index, builderForValue.build());
          onChanged();
        } else {
          modifiersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public Builder addModifiers(boa.types.Ast.Modifier value) {
        if (modifiersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModifiersIsMutable();
          modifiers_.add(value);
          onChanged();
        } else {
          modifiersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public Builder addModifiers(
          int index, boa.types.Ast.Modifier value) {
        if (modifiersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModifiersIsMutable();
          modifiers_.add(index, value);
          onChanged();
        } else {
          modifiersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public Builder addModifiers(
          boa.types.Ast.Modifier.Builder builderForValue) {
        if (modifiersBuilder_ == null) {
          ensureModifiersIsMutable();
          modifiers_.add(builderForValue.build());
          onChanged();
        } else {
          modifiersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public Builder addModifiers(
          int index, boa.types.Ast.Modifier.Builder builderForValue) {
        if (modifiersBuilder_ == null) {
          ensureModifiersIsMutable();
          modifiers_.add(index, builderForValue.build());
          onChanged();
        } else {
          modifiersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public Builder addAllModifiers(
          java.lang.Iterable<? extends boa.types.Ast.Modifier> values) {
        if (modifiersBuilder_ == null) {
          ensureModifiersIsMutable();
          super.addAll(values, modifiers_);
          onChanged();
        } else {
          modifiersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public Builder clearModifiers() {
        if (modifiersBuilder_ == null) {
          modifiers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          modifiersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public Builder removeModifiers(int index) {
        if (modifiersBuilder_ == null) {
          ensureModifiersIsMutable();
          modifiers_.remove(index);
          onChanged();
        } else {
          modifiersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public boa.types.Ast.Modifier.Builder getModifiersBuilder(
          int index) {
        return getModifiersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public boa.types.Ast.ModifierOrBuilder getModifiersOrBuilder(
          int index) {
        if (modifiersBuilder_ == null) {
          return modifiers_.get(index);  } else {
          return modifiersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.ModifierOrBuilder> 
           getModifiersOrBuilderList() {
        if (modifiersBuilder_ != null) {
          return modifiersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(modifiers_);
        }
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public boa.types.Ast.Modifier.Builder addModifiersBuilder() {
        return getModifiersFieldBuilder().addBuilder(
            boa.types.Ast.Modifier.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public boa.types.Ast.Modifier.Builder addModifiersBuilder(
          int index) {
        return getModifiersFieldBuilder().addBuilder(
            index, boa.types.Ast.Modifier.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 3;</code>
       *
       * <pre>
       ** A list of all modifiers on the variable 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Modifier.Builder> 
           getModifiersBuilderList() {
        return getModifiersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Modifier, boa.types.Ast.Modifier.Builder, boa.types.Ast.ModifierOrBuilder> 
          getModifiersFieldBuilder() {
        if (modifiersBuilder_ == null) {
          modifiersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Modifier, boa.types.Ast.Modifier.Builder, boa.types.Ast.ModifierOrBuilder>(
                  modifiers_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          modifiers_ = null;
        }
        return modifiersBuilder_;
      }

      // optional .boa.types.Expression initializer = 4;
      private boa.types.Ast.Expression initializer_ = boa.types.Ast.Expression.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> initializerBuilder_;
      /**
       * <code>optional .boa.types.Expression initializer = 4;</code>
       *
       * <pre>
       ** If the variable has an initial assignment, the expression is stored here 
       * </pre>
       */
      public boolean hasInitializer() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .boa.types.Expression initializer = 4;</code>
       *
       * <pre>
       ** If the variable has an initial assignment, the expression is stored here 
       * </pre>
       */
      public boa.types.Ast.Expression getInitializer() {
        if (initializerBuilder_ == null) {
          return initializer_;
        } else {
          return initializerBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .boa.types.Expression initializer = 4;</code>
       *
       * <pre>
       ** If the variable has an initial assignment, the expression is stored here 
       * </pre>
       */
      public Builder setInitializer(boa.types.Ast.Expression value) {
        if (initializerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          initializer_ = value;
          onChanged();
        } else {
          initializerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .boa.types.Expression initializer = 4;</code>
       *
       * <pre>
       ** If the variable has an initial assignment, the expression is stored here 
       * </pre>
       */
      public Builder setInitializer(
          boa.types.Ast.Expression.Builder builderForValue) {
        if (initializerBuilder_ == null) {
          initializer_ = builderForValue.build();
          onChanged();
        } else {
          initializerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .boa.types.Expression initializer = 4;</code>
       *
       * <pre>
       ** If the variable has an initial assignment, the expression is stored here 
       * </pre>
       */
      public Builder mergeInitializer(boa.types.Ast.Expression value) {
        if (initializerBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              initializer_ != boa.types.Ast.Expression.getDefaultInstance()) {
            initializer_ =
              boa.types.Ast.Expression.newBuilder(initializer_).mergeFrom(value).buildPartial();
          } else {
            initializer_ = value;
          }
          onChanged();
        } else {
          initializerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .boa.types.Expression initializer = 4;</code>
       *
       * <pre>
       ** If the variable has an initial assignment, the expression is stored here 
       * </pre>
       */
      public Builder clearInitializer() {
        if (initializerBuilder_ == null) {
          initializer_ = boa.types.Ast.Expression.getDefaultInstance();
          onChanged();
        } else {
          initializerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .boa.types.Expression initializer = 4;</code>
       *
       * <pre>
       ** If the variable has an initial assignment, the expression is stored here 
       * </pre>
       */
      public boa.types.Ast.Expression.Builder getInitializerBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getInitializerFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .boa.types.Expression initializer = 4;</code>
       *
       * <pre>
       ** If the variable has an initial assignment, the expression is stored here 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getInitializerOrBuilder() {
        if (initializerBuilder_ != null) {
          return initializerBuilder_.getMessageOrBuilder();
        } else {
          return initializer_;
        }
      }
      /**
       * <code>optional .boa.types.Expression initializer = 4;</code>
       *
       * <pre>
       ** If the variable has an initial assignment, the expression is stored here 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
          getInitializerFieldBuilder() {
        if (initializerBuilder_ == null) {
          initializerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                  initializer_,
                  getParentForChildren(),
                  isClean());
          initializer_ = null;
        }
        return initializerBuilder_;
      }

      // optional .boa.types.ChangeKind structural_change_kind = 5;
      private boa.types.Shared.ChangeKind structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 5;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public boolean hasStructuralChangeKind() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 5;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public boa.types.Shared.ChangeKind getStructuralChangeKind() {
        return structuralChangeKind_;
      }
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 5;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public Builder setStructuralChangeKind(boa.types.Shared.ChangeKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        structuralChangeKind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 5;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public Builder clearStructuralChangeKind() {
        bitField0_ = (bitField0_ & ~0x00000010);
        structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        onChanged();
        return this;
      }

      // optional .boa.types.ChangeKind label_change_kind = 6;
      private boa.types.Shared.ChangeKind labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 6;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public boolean hasLabelChangeKind() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 6;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public boa.types.Shared.ChangeKind getLabelChangeKind() {
        return labelChangeKind_;
      }
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 6;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public Builder setLabelChangeKind(boa.types.Shared.ChangeKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        labelChangeKind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 6;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public Builder clearLabelChangeKind() {
        bitField0_ = (bitField0_ & ~0x00000020);
        labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:boa.types.Variable)
    }

    static {
      defaultInstance = new Variable(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:boa.types.Variable)
  }

  public interface StatementOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .boa.types.Statement.StatementKind kind = 1;
    /**
     * <code>required .boa.types.Statement.StatementKind kind = 1;</code>
     *
     * <pre>
     ** The kind of statement 
     * </pre>
     */
    boolean hasKind();
    /**
     * <code>required .boa.types.Statement.StatementKind kind = 1;</code>
     *
     * <pre>
     ** The kind of statement 
     * </pre>
     */
    boa.types.Ast.Statement.StatementKind getKind();

    // optional .boa.types.Statement statement_1 = 2;
    /**
     * <code>optional .boa.types.Statement statement_1 = 2;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boolean hasStatement1();
    /**
     * <code>optional .boa.types.Statement statement_1 = 2;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.Statement getStatement1();
    /**
     * <code>optional .boa.types.Statement statement_1 = 2;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.StatementOrBuilder getStatement1OrBuilder();

    // optional .boa.types.Statement statement_2 = 3;
    /**
     * <code>optional .boa.types.Statement statement_2 = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boolean hasStatement2();
    /**
     * <code>optional .boa.types.Statement statement_2 = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.Statement getStatement2();
    /**
     * <code>optional .boa.types.Statement statement_2 = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.StatementOrBuilder getStatement2OrBuilder();

    // repeated .boa.types.Statement statements_1 = 4;
    /**
     * <code>repeated .boa.types.Statement statements_1 = 4;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    java.util.List<boa.types.Ast.Statement> 
        getStatements1List();
    /**
     * <code>repeated .boa.types.Statement statements_1 = 4;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.Statement getStatements1(int index);
    /**
     * <code>repeated .boa.types.Statement statements_1 = 4;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    int getStatements1Count();
    /**
     * <code>repeated .boa.types.Statement statements_1 = 4;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    java.util.List<? extends boa.types.Ast.StatementOrBuilder> 
        getStatements1OrBuilderList();
    /**
     * <code>repeated .boa.types.Statement statements_1 = 4;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.StatementOrBuilder getStatements1OrBuilder(
        int index);

    // repeated .boa.types.Statement statements_2 = 5;
    /**
     * <code>repeated .boa.types.Statement statements_2 = 5;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    java.util.List<boa.types.Ast.Statement> 
        getStatements2List();
    /**
     * <code>repeated .boa.types.Statement statements_2 = 5;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.Statement getStatements2(int index);
    /**
     * <code>repeated .boa.types.Statement statements_2 = 5;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    int getStatements2Count();
    /**
     * <code>repeated .boa.types.Statement statements_2 = 5;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    java.util.List<? extends boa.types.Ast.StatementOrBuilder> 
        getStatements2OrBuilderList();
    /**
     * <code>repeated .boa.types.Statement statements_2 = 5;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.StatementOrBuilder getStatements2OrBuilder(
        int index);

    // optional .boa.types.Expression expression_1 = 6;
    /**
     * <code>optional .boa.types.Expression expression_1 = 6;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boolean hasExpression1();
    /**
     * <code>optional .boa.types.Expression expression_1 = 6;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.Expression getExpression1();
    /**
     * <code>optional .boa.types.Expression expression_1 = 6;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.ExpressionOrBuilder getExpression1OrBuilder();

    // optional .boa.types.Expression expression_2 = 7;
    /**
     * <code>optional .boa.types.Expression expression_2 = 7;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boolean hasExpression2();
    /**
     * <code>optional .boa.types.Expression expression_2 = 7;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.Expression getExpression2();
    /**
     * <code>optional .boa.types.Expression expression_2 = 7;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.ExpressionOrBuilder getExpression2OrBuilder();

    // repeated .boa.types.Expression expressions_1 = 8;
    /**
     * <code>repeated .boa.types.Expression expressions_1 = 8;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    java.util.List<boa.types.Ast.Expression> 
        getExpressions1List();
    /**
     * <code>repeated .boa.types.Expression expressions_1 = 8;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.Expression getExpressions1(int index);
    /**
     * <code>repeated .boa.types.Expression expressions_1 = 8;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    int getExpressions1Count();
    /**
     * <code>repeated .boa.types.Expression expressions_1 = 8;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
        getExpressions1OrBuilderList();
    /**
     * <code>repeated .boa.types.Expression expressions_1 = 8;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.ExpressionOrBuilder getExpressions1OrBuilder(
        int index);

    // repeated .boa.types.Expression expressions_2 = 9;
    /**
     * <code>repeated .boa.types.Expression expressions_2 = 9;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    java.util.List<boa.types.Ast.Expression> 
        getExpressions2List();
    /**
     * <code>repeated .boa.types.Expression expressions_2 = 9;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.Expression getExpressions2(int index);
    /**
     * <code>repeated .boa.types.Expression expressions_2 = 9;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    int getExpressions2Count();
    /**
     * <code>repeated .boa.types.Expression expressions_2 = 9;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
        getExpressions2OrBuilderList();
    /**
     * <code>repeated .boa.types.Expression expressions_2 = 9;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.ExpressionOrBuilder getExpressions2OrBuilder(
        int index);

    // optional .boa.types.Variable variable_1 = 10;
    /**
     * <code>optional .boa.types.Variable variable_1 = 10;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boolean hasVariable1();
    /**
     * <code>optional .boa.types.Variable variable_1 = 10;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.Variable getVariable1();
    /**
     * <code>optional .boa.types.Variable variable_1 = 10;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.VariableOrBuilder getVariable1OrBuilder();

    // optional .boa.types.Declaration declaration_1 = 11;
    /**
     * <code>optional .boa.types.Declaration declaration_1 = 11;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boolean hasDeclaration1();
    /**
     * <code>optional .boa.types.Declaration declaration_1 = 11;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.Declaration getDeclaration1();
    /**
     * <code>optional .boa.types.Declaration declaration_1 = 11;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.DeclarationOrBuilder getDeclaration1OrBuilder();

    // optional bool bool_1 = 12 [default = false];
    /**
     * <code>optional bool bool_1 = 12 [default = false];</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boolean hasBool1();
    /**
     * <code>optional bool bool_1 = 12 [default = false];</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boolean getBool1();

    // optional .boa.types.ChangeKind structural_change_kind = 13;
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 13;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    boolean hasStructuralChangeKind();
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 13;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    boa.types.Shared.ChangeKind getStructuralChangeKind();

    // optional .boa.types.ChangeKind label_change_kind = 14;
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 14;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    boolean hasLabelChangeKind();
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 14;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    boa.types.Shared.ChangeKind getLabelChangeKind();
  }
  /**
   * Protobuf type {@code boa.types.Statement}
   *
   * <pre>
   ** A single statement 
   * </pre>
   */
  public static final class Statement extends
      com.google.protobuf.GeneratedMessage
      implements StatementOrBuilder {
    // Use Statement.newBuilder() to construct.
    private Statement(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Statement(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Statement defaultInstance;
    public static Statement getDefaultInstance() {
      return defaultInstance;
    }

    public Statement getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Statement(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              boa.types.Ast.Statement.StatementKind value = boa.types.Ast.Statement.StatementKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                kind_ = value;
              }
              break;
            }
            case 18: {
              boa.types.Ast.Statement.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = statement1_.toBuilder();
              }
              statement1_ = input.readMessage(boa.types.Ast.Statement.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(statement1_);
                statement1_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              boa.types.Ast.Statement.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = statement2_.toBuilder();
              }
              statement2_ = input.readMessage(boa.types.Ast.Statement.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(statement2_);
                statement2_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                statements1_ = new java.util.ArrayList<boa.types.Ast.Statement>();
                mutable_bitField0_ |= 0x00000008;
              }
              statements1_.add(input.readMessage(boa.types.Ast.Statement.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                statements2_ = new java.util.ArrayList<boa.types.Ast.Statement>();
                mutable_bitField0_ |= 0x00000010;
              }
              statements2_.add(input.readMessage(boa.types.Ast.Statement.PARSER, extensionRegistry));
              break;
            }
            case 50: {
              boa.types.Ast.Expression.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = expression1_.toBuilder();
              }
              expression1_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(expression1_);
                expression1_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 58: {
              boa.types.Ast.Expression.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = expression2_.toBuilder();
              }
              expression2_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(expression2_);
                expression2_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                expressions1_ = new java.util.ArrayList<boa.types.Ast.Expression>();
                mutable_bitField0_ |= 0x00000080;
              }
              expressions1_.add(input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry));
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                expressions2_ = new java.util.ArrayList<boa.types.Ast.Expression>();
                mutable_bitField0_ |= 0x00000100;
              }
              expressions2_.add(input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry));
              break;
            }
            case 82: {
              boa.types.Ast.Variable.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = variable1_.toBuilder();
              }
              variable1_ = input.readMessage(boa.types.Ast.Variable.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(variable1_);
                variable1_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 90: {
              boa.types.Ast.Declaration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = declaration1_.toBuilder();
              }
              declaration1_ = input.readMessage(boa.types.Ast.Declaration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(declaration1_);
                declaration1_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 96: {
              bitField0_ |= 0x00000080;
              bool1_ = input.readBool();
              break;
            }
            case 104: {
              int rawValue = input.readEnum();
              boa.types.Shared.ChangeKind value = boa.types.Shared.ChangeKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(13, rawValue);
              } else {
                bitField0_ |= 0x00000100;
                structuralChangeKind_ = value;
              }
              break;
            }
            case 112: {
              int rawValue = input.readEnum();
              boa.types.Shared.ChangeKind value = boa.types.Shared.ChangeKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(14, rawValue);
              } else {
                bitField0_ |= 0x00000200;
                labelChangeKind_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          statements1_ = java.util.Collections.unmodifiableList(statements1_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          statements2_ = java.util.Collections.unmodifiableList(statements2_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          expressions1_ = java.util.Collections.unmodifiableList(expressions1_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          expressions2_ = java.util.Collections.unmodifiableList(expressions2_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return boa.types.Ast.internal_static_boa_types_Statement_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return boa.types.Ast.internal_static_boa_types_Statement_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              boa.types.Ast.Statement.class, boa.types.Ast.Statement.Builder.class);
    }

    public static com.google.protobuf.Parser<Statement> PARSER =
        new com.google.protobuf.AbstractParser<Statement>() {
      public Statement parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Statement(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Statement> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code boa.types.Statement.StatementKind}
     *
     * <pre>
     ** The kind of statement 
     * </pre>
     */
    public enum StatementKind
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>OTHER = 0;</code>
       *
       * <pre>
       ** Any other statement 
       * </pre>
       */
      OTHER(0, 0),
      /**
       * <code>ASSERT = 1;</code>
       *
       * <pre>
       ** An assert statement 
       * </pre>
       */
      ASSERT(1, 1),
      /**
       * <code>BLOCK = 2;</code>
       *
       * <pre>
       ** A block statement 
       * </pre>
       */
      BLOCK(2, 2),
      /**
       * <code>BREAK = 3;</code>
       *
       * <pre>
       ** A break statement 
       * </pre>
       */
      BREAK(3, 3),
      /**
       * <code>CASE = 4;</code>
       *
       * <pre>
       ** A case statement inside a switch 
       * </pre>
       */
      CASE(4, 4),
      /**
       * <code>CATCH = 5;</code>
       *
       * <pre>
       ** A catch block 
       * </pre>
       */
      CATCH(5, 5),
      /**
       * <code>CONTINUE = 6;</code>
       *
       * <pre>
       ** A continue statement 
       * </pre>
       */
      CONTINUE(6, 6),
      /**
       * <code>DO = 7;</code>
       *
       * <pre>
       ** A do-while statement 
       * </pre>
       */
      DO(7, 7),
      /**
       * <code>EMPTY = 8;</code>
       *
       * <pre>
       ** An empty statement (i.e., a semi-colon) 
       * </pre>
       */
      EMPTY(8, 8),
      /**
       * <code>EXPRESSION = 9;</code>
       *
       * <pre>
       ** An expression being treated as a statement 
       * </pre>
       */
      EXPRESSION(9, 9),
      /**
       * <code>FOR = 10;</code>
       *
       * <pre>
       ** A standard 3-part for loop 
       * </pre>
       */
      FOR(11, 10),
      /**
       * <code>IF = 11;</code>
       *
       * <pre>
       ** An if/else statement 
       * </pre>
       */
      IF(12, 11),
      /**
       * <code>LABEL = 12;</code>
       *
       * <pre>
       ** A labeled statement 
       * </pre>
       */
      LABEL(13, 12),
      /**
       * <code>RETURN = 13;</code>
       *
       * <pre>
       ** A return statement 
       * </pre>
       */
      RETURN(14, 13),
      /**
       * <code>SWITCH = 14;</code>
       *
       * <pre>
       ** A switch statement 
       * </pre>
       */
      SWITCH(15, 14),
      /**
       * <code>SYNCHRONIZED = 15;</code>
       *
       * <pre>
       ** A synchronized statement 
       * </pre>
       */
      SYNCHRONIZED(16, 15),
      /**
       * <code>THROW = 16;</code>
       *
       * <pre>
       ** A throw statement 
       * </pre>
       */
      THROW(18, 16),
      /**
       * <code>TRY = 17;</code>
       *
       * <pre>
       ** A try statement 
       * </pre>
       */
      TRY(19, 17),
      /**
       * <code>TYPEDECL = 18;</code>
       *
       * <pre>
       ** A type declaration statement 
       * </pre>
       */
      TYPEDECL(20, 18),
      /**
       * <code>WHILE = 19;</code>
       *
       * <pre>
       ** A while loop 
       * </pre>
       */
      WHILE(21, 19),
      ;

      /**
       * <code>EXPR = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public static final StatementKind EXPR = EXPRESSION;
      /**
       * <code>SYNC = 15;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public static final StatementKind SYNC = SYNCHRONIZED;
      /**
       * <code>OTHER = 0;</code>
       *
       * <pre>
       ** Any other statement 
       * </pre>
       */
      public static final int OTHER_VALUE = 0;
      /**
       * <code>ASSERT = 1;</code>
       *
       * <pre>
       ** An assert statement 
       * </pre>
       */
      public static final int ASSERT_VALUE = 1;
      /**
       * <code>BLOCK = 2;</code>
       *
       * <pre>
       ** A block statement 
       * </pre>
       */
      public static final int BLOCK_VALUE = 2;
      /**
       * <code>BREAK = 3;</code>
       *
       * <pre>
       ** A break statement 
       * </pre>
       */
      public static final int BREAK_VALUE = 3;
      /**
       * <code>CASE = 4;</code>
       *
       * <pre>
       ** A case statement inside a switch 
       * </pre>
       */
      public static final int CASE_VALUE = 4;
      /**
       * <code>CATCH = 5;</code>
       *
       * <pre>
       ** A catch block 
       * </pre>
       */
      public static final int CATCH_VALUE = 5;
      /**
       * <code>CONTINUE = 6;</code>
       *
       * <pre>
       ** A continue statement 
       * </pre>
       */
      public static final int CONTINUE_VALUE = 6;
      /**
       * <code>DO = 7;</code>
       *
       * <pre>
       ** A do-while statement 
       * </pre>
       */
      public static final int DO_VALUE = 7;
      /**
       * <code>EMPTY = 8;</code>
       *
       * <pre>
       ** An empty statement (i.e., a semi-colon) 
       * </pre>
       */
      public static final int EMPTY_VALUE = 8;
      /**
       * <code>EXPRESSION = 9;</code>
       *
       * <pre>
       ** An expression being treated as a statement 
       * </pre>
       */
      public static final int EXPRESSION_VALUE = 9;
      /**
       * <code>EXPR = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public static final int EXPR_VALUE = 9;
      /**
       * <code>FOR = 10;</code>
       *
       * <pre>
       ** A standard 3-part for loop 
       * </pre>
       */
      public static final int FOR_VALUE = 10;
      /**
       * <code>IF = 11;</code>
       *
       * <pre>
       ** An if/else statement 
       * </pre>
       */
      public static final int IF_VALUE = 11;
      /**
       * <code>LABEL = 12;</code>
       *
       * <pre>
       ** A labeled statement 
       * </pre>
       */
      public static final int LABEL_VALUE = 12;
      /**
       * <code>RETURN = 13;</code>
       *
       * <pre>
       ** A return statement 
       * </pre>
       */
      public static final int RETURN_VALUE = 13;
      /**
       * <code>SWITCH = 14;</code>
       *
       * <pre>
       ** A switch statement 
       * </pre>
       */
      public static final int SWITCH_VALUE = 14;
      /**
       * <code>SYNCHRONIZED = 15;</code>
       *
       * <pre>
       ** A synchronized statement 
       * </pre>
       */
      public static final int SYNCHRONIZED_VALUE = 15;
      /**
       * <code>SYNC = 15;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public static final int SYNC_VALUE = 15;
      /**
       * <code>THROW = 16;</code>
       *
       * <pre>
       ** A throw statement 
       * </pre>
       */
      public static final int THROW_VALUE = 16;
      /**
       * <code>TRY = 17;</code>
       *
       * <pre>
       ** A try statement 
       * </pre>
       */
      public static final int TRY_VALUE = 17;
      /**
       * <code>TYPEDECL = 18;</code>
       *
       * <pre>
       ** A type declaration statement 
       * </pre>
       */
      public static final int TYPEDECL_VALUE = 18;
      /**
       * <code>WHILE = 19;</code>
       *
       * <pre>
       ** A while loop 
       * </pre>
       */
      public static final int WHILE_VALUE = 19;


      public final int getNumber() { return value; }

      public static StatementKind valueOf(int value) {
        switch (value) {
          case 0: return OTHER;
          case 1: return ASSERT;
          case 2: return BLOCK;
          case 3: return BREAK;
          case 4: return CASE;
          case 5: return CATCH;
          case 6: return CONTINUE;
          case 7: return DO;
          case 8: return EMPTY;
          case 9: return EXPRESSION;
          case 10: return FOR;
          case 11: return IF;
          case 12: return LABEL;
          case 13: return RETURN;
          case 14: return SWITCH;
          case 15: return SYNCHRONIZED;
          case 16: return THROW;
          case 17: return TRY;
          case 18: return TYPEDECL;
          case 19: return WHILE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<StatementKind>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<StatementKind>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<StatementKind>() {
              public StatementKind findValueByNumber(int number) {
                return StatementKind.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return boa.types.Ast.Statement.getDescriptor().getEnumTypes().get(0);
      }

      private static final StatementKind[] VALUES = {
        OTHER, ASSERT, BLOCK, BREAK, CASE, CATCH, CONTINUE, DO, EMPTY, EXPRESSION, EXPR, FOR, IF, LABEL, RETURN, SWITCH, SYNCHRONIZED, SYNC, THROW, TRY, TYPEDECL, WHILE, 
      };

      public static StatementKind valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private StatementKind(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:boa.types.Statement.StatementKind)
    }

    public interface AssertStatementOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = ASSERT];
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = ASSERT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = ASSERT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Statement.StatementKind getShadowKind();

      // required .boa.types.Expression condition = 2;
      /**
       * <code>required .boa.types.Expression condition = 2;</code>
       */
      boolean hasCondition();
      /**
       * <code>required .boa.types.Expression condition = 2;</code>
       */
      boa.types.Ast.Expression getCondition();
      /**
       * <code>required .boa.types.Expression condition = 2;</code>
       */
      boa.types.Ast.ExpressionOrBuilder getConditionOrBuilder();

      // optional .boa.types.Expression expression = 3;
      /**
       * <code>optional .boa.types.Expression expression = 3;</code>
       */
      boolean hasExpression();
      /**
       * <code>optional .boa.types.Expression expression = 3;</code>
       */
      boa.types.Ast.Expression getExpression();
      /**
       * <code>optional .boa.types.Expression expression = 3;</code>
       */
      boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder();
    }
    /**
     * Protobuf type {@code boa.types.Statement.AssertStatement}
     */
    public static final class AssertStatement extends
        com.google.protobuf.GeneratedMessage
        implements AssertStatementOrBuilder {
      // Use AssertStatement.newBuilder() to construct.
      private AssertStatement(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private AssertStatement(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final AssertStatement defaultInstance;
      public static AssertStatement getDefaultInstance() {
        return defaultInstance;
      }

      public AssertStatement getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private AssertStatement(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Statement.StatementKind value = boa.types.Ast.Statement.StatementKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = condition_.toBuilder();
                }
                condition_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(condition_);
                  condition_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 26: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = expression_.toBuilder();
                }
                expression_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(expression_);
                  expression_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Statement_AssertStatement_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Statement_AssertStatement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Statement.AssertStatement.class, boa.types.Ast.Statement.AssertStatement.Builder.class);
      }

      public static com.google.protobuf.Parser<AssertStatement> PARSER =
          new com.google.protobuf.AbstractParser<AssertStatement>() {
        public AssertStatement parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new AssertStatement(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<AssertStatement> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = ASSERT];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Statement.StatementKind shadowKind_;
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = ASSERT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = ASSERT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement.StatementKind getShadowKind() {
        return shadowKind_;
      }

      // required .boa.types.Expression condition = 2;
      public static final int CONDITION_FIELD_NUMBER = 2;
      private boa.types.Ast.Expression condition_;
      /**
       * <code>required .boa.types.Expression condition = 2;</code>
       */
      public boolean hasCondition() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .boa.types.Expression condition = 2;</code>
       */
      public boa.types.Ast.Expression getCondition() {
        return condition_;
      }
      /**
       * <code>required .boa.types.Expression condition = 2;</code>
       */
      public boa.types.Ast.ExpressionOrBuilder getConditionOrBuilder() {
        return condition_;
      }

      // optional .boa.types.Expression expression = 3;
      public static final int EXPRESSION_FIELD_NUMBER = 3;
      private boa.types.Ast.Expression expression_;
      /**
       * <code>optional .boa.types.Expression expression = 3;</code>
       */
      public boolean hasExpression() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .boa.types.Expression expression = 3;</code>
       */
      public boa.types.Ast.Expression getExpression() {
        return expression_;
      }
      /**
       * <code>optional .boa.types.Expression expression = 3;</code>
       */
      public boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder() {
        return expression_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Statement.StatementKind.ASSERT;
        condition_ = boa.types.Ast.Expression.getDefaultInstance();
        expression_ = boa.types.Ast.Expression.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasCondition()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getCondition().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (hasExpression()) {
          if (!getExpression().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, condition_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(3, expression_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, condition_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, expression_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Statement.AssertStatement parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.AssertStatement parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.AssertStatement parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.AssertStatement parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.AssertStatement parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.AssertStatement parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.AssertStatement parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Statement.AssertStatement parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.AssertStatement parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.AssertStatement parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Statement.AssertStatement prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Statement.AssertStatement}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Statement.AssertStatementOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Statement_AssertStatement_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Statement_AssertStatement_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Statement.AssertStatement.class, boa.types.Ast.Statement.AssertStatement.Builder.class);
        }

        // Construct using boa.types.Ast.Statement.AssertStatement.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getConditionFieldBuilder();
            getExpressionFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Statement.StatementKind.ASSERT;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (conditionBuilder_ == null) {
            condition_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            conditionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          if (expressionBuilder_ == null) {
            expression_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            expressionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Statement_AssertStatement_descriptor;
        }

        public boa.types.Ast.Statement.AssertStatement getDefaultInstanceForType() {
          return boa.types.Ast.Statement.AssertStatement.getDefaultInstance();
        }

        public boa.types.Ast.Statement.AssertStatement build() {
          boa.types.Ast.Statement.AssertStatement result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Statement.AssertStatement buildPartial() {
          boa.types.Ast.Statement.AssertStatement result = new boa.types.Ast.Statement.AssertStatement(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (conditionBuilder_ == null) {
            result.condition_ = condition_;
          } else {
            result.condition_ = conditionBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          if (expressionBuilder_ == null) {
            result.expression_ = expression_;
          } else {
            result.expression_ = expressionBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Statement.AssertStatement) {
            return mergeFrom((boa.types.Ast.Statement.AssertStatement)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Statement.AssertStatement other) {
          if (other == boa.types.Ast.Statement.AssertStatement.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasCondition()) {
            mergeCondition(other.getCondition());
          }
          if (other.hasExpression()) {
            mergeExpression(other.getExpression());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasCondition()) {
            
            return false;
          }
          if (!getCondition().isInitialized()) {
            
            return false;
          }
          if (hasExpression()) {
            if (!getExpression().isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Statement.AssertStatement parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Statement.AssertStatement) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = ASSERT];
        private boa.types.Ast.Statement.StatementKind shadowKind_ = boa.types.Ast.Statement.StatementKind.ASSERT;
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = ASSERT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = ASSERT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Statement.StatementKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = ASSERT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Statement.StatementKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = ASSERT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Statement.StatementKind.ASSERT;
          onChanged();
          return this;
        }

        // required .boa.types.Expression condition = 2;
        private boa.types.Ast.Expression condition_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> conditionBuilder_;
        /**
         * <code>required .boa.types.Expression condition = 2;</code>
         */
        public boolean hasCondition() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required .boa.types.Expression condition = 2;</code>
         */
        public boa.types.Ast.Expression getCondition() {
          if (conditionBuilder_ == null) {
            return condition_;
          } else {
            return conditionBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Expression condition = 2;</code>
         */
        public Builder setCondition(boa.types.Ast.Expression value) {
          if (conditionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            condition_ = value;
            onChanged();
          } else {
            conditionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression condition = 2;</code>
         */
        public Builder setCondition(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (conditionBuilder_ == null) {
            condition_ = builderForValue.build();
            onChanged();
          } else {
            conditionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression condition = 2;</code>
         */
        public Builder mergeCondition(boa.types.Ast.Expression value) {
          if (conditionBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                condition_ != boa.types.Ast.Expression.getDefaultInstance()) {
              condition_ =
                boa.types.Ast.Expression.newBuilder(condition_).mergeFrom(value).buildPartial();
            } else {
              condition_ = value;
            }
            onChanged();
          } else {
            conditionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression condition = 2;</code>
         */
        public Builder clearCondition() {
          if (conditionBuilder_ == null) {
            condition_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            conditionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>required .boa.types.Expression condition = 2;</code>
         */
        public boa.types.Ast.Expression.Builder getConditionBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getConditionFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Expression condition = 2;</code>
         */
        public boa.types.Ast.ExpressionOrBuilder getConditionOrBuilder() {
          if (conditionBuilder_ != null) {
            return conditionBuilder_.getMessageOrBuilder();
          } else {
            return condition_;
          }
        }
        /**
         * <code>required .boa.types.Expression condition = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getConditionFieldBuilder() {
          if (conditionBuilder_ == null) {
            conditionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    condition_,
                    getParentForChildren(),
                    isClean());
            condition_ = null;
          }
          return conditionBuilder_;
        }

        // optional .boa.types.Expression expression = 3;
        private boa.types.Ast.Expression expression_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> expressionBuilder_;
        /**
         * <code>optional .boa.types.Expression expression = 3;</code>
         */
        public boolean hasExpression() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional .boa.types.Expression expression = 3;</code>
         */
        public boa.types.Ast.Expression getExpression() {
          if (expressionBuilder_ == null) {
            return expression_;
          } else {
            return expressionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .boa.types.Expression expression = 3;</code>
         */
        public Builder setExpression(boa.types.Ast.Expression value) {
          if (expressionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            expression_ = value;
            onChanged();
          } else {
            expressionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .boa.types.Expression expression = 3;</code>
         */
        public Builder setExpression(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (expressionBuilder_ == null) {
            expression_ = builderForValue.build();
            onChanged();
          } else {
            expressionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .boa.types.Expression expression = 3;</code>
         */
        public Builder mergeExpression(boa.types.Ast.Expression value) {
          if (expressionBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                expression_ != boa.types.Ast.Expression.getDefaultInstance()) {
              expression_ =
                boa.types.Ast.Expression.newBuilder(expression_).mergeFrom(value).buildPartial();
            } else {
              expression_ = value;
            }
            onChanged();
          } else {
            expressionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .boa.types.Expression expression = 3;</code>
         */
        public Builder clearExpression() {
          if (expressionBuilder_ == null) {
            expression_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            expressionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <code>optional .boa.types.Expression expression = 3;</code>
         */
        public boa.types.Ast.Expression.Builder getExpressionBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getExpressionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .boa.types.Expression expression = 3;</code>
         */
        public boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder() {
          if (expressionBuilder_ != null) {
            return expressionBuilder_.getMessageOrBuilder();
          } else {
            return expression_;
          }
        }
        /**
         * <code>optional .boa.types.Expression expression = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getExpressionFieldBuilder() {
          if (expressionBuilder_ == null) {
            expressionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    expression_,
                    getParentForChildren(),
                    isClean());
            expression_ = null;
          }
          return expressionBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Statement.AssertStatement)
      }

      static {
        defaultInstance = new AssertStatement(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Statement.AssertStatement)
    }

    public interface BlockOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = BLOCK];
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = BLOCK];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = BLOCK];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Statement.StatementKind getShadowKind();

      // repeated .boa.types.Statement statements = 2;
      /**
       * <code>repeated .boa.types.Statement statements = 2;</code>
       */
      java.util.List<boa.types.Ast.Statement> 
          getStatementsList();
      /**
       * <code>repeated .boa.types.Statement statements = 2;</code>
       */
      boa.types.Ast.Statement getStatements(int index);
      /**
       * <code>repeated .boa.types.Statement statements = 2;</code>
       */
      int getStatementsCount();
      /**
       * <code>repeated .boa.types.Statement statements = 2;</code>
       */
      java.util.List<? extends boa.types.Ast.StatementOrBuilder> 
          getStatementsOrBuilderList();
      /**
       * <code>repeated .boa.types.Statement statements = 2;</code>
       */
      boa.types.Ast.StatementOrBuilder getStatementsOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code boa.types.Statement.Block}
     */
    public static final class Block extends
        com.google.protobuf.GeneratedMessage
        implements BlockOrBuilder {
      // Use Block.newBuilder() to construct.
      private Block(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Block(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Block defaultInstance;
      public static Block getDefaultInstance() {
        return defaultInstance;
      }

      public Block getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Block(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Statement.StatementKind value = boa.types.Ast.Statement.StatementKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  statements_ = new java.util.ArrayList<boa.types.Ast.Statement>();
                  mutable_bitField0_ |= 0x00000002;
                }
                statements_.add(input.readMessage(boa.types.Ast.Statement.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            statements_ = java.util.Collections.unmodifiableList(statements_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Statement_Block_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Statement_Block_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Statement.Block.class, boa.types.Ast.Statement.Block.Builder.class);
      }

      public static com.google.protobuf.Parser<Block> PARSER =
          new com.google.protobuf.AbstractParser<Block>() {
        public Block parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Block(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Block> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = BLOCK];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Statement.StatementKind shadowKind_;
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = BLOCK];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = BLOCK];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement.StatementKind getShadowKind() {
        return shadowKind_;
      }

      // repeated .boa.types.Statement statements = 2;
      public static final int STATEMENTS_FIELD_NUMBER = 2;
      private java.util.List<boa.types.Ast.Statement> statements_;
      /**
       * <code>repeated .boa.types.Statement statements = 2;</code>
       */
      public java.util.List<boa.types.Ast.Statement> getStatementsList() {
        return statements_;
      }
      /**
       * <code>repeated .boa.types.Statement statements = 2;</code>
       */
      public java.util.List<? extends boa.types.Ast.StatementOrBuilder> 
          getStatementsOrBuilderList() {
        return statements_;
      }
      /**
       * <code>repeated .boa.types.Statement statements = 2;</code>
       */
      public int getStatementsCount() {
        return statements_.size();
      }
      /**
       * <code>repeated .boa.types.Statement statements = 2;</code>
       */
      public boa.types.Ast.Statement getStatements(int index) {
        return statements_.get(index);
      }
      /**
       * <code>repeated .boa.types.Statement statements = 2;</code>
       */
      public boa.types.Ast.StatementOrBuilder getStatementsOrBuilder(
          int index) {
        return statements_.get(index);
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Statement.StatementKind.BLOCK;
        statements_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        for (int i = 0; i < getStatementsCount(); i++) {
          if (!getStatements(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        for (int i = 0; i < statements_.size(); i++) {
          output.writeMessage(2, statements_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        for (int i = 0; i < statements_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, statements_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Statement.Block parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.Block parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.Block parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.Block parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.Block parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.Block parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.Block parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Statement.Block parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.Block parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.Block parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Statement.Block prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Statement.Block}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Statement.BlockOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Statement_Block_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Statement_Block_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Statement.Block.class, boa.types.Ast.Statement.Block.Builder.class);
        }

        // Construct using boa.types.Ast.Statement.Block.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getStatementsFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Statement.StatementKind.BLOCK;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (statementsBuilder_ == null) {
            statements_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            statementsBuilder_.clear();
          }
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Statement_Block_descriptor;
        }

        public boa.types.Ast.Statement.Block getDefaultInstanceForType() {
          return boa.types.Ast.Statement.Block.getDefaultInstance();
        }

        public boa.types.Ast.Statement.Block build() {
          boa.types.Ast.Statement.Block result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Statement.Block buildPartial() {
          boa.types.Ast.Statement.Block result = new boa.types.Ast.Statement.Block(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (statementsBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              statements_ = java.util.Collections.unmodifiableList(statements_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.statements_ = statements_;
          } else {
            result.statements_ = statementsBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Statement.Block) {
            return mergeFrom((boa.types.Ast.Statement.Block)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Statement.Block other) {
          if (other == boa.types.Ast.Statement.Block.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (statementsBuilder_ == null) {
            if (!other.statements_.isEmpty()) {
              if (statements_.isEmpty()) {
                statements_ = other.statements_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureStatementsIsMutable();
                statements_.addAll(other.statements_);
              }
              onChanged();
            }
          } else {
            if (!other.statements_.isEmpty()) {
              if (statementsBuilder_.isEmpty()) {
                statementsBuilder_.dispose();
                statementsBuilder_ = null;
                statements_ = other.statements_;
                bitField0_ = (bitField0_ & ~0x00000002);
                statementsBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getStatementsFieldBuilder() : null;
              } else {
                statementsBuilder_.addAllMessages(other.statements_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          for (int i = 0; i < getStatementsCount(); i++) {
            if (!getStatements(i).isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Statement.Block parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Statement.Block) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = BLOCK];
        private boa.types.Ast.Statement.StatementKind shadowKind_ = boa.types.Ast.Statement.StatementKind.BLOCK;
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = BLOCK];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = BLOCK];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Statement.StatementKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = BLOCK];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Statement.StatementKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = BLOCK];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Statement.StatementKind.BLOCK;
          onChanged();
          return this;
        }

        // repeated .boa.types.Statement statements = 2;
        private java.util.List<boa.types.Ast.Statement> statements_ =
          java.util.Collections.emptyList();
        private void ensureStatementsIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            statements_ = new java.util.ArrayList<boa.types.Ast.Statement>(statements_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> statementsBuilder_;

        /**
         * <code>repeated .boa.types.Statement statements = 2;</code>
         */
        public java.util.List<boa.types.Ast.Statement> getStatementsList() {
          if (statementsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(statements_);
          } else {
            return statementsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .boa.types.Statement statements = 2;</code>
         */
        public int getStatementsCount() {
          if (statementsBuilder_ == null) {
            return statements_.size();
          } else {
            return statementsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .boa.types.Statement statements = 2;</code>
         */
        public boa.types.Ast.Statement getStatements(int index) {
          if (statementsBuilder_ == null) {
            return statements_.get(index);
          } else {
            return statementsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .boa.types.Statement statements = 2;</code>
         */
        public Builder setStatements(
            int index, boa.types.Ast.Statement value) {
          if (statementsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureStatementsIsMutable();
            statements_.set(index, value);
            onChanged();
          } else {
            statementsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement statements = 2;</code>
         */
        public Builder setStatements(
            int index, boa.types.Ast.Statement.Builder builderForValue) {
          if (statementsBuilder_ == null) {
            ensureStatementsIsMutable();
            statements_.set(index, builderForValue.build());
            onChanged();
          } else {
            statementsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement statements = 2;</code>
         */
        public Builder addStatements(boa.types.Ast.Statement value) {
          if (statementsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureStatementsIsMutable();
            statements_.add(value);
            onChanged();
          } else {
            statementsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement statements = 2;</code>
         */
        public Builder addStatements(
            int index, boa.types.Ast.Statement value) {
          if (statementsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureStatementsIsMutable();
            statements_.add(index, value);
            onChanged();
          } else {
            statementsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement statements = 2;</code>
         */
        public Builder addStatements(
            boa.types.Ast.Statement.Builder builderForValue) {
          if (statementsBuilder_ == null) {
            ensureStatementsIsMutable();
            statements_.add(builderForValue.build());
            onChanged();
          } else {
            statementsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement statements = 2;</code>
         */
        public Builder addStatements(
            int index, boa.types.Ast.Statement.Builder builderForValue) {
          if (statementsBuilder_ == null) {
            ensureStatementsIsMutable();
            statements_.add(index, builderForValue.build());
            onChanged();
          } else {
            statementsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement statements = 2;</code>
         */
        public Builder addAllStatements(
            java.lang.Iterable<? extends boa.types.Ast.Statement> values) {
          if (statementsBuilder_ == null) {
            ensureStatementsIsMutable();
            super.addAll(values, statements_);
            onChanged();
          } else {
            statementsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement statements = 2;</code>
         */
        public Builder clearStatements() {
          if (statementsBuilder_ == null) {
            statements_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            statementsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement statements = 2;</code>
         */
        public Builder removeStatements(int index) {
          if (statementsBuilder_ == null) {
            ensureStatementsIsMutable();
            statements_.remove(index);
            onChanged();
          } else {
            statementsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement statements = 2;</code>
         */
        public boa.types.Ast.Statement.Builder getStatementsBuilder(
            int index) {
          return getStatementsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .boa.types.Statement statements = 2;</code>
         */
        public boa.types.Ast.StatementOrBuilder getStatementsOrBuilder(
            int index) {
          if (statementsBuilder_ == null) {
            return statements_.get(index);  } else {
            return statementsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .boa.types.Statement statements = 2;</code>
         */
        public java.util.List<? extends boa.types.Ast.StatementOrBuilder> 
             getStatementsOrBuilderList() {
          if (statementsBuilder_ != null) {
            return statementsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(statements_);
          }
        }
        /**
         * <code>repeated .boa.types.Statement statements = 2;</code>
         */
        public boa.types.Ast.Statement.Builder addStatementsBuilder() {
          return getStatementsFieldBuilder().addBuilder(
              boa.types.Ast.Statement.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Statement statements = 2;</code>
         */
        public boa.types.Ast.Statement.Builder addStatementsBuilder(
            int index) {
          return getStatementsFieldBuilder().addBuilder(
              index, boa.types.Ast.Statement.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Statement statements = 2;</code>
         */
        public java.util.List<boa.types.Ast.Statement.Builder> 
             getStatementsBuilderList() {
          return getStatementsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> 
            getStatementsFieldBuilder() {
          if (statementsBuilder_ == null) {
            statementsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder>(
                    statements_,
                    ((bitField0_ & 0x00000002) == 0x00000002),
                    getParentForChildren(),
                    isClean());
            statements_ = null;
          }
          return statementsBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Statement.Block)
      }

      static {
        defaultInstance = new Block(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Statement.Block)
    }

    public interface BreakStatementOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = BREAK];
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = BREAK];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = BREAK];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Statement.StatementKind getShadowKind();

      // optional .boa.types.Expression label = 2;
      /**
       * <code>optional .boa.types.Expression label = 2;</code>
       *
       * <pre>
       *optional Expression.VarAccessExpression label = 2 [(boa.types.alias) = "expression_1"]; FIXME
       * </pre>
       */
      boolean hasLabel();
      /**
       * <code>optional .boa.types.Expression label = 2;</code>
       *
       * <pre>
       *optional Expression.VarAccessExpression label = 2 [(boa.types.alias) = "expression_1"]; FIXME
       * </pre>
       */
      boa.types.Ast.Expression getLabel();
      /**
       * <code>optional .boa.types.Expression label = 2;</code>
       *
       * <pre>
       *optional Expression.VarAccessExpression label = 2 [(boa.types.alias) = "expression_1"]; FIXME
       * </pre>
       */
      boa.types.Ast.ExpressionOrBuilder getLabelOrBuilder();
    }
    /**
     * Protobuf type {@code boa.types.Statement.BreakStatement}
     */
    public static final class BreakStatement extends
        com.google.protobuf.GeneratedMessage
        implements BreakStatementOrBuilder {
      // Use BreakStatement.newBuilder() to construct.
      private BreakStatement(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private BreakStatement(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final BreakStatement defaultInstance;
      public static BreakStatement getDefaultInstance() {
        return defaultInstance;
      }

      public BreakStatement getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private BreakStatement(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Statement.StatementKind value = boa.types.Ast.Statement.StatementKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = label_.toBuilder();
                }
                label_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(label_);
                  label_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Statement_BreakStatement_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Statement_BreakStatement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Statement.BreakStatement.class, boa.types.Ast.Statement.BreakStatement.Builder.class);
      }

      public static com.google.protobuf.Parser<BreakStatement> PARSER =
          new com.google.protobuf.AbstractParser<BreakStatement>() {
        public BreakStatement parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new BreakStatement(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<BreakStatement> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = BREAK];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Statement.StatementKind shadowKind_;
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = BREAK];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = BREAK];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement.StatementKind getShadowKind() {
        return shadowKind_;
      }

      // optional .boa.types.Expression label = 2;
      public static final int LABEL_FIELD_NUMBER = 2;
      private boa.types.Ast.Expression label_;
      /**
       * <code>optional .boa.types.Expression label = 2;</code>
       *
       * <pre>
       *optional Expression.VarAccessExpression label = 2 [(boa.types.alias) = "expression_1"]; FIXME
       * </pre>
       */
      public boolean hasLabel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .boa.types.Expression label = 2;</code>
       *
       * <pre>
       *optional Expression.VarAccessExpression label = 2 [(boa.types.alias) = "expression_1"]; FIXME
       * </pre>
       */
      public boa.types.Ast.Expression getLabel() {
        return label_;
      }
      /**
       * <code>optional .boa.types.Expression label = 2;</code>
       *
       * <pre>
       *optional Expression.VarAccessExpression label = 2 [(boa.types.alias) = "expression_1"]; FIXME
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getLabelOrBuilder() {
        return label_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Statement.StatementKind.BREAK;
        label_ = boa.types.Ast.Expression.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (hasLabel()) {
          if (!getLabel().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, label_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, label_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Statement.BreakStatement parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.BreakStatement parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.BreakStatement parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.BreakStatement parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.BreakStatement parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.BreakStatement parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.BreakStatement parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Statement.BreakStatement parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.BreakStatement parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.BreakStatement parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Statement.BreakStatement prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Statement.BreakStatement}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Statement.BreakStatementOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Statement_BreakStatement_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Statement_BreakStatement_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Statement.BreakStatement.class, boa.types.Ast.Statement.BreakStatement.Builder.class);
        }

        // Construct using boa.types.Ast.Statement.BreakStatement.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getLabelFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Statement.StatementKind.BREAK;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (labelBuilder_ == null) {
            label_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            labelBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Statement_BreakStatement_descriptor;
        }

        public boa.types.Ast.Statement.BreakStatement getDefaultInstanceForType() {
          return boa.types.Ast.Statement.BreakStatement.getDefaultInstance();
        }

        public boa.types.Ast.Statement.BreakStatement build() {
          boa.types.Ast.Statement.BreakStatement result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Statement.BreakStatement buildPartial() {
          boa.types.Ast.Statement.BreakStatement result = new boa.types.Ast.Statement.BreakStatement(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (labelBuilder_ == null) {
            result.label_ = label_;
          } else {
            result.label_ = labelBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Statement.BreakStatement) {
            return mergeFrom((boa.types.Ast.Statement.BreakStatement)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Statement.BreakStatement other) {
          if (other == boa.types.Ast.Statement.BreakStatement.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasLabel()) {
            mergeLabel(other.getLabel());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (hasLabel()) {
            if (!getLabel().isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Statement.BreakStatement parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Statement.BreakStatement) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = BREAK];
        private boa.types.Ast.Statement.StatementKind shadowKind_ = boa.types.Ast.Statement.StatementKind.BREAK;
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = BREAK];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = BREAK];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Statement.StatementKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = BREAK];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Statement.StatementKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = BREAK];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Statement.StatementKind.BREAK;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression label = 2;
        private boa.types.Ast.Expression label_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> labelBuilder_;
        /**
         * <code>optional .boa.types.Expression label = 2;</code>
         *
         * <pre>
         *optional Expression.VarAccessExpression label = 2 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        public boolean hasLabel() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .boa.types.Expression label = 2;</code>
         *
         * <pre>
         *optional Expression.VarAccessExpression label = 2 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        public boa.types.Ast.Expression getLabel() {
          if (labelBuilder_ == null) {
            return label_;
          } else {
            return labelBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .boa.types.Expression label = 2;</code>
         *
         * <pre>
         *optional Expression.VarAccessExpression label = 2 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        public Builder setLabel(boa.types.Ast.Expression value) {
          if (labelBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            label_ = value;
            onChanged();
          } else {
            labelBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .boa.types.Expression label = 2;</code>
         *
         * <pre>
         *optional Expression.VarAccessExpression label = 2 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        public Builder setLabel(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (labelBuilder_ == null) {
            label_ = builderForValue.build();
            onChanged();
          } else {
            labelBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .boa.types.Expression label = 2;</code>
         *
         * <pre>
         *optional Expression.VarAccessExpression label = 2 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        public Builder mergeLabel(boa.types.Ast.Expression value) {
          if (labelBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                label_ != boa.types.Ast.Expression.getDefaultInstance()) {
              label_ =
                boa.types.Ast.Expression.newBuilder(label_).mergeFrom(value).buildPartial();
            } else {
              label_ = value;
            }
            onChanged();
          } else {
            labelBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .boa.types.Expression label = 2;</code>
         *
         * <pre>
         *optional Expression.VarAccessExpression label = 2 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        public Builder clearLabel() {
          if (labelBuilder_ == null) {
            label_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            labelBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>optional .boa.types.Expression label = 2;</code>
         *
         * <pre>
         *optional Expression.VarAccessExpression label = 2 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        public boa.types.Ast.Expression.Builder getLabelBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getLabelFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .boa.types.Expression label = 2;</code>
         *
         * <pre>
         *optional Expression.VarAccessExpression label = 2 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        public boa.types.Ast.ExpressionOrBuilder getLabelOrBuilder() {
          if (labelBuilder_ != null) {
            return labelBuilder_.getMessageOrBuilder();
          } else {
            return label_;
          }
        }
        /**
         * <code>optional .boa.types.Expression label = 2;</code>
         *
         * <pre>
         *optional Expression.VarAccessExpression label = 2 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getLabelFieldBuilder() {
          if (labelBuilder_ == null) {
            labelBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    label_,
                    getParentForChildren(),
                    isClean());
            label_ = null;
          }
          return labelBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Statement.BreakStatement)
      }

      static {
        defaultInstance = new BreakStatement(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Statement.BreakStatement)
    }

    public interface CatchClauseOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CATCH];
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CATCH];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CATCH];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Statement.StatementKind getShadowKind();

      // required .boa.types.Variable exception = 2;
      /**
       * <code>required .boa.types.Variable exception = 2;</code>
       */
      boolean hasException();
      /**
       * <code>required .boa.types.Variable exception = 2;</code>
       */
      boa.types.Ast.Variable getException();
      /**
       * <code>required .boa.types.Variable exception = 2;</code>
       */
      boa.types.Ast.VariableOrBuilder getExceptionOrBuilder();

      // repeated .boa.types.Statement body = 3;
      /**
       * <code>repeated .boa.types.Statement body = 3;</code>
       */
      java.util.List<boa.types.Ast.Statement> 
          getBodyList();
      /**
       * <code>repeated .boa.types.Statement body = 3;</code>
       */
      boa.types.Ast.Statement getBody(int index);
      /**
       * <code>repeated .boa.types.Statement body = 3;</code>
       */
      int getBodyCount();
      /**
       * <code>repeated .boa.types.Statement body = 3;</code>
       */
      java.util.List<? extends boa.types.Ast.StatementOrBuilder> 
          getBodyOrBuilderList();
      /**
       * <code>repeated .boa.types.Statement body = 3;</code>
       */
      boa.types.Ast.StatementOrBuilder getBodyOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code boa.types.Statement.CatchClause}
     */
    public static final class CatchClause extends
        com.google.protobuf.GeneratedMessage
        implements CatchClauseOrBuilder {
      // Use CatchClause.newBuilder() to construct.
      private CatchClause(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private CatchClause(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final CatchClause defaultInstance;
      public static CatchClause getDefaultInstance() {
        return defaultInstance;
      }

      public CatchClause getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private CatchClause(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Statement.StatementKind value = boa.types.Ast.Statement.StatementKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                boa.types.Ast.Variable.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = exception_.toBuilder();
                }
                exception_ = input.readMessage(boa.types.Ast.Variable.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(exception_);
                  exception_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 26: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  body_ = new java.util.ArrayList<boa.types.Ast.Statement>();
                  mutable_bitField0_ |= 0x00000004;
                }
                body_.add(input.readMessage(boa.types.Ast.Statement.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            body_ = java.util.Collections.unmodifiableList(body_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Statement_CatchClause_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Statement_CatchClause_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Statement.CatchClause.class, boa.types.Ast.Statement.CatchClause.Builder.class);
      }

      public static com.google.protobuf.Parser<CatchClause> PARSER =
          new com.google.protobuf.AbstractParser<CatchClause>() {
        public CatchClause parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CatchClause(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<CatchClause> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CATCH];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Statement.StatementKind shadowKind_;
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CATCH];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CATCH];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement.StatementKind getShadowKind() {
        return shadowKind_;
      }

      // required .boa.types.Variable exception = 2;
      public static final int EXCEPTION_FIELD_NUMBER = 2;
      private boa.types.Ast.Variable exception_;
      /**
       * <code>required .boa.types.Variable exception = 2;</code>
       */
      public boolean hasException() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .boa.types.Variable exception = 2;</code>
       */
      public boa.types.Ast.Variable getException() {
        return exception_;
      }
      /**
       * <code>required .boa.types.Variable exception = 2;</code>
       */
      public boa.types.Ast.VariableOrBuilder getExceptionOrBuilder() {
        return exception_;
      }

      // repeated .boa.types.Statement body = 3;
      public static final int BODY_FIELD_NUMBER = 3;
      private java.util.List<boa.types.Ast.Statement> body_;
      /**
       * <code>repeated .boa.types.Statement body = 3;</code>
       */
      public java.util.List<boa.types.Ast.Statement> getBodyList() {
        return body_;
      }
      /**
       * <code>repeated .boa.types.Statement body = 3;</code>
       */
      public java.util.List<? extends boa.types.Ast.StatementOrBuilder> 
          getBodyOrBuilderList() {
        return body_;
      }
      /**
       * <code>repeated .boa.types.Statement body = 3;</code>
       */
      public int getBodyCount() {
        return body_.size();
      }
      /**
       * <code>repeated .boa.types.Statement body = 3;</code>
       */
      public boa.types.Ast.Statement getBody(int index) {
        return body_.get(index);
      }
      /**
       * <code>repeated .boa.types.Statement body = 3;</code>
       */
      public boa.types.Ast.StatementOrBuilder getBodyOrBuilder(
          int index) {
        return body_.get(index);
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Statement.StatementKind.CATCH;
        exception_ = boa.types.Ast.Variable.getDefaultInstance();
        body_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasException()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getException().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        for (int i = 0; i < getBodyCount(); i++) {
          if (!getBody(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, exception_);
        }
        for (int i = 0; i < body_.size(); i++) {
          output.writeMessage(3, body_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, exception_);
        }
        for (int i = 0; i < body_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, body_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Statement.CatchClause parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.CatchClause parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.CatchClause parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.CatchClause parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.CatchClause parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.CatchClause parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.CatchClause parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Statement.CatchClause parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.CatchClause parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.CatchClause parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Statement.CatchClause prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Statement.CatchClause}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Statement.CatchClauseOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Statement_CatchClause_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Statement_CatchClause_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Statement.CatchClause.class, boa.types.Ast.Statement.CatchClause.Builder.class);
        }

        // Construct using boa.types.Ast.Statement.CatchClause.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getExceptionFieldBuilder();
            getBodyFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Statement.StatementKind.CATCH;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (exceptionBuilder_ == null) {
            exception_ = boa.types.Ast.Variable.getDefaultInstance();
          } else {
            exceptionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          if (bodyBuilder_ == null) {
            body_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            bodyBuilder_.clear();
          }
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Statement_CatchClause_descriptor;
        }

        public boa.types.Ast.Statement.CatchClause getDefaultInstanceForType() {
          return boa.types.Ast.Statement.CatchClause.getDefaultInstance();
        }

        public boa.types.Ast.Statement.CatchClause build() {
          boa.types.Ast.Statement.CatchClause result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Statement.CatchClause buildPartial() {
          boa.types.Ast.Statement.CatchClause result = new boa.types.Ast.Statement.CatchClause(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (exceptionBuilder_ == null) {
            result.exception_ = exception_;
          } else {
            result.exception_ = exceptionBuilder_.build();
          }
          if (bodyBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              body_ = java.util.Collections.unmodifiableList(body_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.body_ = body_;
          } else {
            result.body_ = bodyBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Statement.CatchClause) {
            return mergeFrom((boa.types.Ast.Statement.CatchClause)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Statement.CatchClause other) {
          if (other == boa.types.Ast.Statement.CatchClause.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasException()) {
            mergeException(other.getException());
          }
          if (bodyBuilder_ == null) {
            if (!other.body_.isEmpty()) {
              if (body_.isEmpty()) {
                body_ = other.body_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureBodyIsMutable();
                body_.addAll(other.body_);
              }
              onChanged();
            }
          } else {
            if (!other.body_.isEmpty()) {
              if (bodyBuilder_.isEmpty()) {
                bodyBuilder_.dispose();
                bodyBuilder_ = null;
                body_ = other.body_;
                bitField0_ = (bitField0_ & ~0x00000004);
                bodyBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getBodyFieldBuilder() : null;
              } else {
                bodyBuilder_.addAllMessages(other.body_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasException()) {
            
            return false;
          }
          if (!getException().isInitialized()) {
            
            return false;
          }
          for (int i = 0; i < getBodyCount(); i++) {
            if (!getBody(i).isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Statement.CatchClause parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Statement.CatchClause) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CATCH];
        private boa.types.Ast.Statement.StatementKind shadowKind_ = boa.types.Ast.Statement.StatementKind.CATCH;
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CATCH];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CATCH];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Statement.StatementKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CATCH];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Statement.StatementKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CATCH];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Statement.StatementKind.CATCH;
          onChanged();
          return this;
        }

        // required .boa.types.Variable exception = 2;
        private boa.types.Ast.Variable exception_ = boa.types.Ast.Variable.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Variable, boa.types.Ast.Variable.Builder, boa.types.Ast.VariableOrBuilder> exceptionBuilder_;
        /**
         * <code>required .boa.types.Variable exception = 2;</code>
         */
        public boolean hasException() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required .boa.types.Variable exception = 2;</code>
         */
        public boa.types.Ast.Variable getException() {
          if (exceptionBuilder_ == null) {
            return exception_;
          } else {
            return exceptionBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Variable exception = 2;</code>
         */
        public Builder setException(boa.types.Ast.Variable value) {
          if (exceptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            exception_ = value;
            onChanged();
          } else {
            exceptionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Variable exception = 2;</code>
         */
        public Builder setException(
            boa.types.Ast.Variable.Builder builderForValue) {
          if (exceptionBuilder_ == null) {
            exception_ = builderForValue.build();
            onChanged();
          } else {
            exceptionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Variable exception = 2;</code>
         */
        public Builder mergeException(boa.types.Ast.Variable value) {
          if (exceptionBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                exception_ != boa.types.Ast.Variable.getDefaultInstance()) {
              exception_ =
                boa.types.Ast.Variable.newBuilder(exception_).mergeFrom(value).buildPartial();
            } else {
              exception_ = value;
            }
            onChanged();
          } else {
            exceptionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Variable exception = 2;</code>
         */
        public Builder clearException() {
          if (exceptionBuilder_ == null) {
            exception_ = boa.types.Ast.Variable.getDefaultInstance();
            onChanged();
          } else {
            exceptionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>required .boa.types.Variable exception = 2;</code>
         */
        public boa.types.Ast.Variable.Builder getExceptionBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getExceptionFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Variable exception = 2;</code>
         */
        public boa.types.Ast.VariableOrBuilder getExceptionOrBuilder() {
          if (exceptionBuilder_ != null) {
            return exceptionBuilder_.getMessageOrBuilder();
          } else {
            return exception_;
          }
        }
        /**
         * <code>required .boa.types.Variable exception = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Variable, boa.types.Ast.Variable.Builder, boa.types.Ast.VariableOrBuilder> 
            getExceptionFieldBuilder() {
          if (exceptionBuilder_ == null) {
            exceptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Variable, boa.types.Ast.Variable.Builder, boa.types.Ast.VariableOrBuilder>(
                    exception_,
                    getParentForChildren(),
                    isClean());
            exception_ = null;
          }
          return exceptionBuilder_;
        }

        // repeated .boa.types.Statement body = 3;
        private java.util.List<boa.types.Ast.Statement> body_ =
          java.util.Collections.emptyList();
        private void ensureBodyIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            body_ = new java.util.ArrayList<boa.types.Ast.Statement>(body_);
            bitField0_ |= 0x00000004;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> bodyBuilder_;

        /**
         * <code>repeated .boa.types.Statement body = 3;</code>
         */
        public java.util.List<boa.types.Ast.Statement> getBodyList() {
          if (bodyBuilder_ == null) {
            return java.util.Collections.unmodifiableList(body_);
          } else {
            return bodyBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .boa.types.Statement body = 3;</code>
         */
        public int getBodyCount() {
          if (bodyBuilder_ == null) {
            return body_.size();
          } else {
            return bodyBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .boa.types.Statement body = 3;</code>
         */
        public boa.types.Ast.Statement getBody(int index) {
          if (bodyBuilder_ == null) {
            return body_.get(index);
          } else {
            return bodyBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .boa.types.Statement body = 3;</code>
         */
        public Builder setBody(
            int index, boa.types.Ast.Statement value) {
          if (bodyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBodyIsMutable();
            body_.set(index, value);
            onChanged();
          } else {
            bodyBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement body = 3;</code>
         */
        public Builder setBody(
            int index, boa.types.Ast.Statement.Builder builderForValue) {
          if (bodyBuilder_ == null) {
            ensureBodyIsMutable();
            body_.set(index, builderForValue.build());
            onChanged();
          } else {
            bodyBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement body = 3;</code>
         */
        public Builder addBody(boa.types.Ast.Statement value) {
          if (bodyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBodyIsMutable();
            body_.add(value);
            onChanged();
          } else {
            bodyBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement body = 3;</code>
         */
        public Builder addBody(
            int index, boa.types.Ast.Statement value) {
          if (bodyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBodyIsMutable();
            body_.add(index, value);
            onChanged();
          } else {
            bodyBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement body = 3;</code>
         */
        public Builder addBody(
            boa.types.Ast.Statement.Builder builderForValue) {
          if (bodyBuilder_ == null) {
            ensureBodyIsMutable();
            body_.add(builderForValue.build());
            onChanged();
          } else {
            bodyBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement body = 3;</code>
         */
        public Builder addBody(
            int index, boa.types.Ast.Statement.Builder builderForValue) {
          if (bodyBuilder_ == null) {
            ensureBodyIsMutable();
            body_.add(index, builderForValue.build());
            onChanged();
          } else {
            bodyBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement body = 3;</code>
         */
        public Builder addAllBody(
            java.lang.Iterable<? extends boa.types.Ast.Statement> values) {
          if (bodyBuilder_ == null) {
            ensureBodyIsMutable();
            super.addAll(values, body_);
            onChanged();
          } else {
            bodyBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement body = 3;</code>
         */
        public Builder clearBody() {
          if (bodyBuilder_ == null) {
            body_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
          } else {
            bodyBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement body = 3;</code>
         */
        public Builder removeBody(int index) {
          if (bodyBuilder_ == null) {
            ensureBodyIsMutable();
            body_.remove(index);
            onChanged();
          } else {
            bodyBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement body = 3;</code>
         */
        public boa.types.Ast.Statement.Builder getBodyBuilder(
            int index) {
          return getBodyFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .boa.types.Statement body = 3;</code>
         */
        public boa.types.Ast.StatementOrBuilder getBodyOrBuilder(
            int index) {
          if (bodyBuilder_ == null) {
            return body_.get(index);  } else {
            return bodyBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .boa.types.Statement body = 3;</code>
         */
        public java.util.List<? extends boa.types.Ast.StatementOrBuilder> 
             getBodyOrBuilderList() {
          if (bodyBuilder_ != null) {
            return bodyBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(body_);
          }
        }
        /**
         * <code>repeated .boa.types.Statement body = 3;</code>
         */
        public boa.types.Ast.Statement.Builder addBodyBuilder() {
          return getBodyFieldBuilder().addBuilder(
              boa.types.Ast.Statement.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Statement body = 3;</code>
         */
        public boa.types.Ast.Statement.Builder addBodyBuilder(
            int index) {
          return getBodyFieldBuilder().addBuilder(
              index, boa.types.Ast.Statement.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Statement body = 3;</code>
         */
        public java.util.List<boa.types.Ast.Statement.Builder> 
             getBodyBuilderList() {
          return getBodyFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> 
            getBodyFieldBuilder() {
          if (bodyBuilder_ == null) {
            bodyBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder>(
                    body_,
                    ((bitField0_ & 0x00000004) == 0x00000004),
                    getParentForChildren(),
                    isClean());
            body_ = null;
          }
          return bodyBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Statement.CatchClause)
      }

      static {
        defaultInstance = new CatchClause(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Statement.CatchClause)
    }

    public interface ContinueStatementOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CONTINUE];
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CONTINUE];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CONTINUE];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Statement.StatementKind getShadowKind();

      // optional .boa.types.Expression label = 2;
      /**
       * <code>optional .boa.types.Expression label = 2;</code>
       *
       * <pre>
       *optional Expression.VarAccessExpression label = 2 [(boa.types.alias) = "expression_1"]; FIXME
       * </pre>
       */
      boolean hasLabel();
      /**
       * <code>optional .boa.types.Expression label = 2;</code>
       *
       * <pre>
       *optional Expression.VarAccessExpression label = 2 [(boa.types.alias) = "expression_1"]; FIXME
       * </pre>
       */
      boa.types.Ast.Expression getLabel();
      /**
       * <code>optional .boa.types.Expression label = 2;</code>
       *
       * <pre>
       *optional Expression.VarAccessExpression label = 2 [(boa.types.alias) = "expression_1"]; FIXME
       * </pre>
       */
      boa.types.Ast.ExpressionOrBuilder getLabelOrBuilder();
    }
    /**
     * Protobuf type {@code boa.types.Statement.ContinueStatement}
     */
    public static final class ContinueStatement extends
        com.google.protobuf.GeneratedMessage
        implements ContinueStatementOrBuilder {
      // Use ContinueStatement.newBuilder() to construct.
      private ContinueStatement(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private ContinueStatement(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final ContinueStatement defaultInstance;
      public static ContinueStatement getDefaultInstance() {
        return defaultInstance;
      }

      public ContinueStatement getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private ContinueStatement(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Statement.StatementKind value = boa.types.Ast.Statement.StatementKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = label_.toBuilder();
                }
                label_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(label_);
                  label_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Statement_ContinueStatement_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Statement_ContinueStatement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Statement.ContinueStatement.class, boa.types.Ast.Statement.ContinueStatement.Builder.class);
      }

      public static com.google.protobuf.Parser<ContinueStatement> PARSER =
          new com.google.protobuf.AbstractParser<ContinueStatement>() {
        public ContinueStatement parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ContinueStatement(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<ContinueStatement> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CONTINUE];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Statement.StatementKind shadowKind_;
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CONTINUE];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CONTINUE];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement.StatementKind getShadowKind() {
        return shadowKind_;
      }

      // optional .boa.types.Expression label = 2;
      public static final int LABEL_FIELD_NUMBER = 2;
      private boa.types.Ast.Expression label_;
      /**
       * <code>optional .boa.types.Expression label = 2;</code>
       *
       * <pre>
       *optional Expression.VarAccessExpression label = 2 [(boa.types.alias) = "expression_1"]; FIXME
       * </pre>
       */
      public boolean hasLabel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .boa.types.Expression label = 2;</code>
       *
       * <pre>
       *optional Expression.VarAccessExpression label = 2 [(boa.types.alias) = "expression_1"]; FIXME
       * </pre>
       */
      public boa.types.Ast.Expression getLabel() {
        return label_;
      }
      /**
       * <code>optional .boa.types.Expression label = 2;</code>
       *
       * <pre>
       *optional Expression.VarAccessExpression label = 2 [(boa.types.alias) = "expression_1"]; FIXME
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getLabelOrBuilder() {
        return label_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Statement.StatementKind.CONTINUE;
        label_ = boa.types.Ast.Expression.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (hasLabel()) {
          if (!getLabel().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, label_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, label_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Statement.ContinueStatement parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.ContinueStatement parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.ContinueStatement parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.ContinueStatement parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.ContinueStatement parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.ContinueStatement parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.ContinueStatement parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Statement.ContinueStatement parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.ContinueStatement parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.ContinueStatement parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Statement.ContinueStatement prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Statement.ContinueStatement}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Statement.ContinueStatementOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Statement_ContinueStatement_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Statement_ContinueStatement_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Statement.ContinueStatement.class, boa.types.Ast.Statement.ContinueStatement.Builder.class);
        }

        // Construct using boa.types.Ast.Statement.ContinueStatement.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getLabelFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Statement.StatementKind.CONTINUE;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (labelBuilder_ == null) {
            label_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            labelBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Statement_ContinueStatement_descriptor;
        }

        public boa.types.Ast.Statement.ContinueStatement getDefaultInstanceForType() {
          return boa.types.Ast.Statement.ContinueStatement.getDefaultInstance();
        }

        public boa.types.Ast.Statement.ContinueStatement build() {
          boa.types.Ast.Statement.ContinueStatement result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Statement.ContinueStatement buildPartial() {
          boa.types.Ast.Statement.ContinueStatement result = new boa.types.Ast.Statement.ContinueStatement(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (labelBuilder_ == null) {
            result.label_ = label_;
          } else {
            result.label_ = labelBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Statement.ContinueStatement) {
            return mergeFrom((boa.types.Ast.Statement.ContinueStatement)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Statement.ContinueStatement other) {
          if (other == boa.types.Ast.Statement.ContinueStatement.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasLabel()) {
            mergeLabel(other.getLabel());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (hasLabel()) {
            if (!getLabel().isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Statement.ContinueStatement parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Statement.ContinueStatement) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CONTINUE];
        private boa.types.Ast.Statement.StatementKind shadowKind_ = boa.types.Ast.Statement.StatementKind.CONTINUE;
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CONTINUE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CONTINUE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Statement.StatementKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CONTINUE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Statement.StatementKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CONTINUE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Statement.StatementKind.CONTINUE;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression label = 2;
        private boa.types.Ast.Expression label_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> labelBuilder_;
        /**
         * <code>optional .boa.types.Expression label = 2;</code>
         *
         * <pre>
         *optional Expression.VarAccessExpression label = 2 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        public boolean hasLabel() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .boa.types.Expression label = 2;</code>
         *
         * <pre>
         *optional Expression.VarAccessExpression label = 2 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        public boa.types.Ast.Expression getLabel() {
          if (labelBuilder_ == null) {
            return label_;
          } else {
            return labelBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .boa.types.Expression label = 2;</code>
         *
         * <pre>
         *optional Expression.VarAccessExpression label = 2 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        public Builder setLabel(boa.types.Ast.Expression value) {
          if (labelBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            label_ = value;
            onChanged();
          } else {
            labelBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .boa.types.Expression label = 2;</code>
         *
         * <pre>
         *optional Expression.VarAccessExpression label = 2 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        public Builder setLabel(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (labelBuilder_ == null) {
            label_ = builderForValue.build();
            onChanged();
          } else {
            labelBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .boa.types.Expression label = 2;</code>
         *
         * <pre>
         *optional Expression.VarAccessExpression label = 2 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        public Builder mergeLabel(boa.types.Ast.Expression value) {
          if (labelBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                label_ != boa.types.Ast.Expression.getDefaultInstance()) {
              label_ =
                boa.types.Ast.Expression.newBuilder(label_).mergeFrom(value).buildPartial();
            } else {
              label_ = value;
            }
            onChanged();
          } else {
            labelBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .boa.types.Expression label = 2;</code>
         *
         * <pre>
         *optional Expression.VarAccessExpression label = 2 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        public Builder clearLabel() {
          if (labelBuilder_ == null) {
            label_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            labelBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>optional .boa.types.Expression label = 2;</code>
         *
         * <pre>
         *optional Expression.VarAccessExpression label = 2 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        public boa.types.Ast.Expression.Builder getLabelBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getLabelFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .boa.types.Expression label = 2;</code>
         *
         * <pre>
         *optional Expression.VarAccessExpression label = 2 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        public boa.types.Ast.ExpressionOrBuilder getLabelOrBuilder() {
          if (labelBuilder_ != null) {
            return labelBuilder_.getMessageOrBuilder();
          } else {
            return label_;
          }
        }
        /**
         * <code>optional .boa.types.Expression label = 2;</code>
         *
         * <pre>
         *optional Expression.VarAccessExpression label = 2 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getLabelFieldBuilder() {
          if (labelBuilder_ == null) {
            labelBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    label_,
                    getParentForChildren(),
                    isClean());
            label_ = null;
          }
          return labelBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Statement.ContinueStatement)
      }

      static {
        defaultInstance = new ContinueStatement(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Statement.ContinueStatement)
    }

    public interface DoStatementOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = DO];
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = DO];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = DO];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Statement.StatementKind getShadowKind();

      // required .boa.types.Expression condition = 2;
      /**
       * <code>required .boa.types.Expression condition = 2;</code>
       */
      boolean hasCondition();
      /**
       * <code>required .boa.types.Expression condition = 2;</code>
       */
      boa.types.Ast.Expression getCondition();
      /**
       * <code>required .boa.types.Expression condition = 2;</code>
       */
      boa.types.Ast.ExpressionOrBuilder getConditionOrBuilder();

      // required .boa.types.Statement body = 3;
      /**
       * <code>required .boa.types.Statement body = 3;</code>
       */
      boolean hasBody();
      /**
       * <code>required .boa.types.Statement body = 3;</code>
       */
      boa.types.Ast.Statement getBody();
      /**
       * <code>required .boa.types.Statement body = 3;</code>
       */
      boa.types.Ast.StatementOrBuilder getBodyOrBuilder();
    }
    /**
     * Protobuf type {@code boa.types.Statement.DoStatement}
     */
    public static final class DoStatement extends
        com.google.protobuf.GeneratedMessage
        implements DoStatementOrBuilder {
      // Use DoStatement.newBuilder() to construct.
      private DoStatement(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private DoStatement(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final DoStatement defaultInstance;
      public static DoStatement getDefaultInstance() {
        return defaultInstance;
      }

      public DoStatement getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private DoStatement(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Statement.StatementKind value = boa.types.Ast.Statement.StatementKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = condition_.toBuilder();
                }
                condition_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(condition_);
                  condition_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 26: {
                boa.types.Ast.Statement.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = body_.toBuilder();
                }
                body_ = input.readMessage(boa.types.Ast.Statement.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(body_);
                  body_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Statement_DoStatement_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Statement_DoStatement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Statement.DoStatement.class, boa.types.Ast.Statement.DoStatement.Builder.class);
      }

      public static com.google.protobuf.Parser<DoStatement> PARSER =
          new com.google.protobuf.AbstractParser<DoStatement>() {
        public DoStatement parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new DoStatement(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<DoStatement> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = DO];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Statement.StatementKind shadowKind_;
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = DO];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = DO];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement.StatementKind getShadowKind() {
        return shadowKind_;
      }

      // required .boa.types.Expression condition = 2;
      public static final int CONDITION_FIELD_NUMBER = 2;
      private boa.types.Ast.Expression condition_;
      /**
       * <code>required .boa.types.Expression condition = 2;</code>
       */
      public boolean hasCondition() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .boa.types.Expression condition = 2;</code>
       */
      public boa.types.Ast.Expression getCondition() {
        return condition_;
      }
      /**
       * <code>required .boa.types.Expression condition = 2;</code>
       */
      public boa.types.Ast.ExpressionOrBuilder getConditionOrBuilder() {
        return condition_;
      }

      // required .boa.types.Statement body = 3;
      public static final int BODY_FIELD_NUMBER = 3;
      private boa.types.Ast.Statement body_;
      /**
       * <code>required .boa.types.Statement body = 3;</code>
       */
      public boolean hasBody() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .boa.types.Statement body = 3;</code>
       */
      public boa.types.Ast.Statement getBody() {
        return body_;
      }
      /**
       * <code>required .boa.types.Statement body = 3;</code>
       */
      public boa.types.Ast.StatementOrBuilder getBodyOrBuilder() {
        return body_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Statement.StatementKind.DO;
        condition_ = boa.types.Ast.Expression.getDefaultInstance();
        body_ = boa.types.Ast.Statement.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasCondition()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasBody()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getCondition().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getBody().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, condition_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(3, body_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, condition_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, body_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Statement.DoStatement parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.DoStatement parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.DoStatement parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.DoStatement parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.DoStatement parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.DoStatement parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.DoStatement parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Statement.DoStatement parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.DoStatement parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.DoStatement parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Statement.DoStatement prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Statement.DoStatement}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Statement.DoStatementOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Statement_DoStatement_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Statement_DoStatement_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Statement.DoStatement.class, boa.types.Ast.Statement.DoStatement.Builder.class);
        }

        // Construct using boa.types.Ast.Statement.DoStatement.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getConditionFieldBuilder();
            getBodyFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Statement.StatementKind.DO;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (conditionBuilder_ == null) {
            condition_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            conditionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          if (bodyBuilder_ == null) {
            body_ = boa.types.Ast.Statement.getDefaultInstance();
          } else {
            bodyBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Statement_DoStatement_descriptor;
        }

        public boa.types.Ast.Statement.DoStatement getDefaultInstanceForType() {
          return boa.types.Ast.Statement.DoStatement.getDefaultInstance();
        }

        public boa.types.Ast.Statement.DoStatement build() {
          boa.types.Ast.Statement.DoStatement result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Statement.DoStatement buildPartial() {
          boa.types.Ast.Statement.DoStatement result = new boa.types.Ast.Statement.DoStatement(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (conditionBuilder_ == null) {
            result.condition_ = condition_;
          } else {
            result.condition_ = conditionBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          if (bodyBuilder_ == null) {
            result.body_ = body_;
          } else {
            result.body_ = bodyBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Statement.DoStatement) {
            return mergeFrom((boa.types.Ast.Statement.DoStatement)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Statement.DoStatement other) {
          if (other == boa.types.Ast.Statement.DoStatement.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasCondition()) {
            mergeCondition(other.getCondition());
          }
          if (other.hasBody()) {
            mergeBody(other.getBody());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasCondition()) {
            
            return false;
          }
          if (!hasBody()) {
            
            return false;
          }
          if (!getCondition().isInitialized()) {
            
            return false;
          }
          if (!getBody().isInitialized()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Statement.DoStatement parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Statement.DoStatement) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = DO];
        private boa.types.Ast.Statement.StatementKind shadowKind_ = boa.types.Ast.Statement.StatementKind.DO;
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = DO];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = DO];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Statement.StatementKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = DO];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Statement.StatementKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = DO];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Statement.StatementKind.DO;
          onChanged();
          return this;
        }

        // required .boa.types.Expression condition = 2;
        private boa.types.Ast.Expression condition_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> conditionBuilder_;
        /**
         * <code>required .boa.types.Expression condition = 2;</code>
         */
        public boolean hasCondition() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required .boa.types.Expression condition = 2;</code>
         */
        public boa.types.Ast.Expression getCondition() {
          if (conditionBuilder_ == null) {
            return condition_;
          } else {
            return conditionBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Expression condition = 2;</code>
         */
        public Builder setCondition(boa.types.Ast.Expression value) {
          if (conditionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            condition_ = value;
            onChanged();
          } else {
            conditionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression condition = 2;</code>
         */
        public Builder setCondition(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (conditionBuilder_ == null) {
            condition_ = builderForValue.build();
            onChanged();
          } else {
            conditionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression condition = 2;</code>
         */
        public Builder mergeCondition(boa.types.Ast.Expression value) {
          if (conditionBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                condition_ != boa.types.Ast.Expression.getDefaultInstance()) {
              condition_ =
                boa.types.Ast.Expression.newBuilder(condition_).mergeFrom(value).buildPartial();
            } else {
              condition_ = value;
            }
            onChanged();
          } else {
            conditionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression condition = 2;</code>
         */
        public Builder clearCondition() {
          if (conditionBuilder_ == null) {
            condition_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            conditionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>required .boa.types.Expression condition = 2;</code>
         */
        public boa.types.Ast.Expression.Builder getConditionBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getConditionFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Expression condition = 2;</code>
         */
        public boa.types.Ast.ExpressionOrBuilder getConditionOrBuilder() {
          if (conditionBuilder_ != null) {
            return conditionBuilder_.getMessageOrBuilder();
          } else {
            return condition_;
          }
        }
        /**
         * <code>required .boa.types.Expression condition = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getConditionFieldBuilder() {
          if (conditionBuilder_ == null) {
            conditionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    condition_,
                    getParentForChildren(),
                    isClean());
            condition_ = null;
          }
          return conditionBuilder_;
        }

        // required .boa.types.Statement body = 3;
        private boa.types.Ast.Statement body_ = boa.types.Ast.Statement.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> bodyBuilder_;
        /**
         * <code>required .boa.types.Statement body = 3;</code>
         */
        public boolean hasBody() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required .boa.types.Statement body = 3;</code>
         */
        public boa.types.Ast.Statement getBody() {
          if (bodyBuilder_ == null) {
            return body_;
          } else {
            return bodyBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Statement body = 3;</code>
         */
        public Builder setBody(boa.types.Ast.Statement value) {
          if (bodyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            body_ = value;
            onChanged();
          } else {
            bodyBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Statement body = 3;</code>
         */
        public Builder setBody(
            boa.types.Ast.Statement.Builder builderForValue) {
          if (bodyBuilder_ == null) {
            body_ = builderForValue.build();
            onChanged();
          } else {
            bodyBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Statement body = 3;</code>
         */
        public Builder mergeBody(boa.types.Ast.Statement value) {
          if (bodyBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                body_ != boa.types.Ast.Statement.getDefaultInstance()) {
              body_ =
                boa.types.Ast.Statement.newBuilder(body_).mergeFrom(value).buildPartial();
            } else {
              body_ = value;
            }
            onChanged();
          } else {
            bodyBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Statement body = 3;</code>
         */
        public Builder clearBody() {
          if (bodyBuilder_ == null) {
            body_ = boa.types.Ast.Statement.getDefaultInstance();
            onChanged();
          } else {
            bodyBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <code>required .boa.types.Statement body = 3;</code>
         */
        public boa.types.Ast.Statement.Builder getBodyBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getBodyFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Statement body = 3;</code>
         */
        public boa.types.Ast.StatementOrBuilder getBodyOrBuilder() {
          if (bodyBuilder_ != null) {
            return bodyBuilder_.getMessageOrBuilder();
          } else {
            return body_;
          }
        }
        /**
         * <code>required .boa.types.Statement body = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> 
            getBodyFieldBuilder() {
          if (bodyBuilder_ == null) {
            bodyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder>(
                    body_,
                    getParentForChildren(),
                    isClean());
            body_ = null;
          }
          return bodyBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Statement.DoStatement)
      }

      static {
        defaultInstance = new DoStatement(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Statement.DoStatement)
    }

    public interface EmptyStatementOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = EMPTY];
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = EMPTY];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = EMPTY];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Statement.StatementKind getShadowKind();
    }
    /**
     * Protobuf type {@code boa.types.Statement.EmptyStatement}
     */
    public static final class EmptyStatement extends
        com.google.protobuf.GeneratedMessage
        implements EmptyStatementOrBuilder {
      // Use EmptyStatement.newBuilder() to construct.
      private EmptyStatement(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private EmptyStatement(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final EmptyStatement defaultInstance;
      public static EmptyStatement getDefaultInstance() {
        return defaultInstance;
      }

      public EmptyStatement getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private EmptyStatement(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Statement.StatementKind value = boa.types.Ast.Statement.StatementKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Statement_EmptyStatement_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Statement_EmptyStatement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Statement.EmptyStatement.class, boa.types.Ast.Statement.EmptyStatement.Builder.class);
      }

      public static com.google.protobuf.Parser<EmptyStatement> PARSER =
          new com.google.protobuf.AbstractParser<EmptyStatement>() {
        public EmptyStatement parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new EmptyStatement(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<EmptyStatement> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = EMPTY];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Statement.StatementKind shadowKind_;
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = EMPTY];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = EMPTY];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement.StatementKind getShadowKind() {
        return shadowKind_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Statement.StatementKind.EMPTY;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Statement.EmptyStatement parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.EmptyStatement parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.EmptyStatement parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.EmptyStatement parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.EmptyStatement parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.EmptyStatement parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.EmptyStatement parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Statement.EmptyStatement parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.EmptyStatement parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.EmptyStatement parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Statement.EmptyStatement prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Statement.EmptyStatement}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Statement.EmptyStatementOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Statement_EmptyStatement_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Statement_EmptyStatement_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Statement.EmptyStatement.class, boa.types.Ast.Statement.EmptyStatement.Builder.class);
        }

        // Construct using boa.types.Ast.Statement.EmptyStatement.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Statement.StatementKind.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Statement_EmptyStatement_descriptor;
        }

        public boa.types.Ast.Statement.EmptyStatement getDefaultInstanceForType() {
          return boa.types.Ast.Statement.EmptyStatement.getDefaultInstance();
        }

        public boa.types.Ast.Statement.EmptyStatement build() {
          boa.types.Ast.Statement.EmptyStatement result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Statement.EmptyStatement buildPartial() {
          boa.types.Ast.Statement.EmptyStatement result = new boa.types.Ast.Statement.EmptyStatement(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Statement.EmptyStatement) {
            return mergeFrom((boa.types.Ast.Statement.EmptyStatement)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Statement.EmptyStatement other) {
          if (other == boa.types.Ast.Statement.EmptyStatement.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Statement.EmptyStatement parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Statement.EmptyStatement) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = EMPTY];
        private boa.types.Ast.Statement.StatementKind shadowKind_ = boa.types.Ast.Statement.StatementKind.EMPTY;
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = EMPTY];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = EMPTY];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Statement.StatementKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = EMPTY];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Statement.StatementKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = EMPTY];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Statement.StatementKind.EMPTY;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Statement.EmptyStatement)
      }

      static {
        defaultInstance = new EmptyStatement(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Statement.EmptyStatement)
    }

    public interface EnhancedForStatementOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = FOR];
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = FOR];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = FOR];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Statement.StatementKind getShadowKind();

      // required .boa.types.Expression expression = 2;
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      boolean hasExpression();
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      boa.types.Ast.Expression getExpression();
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder();

      // required .boa.types.Variable variable_declaration = 3;
      /**
       * <code>required .boa.types.Variable variable_declaration = 3;</code>
       */
      boolean hasVariableDeclaration();
      /**
       * <code>required .boa.types.Variable variable_declaration = 3;</code>
       */
      boa.types.Ast.Variable getVariableDeclaration();
      /**
       * <code>required .boa.types.Variable variable_declaration = 3;</code>
       */
      boa.types.Ast.VariableOrBuilder getVariableDeclarationOrBuilder();

      // required .boa.types.Statement body = 4;
      /**
       * <code>required .boa.types.Statement body = 4;</code>
       */
      boolean hasBody();
      /**
       * <code>required .boa.types.Statement body = 4;</code>
       */
      boa.types.Ast.Statement getBody();
      /**
       * <code>required .boa.types.Statement body = 4;</code>
       */
      boa.types.Ast.StatementOrBuilder getBodyOrBuilder();
    }
    /**
     * Protobuf type {@code boa.types.Statement.EnhancedForStatement}
     */
    public static final class EnhancedForStatement extends
        com.google.protobuf.GeneratedMessage
        implements EnhancedForStatementOrBuilder {
      // Use EnhancedForStatement.newBuilder() to construct.
      private EnhancedForStatement(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private EnhancedForStatement(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final EnhancedForStatement defaultInstance;
      public static EnhancedForStatement getDefaultInstance() {
        return defaultInstance;
      }

      public EnhancedForStatement getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private EnhancedForStatement(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Statement.StatementKind value = boa.types.Ast.Statement.StatementKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = expression_.toBuilder();
                }
                expression_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(expression_);
                  expression_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 26: {
                boa.types.Ast.Variable.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = variableDeclaration_.toBuilder();
                }
                variableDeclaration_ = input.readMessage(boa.types.Ast.Variable.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(variableDeclaration_);
                  variableDeclaration_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
              case 34: {
                boa.types.Ast.Statement.Builder subBuilder = null;
                if (((bitField0_ & 0x00000008) == 0x00000008)) {
                  subBuilder = body_.toBuilder();
                }
                body_ = input.readMessage(boa.types.Ast.Statement.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(body_);
                  body_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000008;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Statement_EnhancedForStatement_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Statement_EnhancedForStatement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Statement.EnhancedForStatement.class, boa.types.Ast.Statement.EnhancedForStatement.Builder.class);
      }

      public static com.google.protobuf.Parser<EnhancedForStatement> PARSER =
          new com.google.protobuf.AbstractParser<EnhancedForStatement>() {
        public EnhancedForStatement parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new EnhancedForStatement(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<EnhancedForStatement> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = FOR];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Statement.StatementKind shadowKind_;
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = FOR];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = FOR];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement.StatementKind getShadowKind() {
        return shadowKind_;
      }

      // required .boa.types.Expression expression = 2;
      public static final int EXPRESSION_FIELD_NUMBER = 2;
      private boa.types.Ast.Expression expression_;
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      public boolean hasExpression() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      public boa.types.Ast.Expression getExpression() {
        return expression_;
      }
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      public boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder() {
        return expression_;
      }

      // required .boa.types.Variable variable_declaration = 3;
      public static final int VARIABLE_DECLARATION_FIELD_NUMBER = 3;
      private boa.types.Ast.Variable variableDeclaration_;
      /**
       * <code>required .boa.types.Variable variable_declaration = 3;</code>
       */
      public boolean hasVariableDeclaration() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .boa.types.Variable variable_declaration = 3;</code>
       */
      public boa.types.Ast.Variable getVariableDeclaration() {
        return variableDeclaration_;
      }
      /**
       * <code>required .boa.types.Variable variable_declaration = 3;</code>
       */
      public boa.types.Ast.VariableOrBuilder getVariableDeclarationOrBuilder() {
        return variableDeclaration_;
      }

      // required .boa.types.Statement body = 4;
      public static final int BODY_FIELD_NUMBER = 4;
      private boa.types.Ast.Statement body_;
      /**
       * <code>required .boa.types.Statement body = 4;</code>
       */
      public boolean hasBody() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .boa.types.Statement body = 4;</code>
       */
      public boa.types.Ast.Statement getBody() {
        return body_;
      }
      /**
       * <code>required .boa.types.Statement body = 4;</code>
       */
      public boa.types.Ast.StatementOrBuilder getBodyOrBuilder() {
        return body_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Statement.StatementKind.FOR;
        expression_ = boa.types.Ast.Expression.getDefaultInstance();
        variableDeclaration_ = boa.types.Ast.Variable.getDefaultInstance();
        body_ = boa.types.Ast.Statement.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasExpression()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasVariableDeclaration()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasBody()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getExpression().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getVariableDeclaration().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getBody().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, expression_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(3, variableDeclaration_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeMessage(4, body_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, expression_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, variableDeclaration_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, body_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Statement.EnhancedForStatement parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.EnhancedForStatement parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.EnhancedForStatement parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.EnhancedForStatement parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.EnhancedForStatement parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.EnhancedForStatement parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.EnhancedForStatement parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Statement.EnhancedForStatement parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.EnhancedForStatement parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.EnhancedForStatement parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Statement.EnhancedForStatement prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Statement.EnhancedForStatement}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Statement.EnhancedForStatementOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Statement_EnhancedForStatement_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Statement_EnhancedForStatement_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Statement.EnhancedForStatement.class, boa.types.Ast.Statement.EnhancedForStatement.Builder.class);
        }

        // Construct using boa.types.Ast.Statement.EnhancedForStatement.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getExpressionFieldBuilder();
            getVariableDeclarationFieldBuilder();
            getBodyFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Statement.StatementKind.FOR;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (expressionBuilder_ == null) {
            expression_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            expressionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          if (variableDeclarationBuilder_ == null) {
            variableDeclaration_ = boa.types.Ast.Variable.getDefaultInstance();
          } else {
            variableDeclarationBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          if (bodyBuilder_ == null) {
            body_ = boa.types.Ast.Statement.getDefaultInstance();
          } else {
            bodyBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Statement_EnhancedForStatement_descriptor;
        }

        public boa.types.Ast.Statement.EnhancedForStatement getDefaultInstanceForType() {
          return boa.types.Ast.Statement.EnhancedForStatement.getDefaultInstance();
        }

        public boa.types.Ast.Statement.EnhancedForStatement build() {
          boa.types.Ast.Statement.EnhancedForStatement result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Statement.EnhancedForStatement buildPartial() {
          boa.types.Ast.Statement.EnhancedForStatement result = new boa.types.Ast.Statement.EnhancedForStatement(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (expressionBuilder_ == null) {
            result.expression_ = expression_;
          } else {
            result.expression_ = expressionBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          if (variableDeclarationBuilder_ == null) {
            result.variableDeclaration_ = variableDeclaration_;
          } else {
            result.variableDeclaration_ = variableDeclarationBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          if (bodyBuilder_ == null) {
            result.body_ = body_;
          } else {
            result.body_ = bodyBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Statement.EnhancedForStatement) {
            return mergeFrom((boa.types.Ast.Statement.EnhancedForStatement)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Statement.EnhancedForStatement other) {
          if (other == boa.types.Ast.Statement.EnhancedForStatement.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasExpression()) {
            mergeExpression(other.getExpression());
          }
          if (other.hasVariableDeclaration()) {
            mergeVariableDeclaration(other.getVariableDeclaration());
          }
          if (other.hasBody()) {
            mergeBody(other.getBody());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasExpression()) {
            
            return false;
          }
          if (!hasVariableDeclaration()) {
            
            return false;
          }
          if (!hasBody()) {
            
            return false;
          }
          if (!getExpression().isInitialized()) {
            
            return false;
          }
          if (!getVariableDeclaration().isInitialized()) {
            
            return false;
          }
          if (!getBody().isInitialized()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Statement.EnhancedForStatement parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Statement.EnhancedForStatement) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = FOR];
        private boa.types.Ast.Statement.StatementKind shadowKind_ = boa.types.Ast.Statement.StatementKind.FOR;
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = FOR];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = FOR];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Statement.StatementKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = FOR];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Statement.StatementKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = FOR];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Statement.StatementKind.FOR;
          onChanged();
          return this;
        }

        // required .boa.types.Expression expression = 2;
        private boa.types.Ast.Expression expression_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> expressionBuilder_;
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public boolean hasExpression() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public boa.types.Ast.Expression getExpression() {
          if (expressionBuilder_ == null) {
            return expression_;
          } else {
            return expressionBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public Builder setExpression(boa.types.Ast.Expression value) {
          if (expressionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            expression_ = value;
            onChanged();
          } else {
            expressionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public Builder setExpression(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (expressionBuilder_ == null) {
            expression_ = builderForValue.build();
            onChanged();
          } else {
            expressionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public Builder mergeExpression(boa.types.Ast.Expression value) {
          if (expressionBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                expression_ != boa.types.Ast.Expression.getDefaultInstance()) {
              expression_ =
                boa.types.Ast.Expression.newBuilder(expression_).mergeFrom(value).buildPartial();
            } else {
              expression_ = value;
            }
            onChanged();
          } else {
            expressionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public Builder clearExpression() {
          if (expressionBuilder_ == null) {
            expression_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            expressionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public boa.types.Ast.Expression.Builder getExpressionBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getExpressionFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder() {
          if (expressionBuilder_ != null) {
            return expressionBuilder_.getMessageOrBuilder();
          } else {
            return expression_;
          }
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getExpressionFieldBuilder() {
          if (expressionBuilder_ == null) {
            expressionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    expression_,
                    getParentForChildren(),
                    isClean());
            expression_ = null;
          }
          return expressionBuilder_;
        }

        // required .boa.types.Variable variable_declaration = 3;
        private boa.types.Ast.Variable variableDeclaration_ = boa.types.Ast.Variable.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Variable, boa.types.Ast.Variable.Builder, boa.types.Ast.VariableOrBuilder> variableDeclarationBuilder_;
        /**
         * <code>required .boa.types.Variable variable_declaration = 3;</code>
         */
        public boolean hasVariableDeclaration() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required .boa.types.Variable variable_declaration = 3;</code>
         */
        public boa.types.Ast.Variable getVariableDeclaration() {
          if (variableDeclarationBuilder_ == null) {
            return variableDeclaration_;
          } else {
            return variableDeclarationBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Variable variable_declaration = 3;</code>
         */
        public Builder setVariableDeclaration(boa.types.Ast.Variable value) {
          if (variableDeclarationBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            variableDeclaration_ = value;
            onChanged();
          } else {
            variableDeclarationBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Variable variable_declaration = 3;</code>
         */
        public Builder setVariableDeclaration(
            boa.types.Ast.Variable.Builder builderForValue) {
          if (variableDeclarationBuilder_ == null) {
            variableDeclaration_ = builderForValue.build();
            onChanged();
          } else {
            variableDeclarationBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Variable variable_declaration = 3;</code>
         */
        public Builder mergeVariableDeclaration(boa.types.Ast.Variable value) {
          if (variableDeclarationBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                variableDeclaration_ != boa.types.Ast.Variable.getDefaultInstance()) {
              variableDeclaration_ =
                boa.types.Ast.Variable.newBuilder(variableDeclaration_).mergeFrom(value).buildPartial();
            } else {
              variableDeclaration_ = value;
            }
            onChanged();
          } else {
            variableDeclarationBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Variable variable_declaration = 3;</code>
         */
        public Builder clearVariableDeclaration() {
          if (variableDeclarationBuilder_ == null) {
            variableDeclaration_ = boa.types.Ast.Variable.getDefaultInstance();
            onChanged();
          } else {
            variableDeclarationBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <code>required .boa.types.Variable variable_declaration = 3;</code>
         */
        public boa.types.Ast.Variable.Builder getVariableDeclarationBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getVariableDeclarationFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Variable variable_declaration = 3;</code>
         */
        public boa.types.Ast.VariableOrBuilder getVariableDeclarationOrBuilder() {
          if (variableDeclarationBuilder_ != null) {
            return variableDeclarationBuilder_.getMessageOrBuilder();
          } else {
            return variableDeclaration_;
          }
        }
        /**
         * <code>required .boa.types.Variable variable_declaration = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Variable, boa.types.Ast.Variable.Builder, boa.types.Ast.VariableOrBuilder> 
            getVariableDeclarationFieldBuilder() {
          if (variableDeclarationBuilder_ == null) {
            variableDeclarationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Variable, boa.types.Ast.Variable.Builder, boa.types.Ast.VariableOrBuilder>(
                    variableDeclaration_,
                    getParentForChildren(),
                    isClean());
            variableDeclaration_ = null;
          }
          return variableDeclarationBuilder_;
        }

        // required .boa.types.Statement body = 4;
        private boa.types.Ast.Statement body_ = boa.types.Ast.Statement.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> bodyBuilder_;
        /**
         * <code>required .boa.types.Statement body = 4;</code>
         */
        public boolean hasBody() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>required .boa.types.Statement body = 4;</code>
         */
        public boa.types.Ast.Statement getBody() {
          if (bodyBuilder_ == null) {
            return body_;
          } else {
            return bodyBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Statement body = 4;</code>
         */
        public Builder setBody(boa.types.Ast.Statement value) {
          if (bodyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            body_ = value;
            onChanged();
          } else {
            bodyBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>required .boa.types.Statement body = 4;</code>
         */
        public Builder setBody(
            boa.types.Ast.Statement.Builder builderForValue) {
          if (bodyBuilder_ == null) {
            body_ = builderForValue.build();
            onChanged();
          } else {
            bodyBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>required .boa.types.Statement body = 4;</code>
         */
        public Builder mergeBody(boa.types.Ast.Statement value) {
          if (bodyBuilder_ == null) {
            if (((bitField0_ & 0x00000008) == 0x00000008) &&
                body_ != boa.types.Ast.Statement.getDefaultInstance()) {
              body_ =
                boa.types.Ast.Statement.newBuilder(body_).mergeFrom(value).buildPartial();
            } else {
              body_ = value;
            }
            onChanged();
          } else {
            bodyBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>required .boa.types.Statement body = 4;</code>
         */
        public Builder clearBody() {
          if (bodyBuilder_ == null) {
            body_ = boa.types.Ast.Statement.getDefaultInstance();
            onChanged();
          } else {
            bodyBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }
        /**
         * <code>required .boa.types.Statement body = 4;</code>
         */
        public boa.types.Ast.Statement.Builder getBodyBuilder() {
          bitField0_ |= 0x00000008;
          onChanged();
          return getBodyFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Statement body = 4;</code>
         */
        public boa.types.Ast.StatementOrBuilder getBodyOrBuilder() {
          if (bodyBuilder_ != null) {
            return bodyBuilder_.getMessageOrBuilder();
          } else {
            return body_;
          }
        }
        /**
         * <code>required .boa.types.Statement body = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> 
            getBodyFieldBuilder() {
          if (bodyBuilder_ == null) {
            bodyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder>(
                    body_,
                    getParentForChildren(),
                    isClean());
            body_ = null;
          }
          return bodyBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Statement.EnhancedForStatement)
      }

      static {
        defaultInstance = new EnhancedForStatement(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Statement.EnhancedForStatement)
    }

    public interface ExpressionStatementOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = EXPR];
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = EXPR];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = EXPR];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Statement.StatementKind getShadowKind();

      // required .boa.types.Expression expression = 2;
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      boolean hasExpression();
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      boa.types.Ast.Expression getExpression();
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder();
    }
    /**
     * Protobuf type {@code boa.types.Statement.ExpressionStatement}
     */
    public static final class ExpressionStatement extends
        com.google.protobuf.GeneratedMessage
        implements ExpressionStatementOrBuilder {
      // Use ExpressionStatement.newBuilder() to construct.
      private ExpressionStatement(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private ExpressionStatement(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final ExpressionStatement defaultInstance;
      public static ExpressionStatement getDefaultInstance() {
        return defaultInstance;
      }

      public ExpressionStatement getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private ExpressionStatement(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Statement.StatementKind value = boa.types.Ast.Statement.StatementKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = expression_.toBuilder();
                }
                expression_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(expression_);
                  expression_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Statement_ExpressionStatement_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Statement_ExpressionStatement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Statement.ExpressionStatement.class, boa.types.Ast.Statement.ExpressionStatement.Builder.class);
      }

      public static com.google.protobuf.Parser<ExpressionStatement> PARSER =
          new com.google.protobuf.AbstractParser<ExpressionStatement>() {
        public ExpressionStatement parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ExpressionStatement(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<ExpressionStatement> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = EXPR];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Statement.StatementKind shadowKind_;
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = EXPR];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = EXPR];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement.StatementKind getShadowKind() {
        return shadowKind_;
      }

      // required .boa.types.Expression expression = 2;
      public static final int EXPRESSION_FIELD_NUMBER = 2;
      private boa.types.Ast.Expression expression_;
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      public boolean hasExpression() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      public boa.types.Ast.Expression getExpression() {
        return expression_;
      }
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      public boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder() {
        return expression_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Statement.StatementKind.EXPR;
        expression_ = boa.types.Ast.Expression.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasExpression()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getExpression().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, expression_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, expression_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Statement.ExpressionStatement parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.ExpressionStatement parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.ExpressionStatement parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.ExpressionStatement parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.ExpressionStatement parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.ExpressionStatement parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.ExpressionStatement parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Statement.ExpressionStatement parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.ExpressionStatement parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.ExpressionStatement parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Statement.ExpressionStatement prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Statement.ExpressionStatement}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Statement.ExpressionStatementOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Statement_ExpressionStatement_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Statement_ExpressionStatement_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Statement.ExpressionStatement.class, boa.types.Ast.Statement.ExpressionStatement.Builder.class);
        }

        // Construct using boa.types.Ast.Statement.ExpressionStatement.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getExpressionFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Statement.StatementKind.EXPR;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (expressionBuilder_ == null) {
            expression_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            expressionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Statement_ExpressionStatement_descriptor;
        }

        public boa.types.Ast.Statement.ExpressionStatement getDefaultInstanceForType() {
          return boa.types.Ast.Statement.ExpressionStatement.getDefaultInstance();
        }

        public boa.types.Ast.Statement.ExpressionStatement build() {
          boa.types.Ast.Statement.ExpressionStatement result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Statement.ExpressionStatement buildPartial() {
          boa.types.Ast.Statement.ExpressionStatement result = new boa.types.Ast.Statement.ExpressionStatement(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (expressionBuilder_ == null) {
            result.expression_ = expression_;
          } else {
            result.expression_ = expressionBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Statement.ExpressionStatement) {
            return mergeFrom((boa.types.Ast.Statement.ExpressionStatement)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Statement.ExpressionStatement other) {
          if (other == boa.types.Ast.Statement.ExpressionStatement.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasExpression()) {
            mergeExpression(other.getExpression());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasExpression()) {
            
            return false;
          }
          if (!getExpression().isInitialized()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Statement.ExpressionStatement parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Statement.ExpressionStatement) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = EXPR];
        private boa.types.Ast.Statement.StatementKind shadowKind_ = boa.types.Ast.Statement.StatementKind.EXPR;
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = EXPR];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = EXPR];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Statement.StatementKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = EXPR];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Statement.StatementKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = EXPR];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Statement.StatementKind.EXPR;
          onChanged();
          return this;
        }

        // required .boa.types.Expression expression = 2;
        private boa.types.Ast.Expression expression_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> expressionBuilder_;
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public boolean hasExpression() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public boa.types.Ast.Expression getExpression() {
          if (expressionBuilder_ == null) {
            return expression_;
          } else {
            return expressionBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public Builder setExpression(boa.types.Ast.Expression value) {
          if (expressionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            expression_ = value;
            onChanged();
          } else {
            expressionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public Builder setExpression(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (expressionBuilder_ == null) {
            expression_ = builderForValue.build();
            onChanged();
          } else {
            expressionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public Builder mergeExpression(boa.types.Ast.Expression value) {
          if (expressionBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                expression_ != boa.types.Ast.Expression.getDefaultInstance()) {
              expression_ =
                boa.types.Ast.Expression.newBuilder(expression_).mergeFrom(value).buildPartial();
            } else {
              expression_ = value;
            }
            onChanged();
          } else {
            expressionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public Builder clearExpression() {
          if (expressionBuilder_ == null) {
            expression_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            expressionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public boa.types.Ast.Expression.Builder getExpressionBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getExpressionFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder() {
          if (expressionBuilder_ != null) {
            return expressionBuilder_.getMessageOrBuilder();
          } else {
            return expression_;
          }
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getExpressionFieldBuilder() {
          if (expressionBuilder_ == null) {
            expressionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    expression_,
                    getParentForChildren(),
                    isClean());
            expression_ = null;
          }
          return expressionBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Statement.ExpressionStatement)
      }

      static {
        defaultInstance = new ExpressionStatement(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Statement.ExpressionStatement)
    }

    public interface ForStatementOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = FOR];
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = FOR];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = FOR];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Statement.StatementKind getShadowKind();

      // repeated .boa.types.Expression initializations = 2;
      /**
       * <code>repeated .boa.types.Expression initializations = 2;</code>
       */
      java.util.List<boa.types.Ast.Expression> 
          getInitializationsList();
      /**
       * <code>repeated .boa.types.Expression initializations = 2;</code>
       */
      boa.types.Ast.Expression getInitializations(int index);
      /**
       * <code>repeated .boa.types.Expression initializations = 2;</code>
       */
      int getInitializationsCount();
      /**
       * <code>repeated .boa.types.Expression initializations = 2;</code>
       */
      java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
          getInitializationsOrBuilderList();
      /**
       * <code>repeated .boa.types.Expression initializations = 2;</code>
       */
      boa.types.Ast.ExpressionOrBuilder getInitializationsOrBuilder(
          int index);

      // required .boa.types.Expression condition = 3;
      /**
       * <code>required .boa.types.Expression condition = 3;</code>
       */
      boolean hasCondition();
      /**
       * <code>required .boa.types.Expression condition = 3;</code>
       */
      boa.types.Ast.Expression getCondition();
      /**
       * <code>required .boa.types.Expression condition = 3;</code>
       */
      boa.types.Ast.ExpressionOrBuilder getConditionOrBuilder();

      // repeated .boa.types.Expression updates = 4;
      /**
       * <code>repeated .boa.types.Expression updates = 4;</code>
       */
      java.util.List<boa.types.Ast.Expression> 
          getUpdatesList();
      /**
       * <code>repeated .boa.types.Expression updates = 4;</code>
       */
      boa.types.Ast.Expression getUpdates(int index);
      /**
       * <code>repeated .boa.types.Expression updates = 4;</code>
       */
      int getUpdatesCount();
      /**
       * <code>repeated .boa.types.Expression updates = 4;</code>
       */
      java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
          getUpdatesOrBuilderList();
      /**
       * <code>repeated .boa.types.Expression updates = 4;</code>
       */
      boa.types.Ast.ExpressionOrBuilder getUpdatesOrBuilder(
          int index);

      // required .boa.types.Statement body = 5;
      /**
       * <code>required .boa.types.Statement body = 5;</code>
       */
      boolean hasBody();
      /**
       * <code>required .boa.types.Statement body = 5;</code>
       */
      boa.types.Ast.Statement getBody();
      /**
       * <code>required .boa.types.Statement body = 5;</code>
       */
      boa.types.Ast.StatementOrBuilder getBodyOrBuilder();
    }
    /**
     * Protobuf type {@code boa.types.Statement.ForStatement}
     */
    public static final class ForStatement extends
        com.google.protobuf.GeneratedMessage
        implements ForStatementOrBuilder {
      // Use ForStatement.newBuilder() to construct.
      private ForStatement(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private ForStatement(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final ForStatement defaultInstance;
      public static ForStatement getDefaultInstance() {
        return defaultInstance;
      }

      public ForStatement getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private ForStatement(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Statement.StatementKind value = boa.types.Ast.Statement.StatementKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  initializations_ = new java.util.ArrayList<boa.types.Ast.Expression>();
                  mutable_bitField0_ |= 0x00000002;
                }
                initializations_.add(input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry));
                break;
              }
              case 26: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = condition_.toBuilder();
                }
                condition_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(condition_);
                  condition_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 34: {
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                  updates_ = new java.util.ArrayList<boa.types.Ast.Expression>();
                  mutable_bitField0_ |= 0x00000008;
                }
                updates_.add(input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry));
                break;
              }
              case 42: {
                boa.types.Ast.Statement.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = body_.toBuilder();
                }
                body_ = input.readMessage(boa.types.Ast.Statement.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(body_);
                  body_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            initializations_ = java.util.Collections.unmodifiableList(initializations_);
          }
          if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
            updates_ = java.util.Collections.unmodifiableList(updates_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Statement_ForStatement_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Statement_ForStatement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Statement.ForStatement.class, boa.types.Ast.Statement.ForStatement.Builder.class);
      }

      public static com.google.protobuf.Parser<ForStatement> PARSER =
          new com.google.protobuf.AbstractParser<ForStatement>() {
        public ForStatement parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ForStatement(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<ForStatement> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = FOR];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Statement.StatementKind shadowKind_;
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = FOR];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = FOR];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement.StatementKind getShadowKind() {
        return shadowKind_;
      }

      // repeated .boa.types.Expression initializations = 2;
      public static final int INITIALIZATIONS_FIELD_NUMBER = 2;
      private java.util.List<boa.types.Ast.Expression> initializations_;
      /**
       * <code>repeated .boa.types.Expression initializations = 2;</code>
       */
      public java.util.List<boa.types.Ast.Expression> getInitializationsList() {
        return initializations_;
      }
      /**
       * <code>repeated .boa.types.Expression initializations = 2;</code>
       */
      public java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
          getInitializationsOrBuilderList() {
        return initializations_;
      }
      /**
       * <code>repeated .boa.types.Expression initializations = 2;</code>
       */
      public int getInitializationsCount() {
        return initializations_.size();
      }
      /**
       * <code>repeated .boa.types.Expression initializations = 2;</code>
       */
      public boa.types.Ast.Expression getInitializations(int index) {
        return initializations_.get(index);
      }
      /**
       * <code>repeated .boa.types.Expression initializations = 2;</code>
       */
      public boa.types.Ast.ExpressionOrBuilder getInitializationsOrBuilder(
          int index) {
        return initializations_.get(index);
      }

      // required .boa.types.Expression condition = 3;
      public static final int CONDITION_FIELD_NUMBER = 3;
      private boa.types.Ast.Expression condition_;
      /**
       * <code>required .boa.types.Expression condition = 3;</code>
       */
      public boolean hasCondition() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .boa.types.Expression condition = 3;</code>
       */
      public boa.types.Ast.Expression getCondition() {
        return condition_;
      }
      /**
       * <code>required .boa.types.Expression condition = 3;</code>
       */
      public boa.types.Ast.ExpressionOrBuilder getConditionOrBuilder() {
        return condition_;
      }

      // repeated .boa.types.Expression updates = 4;
      public static final int UPDATES_FIELD_NUMBER = 4;
      private java.util.List<boa.types.Ast.Expression> updates_;
      /**
       * <code>repeated .boa.types.Expression updates = 4;</code>
       */
      public java.util.List<boa.types.Ast.Expression> getUpdatesList() {
        return updates_;
      }
      /**
       * <code>repeated .boa.types.Expression updates = 4;</code>
       */
      public java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
          getUpdatesOrBuilderList() {
        return updates_;
      }
      /**
       * <code>repeated .boa.types.Expression updates = 4;</code>
       */
      public int getUpdatesCount() {
        return updates_.size();
      }
      /**
       * <code>repeated .boa.types.Expression updates = 4;</code>
       */
      public boa.types.Ast.Expression getUpdates(int index) {
        return updates_.get(index);
      }
      /**
       * <code>repeated .boa.types.Expression updates = 4;</code>
       */
      public boa.types.Ast.ExpressionOrBuilder getUpdatesOrBuilder(
          int index) {
        return updates_.get(index);
      }

      // required .boa.types.Statement body = 5;
      public static final int BODY_FIELD_NUMBER = 5;
      private boa.types.Ast.Statement body_;
      /**
       * <code>required .boa.types.Statement body = 5;</code>
       */
      public boolean hasBody() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .boa.types.Statement body = 5;</code>
       */
      public boa.types.Ast.Statement getBody() {
        return body_;
      }
      /**
       * <code>required .boa.types.Statement body = 5;</code>
       */
      public boa.types.Ast.StatementOrBuilder getBodyOrBuilder() {
        return body_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Statement.StatementKind.FOR;
        initializations_ = java.util.Collections.emptyList();
        condition_ = boa.types.Ast.Expression.getDefaultInstance();
        updates_ = java.util.Collections.emptyList();
        body_ = boa.types.Ast.Statement.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasCondition()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasBody()) {
          memoizedIsInitialized = 0;
          return false;
        }
        for (int i = 0; i < getInitializationsCount(); i++) {
          if (!getInitializations(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        if (!getCondition().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        for (int i = 0; i < getUpdatesCount(); i++) {
          if (!getUpdates(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        if (!getBody().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        for (int i = 0; i < initializations_.size(); i++) {
          output.writeMessage(2, initializations_.get(i));
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(3, condition_);
        }
        for (int i = 0; i < updates_.size(); i++) {
          output.writeMessage(4, updates_.get(i));
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(5, body_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        for (int i = 0; i < initializations_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, initializations_.get(i));
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, condition_);
        }
        for (int i = 0; i < updates_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, updates_.get(i));
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, body_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Statement.ForStatement parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.ForStatement parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.ForStatement parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.ForStatement parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.ForStatement parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.ForStatement parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.ForStatement parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Statement.ForStatement parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.ForStatement parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.ForStatement parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Statement.ForStatement prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Statement.ForStatement}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Statement.ForStatementOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Statement_ForStatement_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Statement_ForStatement_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Statement.ForStatement.class, boa.types.Ast.Statement.ForStatement.Builder.class);
        }

        // Construct using boa.types.Ast.Statement.ForStatement.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getInitializationsFieldBuilder();
            getConditionFieldBuilder();
            getUpdatesFieldBuilder();
            getBodyFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Statement.StatementKind.FOR;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (initializationsBuilder_ == null) {
            initializations_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            initializationsBuilder_.clear();
          }
          if (conditionBuilder_ == null) {
            condition_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            conditionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          if (updatesBuilder_ == null) {
            updates_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            updatesBuilder_.clear();
          }
          if (bodyBuilder_ == null) {
            body_ = boa.types.Ast.Statement.getDefaultInstance();
          } else {
            bodyBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Statement_ForStatement_descriptor;
        }

        public boa.types.Ast.Statement.ForStatement getDefaultInstanceForType() {
          return boa.types.Ast.Statement.ForStatement.getDefaultInstance();
        }

        public boa.types.Ast.Statement.ForStatement build() {
          boa.types.Ast.Statement.ForStatement result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Statement.ForStatement buildPartial() {
          boa.types.Ast.Statement.ForStatement result = new boa.types.Ast.Statement.ForStatement(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (initializationsBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              initializations_ = java.util.Collections.unmodifiableList(initializations_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.initializations_ = initializations_;
          } else {
            result.initializations_ = initializationsBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000002;
          }
          if (conditionBuilder_ == null) {
            result.condition_ = condition_;
          } else {
            result.condition_ = conditionBuilder_.build();
          }
          if (updatesBuilder_ == null) {
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
              updates_ = java.util.Collections.unmodifiableList(updates_);
              bitField0_ = (bitField0_ & ~0x00000008);
            }
            result.updates_ = updates_;
          } else {
            result.updates_ = updatesBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000004;
          }
          if (bodyBuilder_ == null) {
            result.body_ = body_;
          } else {
            result.body_ = bodyBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Statement.ForStatement) {
            return mergeFrom((boa.types.Ast.Statement.ForStatement)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Statement.ForStatement other) {
          if (other == boa.types.Ast.Statement.ForStatement.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (initializationsBuilder_ == null) {
            if (!other.initializations_.isEmpty()) {
              if (initializations_.isEmpty()) {
                initializations_ = other.initializations_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureInitializationsIsMutable();
                initializations_.addAll(other.initializations_);
              }
              onChanged();
            }
          } else {
            if (!other.initializations_.isEmpty()) {
              if (initializationsBuilder_.isEmpty()) {
                initializationsBuilder_.dispose();
                initializationsBuilder_ = null;
                initializations_ = other.initializations_;
                bitField0_ = (bitField0_ & ~0x00000002);
                initializationsBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getInitializationsFieldBuilder() : null;
              } else {
                initializationsBuilder_.addAllMessages(other.initializations_);
              }
            }
          }
          if (other.hasCondition()) {
            mergeCondition(other.getCondition());
          }
          if (updatesBuilder_ == null) {
            if (!other.updates_.isEmpty()) {
              if (updates_.isEmpty()) {
                updates_ = other.updates_;
                bitField0_ = (bitField0_ & ~0x00000008);
              } else {
                ensureUpdatesIsMutable();
                updates_.addAll(other.updates_);
              }
              onChanged();
            }
          } else {
            if (!other.updates_.isEmpty()) {
              if (updatesBuilder_.isEmpty()) {
                updatesBuilder_.dispose();
                updatesBuilder_ = null;
                updates_ = other.updates_;
                bitField0_ = (bitField0_ & ~0x00000008);
                updatesBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getUpdatesFieldBuilder() : null;
              } else {
                updatesBuilder_.addAllMessages(other.updates_);
              }
            }
          }
          if (other.hasBody()) {
            mergeBody(other.getBody());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasCondition()) {
            
            return false;
          }
          if (!hasBody()) {
            
            return false;
          }
          for (int i = 0; i < getInitializationsCount(); i++) {
            if (!getInitializations(i).isInitialized()) {
              
              return false;
            }
          }
          if (!getCondition().isInitialized()) {
            
            return false;
          }
          for (int i = 0; i < getUpdatesCount(); i++) {
            if (!getUpdates(i).isInitialized()) {
              
              return false;
            }
          }
          if (!getBody().isInitialized()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Statement.ForStatement parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Statement.ForStatement) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = FOR];
        private boa.types.Ast.Statement.StatementKind shadowKind_ = boa.types.Ast.Statement.StatementKind.FOR;
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = FOR];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = FOR];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Statement.StatementKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = FOR];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Statement.StatementKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = FOR];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Statement.StatementKind.FOR;
          onChanged();
          return this;
        }

        // repeated .boa.types.Expression initializations = 2;
        private java.util.List<boa.types.Ast.Expression> initializations_ =
          java.util.Collections.emptyList();
        private void ensureInitializationsIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            initializations_ = new java.util.ArrayList<boa.types.Ast.Expression>(initializations_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> initializationsBuilder_;

        /**
         * <code>repeated .boa.types.Expression initializations = 2;</code>
         */
        public java.util.List<boa.types.Ast.Expression> getInitializationsList() {
          if (initializationsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(initializations_);
          } else {
            return initializationsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .boa.types.Expression initializations = 2;</code>
         */
        public int getInitializationsCount() {
          if (initializationsBuilder_ == null) {
            return initializations_.size();
          } else {
            return initializationsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .boa.types.Expression initializations = 2;</code>
         */
        public boa.types.Ast.Expression getInitializations(int index) {
          if (initializationsBuilder_ == null) {
            return initializations_.get(index);
          } else {
            return initializationsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .boa.types.Expression initializations = 2;</code>
         */
        public Builder setInitializations(
            int index, boa.types.Ast.Expression value) {
          if (initializationsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureInitializationsIsMutable();
            initializations_.set(index, value);
            onChanged();
          } else {
            initializationsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression initializations = 2;</code>
         */
        public Builder setInitializations(
            int index, boa.types.Ast.Expression.Builder builderForValue) {
          if (initializationsBuilder_ == null) {
            ensureInitializationsIsMutable();
            initializations_.set(index, builderForValue.build());
            onChanged();
          } else {
            initializationsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression initializations = 2;</code>
         */
        public Builder addInitializations(boa.types.Ast.Expression value) {
          if (initializationsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureInitializationsIsMutable();
            initializations_.add(value);
            onChanged();
          } else {
            initializationsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression initializations = 2;</code>
         */
        public Builder addInitializations(
            int index, boa.types.Ast.Expression value) {
          if (initializationsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureInitializationsIsMutable();
            initializations_.add(index, value);
            onChanged();
          } else {
            initializationsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression initializations = 2;</code>
         */
        public Builder addInitializations(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (initializationsBuilder_ == null) {
            ensureInitializationsIsMutable();
            initializations_.add(builderForValue.build());
            onChanged();
          } else {
            initializationsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression initializations = 2;</code>
         */
        public Builder addInitializations(
            int index, boa.types.Ast.Expression.Builder builderForValue) {
          if (initializationsBuilder_ == null) {
            ensureInitializationsIsMutable();
            initializations_.add(index, builderForValue.build());
            onChanged();
          } else {
            initializationsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression initializations = 2;</code>
         */
        public Builder addAllInitializations(
            java.lang.Iterable<? extends boa.types.Ast.Expression> values) {
          if (initializationsBuilder_ == null) {
            ensureInitializationsIsMutable();
            super.addAll(values, initializations_);
            onChanged();
          } else {
            initializationsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression initializations = 2;</code>
         */
        public Builder clearInitializations() {
          if (initializationsBuilder_ == null) {
            initializations_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            initializationsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression initializations = 2;</code>
         */
        public Builder removeInitializations(int index) {
          if (initializationsBuilder_ == null) {
            ensureInitializationsIsMutable();
            initializations_.remove(index);
            onChanged();
          } else {
            initializationsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression initializations = 2;</code>
         */
        public boa.types.Ast.Expression.Builder getInitializationsBuilder(
            int index) {
          return getInitializationsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .boa.types.Expression initializations = 2;</code>
         */
        public boa.types.Ast.ExpressionOrBuilder getInitializationsOrBuilder(
            int index) {
          if (initializationsBuilder_ == null) {
            return initializations_.get(index);  } else {
            return initializationsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .boa.types.Expression initializations = 2;</code>
         */
        public java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
             getInitializationsOrBuilderList() {
          if (initializationsBuilder_ != null) {
            return initializationsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(initializations_);
          }
        }
        /**
         * <code>repeated .boa.types.Expression initializations = 2;</code>
         */
        public boa.types.Ast.Expression.Builder addInitializationsBuilder() {
          return getInitializationsFieldBuilder().addBuilder(
              boa.types.Ast.Expression.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Expression initializations = 2;</code>
         */
        public boa.types.Ast.Expression.Builder addInitializationsBuilder(
            int index) {
          return getInitializationsFieldBuilder().addBuilder(
              index, boa.types.Ast.Expression.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Expression initializations = 2;</code>
         */
        public java.util.List<boa.types.Ast.Expression.Builder> 
             getInitializationsBuilderList() {
          return getInitializationsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getInitializationsFieldBuilder() {
          if (initializationsBuilder_ == null) {
            initializationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    initializations_,
                    ((bitField0_ & 0x00000002) == 0x00000002),
                    getParentForChildren(),
                    isClean());
            initializations_ = null;
          }
          return initializationsBuilder_;
        }

        // required .boa.types.Expression condition = 3;
        private boa.types.Ast.Expression condition_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> conditionBuilder_;
        /**
         * <code>required .boa.types.Expression condition = 3;</code>
         */
        public boolean hasCondition() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required .boa.types.Expression condition = 3;</code>
         */
        public boa.types.Ast.Expression getCondition() {
          if (conditionBuilder_ == null) {
            return condition_;
          } else {
            return conditionBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Expression condition = 3;</code>
         */
        public Builder setCondition(boa.types.Ast.Expression value) {
          if (conditionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            condition_ = value;
            onChanged();
          } else {
            conditionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Expression condition = 3;</code>
         */
        public Builder setCondition(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (conditionBuilder_ == null) {
            condition_ = builderForValue.build();
            onChanged();
          } else {
            conditionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Expression condition = 3;</code>
         */
        public Builder mergeCondition(boa.types.Ast.Expression value) {
          if (conditionBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                condition_ != boa.types.Ast.Expression.getDefaultInstance()) {
              condition_ =
                boa.types.Ast.Expression.newBuilder(condition_).mergeFrom(value).buildPartial();
            } else {
              condition_ = value;
            }
            onChanged();
          } else {
            conditionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Expression condition = 3;</code>
         */
        public Builder clearCondition() {
          if (conditionBuilder_ == null) {
            condition_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            conditionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <code>required .boa.types.Expression condition = 3;</code>
         */
        public boa.types.Ast.Expression.Builder getConditionBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getConditionFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Expression condition = 3;</code>
         */
        public boa.types.Ast.ExpressionOrBuilder getConditionOrBuilder() {
          if (conditionBuilder_ != null) {
            return conditionBuilder_.getMessageOrBuilder();
          } else {
            return condition_;
          }
        }
        /**
         * <code>required .boa.types.Expression condition = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getConditionFieldBuilder() {
          if (conditionBuilder_ == null) {
            conditionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    condition_,
                    getParentForChildren(),
                    isClean());
            condition_ = null;
          }
          return conditionBuilder_;
        }

        // repeated .boa.types.Expression updates = 4;
        private java.util.List<boa.types.Ast.Expression> updates_ =
          java.util.Collections.emptyList();
        private void ensureUpdatesIsMutable() {
          if (!((bitField0_ & 0x00000008) == 0x00000008)) {
            updates_ = new java.util.ArrayList<boa.types.Ast.Expression>(updates_);
            bitField0_ |= 0x00000008;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> updatesBuilder_;

        /**
         * <code>repeated .boa.types.Expression updates = 4;</code>
         */
        public java.util.List<boa.types.Ast.Expression> getUpdatesList() {
          if (updatesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(updates_);
          } else {
            return updatesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .boa.types.Expression updates = 4;</code>
         */
        public int getUpdatesCount() {
          if (updatesBuilder_ == null) {
            return updates_.size();
          } else {
            return updatesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .boa.types.Expression updates = 4;</code>
         */
        public boa.types.Ast.Expression getUpdates(int index) {
          if (updatesBuilder_ == null) {
            return updates_.get(index);
          } else {
            return updatesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .boa.types.Expression updates = 4;</code>
         */
        public Builder setUpdates(
            int index, boa.types.Ast.Expression value) {
          if (updatesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureUpdatesIsMutable();
            updates_.set(index, value);
            onChanged();
          } else {
            updatesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression updates = 4;</code>
         */
        public Builder setUpdates(
            int index, boa.types.Ast.Expression.Builder builderForValue) {
          if (updatesBuilder_ == null) {
            ensureUpdatesIsMutable();
            updates_.set(index, builderForValue.build());
            onChanged();
          } else {
            updatesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression updates = 4;</code>
         */
        public Builder addUpdates(boa.types.Ast.Expression value) {
          if (updatesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureUpdatesIsMutable();
            updates_.add(value);
            onChanged();
          } else {
            updatesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression updates = 4;</code>
         */
        public Builder addUpdates(
            int index, boa.types.Ast.Expression value) {
          if (updatesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureUpdatesIsMutable();
            updates_.add(index, value);
            onChanged();
          } else {
            updatesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression updates = 4;</code>
         */
        public Builder addUpdates(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (updatesBuilder_ == null) {
            ensureUpdatesIsMutable();
            updates_.add(builderForValue.build());
            onChanged();
          } else {
            updatesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression updates = 4;</code>
         */
        public Builder addUpdates(
            int index, boa.types.Ast.Expression.Builder builderForValue) {
          if (updatesBuilder_ == null) {
            ensureUpdatesIsMutable();
            updates_.add(index, builderForValue.build());
            onChanged();
          } else {
            updatesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression updates = 4;</code>
         */
        public Builder addAllUpdates(
            java.lang.Iterable<? extends boa.types.Ast.Expression> values) {
          if (updatesBuilder_ == null) {
            ensureUpdatesIsMutable();
            super.addAll(values, updates_);
            onChanged();
          } else {
            updatesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression updates = 4;</code>
         */
        public Builder clearUpdates() {
          if (updatesBuilder_ == null) {
            updates_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
            onChanged();
          } else {
            updatesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression updates = 4;</code>
         */
        public Builder removeUpdates(int index) {
          if (updatesBuilder_ == null) {
            ensureUpdatesIsMutable();
            updates_.remove(index);
            onChanged();
          } else {
            updatesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression updates = 4;</code>
         */
        public boa.types.Ast.Expression.Builder getUpdatesBuilder(
            int index) {
          return getUpdatesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .boa.types.Expression updates = 4;</code>
         */
        public boa.types.Ast.ExpressionOrBuilder getUpdatesOrBuilder(
            int index) {
          if (updatesBuilder_ == null) {
            return updates_.get(index);  } else {
            return updatesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .boa.types.Expression updates = 4;</code>
         */
        public java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
             getUpdatesOrBuilderList() {
          if (updatesBuilder_ != null) {
            return updatesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(updates_);
          }
        }
        /**
         * <code>repeated .boa.types.Expression updates = 4;</code>
         */
        public boa.types.Ast.Expression.Builder addUpdatesBuilder() {
          return getUpdatesFieldBuilder().addBuilder(
              boa.types.Ast.Expression.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Expression updates = 4;</code>
         */
        public boa.types.Ast.Expression.Builder addUpdatesBuilder(
            int index) {
          return getUpdatesFieldBuilder().addBuilder(
              index, boa.types.Ast.Expression.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Expression updates = 4;</code>
         */
        public java.util.List<boa.types.Ast.Expression.Builder> 
             getUpdatesBuilderList() {
          return getUpdatesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getUpdatesFieldBuilder() {
          if (updatesBuilder_ == null) {
            updatesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    updates_,
                    ((bitField0_ & 0x00000008) == 0x00000008),
                    getParentForChildren(),
                    isClean());
            updates_ = null;
          }
          return updatesBuilder_;
        }

        // required .boa.types.Statement body = 5;
        private boa.types.Ast.Statement body_ = boa.types.Ast.Statement.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> bodyBuilder_;
        /**
         * <code>required .boa.types.Statement body = 5;</code>
         */
        public boolean hasBody() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>required .boa.types.Statement body = 5;</code>
         */
        public boa.types.Ast.Statement getBody() {
          if (bodyBuilder_ == null) {
            return body_;
          } else {
            return bodyBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Statement body = 5;</code>
         */
        public Builder setBody(boa.types.Ast.Statement value) {
          if (bodyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            body_ = value;
            onChanged();
          } else {
            bodyBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <code>required .boa.types.Statement body = 5;</code>
         */
        public Builder setBody(
            boa.types.Ast.Statement.Builder builderForValue) {
          if (bodyBuilder_ == null) {
            body_ = builderForValue.build();
            onChanged();
          } else {
            bodyBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <code>required .boa.types.Statement body = 5;</code>
         */
        public Builder mergeBody(boa.types.Ast.Statement value) {
          if (bodyBuilder_ == null) {
            if (((bitField0_ & 0x00000010) == 0x00000010) &&
                body_ != boa.types.Ast.Statement.getDefaultInstance()) {
              body_ =
                boa.types.Ast.Statement.newBuilder(body_).mergeFrom(value).buildPartial();
            } else {
              body_ = value;
            }
            onChanged();
          } else {
            bodyBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <code>required .boa.types.Statement body = 5;</code>
         */
        public Builder clearBody() {
          if (bodyBuilder_ == null) {
            body_ = boa.types.Ast.Statement.getDefaultInstance();
            onChanged();
          } else {
            bodyBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }
        /**
         * <code>required .boa.types.Statement body = 5;</code>
         */
        public boa.types.Ast.Statement.Builder getBodyBuilder() {
          bitField0_ |= 0x00000010;
          onChanged();
          return getBodyFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Statement body = 5;</code>
         */
        public boa.types.Ast.StatementOrBuilder getBodyOrBuilder() {
          if (bodyBuilder_ != null) {
            return bodyBuilder_.getMessageOrBuilder();
          } else {
            return body_;
          }
        }
        /**
         * <code>required .boa.types.Statement body = 5;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> 
            getBodyFieldBuilder() {
          if (bodyBuilder_ == null) {
            bodyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder>(
                    body_,
                    getParentForChildren(),
                    isClean());
            body_ = null;
          }
          return bodyBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Statement.ForStatement)
      }

      static {
        defaultInstance = new ForStatement(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Statement.ForStatement)
    }

    public interface IfStatementOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = IF];
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = IF];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = IF];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Statement.StatementKind getShadowKind();

      // required .boa.types.Expression expression = 2;
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      boolean hasExpression();
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      boa.types.Ast.Expression getExpression();
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder();

      // required .boa.types.Statement then_statement = 3;
      /**
       * <code>required .boa.types.Statement then_statement = 3;</code>
       */
      boolean hasThenStatement();
      /**
       * <code>required .boa.types.Statement then_statement = 3;</code>
       */
      boa.types.Ast.Statement getThenStatement();
      /**
       * <code>required .boa.types.Statement then_statement = 3;</code>
       */
      boa.types.Ast.StatementOrBuilder getThenStatementOrBuilder();

      // optional .boa.types.Statement else_statement = 4;
      /**
       * <code>optional .boa.types.Statement else_statement = 4;</code>
       */
      boolean hasElseStatement();
      /**
       * <code>optional .boa.types.Statement else_statement = 4;</code>
       */
      boa.types.Ast.Statement getElseStatement();
      /**
       * <code>optional .boa.types.Statement else_statement = 4;</code>
       */
      boa.types.Ast.StatementOrBuilder getElseStatementOrBuilder();
    }
    /**
     * Protobuf type {@code boa.types.Statement.IfStatement}
     */
    public static final class IfStatement extends
        com.google.protobuf.GeneratedMessage
        implements IfStatementOrBuilder {
      // Use IfStatement.newBuilder() to construct.
      private IfStatement(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private IfStatement(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final IfStatement defaultInstance;
      public static IfStatement getDefaultInstance() {
        return defaultInstance;
      }

      public IfStatement getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private IfStatement(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Statement.StatementKind value = boa.types.Ast.Statement.StatementKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = expression_.toBuilder();
                }
                expression_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(expression_);
                  expression_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 26: {
                boa.types.Ast.Statement.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = thenStatement_.toBuilder();
                }
                thenStatement_ = input.readMessage(boa.types.Ast.Statement.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(thenStatement_);
                  thenStatement_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
              case 34: {
                boa.types.Ast.Statement.Builder subBuilder = null;
                if (((bitField0_ & 0x00000008) == 0x00000008)) {
                  subBuilder = elseStatement_.toBuilder();
                }
                elseStatement_ = input.readMessage(boa.types.Ast.Statement.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(elseStatement_);
                  elseStatement_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000008;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Statement_IfStatement_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Statement_IfStatement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Statement.IfStatement.class, boa.types.Ast.Statement.IfStatement.Builder.class);
      }

      public static com.google.protobuf.Parser<IfStatement> PARSER =
          new com.google.protobuf.AbstractParser<IfStatement>() {
        public IfStatement parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new IfStatement(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<IfStatement> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = IF];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Statement.StatementKind shadowKind_;
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = IF];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = IF];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement.StatementKind getShadowKind() {
        return shadowKind_;
      }

      // required .boa.types.Expression expression = 2;
      public static final int EXPRESSION_FIELD_NUMBER = 2;
      private boa.types.Ast.Expression expression_;
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      public boolean hasExpression() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      public boa.types.Ast.Expression getExpression() {
        return expression_;
      }
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      public boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder() {
        return expression_;
      }

      // required .boa.types.Statement then_statement = 3;
      public static final int THEN_STATEMENT_FIELD_NUMBER = 3;
      private boa.types.Ast.Statement thenStatement_;
      /**
       * <code>required .boa.types.Statement then_statement = 3;</code>
       */
      public boolean hasThenStatement() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .boa.types.Statement then_statement = 3;</code>
       */
      public boa.types.Ast.Statement getThenStatement() {
        return thenStatement_;
      }
      /**
       * <code>required .boa.types.Statement then_statement = 3;</code>
       */
      public boa.types.Ast.StatementOrBuilder getThenStatementOrBuilder() {
        return thenStatement_;
      }

      // optional .boa.types.Statement else_statement = 4;
      public static final int ELSE_STATEMENT_FIELD_NUMBER = 4;
      private boa.types.Ast.Statement elseStatement_;
      /**
       * <code>optional .boa.types.Statement else_statement = 4;</code>
       */
      public boolean hasElseStatement() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .boa.types.Statement else_statement = 4;</code>
       */
      public boa.types.Ast.Statement getElseStatement() {
        return elseStatement_;
      }
      /**
       * <code>optional .boa.types.Statement else_statement = 4;</code>
       */
      public boa.types.Ast.StatementOrBuilder getElseStatementOrBuilder() {
        return elseStatement_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Statement.StatementKind.IF;
        expression_ = boa.types.Ast.Expression.getDefaultInstance();
        thenStatement_ = boa.types.Ast.Statement.getDefaultInstance();
        elseStatement_ = boa.types.Ast.Statement.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasExpression()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasThenStatement()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getExpression().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getThenStatement().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (hasElseStatement()) {
          if (!getElseStatement().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, expression_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(3, thenStatement_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeMessage(4, elseStatement_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, expression_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, thenStatement_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, elseStatement_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Statement.IfStatement parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.IfStatement parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.IfStatement parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.IfStatement parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.IfStatement parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.IfStatement parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.IfStatement parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Statement.IfStatement parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.IfStatement parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.IfStatement parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Statement.IfStatement prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Statement.IfStatement}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Statement.IfStatementOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Statement_IfStatement_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Statement_IfStatement_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Statement.IfStatement.class, boa.types.Ast.Statement.IfStatement.Builder.class);
        }

        // Construct using boa.types.Ast.Statement.IfStatement.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getExpressionFieldBuilder();
            getThenStatementFieldBuilder();
            getElseStatementFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Statement.StatementKind.IF;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (expressionBuilder_ == null) {
            expression_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            expressionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          if (thenStatementBuilder_ == null) {
            thenStatement_ = boa.types.Ast.Statement.getDefaultInstance();
          } else {
            thenStatementBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          if (elseStatementBuilder_ == null) {
            elseStatement_ = boa.types.Ast.Statement.getDefaultInstance();
          } else {
            elseStatementBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Statement_IfStatement_descriptor;
        }

        public boa.types.Ast.Statement.IfStatement getDefaultInstanceForType() {
          return boa.types.Ast.Statement.IfStatement.getDefaultInstance();
        }

        public boa.types.Ast.Statement.IfStatement build() {
          boa.types.Ast.Statement.IfStatement result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Statement.IfStatement buildPartial() {
          boa.types.Ast.Statement.IfStatement result = new boa.types.Ast.Statement.IfStatement(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (expressionBuilder_ == null) {
            result.expression_ = expression_;
          } else {
            result.expression_ = expressionBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          if (thenStatementBuilder_ == null) {
            result.thenStatement_ = thenStatement_;
          } else {
            result.thenStatement_ = thenStatementBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          if (elseStatementBuilder_ == null) {
            result.elseStatement_ = elseStatement_;
          } else {
            result.elseStatement_ = elseStatementBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Statement.IfStatement) {
            return mergeFrom((boa.types.Ast.Statement.IfStatement)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Statement.IfStatement other) {
          if (other == boa.types.Ast.Statement.IfStatement.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasExpression()) {
            mergeExpression(other.getExpression());
          }
          if (other.hasThenStatement()) {
            mergeThenStatement(other.getThenStatement());
          }
          if (other.hasElseStatement()) {
            mergeElseStatement(other.getElseStatement());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasExpression()) {
            
            return false;
          }
          if (!hasThenStatement()) {
            
            return false;
          }
          if (!getExpression().isInitialized()) {
            
            return false;
          }
          if (!getThenStatement().isInitialized()) {
            
            return false;
          }
          if (hasElseStatement()) {
            if (!getElseStatement().isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Statement.IfStatement parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Statement.IfStatement) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = IF];
        private boa.types.Ast.Statement.StatementKind shadowKind_ = boa.types.Ast.Statement.StatementKind.IF;
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = IF];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = IF];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Statement.StatementKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = IF];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Statement.StatementKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = IF];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Statement.StatementKind.IF;
          onChanged();
          return this;
        }

        // required .boa.types.Expression expression = 2;
        private boa.types.Ast.Expression expression_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> expressionBuilder_;
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public boolean hasExpression() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public boa.types.Ast.Expression getExpression() {
          if (expressionBuilder_ == null) {
            return expression_;
          } else {
            return expressionBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public Builder setExpression(boa.types.Ast.Expression value) {
          if (expressionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            expression_ = value;
            onChanged();
          } else {
            expressionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public Builder setExpression(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (expressionBuilder_ == null) {
            expression_ = builderForValue.build();
            onChanged();
          } else {
            expressionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public Builder mergeExpression(boa.types.Ast.Expression value) {
          if (expressionBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                expression_ != boa.types.Ast.Expression.getDefaultInstance()) {
              expression_ =
                boa.types.Ast.Expression.newBuilder(expression_).mergeFrom(value).buildPartial();
            } else {
              expression_ = value;
            }
            onChanged();
          } else {
            expressionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public Builder clearExpression() {
          if (expressionBuilder_ == null) {
            expression_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            expressionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public boa.types.Ast.Expression.Builder getExpressionBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getExpressionFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder() {
          if (expressionBuilder_ != null) {
            return expressionBuilder_.getMessageOrBuilder();
          } else {
            return expression_;
          }
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getExpressionFieldBuilder() {
          if (expressionBuilder_ == null) {
            expressionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    expression_,
                    getParentForChildren(),
                    isClean());
            expression_ = null;
          }
          return expressionBuilder_;
        }

        // required .boa.types.Statement then_statement = 3;
        private boa.types.Ast.Statement thenStatement_ = boa.types.Ast.Statement.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> thenStatementBuilder_;
        /**
         * <code>required .boa.types.Statement then_statement = 3;</code>
         */
        public boolean hasThenStatement() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required .boa.types.Statement then_statement = 3;</code>
         */
        public boa.types.Ast.Statement getThenStatement() {
          if (thenStatementBuilder_ == null) {
            return thenStatement_;
          } else {
            return thenStatementBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Statement then_statement = 3;</code>
         */
        public Builder setThenStatement(boa.types.Ast.Statement value) {
          if (thenStatementBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            thenStatement_ = value;
            onChanged();
          } else {
            thenStatementBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Statement then_statement = 3;</code>
         */
        public Builder setThenStatement(
            boa.types.Ast.Statement.Builder builderForValue) {
          if (thenStatementBuilder_ == null) {
            thenStatement_ = builderForValue.build();
            onChanged();
          } else {
            thenStatementBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Statement then_statement = 3;</code>
         */
        public Builder mergeThenStatement(boa.types.Ast.Statement value) {
          if (thenStatementBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                thenStatement_ != boa.types.Ast.Statement.getDefaultInstance()) {
              thenStatement_ =
                boa.types.Ast.Statement.newBuilder(thenStatement_).mergeFrom(value).buildPartial();
            } else {
              thenStatement_ = value;
            }
            onChanged();
          } else {
            thenStatementBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Statement then_statement = 3;</code>
         */
        public Builder clearThenStatement() {
          if (thenStatementBuilder_ == null) {
            thenStatement_ = boa.types.Ast.Statement.getDefaultInstance();
            onChanged();
          } else {
            thenStatementBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <code>required .boa.types.Statement then_statement = 3;</code>
         */
        public boa.types.Ast.Statement.Builder getThenStatementBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getThenStatementFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Statement then_statement = 3;</code>
         */
        public boa.types.Ast.StatementOrBuilder getThenStatementOrBuilder() {
          if (thenStatementBuilder_ != null) {
            return thenStatementBuilder_.getMessageOrBuilder();
          } else {
            return thenStatement_;
          }
        }
        /**
         * <code>required .boa.types.Statement then_statement = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> 
            getThenStatementFieldBuilder() {
          if (thenStatementBuilder_ == null) {
            thenStatementBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder>(
                    thenStatement_,
                    getParentForChildren(),
                    isClean());
            thenStatement_ = null;
          }
          return thenStatementBuilder_;
        }

        // optional .boa.types.Statement else_statement = 4;
        private boa.types.Ast.Statement elseStatement_ = boa.types.Ast.Statement.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> elseStatementBuilder_;
        /**
         * <code>optional .boa.types.Statement else_statement = 4;</code>
         */
        public boolean hasElseStatement() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional .boa.types.Statement else_statement = 4;</code>
         */
        public boa.types.Ast.Statement getElseStatement() {
          if (elseStatementBuilder_ == null) {
            return elseStatement_;
          } else {
            return elseStatementBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .boa.types.Statement else_statement = 4;</code>
         */
        public Builder setElseStatement(boa.types.Ast.Statement value) {
          if (elseStatementBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            elseStatement_ = value;
            onChanged();
          } else {
            elseStatementBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .boa.types.Statement else_statement = 4;</code>
         */
        public Builder setElseStatement(
            boa.types.Ast.Statement.Builder builderForValue) {
          if (elseStatementBuilder_ == null) {
            elseStatement_ = builderForValue.build();
            onChanged();
          } else {
            elseStatementBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .boa.types.Statement else_statement = 4;</code>
         */
        public Builder mergeElseStatement(boa.types.Ast.Statement value) {
          if (elseStatementBuilder_ == null) {
            if (((bitField0_ & 0x00000008) == 0x00000008) &&
                elseStatement_ != boa.types.Ast.Statement.getDefaultInstance()) {
              elseStatement_ =
                boa.types.Ast.Statement.newBuilder(elseStatement_).mergeFrom(value).buildPartial();
            } else {
              elseStatement_ = value;
            }
            onChanged();
          } else {
            elseStatementBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .boa.types.Statement else_statement = 4;</code>
         */
        public Builder clearElseStatement() {
          if (elseStatementBuilder_ == null) {
            elseStatement_ = boa.types.Ast.Statement.getDefaultInstance();
            onChanged();
          } else {
            elseStatementBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }
        /**
         * <code>optional .boa.types.Statement else_statement = 4;</code>
         */
        public boa.types.Ast.Statement.Builder getElseStatementBuilder() {
          bitField0_ |= 0x00000008;
          onChanged();
          return getElseStatementFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .boa.types.Statement else_statement = 4;</code>
         */
        public boa.types.Ast.StatementOrBuilder getElseStatementOrBuilder() {
          if (elseStatementBuilder_ != null) {
            return elseStatementBuilder_.getMessageOrBuilder();
          } else {
            return elseStatement_;
          }
        }
        /**
         * <code>optional .boa.types.Statement else_statement = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> 
            getElseStatementFieldBuilder() {
          if (elseStatementBuilder_ == null) {
            elseStatementBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder>(
                    elseStatement_,
                    getParentForChildren(),
                    isClean());
            elseStatement_ = null;
          }
          return elseStatementBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Statement.IfStatement)
      }

      static {
        defaultInstance = new IfStatement(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Statement.IfStatement)
    }

    public interface LabeledStatementOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = LABEL];
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = LABEL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = LABEL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Statement.StatementKind getShadowKind();

      // required .boa.types.Expression label = 2;
      /**
       * <code>required .boa.types.Expression label = 2;</code>
       */
      boolean hasLabel();
      /**
       * <code>required .boa.types.Expression label = 2;</code>
       */
      boa.types.Ast.Expression getLabel();
      /**
       * <code>required .boa.types.Expression label = 2;</code>
       */
      boa.types.Ast.ExpressionOrBuilder getLabelOrBuilder();

      // required .boa.types.Statement statement = 3;
      /**
       * <code>required .boa.types.Statement statement = 3;</code>
       */
      boolean hasStatement();
      /**
       * <code>required .boa.types.Statement statement = 3;</code>
       */
      boa.types.Ast.Statement getStatement();
      /**
       * <code>required .boa.types.Statement statement = 3;</code>
       */
      boa.types.Ast.StatementOrBuilder getStatementOrBuilder();
    }
    /**
     * Protobuf type {@code boa.types.Statement.LabeledStatement}
     */
    public static final class LabeledStatement extends
        com.google.protobuf.GeneratedMessage
        implements LabeledStatementOrBuilder {
      // Use LabeledStatement.newBuilder() to construct.
      private LabeledStatement(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private LabeledStatement(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final LabeledStatement defaultInstance;
      public static LabeledStatement getDefaultInstance() {
        return defaultInstance;
      }

      public LabeledStatement getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private LabeledStatement(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Statement.StatementKind value = boa.types.Ast.Statement.StatementKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = label_.toBuilder();
                }
                label_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(label_);
                  label_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 26: {
                boa.types.Ast.Statement.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = statement_.toBuilder();
                }
                statement_ = input.readMessage(boa.types.Ast.Statement.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(statement_);
                  statement_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Statement_LabeledStatement_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Statement_LabeledStatement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Statement.LabeledStatement.class, boa.types.Ast.Statement.LabeledStatement.Builder.class);
      }

      public static com.google.protobuf.Parser<LabeledStatement> PARSER =
          new com.google.protobuf.AbstractParser<LabeledStatement>() {
        public LabeledStatement parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new LabeledStatement(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<LabeledStatement> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = LABEL];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Statement.StatementKind shadowKind_;
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = LABEL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = LABEL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement.StatementKind getShadowKind() {
        return shadowKind_;
      }

      // required .boa.types.Expression label = 2;
      public static final int LABEL_FIELD_NUMBER = 2;
      private boa.types.Ast.Expression label_;
      /**
       * <code>required .boa.types.Expression label = 2;</code>
       */
      public boolean hasLabel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .boa.types.Expression label = 2;</code>
       */
      public boa.types.Ast.Expression getLabel() {
        return label_;
      }
      /**
       * <code>required .boa.types.Expression label = 2;</code>
       */
      public boa.types.Ast.ExpressionOrBuilder getLabelOrBuilder() {
        return label_;
      }

      // required .boa.types.Statement statement = 3;
      public static final int STATEMENT_FIELD_NUMBER = 3;
      private boa.types.Ast.Statement statement_;
      /**
       * <code>required .boa.types.Statement statement = 3;</code>
       */
      public boolean hasStatement() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .boa.types.Statement statement = 3;</code>
       */
      public boa.types.Ast.Statement getStatement() {
        return statement_;
      }
      /**
       * <code>required .boa.types.Statement statement = 3;</code>
       */
      public boa.types.Ast.StatementOrBuilder getStatementOrBuilder() {
        return statement_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Statement.StatementKind.LABEL;
        label_ = boa.types.Ast.Expression.getDefaultInstance();
        statement_ = boa.types.Ast.Statement.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasLabel()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasStatement()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getLabel().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getStatement().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, label_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(3, statement_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, label_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, statement_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Statement.LabeledStatement parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.LabeledStatement parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.LabeledStatement parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.LabeledStatement parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.LabeledStatement parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.LabeledStatement parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.LabeledStatement parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Statement.LabeledStatement parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.LabeledStatement parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.LabeledStatement parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Statement.LabeledStatement prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Statement.LabeledStatement}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Statement.LabeledStatementOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Statement_LabeledStatement_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Statement_LabeledStatement_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Statement.LabeledStatement.class, boa.types.Ast.Statement.LabeledStatement.Builder.class);
        }

        // Construct using boa.types.Ast.Statement.LabeledStatement.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getLabelFieldBuilder();
            getStatementFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Statement.StatementKind.LABEL;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (labelBuilder_ == null) {
            label_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            labelBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          if (statementBuilder_ == null) {
            statement_ = boa.types.Ast.Statement.getDefaultInstance();
          } else {
            statementBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Statement_LabeledStatement_descriptor;
        }

        public boa.types.Ast.Statement.LabeledStatement getDefaultInstanceForType() {
          return boa.types.Ast.Statement.LabeledStatement.getDefaultInstance();
        }

        public boa.types.Ast.Statement.LabeledStatement build() {
          boa.types.Ast.Statement.LabeledStatement result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Statement.LabeledStatement buildPartial() {
          boa.types.Ast.Statement.LabeledStatement result = new boa.types.Ast.Statement.LabeledStatement(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (labelBuilder_ == null) {
            result.label_ = label_;
          } else {
            result.label_ = labelBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          if (statementBuilder_ == null) {
            result.statement_ = statement_;
          } else {
            result.statement_ = statementBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Statement.LabeledStatement) {
            return mergeFrom((boa.types.Ast.Statement.LabeledStatement)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Statement.LabeledStatement other) {
          if (other == boa.types.Ast.Statement.LabeledStatement.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasLabel()) {
            mergeLabel(other.getLabel());
          }
          if (other.hasStatement()) {
            mergeStatement(other.getStatement());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasLabel()) {
            
            return false;
          }
          if (!hasStatement()) {
            
            return false;
          }
          if (!getLabel().isInitialized()) {
            
            return false;
          }
          if (!getStatement().isInitialized()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Statement.LabeledStatement parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Statement.LabeledStatement) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = LABEL];
        private boa.types.Ast.Statement.StatementKind shadowKind_ = boa.types.Ast.Statement.StatementKind.LABEL;
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = LABEL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = LABEL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Statement.StatementKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = LABEL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Statement.StatementKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = LABEL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Statement.StatementKind.LABEL;
          onChanged();
          return this;
        }

        // required .boa.types.Expression label = 2;
        private boa.types.Ast.Expression label_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> labelBuilder_;
        /**
         * <code>required .boa.types.Expression label = 2;</code>
         */
        public boolean hasLabel() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required .boa.types.Expression label = 2;</code>
         */
        public boa.types.Ast.Expression getLabel() {
          if (labelBuilder_ == null) {
            return label_;
          } else {
            return labelBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Expression label = 2;</code>
         */
        public Builder setLabel(boa.types.Ast.Expression value) {
          if (labelBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            label_ = value;
            onChanged();
          } else {
            labelBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression label = 2;</code>
         */
        public Builder setLabel(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (labelBuilder_ == null) {
            label_ = builderForValue.build();
            onChanged();
          } else {
            labelBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression label = 2;</code>
         */
        public Builder mergeLabel(boa.types.Ast.Expression value) {
          if (labelBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                label_ != boa.types.Ast.Expression.getDefaultInstance()) {
              label_ =
                boa.types.Ast.Expression.newBuilder(label_).mergeFrom(value).buildPartial();
            } else {
              label_ = value;
            }
            onChanged();
          } else {
            labelBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression label = 2;</code>
         */
        public Builder clearLabel() {
          if (labelBuilder_ == null) {
            label_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            labelBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>required .boa.types.Expression label = 2;</code>
         */
        public boa.types.Ast.Expression.Builder getLabelBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getLabelFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Expression label = 2;</code>
         */
        public boa.types.Ast.ExpressionOrBuilder getLabelOrBuilder() {
          if (labelBuilder_ != null) {
            return labelBuilder_.getMessageOrBuilder();
          } else {
            return label_;
          }
        }
        /**
         * <code>required .boa.types.Expression label = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getLabelFieldBuilder() {
          if (labelBuilder_ == null) {
            labelBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    label_,
                    getParentForChildren(),
                    isClean());
            label_ = null;
          }
          return labelBuilder_;
        }

        // required .boa.types.Statement statement = 3;
        private boa.types.Ast.Statement statement_ = boa.types.Ast.Statement.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> statementBuilder_;
        /**
         * <code>required .boa.types.Statement statement = 3;</code>
         */
        public boolean hasStatement() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required .boa.types.Statement statement = 3;</code>
         */
        public boa.types.Ast.Statement getStatement() {
          if (statementBuilder_ == null) {
            return statement_;
          } else {
            return statementBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Statement statement = 3;</code>
         */
        public Builder setStatement(boa.types.Ast.Statement value) {
          if (statementBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            statement_ = value;
            onChanged();
          } else {
            statementBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Statement statement = 3;</code>
         */
        public Builder setStatement(
            boa.types.Ast.Statement.Builder builderForValue) {
          if (statementBuilder_ == null) {
            statement_ = builderForValue.build();
            onChanged();
          } else {
            statementBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Statement statement = 3;</code>
         */
        public Builder mergeStatement(boa.types.Ast.Statement value) {
          if (statementBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                statement_ != boa.types.Ast.Statement.getDefaultInstance()) {
              statement_ =
                boa.types.Ast.Statement.newBuilder(statement_).mergeFrom(value).buildPartial();
            } else {
              statement_ = value;
            }
            onChanged();
          } else {
            statementBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Statement statement = 3;</code>
         */
        public Builder clearStatement() {
          if (statementBuilder_ == null) {
            statement_ = boa.types.Ast.Statement.getDefaultInstance();
            onChanged();
          } else {
            statementBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <code>required .boa.types.Statement statement = 3;</code>
         */
        public boa.types.Ast.Statement.Builder getStatementBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getStatementFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Statement statement = 3;</code>
         */
        public boa.types.Ast.StatementOrBuilder getStatementOrBuilder() {
          if (statementBuilder_ != null) {
            return statementBuilder_.getMessageOrBuilder();
          } else {
            return statement_;
          }
        }
        /**
         * <code>required .boa.types.Statement statement = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> 
            getStatementFieldBuilder() {
          if (statementBuilder_ == null) {
            statementBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder>(
                    statement_,
                    getParentForChildren(),
                    isClean());
            statement_ = null;
          }
          return statementBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Statement.LabeledStatement)
      }

      static {
        defaultInstance = new LabeledStatement(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Statement.LabeledStatement)
    }

    public interface ReturnStatementOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = RETURN];
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = RETURN];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = RETURN];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Statement.StatementKind getShadowKind();

      // optional .boa.types.Expression expression = 2;
      /**
       * <code>optional .boa.types.Expression expression = 2;</code>
       */
      boolean hasExpression();
      /**
       * <code>optional .boa.types.Expression expression = 2;</code>
       */
      boa.types.Ast.Expression getExpression();
      /**
       * <code>optional .boa.types.Expression expression = 2;</code>
       */
      boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder();
    }
    /**
     * Protobuf type {@code boa.types.Statement.ReturnStatement}
     */
    public static final class ReturnStatement extends
        com.google.protobuf.GeneratedMessage
        implements ReturnStatementOrBuilder {
      // Use ReturnStatement.newBuilder() to construct.
      private ReturnStatement(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private ReturnStatement(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final ReturnStatement defaultInstance;
      public static ReturnStatement getDefaultInstance() {
        return defaultInstance;
      }

      public ReturnStatement getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private ReturnStatement(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Statement.StatementKind value = boa.types.Ast.Statement.StatementKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = expression_.toBuilder();
                }
                expression_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(expression_);
                  expression_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Statement_ReturnStatement_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Statement_ReturnStatement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Statement.ReturnStatement.class, boa.types.Ast.Statement.ReturnStatement.Builder.class);
      }

      public static com.google.protobuf.Parser<ReturnStatement> PARSER =
          new com.google.protobuf.AbstractParser<ReturnStatement>() {
        public ReturnStatement parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ReturnStatement(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<ReturnStatement> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = RETURN];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Statement.StatementKind shadowKind_;
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = RETURN];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = RETURN];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement.StatementKind getShadowKind() {
        return shadowKind_;
      }

      // optional .boa.types.Expression expression = 2;
      public static final int EXPRESSION_FIELD_NUMBER = 2;
      private boa.types.Ast.Expression expression_;
      /**
       * <code>optional .boa.types.Expression expression = 2;</code>
       */
      public boolean hasExpression() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .boa.types.Expression expression = 2;</code>
       */
      public boa.types.Ast.Expression getExpression() {
        return expression_;
      }
      /**
       * <code>optional .boa.types.Expression expression = 2;</code>
       */
      public boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder() {
        return expression_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Statement.StatementKind.RETURN;
        expression_ = boa.types.Ast.Expression.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (hasExpression()) {
          if (!getExpression().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, expression_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, expression_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Statement.ReturnStatement parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.ReturnStatement parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.ReturnStatement parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.ReturnStatement parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.ReturnStatement parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.ReturnStatement parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.ReturnStatement parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Statement.ReturnStatement parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.ReturnStatement parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.ReturnStatement parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Statement.ReturnStatement prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Statement.ReturnStatement}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Statement.ReturnStatementOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Statement_ReturnStatement_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Statement_ReturnStatement_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Statement.ReturnStatement.class, boa.types.Ast.Statement.ReturnStatement.Builder.class);
        }

        // Construct using boa.types.Ast.Statement.ReturnStatement.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getExpressionFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Statement.StatementKind.RETURN;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (expressionBuilder_ == null) {
            expression_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            expressionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Statement_ReturnStatement_descriptor;
        }

        public boa.types.Ast.Statement.ReturnStatement getDefaultInstanceForType() {
          return boa.types.Ast.Statement.ReturnStatement.getDefaultInstance();
        }

        public boa.types.Ast.Statement.ReturnStatement build() {
          boa.types.Ast.Statement.ReturnStatement result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Statement.ReturnStatement buildPartial() {
          boa.types.Ast.Statement.ReturnStatement result = new boa.types.Ast.Statement.ReturnStatement(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (expressionBuilder_ == null) {
            result.expression_ = expression_;
          } else {
            result.expression_ = expressionBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Statement.ReturnStatement) {
            return mergeFrom((boa.types.Ast.Statement.ReturnStatement)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Statement.ReturnStatement other) {
          if (other == boa.types.Ast.Statement.ReturnStatement.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasExpression()) {
            mergeExpression(other.getExpression());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (hasExpression()) {
            if (!getExpression().isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Statement.ReturnStatement parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Statement.ReturnStatement) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = RETURN];
        private boa.types.Ast.Statement.StatementKind shadowKind_ = boa.types.Ast.Statement.StatementKind.RETURN;
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = RETURN];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = RETURN];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Statement.StatementKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = RETURN];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Statement.StatementKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = RETURN];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Statement.StatementKind.RETURN;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression expression = 2;
        private boa.types.Ast.Expression expression_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> expressionBuilder_;
        /**
         * <code>optional .boa.types.Expression expression = 2;</code>
         */
        public boolean hasExpression() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .boa.types.Expression expression = 2;</code>
         */
        public boa.types.Ast.Expression getExpression() {
          if (expressionBuilder_ == null) {
            return expression_;
          } else {
            return expressionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .boa.types.Expression expression = 2;</code>
         */
        public Builder setExpression(boa.types.Ast.Expression value) {
          if (expressionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            expression_ = value;
            onChanged();
          } else {
            expressionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .boa.types.Expression expression = 2;</code>
         */
        public Builder setExpression(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (expressionBuilder_ == null) {
            expression_ = builderForValue.build();
            onChanged();
          } else {
            expressionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .boa.types.Expression expression = 2;</code>
         */
        public Builder mergeExpression(boa.types.Ast.Expression value) {
          if (expressionBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                expression_ != boa.types.Ast.Expression.getDefaultInstance()) {
              expression_ =
                boa.types.Ast.Expression.newBuilder(expression_).mergeFrom(value).buildPartial();
            } else {
              expression_ = value;
            }
            onChanged();
          } else {
            expressionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .boa.types.Expression expression = 2;</code>
         */
        public Builder clearExpression() {
          if (expressionBuilder_ == null) {
            expression_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            expressionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>optional .boa.types.Expression expression = 2;</code>
         */
        public boa.types.Ast.Expression.Builder getExpressionBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getExpressionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .boa.types.Expression expression = 2;</code>
         */
        public boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder() {
          if (expressionBuilder_ != null) {
            return expressionBuilder_.getMessageOrBuilder();
          } else {
            return expression_;
          }
        }
        /**
         * <code>optional .boa.types.Expression expression = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getExpressionFieldBuilder() {
          if (expressionBuilder_ == null) {
            expressionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    expression_,
                    getParentForChildren(),
                    isClean());
            expression_ = null;
          }
          return expressionBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Statement.ReturnStatement)
      }

      static {
        defaultInstance = new ReturnStatement(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Statement.ReturnStatement)
    }

    public interface SwitchCaseOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CASE];
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CASE];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CASE];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Statement.StatementKind getShadowKind();

      // required .boa.types.Expression expression = 2;
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      boolean hasExpression();
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      boa.types.Ast.Expression getExpression();
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder();

      // optional bool is_default = 3 [default = false];
      /**
       * <code>optional bool is_default = 3 [default = false];</code>
       */
      boolean hasIsDefault();
      /**
       * <code>optional bool is_default = 3 [default = false];</code>
       */
      boolean getIsDefault();
    }
    /**
     * Protobuf type {@code boa.types.Statement.SwitchCase}
     */
    public static final class SwitchCase extends
        com.google.protobuf.GeneratedMessage
        implements SwitchCaseOrBuilder {
      // Use SwitchCase.newBuilder() to construct.
      private SwitchCase(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private SwitchCase(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final SwitchCase defaultInstance;
      public static SwitchCase getDefaultInstance() {
        return defaultInstance;
      }

      public SwitchCase getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private SwitchCase(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Statement.StatementKind value = boa.types.Ast.Statement.StatementKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = expression_.toBuilder();
                }
                expression_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(expression_);
                  expression_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                isDefault_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Statement_SwitchCase_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Statement_SwitchCase_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Statement.SwitchCase.class, boa.types.Ast.Statement.SwitchCase.Builder.class);
      }

      public static com.google.protobuf.Parser<SwitchCase> PARSER =
          new com.google.protobuf.AbstractParser<SwitchCase>() {
        public SwitchCase parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SwitchCase(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<SwitchCase> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CASE];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Statement.StatementKind shadowKind_;
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CASE];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CASE];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement.StatementKind getShadowKind() {
        return shadowKind_;
      }

      // required .boa.types.Expression expression = 2;
      public static final int EXPRESSION_FIELD_NUMBER = 2;
      private boa.types.Ast.Expression expression_;
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      public boolean hasExpression() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      public boa.types.Ast.Expression getExpression() {
        return expression_;
      }
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      public boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder() {
        return expression_;
      }

      // optional bool is_default = 3 [default = false];
      public static final int IS_DEFAULT_FIELD_NUMBER = 3;
      private boolean isDefault_;
      /**
       * <code>optional bool is_default = 3 [default = false];</code>
       */
      public boolean hasIsDefault() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool is_default = 3 [default = false];</code>
       */
      public boolean getIsDefault() {
        return isDefault_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Statement.StatementKind.CASE;
        expression_ = boa.types.Ast.Expression.getDefaultInstance();
        isDefault_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasExpression()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getExpression().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, expression_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBool(3, isDefault_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, expression_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, isDefault_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Statement.SwitchCase parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.SwitchCase parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.SwitchCase parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.SwitchCase parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.SwitchCase parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.SwitchCase parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.SwitchCase parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Statement.SwitchCase parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.SwitchCase parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.SwitchCase parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Statement.SwitchCase prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Statement.SwitchCase}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Statement.SwitchCaseOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Statement_SwitchCase_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Statement_SwitchCase_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Statement.SwitchCase.class, boa.types.Ast.Statement.SwitchCase.Builder.class);
        }

        // Construct using boa.types.Ast.Statement.SwitchCase.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getExpressionFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Statement.StatementKind.CASE;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (expressionBuilder_ == null) {
            expression_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            expressionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          isDefault_ = false;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Statement_SwitchCase_descriptor;
        }

        public boa.types.Ast.Statement.SwitchCase getDefaultInstanceForType() {
          return boa.types.Ast.Statement.SwitchCase.getDefaultInstance();
        }

        public boa.types.Ast.Statement.SwitchCase build() {
          boa.types.Ast.Statement.SwitchCase result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Statement.SwitchCase buildPartial() {
          boa.types.Ast.Statement.SwitchCase result = new boa.types.Ast.Statement.SwitchCase(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (expressionBuilder_ == null) {
            result.expression_ = expression_;
          } else {
            result.expression_ = expressionBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.isDefault_ = isDefault_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Statement.SwitchCase) {
            return mergeFrom((boa.types.Ast.Statement.SwitchCase)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Statement.SwitchCase other) {
          if (other == boa.types.Ast.Statement.SwitchCase.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasExpression()) {
            mergeExpression(other.getExpression());
          }
          if (other.hasIsDefault()) {
            setIsDefault(other.getIsDefault());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasExpression()) {
            
            return false;
          }
          if (!getExpression().isInitialized()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Statement.SwitchCase parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Statement.SwitchCase) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CASE];
        private boa.types.Ast.Statement.StatementKind shadowKind_ = boa.types.Ast.Statement.StatementKind.CASE;
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CASE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CASE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Statement.StatementKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CASE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Statement.StatementKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = CASE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Statement.StatementKind.CASE;
          onChanged();
          return this;
        }

        // required .boa.types.Expression expression = 2;
        private boa.types.Ast.Expression expression_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> expressionBuilder_;
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public boolean hasExpression() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public boa.types.Ast.Expression getExpression() {
          if (expressionBuilder_ == null) {
            return expression_;
          } else {
            return expressionBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public Builder setExpression(boa.types.Ast.Expression value) {
          if (expressionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            expression_ = value;
            onChanged();
          } else {
            expressionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public Builder setExpression(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (expressionBuilder_ == null) {
            expression_ = builderForValue.build();
            onChanged();
          } else {
            expressionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public Builder mergeExpression(boa.types.Ast.Expression value) {
          if (expressionBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                expression_ != boa.types.Ast.Expression.getDefaultInstance()) {
              expression_ =
                boa.types.Ast.Expression.newBuilder(expression_).mergeFrom(value).buildPartial();
            } else {
              expression_ = value;
            }
            onChanged();
          } else {
            expressionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public Builder clearExpression() {
          if (expressionBuilder_ == null) {
            expression_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            expressionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public boa.types.Ast.Expression.Builder getExpressionBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getExpressionFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder() {
          if (expressionBuilder_ != null) {
            return expressionBuilder_.getMessageOrBuilder();
          } else {
            return expression_;
          }
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getExpressionFieldBuilder() {
          if (expressionBuilder_ == null) {
            expressionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    expression_,
                    getParentForChildren(),
                    isClean());
            expression_ = null;
          }
          return expressionBuilder_;
        }

        // optional bool is_default = 3 [default = false];
        private boolean isDefault_ ;
        /**
         * <code>optional bool is_default = 3 [default = false];</code>
         */
        public boolean hasIsDefault() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional bool is_default = 3 [default = false];</code>
         */
        public boolean getIsDefault() {
          return isDefault_;
        }
        /**
         * <code>optional bool is_default = 3 [default = false];</code>
         */
        public Builder setIsDefault(boolean value) {
          bitField0_ |= 0x00000004;
          isDefault_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool is_default = 3 [default = false];</code>
         */
        public Builder clearIsDefault() {
          bitField0_ = (bitField0_ & ~0x00000004);
          isDefault_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Statement.SwitchCase)
      }

      static {
        defaultInstance = new SwitchCase(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Statement.SwitchCase)
    }

    public interface SwitchStatementOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = SWITCH];
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = SWITCH];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = SWITCH];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Statement.StatementKind getShadowKind();

      // required .boa.types.Expression expression = 2;
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      boolean hasExpression();
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      boa.types.Ast.Expression getExpression();
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder();

      // repeated .boa.types.Statement statements = 3;
      /**
       * <code>repeated .boa.types.Statement statements = 3;</code>
       */
      java.util.List<boa.types.Ast.Statement> 
          getStatementsList();
      /**
       * <code>repeated .boa.types.Statement statements = 3;</code>
       */
      boa.types.Ast.Statement getStatements(int index);
      /**
       * <code>repeated .boa.types.Statement statements = 3;</code>
       */
      int getStatementsCount();
      /**
       * <code>repeated .boa.types.Statement statements = 3;</code>
       */
      java.util.List<? extends boa.types.Ast.StatementOrBuilder> 
          getStatementsOrBuilderList();
      /**
       * <code>repeated .boa.types.Statement statements = 3;</code>
       */
      boa.types.Ast.StatementOrBuilder getStatementsOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code boa.types.Statement.SwitchStatement}
     */
    public static final class SwitchStatement extends
        com.google.protobuf.GeneratedMessage
        implements SwitchStatementOrBuilder {
      // Use SwitchStatement.newBuilder() to construct.
      private SwitchStatement(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private SwitchStatement(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final SwitchStatement defaultInstance;
      public static SwitchStatement getDefaultInstance() {
        return defaultInstance;
      }

      public SwitchStatement getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private SwitchStatement(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Statement.StatementKind value = boa.types.Ast.Statement.StatementKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = expression_.toBuilder();
                }
                expression_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(expression_);
                  expression_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 26: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  statements_ = new java.util.ArrayList<boa.types.Ast.Statement>();
                  mutable_bitField0_ |= 0x00000004;
                }
                statements_.add(input.readMessage(boa.types.Ast.Statement.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            statements_ = java.util.Collections.unmodifiableList(statements_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Statement_SwitchStatement_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Statement_SwitchStatement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Statement.SwitchStatement.class, boa.types.Ast.Statement.SwitchStatement.Builder.class);
      }

      public static com.google.protobuf.Parser<SwitchStatement> PARSER =
          new com.google.protobuf.AbstractParser<SwitchStatement>() {
        public SwitchStatement parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SwitchStatement(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<SwitchStatement> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = SWITCH];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Statement.StatementKind shadowKind_;
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = SWITCH];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = SWITCH];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement.StatementKind getShadowKind() {
        return shadowKind_;
      }

      // required .boa.types.Expression expression = 2;
      public static final int EXPRESSION_FIELD_NUMBER = 2;
      private boa.types.Ast.Expression expression_;
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      public boolean hasExpression() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      public boa.types.Ast.Expression getExpression() {
        return expression_;
      }
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      public boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder() {
        return expression_;
      }

      // repeated .boa.types.Statement statements = 3;
      public static final int STATEMENTS_FIELD_NUMBER = 3;
      private java.util.List<boa.types.Ast.Statement> statements_;
      /**
       * <code>repeated .boa.types.Statement statements = 3;</code>
       */
      public java.util.List<boa.types.Ast.Statement> getStatementsList() {
        return statements_;
      }
      /**
       * <code>repeated .boa.types.Statement statements = 3;</code>
       */
      public java.util.List<? extends boa.types.Ast.StatementOrBuilder> 
          getStatementsOrBuilderList() {
        return statements_;
      }
      /**
       * <code>repeated .boa.types.Statement statements = 3;</code>
       */
      public int getStatementsCount() {
        return statements_.size();
      }
      /**
       * <code>repeated .boa.types.Statement statements = 3;</code>
       */
      public boa.types.Ast.Statement getStatements(int index) {
        return statements_.get(index);
      }
      /**
       * <code>repeated .boa.types.Statement statements = 3;</code>
       */
      public boa.types.Ast.StatementOrBuilder getStatementsOrBuilder(
          int index) {
        return statements_.get(index);
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Statement.StatementKind.SWITCH;
        expression_ = boa.types.Ast.Expression.getDefaultInstance();
        statements_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasExpression()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getExpression().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        for (int i = 0; i < getStatementsCount(); i++) {
          if (!getStatements(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, expression_);
        }
        for (int i = 0; i < statements_.size(); i++) {
          output.writeMessage(3, statements_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, expression_);
        }
        for (int i = 0; i < statements_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, statements_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Statement.SwitchStatement parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.SwitchStatement parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.SwitchStatement parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.SwitchStatement parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.SwitchStatement parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.SwitchStatement parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.SwitchStatement parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Statement.SwitchStatement parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.SwitchStatement parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.SwitchStatement parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Statement.SwitchStatement prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Statement.SwitchStatement}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Statement.SwitchStatementOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Statement_SwitchStatement_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Statement_SwitchStatement_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Statement.SwitchStatement.class, boa.types.Ast.Statement.SwitchStatement.Builder.class);
        }

        // Construct using boa.types.Ast.Statement.SwitchStatement.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getExpressionFieldBuilder();
            getStatementsFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Statement.StatementKind.SWITCH;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (expressionBuilder_ == null) {
            expression_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            expressionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          if (statementsBuilder_ == null) {
            statements_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            statementsBuilder_.clear();
          }
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Statement_SwitchStatement_descriptor;
        }

        public boa.types.Ast.Statement.SwitchStatement getDefaultInstanceForType() {
          return boa.types.Ast.Statement.SwitchStatement.getDefaultInstance();
        }

        public boa.types.Ast.Statement.SwitchStatement build() {
          boa.types.Ast.Statement.SwitchStatement result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Statement.SwitchStatement buildPartial() {
          boa.types.Ast.Statement.SwitchStatement result = new boa.types.Ast.Statement.SwitchStatement(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (expressionBuilder_ == null) {
            result.expression_ = expression_;
          } else {
            result.expression_ = expressionBuilder_.build();
          }
          if (statementsBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              statements_ = java.util.Collections.unmodifiableList(statements_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.statements_ = statements_;
          } else {
            result.statements_ = statementsBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Statement.SwitchStatement) {
            return mergeFrom((boa.types.Ast.Statement.SwitchStatement)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Statement.SwitchStatement other) {
          if (other == boa.types.Ast.Statement.SwitchStatement.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasExpression()) {
            mergeExpression(other.getExpression());
          }
          if (statementsBuilder_ == null) {
            if (!other.statements_.isEmpty()) {
              if (statements_.isEmpty()) {
                statements_ = other.statements_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureStatementsIsMutable();
                statements_.addAll(other.statements_);
              }
              onChanged();
            }
          } else {
            if (!other.statements_.isEmpty()) {
              if (statementsBuilder_.isEmpty()) {
                statementsBuilder_.dispose();
                statementsBuilder_ = null;
                statements_ = other.statements_;
                bitField0_ = (bitField0_ & ~0x00000004);
                statementsBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getStatementsFieldBuilder() : null;
              } else {
                statementsBuilder_.addAllMessages(other.statements_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasExpression()) {
            
            return false;
          }
          if (!getExpression().isInitialized()) {
            
            return false;
          }
          for (int i = 0; i < getStatementsCount(); i++) {
            if (!getStatements(i).isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Statement.SwitchStatement parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Statement.SwitchStatement) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = SWITCH];
        private boa.types.Ast.Statement.StatementKind shadowKind_ = boa.types.Ast.Statement.StatementKind.SWITCH;
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = SWITCH];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = SWITCH];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Statement.StatementKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = SWITCH];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Statement.StatementKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = SWITCH];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Statement.StatementKind.SWITCH;
          onChanged();
          return this;
        }

        // required .boa.types.Expression expression = 2;
        private boa.types.Ast.Expression expression_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> expressionBuilder_;
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public boolean hasExpression() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public boa.types.Ast.Expression getExpression() {
          if (expressionBuilder_ == null) {
            return expression_;
          } else {
            return expressionBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public Builder setExpression(boa.types.Ast.Expression value) {
          if (expressionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            expression_ = value;
            onChanged();
          } else {
            expressionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public Builder setExpression(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (expressionBuilder_ == null) {
            expression_ = builderForValue.build();
            onChanged();
          } else {
            expressionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public Builder mergeExpression(boa.types.Ast.Expression value) {
          if (expressionBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                expression_ != boa.types.Ast.Expression.getDefaultInstance()) {
              expression_ =
                boa.types.Ast.Expression.newBuilder(expression_).mergeFrom(value).buildPartial();
            } else {
              expression_ = value;
            }
            onChanged();
          } else {
            expressionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public Builder clearExpression() {
          if (expressionBuilder_ == null) {
            expression_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            expressionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public boa.types.Ast.Expression.Builder getExpressionBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getExpressionFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder() {
          if (expressionBuilder_ != null) {
            return expressionBuilder_.getMessageOrBuilder();
          } else {
            return expression_;
          }
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getExpressionFieldBuilder() {
          if (expressionBuilder_ == null) {
            expressionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    expression_,
                    getParentForChildren(),
                    isClean());
            expression_ = null;
          }
          return expressionBuilder_;
        }

        // repeated .boa.types.Statement statements = 3;
        private java.util.List<boa.types.Ast.Statement> statements_ =
          java.util.Collections.emptyList();
        private void ensureStatementsIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            statements_ = new java.util.ArrayList<boa.types.Ast.Statement>(statements_);
            bitField0_ |= 0x00000004;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> statementsBuilder_;

        /**
         * <code>repeated .boa.types.Statement statements = 3;</code>
         */
        public java.util.List<boa.types.Ast.Statement> getStatementsList() {
          if (statementsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(statements_);
          } else {
            return statementsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .boa.types.Statement statements = 3;</code>
         */
        public int getStatementsCount() {
          if (statementsBuilder_ == null) {
            return statements_.size();
          } else {
            return statementsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .boa.types.Statement statements = 3;</code>
         */
        public boa.types.Ast.Statement getStatements(int index) {
          if (statementsBuilder_ == null) {
            return statements_.get(index);
          } else {
            return statementsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .boa.types.Statement statements = 3;</code>
         */
        public Builder setStatements(
            int index, boa.types.Ast.Statement value) {
          if (statementsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureStatementsIsMutable();
            statements_.set(index, value);
            onChanged();
          } else {
            statementsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement statements = 3;</code>
         */
        public Builder setStatements(
            int index, boa.types.Ast.Statement.Builder builderForValue) {
          if (statementsBuilder_ == null) {
            ensureStatementsIsMutable();
            statements_.set(index, builderForValue.build());
            onChanged();
          } else {
            statementsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement statements = 3;</code>
         */
        public Builder addStatements(boa.types.Ast.Statement value) {
          if (statementsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureStatementsIsMutable();
            statements_.add(value);
            onChanged();
          } else {
            statementsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement statements = 3;</code>
         */
        public Builder addStatements(
            int index, boa.types.Ast.Statement value) {
          if (statementsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureStatementsIsMutable();
            statements_.add(index, value);
            onChanged();
          } else {
            statementsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement statements = 3;</code>
         */
        public Builder addStatements(
            boa.types.Ast.Statement.Builder builderForValue) {
          if (statementsBuilder_ == null) {
            ensureStatementsIsMutable();
            statements_.add(builderForValue.build());
            onChanged();
          } else {
            statementsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement statements = 3;</code>
         */
        public Builder addStatements(
            int index, boa.types.Ast.Statement.Builder builderForValue) {
          if (statementsBuilder_ == null) {
            ensureStatementsIsMutable();
            statements_.add(index, builderForValue.build());
            onChanged();
          } else {
            statementsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement statements = 3;</code>
         */
        public Builder addAllStatements(
            java.lang.Iterable<? extends boa.types.Ast.Statement> values) {
          if (statementsBuilder_ == null) {
            ensureStatementsIsMutable();
            super.addAll(values, statements_);
            onChanged();
          } else {
            statementsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement statements = 3;</code>
         */
        public Builder clearStatements() {
          if (statementsBuilder_ == null) {
            statements_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
          } else {
            statementsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement statements = 3;</code>
         */
        public Builder removeStatements(int index) {
          if (statementsBuilder_ == null) {
            ensureStatementsIsMutable();
            statements_.remove(index);
            onChanged();
          } else {
            statementsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement statements = 3;</code>
         */
        public boa.types.Ast.Statement.Builder getStatementsBuilder(
            int index) {
          return getStatementsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .boa.types.Statement statements = 3;</code>
         */
        public boa.types.Ast.StatementOrBuilder getStatementsOrBuilder(
            int index) {
          if (statementsBuilder_ == null) {
            return statements_.get(index);  } else {
            return statementsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .boa.types.Statement statements = 3;</code>
         */
        public java.util.List<? extends boa.types.Ast.StatementOrBuilder> 
             getStatementsOrBuilderList() {
          if (statementsBuilder_ != null) {
            return statementsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(statements_);
          }
        }
        /**
         * <code>repeated .boa.types.Statement statements = 3;</code>
         */
        public boa.types.Ast.Statement.Builder addStatementsBuilder() {
          return getStatementsFieldBuilder().addBuilder(
              boa.types.Ast.Statement.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Statement statements = 3;</code>
         */
        public boa.types.Ast.Statement.Builder addStatementsBuilder(
            int index) {
          return getStatementsFieldBuilder().addBuilder(
              index, boa.types.Ast.Statement.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Statement statements = 3;</code>
         */
        public java.util.List<boa.types.Ast.Statement.Builder> 
             getStatementsBuilderList() {
          return getStatementsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> 
            getStatementsFieldBuilder() {
          if (statementsBuilder_ == null) {
            statementsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder>(
                    statements_,
                    ((bitField0_ & 0x00000004) == 0x00000004),
                    getParentForChildren(),
                    isClean());
            statements_ = null;
          }
          return statementsBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Statement.SwitchStatement)
      }

      static {
        defaultInstance = new SwitchStatement(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Statement.SwitchStatement)
    }

    public interface SynchronizedStatementOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = SYNC];
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = SYNC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = SYNC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Statement.StatementKind getShadowKind();

      // required .boa.types.Expression expression = 2;
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      boolean hasExpression();
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      boa.types.Ast.Expression getExpression();
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder();

      // required .boa.types.Statement body = 3;
      /**
       * <code>required .boa.types.Statement body = 3;</code>
       */
      boolean hasBody();
      /**
       * <code>required .boa.types.Statement body = 3;</code>
       */
      boa.types.Ast.Statement getBody();
      /**
       * <code>required .boa.types.Statement body = 3;</code>
       */
      boa.types.Ast.StatementOrBuilder getBodyOrBuilder();
    }
    /**
     * Protobuf type {@code boa.types.Statement.SynchronizedStatement}
     */
    public static final class SynchronizedStatement extends
        com.google.protobuf.GeneratedMessage
        implements SynchronizedStatementOrBuilder {
      // Use SynchronizedStatement.newBuilder() to construct.
      private SynchronizedStatement(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private SynchronizedStatement(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final SynchronizedStatement defaultInstance;
      public static SynchronizedStatement getDefaultInstance() {
        return defaultInstance;
      }

      public SynchronizedStatement getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private SynchronizedStatement(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Statement.StatementKind value = boa.types.Ast.Statement.StatementKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = expression_.toBuilder();
                }
                expression_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(expression_);
                  expression_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 26: {
                boa.types.Ast.Statement.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = body_.toBuilder();
                }
                body_ = input.readMessage(boa.types.Ast.Statement.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(body_);
                  body_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Statement_SynchronizedStatement_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Statement_SynchronizedStatement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Statement.SynchronizedStatement.class, boa.types.Ast.Statement.SynchronizedStatement.Builder.class);
      }

      public static com.google.protobuf.Parser<SynchronizedStatement> PARSER =
          new com.google.protobuf.AbstractParser<SynchronizedStatement>() {
        public SynchronizedStatement parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SynchronizedStatement(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<SynchronizedStatement> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = SYNC];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Statement.StatementKind shadowKind_;
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = SYNC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = SYNC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement.StatementKind getShadowKind() {
        return shadowKind_;
      }

      // required .boa.types.Expression expression = 2;
      public static final int EXPRESSION_FIELD_NUMBER = 2;
      private boa.types.Ast.Expression expression_;
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      public boolean hasExpression() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      public boa.types.Ast.Expression getExpression() {
        return expression_;
      }
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      public boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder() {
        return expression_;
      }

      // required .boa.types.Statement body = 3;
      public static final int BODY_FIELD_NUMBER = 3;
      private boa.types.Ast.Statement body_;
      /**
       * <code>required .boa.types.Statement body = 3;</code>
       */
      public boolean hasBody() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .boa.types.Statement body = 3;</code>
       */
      public boa.types.Ast.Statement getBody() {
        return body_;
      }
      /**
       * <code>required .boa.types.Statement body = 3;</code>
       */
      public boa.types.Ast.StatementOrBuilder getBodyOrBuilder() {
        return body_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Statement.StatementKind.SYNC;
        expression_ = boa.types.Ast.Expression.getDefaultInstance();
        body_ = boa.types.Ast.Statement.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasExpression()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasBody()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getExpression().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getBody().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, expression_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(3, body_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, expression_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, body_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Statement.SynchronizedStatement parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.SynchronizedStatement parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.SynchronizedStatement parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.SynchronizedStatement parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.SynchronizedStatement parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.SynchronizedStatement parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.SynchronizedStatement parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Statement.SynchronizedStatement parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.SynchronizedStatement parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.SynchronizedStatement parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Statement.SynchronizedStatement prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Statement.SynchronizedStatement}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Statement.SynchronizedStatementOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Statement_SynchronizedStatement_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Statement_SynchronizedStatement_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Statement.SynchronizedStatement.class, boa.types.Ast.Statement.SynchronizedStatement.Builder.class);
        }

        // Construct using boa.types.Ast.Statement.SynchronizedStatement.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getExpressionFieldBuilder();
            getBodyFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Statement.StatementKind.SYNC;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (expressionBuilder_ == null) {
            expression_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            expressionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          if (bodyBuilder_ == null) {
            body_ = boa.types.Ast.Statement.getDefaultInstance();
          } else {
            bodyBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Statement_SynchronizedStatement_descriptor;
        }

        public boa.types.Ast.Statement.SynchronizedStatement getDefaultInstanceForType() {
          return boa.types.Ast.Statement.SynchronizedStatement.getDefaultInstance();
        }

        public boa.types.Ast.Statement.SynchronizedStatement build() {
          boa.types.Ast.Statement.SynchronizedStatement result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Statement.SynchronizedStatement buildPartial() {
          boa.types.Ast.Statement.SynchronizedStatement result = new boa.types.Ast.Statement.SynchronizedStatement(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (expressionBuilder_ == null) {
            result.expression_ = expression_;
          } else {
            result.expression_ = expressionBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          if (bodyBuilder_ == null) {
            result.body_ = body_;
          } else {
            result.body_ = bodyBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Statement.SynchronizedStatement) {
            return mergeFrom((boa.types.Ast.Statement.SynchronizedStatement)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Statement.SynchronizedStatement other) {
          if (other == boa.types.Ast.Statement.SynchronizedStatement.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasExpression()) {
            mergeExpression(other.getExpression());
          }
          if (other.hasBody()) {
            mergeBody(other.getBody());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasExpression()) {
            
            return false;
          }
          if (!hasBody()) {
            
            return false;
          }
          if (!getExpression().isInitialized()) {
            
            return false;
          }
          if (!getBody().isInitialized()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Statement.SynchronizedStatement parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Statement.SynchronizedStatement) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = SYNC];
        private boa.types.Ast.Statement.StatementKind shadowKind_ = boa.types.Ast.Statement.StatementKind.SYNC;
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = SYNC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = SYNC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Statement.StatementKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = SYNC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Statement.StatementKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = SYNC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Statement.StatementKind.SYNC;
          onChanged();
          return this;
        }

        // required .boa.types.Expression expression = 2;
        private boa.types.Ast.Expression expression_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> expressionBuilder_;
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public boolean hasExpression() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public boa.types.Ast.Expression getExpression() {
          if (expressionBuilder_ == null) {
            return expression_;
          } else {
            return expressionBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public Builder setExpression(boa.types.Ast.Expression value) {
          if (expressionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            expression_ = value;
            onChanged();
          } else {
            expressionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public Builder setExpression(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (expressionBuilder_ == null) {
            expression_ = builderForValue.build();
            onChanged();
          } else {
            expressionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public Builder mergeExpression(boa.types.Ast.Expression value) {
          if (expressionBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                expression_ != boa.types.Ast.Expression.getDefaultInstance()) {
              expression_ =
                boa.types.Ast.Expression.newBuilder(expression_).mergeFrom(value).buildPartial();
            } else {
              expression_ = value;
            }
            onChanged();
          } else {
            expressionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public Builder clearExpression() {
          if (expressionBuilder_ == null) {
            expression_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            expressionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public boa.types.Ast.Expression.Builder getExpressionBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getExpressionFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder() {
          if (expressionBuilder_ != null) {
            return expressionBuilder_.getMessageOrBuilder();
          } else {
            return expression_;
          }
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getExpressionFieldBuilder() {
          if (expressionBuilder_ == null) {
            expressionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    expression_,
                    getParentForChildren(),
                    isClean());
            expression_ = null;
          }
          return expressionBuilder_;
        }

        // required .boa.types.Statement body = 3;
        private boa.types.Ast.Statement body_ = boa.types.Ast.Statement.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> bodyBuilder_;
        /**
         * <code>required .boa.types.Statement body = 3;</code>
         */
        public boolean hasBody() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required .boa.types.Statement body = 3;</code>
         */
        public boa.types.Ast.Statement getBody() {
          if (bodyBuilder_ == null) {
            return body_;
          } else {
            return bodyBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Statement body = 3;</code>
         */
        public Builder setBody(boa.types.Ast.Statement value) {
          if (bodyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            body_ = value;
            onChanged();
          } else {
            bodyBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Statement body = 3;</code>
         */
        public Builder setBody(
            boa.types.Ast.Statement.Builder builderForValue) {
          if (bodyBuilder_ == null) {
            body_ = builderForValue.build();
            onChanged();
          } else {
            bodyBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Statement body = 3;</code>
         */
        public Builder mergeBody(boa.types.Ast.Statement value) {
          if (bodyBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                body_ != boa.types.Ast.Statement.getDefaultInstance()) {
              body_ =
                boa.types.Ast.Statement.newBuilder(body_).mergeFrom(value).buildPartial();
            } else {
              body_ = value;
            }
            onChanged();
          } else {
            bodyBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Statement body = 3;</code>
         */
        public Builder clearBody() {
          if (bodyBuilder_ == null) {
            body_ = boa.types.Ast.Statement.getDefaultInstance();
            onChanged();
          } else {
            bodyBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <code>required .boa.types.Statement body = 3;</code>
         */
        public boa.types.Ast.Statement.Builder getBodyBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getBodyFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Statement body = 3;</code>
         */
        public boa.types.Ast.StatementOrBuilder getBodyOrBuilder() {
          if (bodyBuilder_ != null) {
            return bodyBuilder_.getMessageOrBuilder();
          } else {
            return body_;
          }
        }
        /**
         * <code>required .boa.types.Statement body = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> 
            getBodyFieldBuilder() {
          if (bodyBuilder_ == null) {
            bodyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder>(
                    body_,
                    getParentForChildren(),
                    isClean());
            body_ = null;
          }
          return bodyBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Statement.SynchronizedStatement)
      }

      static {
        defaultInstance = new SynchronizedStatement(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Statement.SynchronizedStatement)
    }

    public interface ThrowStatementOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = THROW];
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = THROW];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = THROW];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Statement.StatementKind getShadowKind();

      // required .boa.types.Expression expression = 2;
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      boolean hasExpression();
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      boa.types.Ast.Expression getExpression();
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder();
    }
    /**
     * Protobuf type {@code boa.types.Statement.ThrowStatement}
     */
    public static final class ThrowStatement extends
        com.google.protobuf.GeneratedMessage
        implements ThrowStatementOrBuilder {
      // Use ThrowStatement.newBuilder() to construct.
      private ThrowStatement(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private ThrowStatement(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final ThrowStatement defaultInstance;
      public static ThrowStatement getDefaultInstance() {
        return defaultInstance;
      }

      public ThrowStatement getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private ThrowStatement(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Statement.StatementKind value = boa.types.Ast.Statement.StatementKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = expression_.toBuilder();
                }
                expression_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(expression_);
                  expression_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Statement_ThrowStatement_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Statement_ThrowStatement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Statement.ThrowStatement.class, boa.types.Ast.Statement.ThrowStatement.Builder.class);
      }

      public static com.google.protobuf.Parser<ThrowStatement> PARSER =
          new com.google.protobuf.AbstractParser<ThrowStatement>() {
        public ThrowStatement parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ThrowStatement(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<ThrowStatement> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = THROW];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Statement.StatementKind shadowKind_;
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = THROW];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = THROW];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement.StatementKind getShadowKind() {
        return shadowKind_;
      }

      // required .boa.types.Expression expression = 2;
      public static final int EXPRESSION_FIELD_NUMBER = 2;
      private boa.types.Ast.Expression expression_;
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      public boolean hasExpression() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      public boa.types.Ast.Expression getExpression() {
        return expression_;
      }
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       */
      public boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder() {
        return expression_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Statement.StatementKind.THROW;
        expression_ = boa.types.Ast.Expression.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasExpression()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getExpression().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, expression_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, expression_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Statement.ThrowStatement parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.ThrowStatement parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.ThrowStatement parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.ThrowStatement parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.ThrowStatement parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.ThrowStatement parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.ThrowStatement parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Statement.ThrowStatement parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.ThrowStatement parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.ThrowStatement parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Statement.ThrowStatement prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Statement.ThrowStatement}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Statement.ThrowStatementOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Statement_ThrowStatement_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Statement_ThrowStatement_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Statement.ThrowStatement.class, boa.types.Ast.Statement.ThrowStatement.Builder.class);
        }

        // Construct using boa.types.Ast.Statement.ThrowStatement.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getExpressionFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Statement.StatementKind.THROW;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (expressionBuilder_ == null) {
            expression_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            expressionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Statement_ThrowStatement_descriptor;
        }

        public boa.types.Ast.Statement.ThrowStatement getDefaultInstanceForType() {
          return boa.types.Ast.Statement.ThrowStatement.getDefaultInstance();
        }

        public boa.types.Ast.Statement.ThrowStatement build() {
          boa.types.Ast.Statement.ThrowStatement result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Statement.ThrowStatement buildPartial() {
          boa.types.Ast.Statement.ThrowStatement result = new boa.types.Ast.Statement.ThrowStatement(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (expressionBuilder_ == null) {
            result.expression_ = expression_;
          } else {
            result.expression_ = expressionBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Statement.ThrowStatement) {
            return mergeFrom((boa.types.Ast.Statement.ThrowStatement)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Statement.ThrowStatement other) {
          if (other == boa.types.Ast.Statement.ThrowStatement.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasExpression()) {
            mergeExpression(other.getExpression());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasExpression()) {
            
            return false;
          }
          if (!getExpression().isInitialized()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Statement.ThrowStatement parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Statement.ThrowStatement) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = THROW];
        private boa.types.Ast.Statement.StatementKind shadowKind_ = boa.types.Ast.Statement.StatementKind.THROW;
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = THROW];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = THROW];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Statement.StatementKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = THROW];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Statement.StatementKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = THROW];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Statement.StatementKind.THROW;
          onChanged();
          return this;
        }

        // required .boa.types.Expression expression = 2;
        private boa.types.Ast.Expression expression_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> expressionBuilder_;
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public boolean hasExpression() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public boa.types.Ast.Expression getExpression() {
          if (expressionBuilder_ == null) {
            return expression_;
          } else {
            return expressionBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public Builder setExpression(boa.types.Ast.Expression value) {
          if (expressionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            expression_ = value;
            onChanged();
          } else {
            expressionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public Builder setExpression(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (expressionBuilder_ == null) {
            expression_ = builderForValue.build();
            onChanged();
          } else {
            expressionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public Builder mergeExpression(boa.types.Ast.Expression value) {
          if (expressionBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                expression_ != boa.types.Ast.Expression.getDefaultInstance()) {
              expression_ =
                boa.types.Ast.Expression.newBuilder(expression_).mergeFrom(value).buildPartial();
            } else {
              expression_ = value;
            }
            onChanged();
          } else {
            expressionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public Builder clearExpression() {
          if (expressionBuilder_ == null) {
            expression_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            expressionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public boa.types.Ast.Expression.Builder getExpressionBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getExpressionFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        public boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder() {
          if (expressionBuilder_ != null) {
            return expressionBuilder_.getMessageOrBuilder();
          } else {
            return expression_;
          }
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getExpressionFieldBuilder() {
          if (expressionBuilder_ == null) {
            expressionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    expression_,
                    getParentForChildren(),
                    isClean());
            expression_ = null;
          }
          return expressionBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Statement.ThrowStatement)
      }

      static {
        defaultInstance = new ThrowStatement(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Statement.ThrowStatement)
    }

    public interface TryStatementOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = TRY];
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = TRY];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = TRY];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Statement.StatementKind getShadowKind();

      // required .boa.types.Statement body = 2;
      /**
       * <code>required .boa.types.Statement body = 2;</code>
       */
      boolean hasBody();
      /**
       * <code>required .boa.types.Statement body = 2;</code>
       */
      boa.types.Ast.Statement getBody();
      /**
       * <code>required .boa.types.Statement body = 2;</code>
       */
      boa.types.Ast.StatementOrBuilder getBodyOrBuilder();

      // repeated .boa.types.Statement catches = 3;
      /**
       * <code>repeated .boa.types.Statement catches = 3;</code>
       */
      java.util.List<boa.types.Ast.Statement> 
          getCatchesList();
      /**
       * <code>repeated .boa.types.Statement catches = 3;</code>
       */
      boa.types.Ast.Statement getCatches(int index);
      /**
       * <code>repeated .boa.types.Statement catches = 3;</code>
       */
      int getCatchesCount();
      /**
       * <code>repeated .boa.types.Statement catches = 3;</code>
       */
      java.util.List<? extends boa.types.Ast.StatementOrBuilder> 
          getCatchesOrBuilderList();
      /**
       * <code>repeated .boa.types.Statement catches = 3;</code>
       */
      boa.types.Ast.StatementOrBuilder getCatchesOrBuilder(
          int index);

      // optional .boa.types.Statement finally = 4;
      /**
       * <code>optional .boa.types.Statement finally = 4;</code>
       */
      boolean hasFinally();
      /**
       * <code>optional .boa.types.Statement finally = 4;</code>
       */
      boa.types.Ast.Statement getFinally();
      /**
       * <code>optional .boa.types.Statement finally = 4;</code>
       */
      boa.types.Ast.StatementOrBuilder getFinallyOrBuilder();

      // repeated .boa.types.Expression resources = 5;
      /**
       * <code>repeated .boa.types.Expression resources = 5;</code>
       */
      java.util.List<boa.types.Ast.Expression> 
          getResourcesList();
      /**
       * <code>repeated .boa.types.Expression resources = 5;</code>
       */
      boa.types.Ast.Expression getResources(int index);
      /**
       * <code>repeated .boa.types.Expression resources = 5;</code>
       */
      int getResourcesCount();
      /**
       * <code>repeated .boa.types.Expression resources = 5;</code>
       */
      java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
          getResourcesOrBuilderList();
      /**
       * <code>repeated .boa.types.Expression resources = 5;</code>
       */
      boa.types.Ast.ExpressionOrBuilder getResourcesOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code boa.types.Statement.TryStatement}
     */
    public static final class TryStatement extends
        com.google.protobuf.GeneratedMessage
        implements TryStatementOrBuilder {
      // Use TryStatement.newBuilder() to construct.
      private TryStatement(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private TryStatement(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final TryStatement defaultInstance;
      public static TryStatement getDefaultInstance() {
        return defaultInstance;
      }

      public TryStatement getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private TryStatement(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Statement.StatementKind value = boa.types.Ast.Statement.StatementKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                boa.types.Ast.Statement.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = body_.toBuilder();
                }
                body_ = input.readMessage(boa.types.Ast.Statement.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(body_);
                  body_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 26: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  catches_ = new java.util.ArrayList<boa.types.Ast.Statement>();
                  mutable_bitField0_ |= 0x00000004;
                }
                catches_.add(input.readMessage(boa.types.Ast.Statement.PARSER, extensionRegistry));
                break;
              }
              case 34: {
                boa.types.Ast.Statement.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = finally_.toBuilder();
                }
                finally_ = input.readMessage(boa.types.Ast.Statement.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(finally_);
                  finally_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
              case 42: {
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                  resources_ = new java.util.ArrayList<boa.types.Ast.Expression>();
                  mutable_bitField0_ |= 0x00000010;
                }
                resources_.add(input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            catches_ = java.util.Collections.unmodifiableList(catches_);
          }
          if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
            resources_ = java.util.Collections.unmodifiableList(resources_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Statement_TryStatement_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Statement_TryStatement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Statement.TryStatement.class, boa.types.Ast.Statement.TryStatement.Builder.class);
      }

      public static com.google.protobuf.Parser<TryStatement> PARSER =
          new com.google.protobuf.AbstractParser<TryStatement>() {
        public TryStatement parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new TryStatement(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<TryStatement> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = TRY];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Statement.StatementKind shadowKind_;
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = TRY];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = TRY];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement.StatementKind getShadowKind() {
        return shadowKind_;
      }

      // required .boa.types.Statement body = 2;
      public static final int BODY_FIELD_NUMBER = 2;
      private boa.types.Ast.Statement body_;
      /**
       * <code>required .boa.types.Statement body = 2;</code>
       */
      public boolean hasBody() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .boa.types.Statement body = 2;</code>
       */
      public boa.types.Ast.Statement getBody() {
        return body_;
      }
      /**
       * <code>required .boa.types.Statement body = 2;</code>
       */
      public boa.types.Ast.StatementOrBuilder getBodyOrBuilder() {
        return body_;
      }

      // repeated .boa.types.Statement catches = 3;
      public static final int CATCHES_FIELD_NUMBER = 3;
      private java.util.List<boa.types.Ast.Statement> catches_;
      /**
       * <code>repeated .boa.types.Statement catches = 3;</code>
       */
      public java.util.List<boa.types.Ast.Statement> getCatchesList() {
        return catches_;
      }
      /**
       * <code>repeated .boa.types.Statement catches = 3;</code>
       */
      public java.util.List<? extends boa.types.Ast.StatementOrBuilder> 
          getCatchesOrBuilderList() {
        return catches_;
      }
      /**
       * <code>repeated .boa.types.Statement catches = 3;</code>
       */
      public int getCatchesCount() {
        return catches_.size();
      }
      /**
       * <code>repeated .boa.types.Statement catches = 3;</code>
       */
      public boa.types.Ast.Statement getCatches(int index) {
        return catches_.get(index);
      }
      /**
       * <code>repeated .boa.types.Statement catches = 3;</code>
       */
      public boa.types.Ast.StatementOrBuilder getCatchesOrBuilder(
          int index) {
        return catches_.get(index);
      }

      // optional .boa.types.Statement finally = 4;
      public static final int FINALLY_FIELD_NUMBER = 4;
      private boa.types.Ast.Statement finally_;
      /**
       * <code>optional .boa.types.Statement finally = 4;</code>
       */
      public boolean hasFinally() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .boa.types.Statement finally = 4;</code>
       */
      public boa.types.Ast.Statement getFinally() {
        return finally_;
      }
      /**
       * <code>optional .boa.types.Statement finally = 4;</code>
       */
      public boa.types.Ast.StatementOrBuilder getFinallyOrBuilder() {
        return finally_;
      }

      // repeated .boa.types.Expression resources = 5;
      public static final int RESOURCES_FIELD_NUMBER = 5;
      private java.util.List<boa.types.Ast.Expression> resources_;
      /**
       * <code>repeated .boa.types.Expression resources = 5;</code>
       */
      public java.util.List<boa.types.Ast.Expression> getResourcesList() {
        return resources_;
      }
      /**
       * <code>repeated .boa.types.Expression resources = 5;</code>
       */
      public java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
          getResourcesOrBuilderList() {
        return resources_;
      }
      /**
       * <code>repeated .boa.types.Expression resources = 5;</code>
       */
      public int getResourcesCount() {
        return resources_.size();
      }
      /**
       * <code>repeated .boa.types.Expression resources = 5;</code>
       */
      public boa.types.Ast.Expression getResources(int index) {
        return resources_.get(index);
      }
      /**
       * <code>repeated .boa.types.Expression resources = 5;</code>
       */
      public boa.types.Ast.ExpressionOrBuilder getResourcesOrBuilder(
          int index) {
        return resources_.get(index);
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Statement.StatementKind.TRY;
        body_ = boa.types.Ast.Statement.getDefaultInstance();
        catches_ = java.util.Collections.emptyList();
        finally_ = boa.types.Ast.Statement.getDefaultInstance();
        resources_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasBody()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getBody().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        for (int i = 0; i < getCatchesCount(); i++) {
          if (!getCatches(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        if (hasFinally()) {
          if (!getFinally().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        for (int i = 0; i < getResourcesCount(); i++) {
          if (!getResources(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, body_);
        }
        for (int i = 0; i < catches_.size(); i++) {
          output.writeMessage(3, catches_.get(i));
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(4, finally_);
        }
        for (int i = 0; i < resources_.size(); i++) {
          output.writeMessage(5, resources_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, body_);
        }
        for (int i = 0; i < catches_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, catches_.get(i));
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, finally_);
        }
        for (int i = 0; i < resources_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, resources_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Statement.TryStatement parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.TryStatement parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.TryStatement parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.TryStatement parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.TryStatement parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.TryStatement parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.TryStatement parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Statement.TryStatement parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.TryStatement parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.TryStatement parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Statement.TryStatement prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Statement.TryStatement}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Statement.TryStatementOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Statement_TryStatement_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Statement_TryStatement_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Statement.TryStatement.class, boa.types.Ast.Statement.TryStatement.Builder.class);
        }

        // Construct using boa.types.Ast.Statement.TryStatement.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getBodyFieldBuilder();
            getCatchesFieldBuilder();
            getFinallyFieldBuilder();
            getResourcesFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Statement.StatementKind.TRY;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (bodyBuilder_ == null) {
            body_ = boa.types.Ast.Statement.getDefaultInstance();
          } else {
            bodyBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          if (catchesBuilder_ == null) {
            catches_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            catchesBuilder_.clear();
          }
          if (finallyBuilder_ == null) {
            finally_ = boa.types.Ast.Statement.getDefaultInstance();
          } else {
            finallyBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          if (resourcesBuilder_ == null) {
            resources_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            resourcesBuilder_.clear();
          }
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Statement_TryStatement_descriptor;
        }

        public boa.types.Ast.Statement.TryStatement getDefaultInstanceForType() {
          return boa.types.Ast.Statement.TryStatement.getDefaultInstance();
        }

        public boa.types.Ast.Statement.TryStatement build() {
          boa.types.Ast.Statement.TryStatement result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Statement.TryStatement buildPartial() {
          boa.types.Ast.Statement.TryStatement result = new boa.types.Ast.Statement.TryStatement(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (bodyBuilder_ == null) {
            result.body_ = body_;
          } else {
            result.body_ = bodyBuilder_.build();
          }
          if (catchesBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              catches_ = java.util.Collections.unmodifiableList(catches_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.catches_ = catches_;
          } else {
            result.catches_ = catchesBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000004;
          }
          if (finallyBuilder_ == null) {
            result.finally_ = finally_;
          } else {
            result.finally_ = finallyBuilder_.build();
          }
          if (resourcesBuilder_ == null) {
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
              resources_ = java.util.Collections.unmodifiableList(resources_);
              bitField0_ = (bitField0_ & ~0x00000010);
            }
            result.resources_ = resources_;
          } else {
            result.resources_ = resourcesBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Statement.TryStatement) {
            return mergeFrom((boa.types.Ast.Statement.TryStatement)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Statement.TryStatement other) {
          if (other == boa.types.Ast.Statement.TryStatement.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasBody()) {
            mergeBody(other.getBody());
          }
          if (catchesBuilder_ == null) {
            if (!other.catches_.isEmpty()) {
              if (catches_.isEmpty()) {
                catches_ = other.catches_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureCatchesIsMutable();
                catches_.addAll(other.catches_);
              }
              onChanged();
            }
          } else {
            if (!other.catches_.isEmpty()) {
              if (catchesBuilder_.isEmpty()) {
                catchesBuilder_.dispose();
                catchesBuilder_ = null;
                catches_ = other.catches_;
                bitField0_ = (bitField0_ & ~0x00000004);
                catchesBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getCatchesFieldBuilder() : null;
              } else {
                catchesBuilder_.addAllMessages(other.catches_);
              }
            }
          }
          if (other.hasFinally()) {
            mergeFinally(other.getFinally());
          }
          if (resourcesBuilder_ == null) {
            if (!other.resources_.isEmpty()) {
              if (resources_.isEmpty()) {
                resources_ = other.resources_;
                bitField0_ = (bitField0_ & ~0x00000010);
              } else {
                ensureResourcesIsMutable();
                resources_.addAll(other.resources_);
              }
              onChanged();
            }
          } else {
            if (!other.resources_.isEmpty()) {
              if (resourcesBuilder_.isEmpty()) {
                resourcesBuilder_.dispose();
                resourcesBuilder_ = null;
                resources_ = other.resources_;
                bitField0_ = (bitField0_ & ~0x00000010);
                resourcesBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getResourcesFieldBuilder() : null;
              } else {
                resourcesBuilder_.addAllMessages(other.resources_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasBody()) {
            
            return false;
          }
          if (!getBody().isInitialized()) {
            
            return false;
          }
          for (int i = 0; i < getCatchesCount(); i++) {
            if (!getCatches(i).isInitialized()) {
              
              return false;
            }
          }
          if (hasFinally()) {
            if (!getFinally().isInitialized()) {
              
              return false;
            }
          }
          for (int i = 0; i < getResourcesCount(); i++) {
            if (!getResources(i).isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Statement.TryStatement parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Statement.TryStatement) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = TRY];
        private boa.types.Ast.Statement.StatementKind shadowKind_ = boa.types.Ast.Statement.StatementKind.TRY;
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = TRY];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = TRY];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Statement.StatementKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = TRY];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Statement.StatementKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = TRY];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Statement.StatementKind.TRY;
          onChanged();
          return this;
        }

        // required .boa.types.Statement body = 2;
        private boa.types.Ast.Statement body_ = boa.types.Ast.Statement.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> bodyBuilder_;
        /**
         * <code>required .boa.types.Statement body = 2;</code>
         */
        public boolean hasBody() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required .boa.types.Statement body = 2;</code>
         */
        public boa.types.Ast.Statement getBody() {
          if (bodyBuilder_ == null) {
            return body_;
          } else {
            return bodyBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Statement body = 2;</code>
         */
        public Builder setBody(boa.types.Ast.Statement value) {
          if (bodyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            body_ = value;
            onChanged();
          } else {
            bodyBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Statement body = 2;</code>
         */
        public Builder setBody(
            boa.types.Ast.Statement.Builder builderForValue) {
          if (bodyBuilder_ == null) {
            body_ = builderForValue.build();
            onChanged();
          } else {
            bodyBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Statement body = 2;</code>
         */
        public Builder mergeBody(boa.types.Ast.Statement value) {
          if (bodyBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                body_ != boa.types.Ast.Statement.getDefaultInstance()) {
              body_ =
                boa.types.Ast.Statement.newBuilder(body_).mergeFrom(value).buildPartial();
            } else {
              body_ = value;
            }
            onChanged();
          } else {
            bodyBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Statement body = 2;</code>
         */
        public Builder clearBody() {
          if (bodyBuilder_ == null) {
            body_ = boa.types.Ast.Statement.getDefaultInstance();
            onChanged();
          } else {
            bodyBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>required .boa.types.Statement body = 2;</code>
         */
        public boa.types.Ast.Statement.Builder getBodyBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getBodyFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Statement body = 2;</code>
         */
        public boa.types.Ast.StatementOrBuilder getBodyOrBuilder() {
          if (bodyBuilder_ != null) {
            return bodyBuilder_.getMessageOrBuilder();
          } else {
            return body_;
          }
        }
        /**
         * <code>required .boa.types.Statement body = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> 
            getBodyFieldBuilder() {
          if (bodyBuilder_ == null) {
            bodyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder>(
                    body_,
                    getParentForChildren(),
                    isClean());
            body_ = null;
          }
          return bodyBuilder_;
        }

        // repeated .boa.types.Statement catches = 3;
        private java.util.List<boa.types.Ast.Statement> catches_ =
          java.util.Collections.emptyList();
        private void ensureCatchesIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            catches_ = new java.util.ArrayList<boa.types.Ast.Statement>(catches_);
            bitField0_ |= 0x00000004;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> catchesBuilder_;

        /**
         * <code>repeated .boa.types.Statement catches = 3;</code>
         */
        public java.util.List<boa.types.Ast.Statement> getCatchesList() {
          if (catchesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(catches_);
          } else {
            return catchesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .boa.types.Statement catches = 3;</code>
         */
        public int getCatchesCount() {
          if (catchesBuilder_ == null) {
            return catches_.size();
          } else {
            return catchesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .boa.types.Statement catches = 3;</code>
         */
        public boa.types.Ast.Statement getCatches(int index) {
          if (catchesBuilder_ == null) {
            return catches_.get(index);
          } else {
            return catchesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .boa.types.Statement catches = 3;</code>
         */
        public Builder setCatches(
            int index, boa.types.Ast.Statement value) {
          if (catchesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureCatchesIsMutable();
            catches_.set(index, value);
            onChanged();
          } else {
            catchesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement catches = 3;</code>
         */
        public Builder setCatches(
            int index, boa.types.Ast.Statement.Builder builderForValue) {
          if (catchesBuilder_ == null) {
            ensureCatchesIsMutable();
            catches_.set(index, builderForValue.build());
            onChanged();
          } else {
            catchesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement catches = 3;</code>
         */
        public Builder addCatches(boa.types.Ast.Statement value) {
          if (catchesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureCatchesIsMutable();
            catches_.add(value);
            onChanged();
          } else {
            catchesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement catches = 3;</code>
         */
        public Builder addCatches(
            int index, boa.types.Ast.Statement value) {
          if (catchesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureCatchesIsMutable();
            catches_.add(index, value);
            onChanged();
          } else {
            catchesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement catches = 3;</code>
         */
        public Builder addCatches(
            boa.types.Ast.Statement.Builder builderForValue) {
          if (catchesBuilder_ == null) {
            ensureCatchesIsMutable();
            catches_.add(builderForValue.build());
            onChanged();
          } else {
            catchesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement catches = 3;</code>
         */
        public Builder addCatches(
            int index, boa.types.Ast.Statement.Builder builderForValue) {
          if (catchesBuilder_ == null) {
            ensureCatchesIsMutable();
            catches_.add(index, builderForValue.build());
            onChanged();
          } else {
            catchesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement catches = 3;</code>
         */
        public Builder addAllCatches(
            java.lang.Iterable<? extends boa.types.Ast.Statement> values) {
          if (catchesBuilder_ == null) {
            ensureCatchesIsMutable();
            super.addAll(values, catches_);
            onChanged();
          } else {
            catchesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement catches = 3;</code>
         */
        public Builder clearCatches() {
          if (catchesBuilder_ == null) {
            catches_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
          } else {
            catchesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement catches = 3;</code>
         */
        public Builder removeCatches(int index) {
          if (catchesBuilder_ == null) {
            ensureCatchesIsMutable();
            catches_.remove(index);
            onChanged();
          } else {
            catchesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Statement catches = 3;</code>
         */
        public boa.types.Ast.Statement.Builder getCatchesBuilder(
            int index) {
          return getCatchesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .boa.types.Statement catches = 3;</code>
         */
        public boa.types.Ast.StatementOrBuilder getCatchesOrBuilder(
            int index) {
          if (catchesBuilder_ == null) {
            return catches_.get(index);  } else {
            return catchesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .boa.types.Statement catches = 3;</code>
         */
        public java.util.List<? extends boa.types.Ast.StatementOrBuilder> 
             getCatchesOrBuilderList() {
          if (catchesBuilder_ != null) {
            return catchesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(catches_);
          }
        }
        /**
         * <code>repeated .boa.types.Statement catches = 3;</code>
         */
        public boa.types.Ast.Statement.Builder addCatchesBuilder() {
          return getCatchesFieldBuilder().addBuilder(
              boa.types.Ast.Statement.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Statement catches = 3;</code>
         */
        public boa.types.Ast.Statement.Builder addCatchesBuilder(
            int index) {
          return getCatchesFieldBuilder().addBuilder(
              index, boa.types.Ast.Statement.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Statement catches = 3;</code>
         */
        public java.util.List<boa.types.Ast.Statement.Builder> 
             getCatchesBuilderList() {
          return getCatchesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> 
            getCatchesFieldBuilder() {
          if (catchesBuilder_ == null) {
            catchesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder>(
                    catches_,
                    ((bitField0_ & 0x00000004) == 0x00000004),
                    getParentForChildren(),
                    isClean());
            catches_ = null;
          }
          return catchesBuilder_;
        }

        // optional .boa.types.Statement finally = 4;
        private boa.types.Ast.Statement finally_ = boa.types.Ast.Statement.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> finallyBuilder_;
        /**
         * <code>optional .boa.types.Statement finally = 4;</code>
         */
        public boolean hasFinally() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional .boa.types.Statement finally = 4;</code>
         */
        public boa.types.Ast.Statement getFinally() {
          if (finallyBuilder_ == null) {
            return finally_;
          } else {
            return finallyBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .boa.types.Statement finally = 4;</code>
         */
        public Builder setFinally(boa.types.Ast.Statement value) {
          if (finallyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            finally_ = value;
            onChanged();
          } else {
            finallyBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .boa.types.Statement finally = 4;</code>
         */
        public Builder setFinally(
            boa.types.Ast.Statement.Builder builderForValue) {
          if (finallyBuilder_ == null) {
            finally_ = builderForValue.build();
            onChanged();
          } else {
            finallyBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .boa.types.Statement finally = 4;</code>
         */
        public Builder mergeFinally(boa.types.Ast.Statement value) {
          if (finallyBuilder_ == null) {
            if (((bitField0_ & 0x00000008) == 0x00000008) &&
                finally_ != boa.types.Ast.Statement.getDefaultInstance()) {
              finally_ =
                boa.types.Ast.Statement.newBuilder(finally_).mergeFrom(value).buildPartial();
            } else {
              finally_ = value;
            }
            onChanged();
          } else {
            finallyBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .boa.types.Statement finally = 4;</code>
         */
        public Builder clearFinally() {
          if (finallyBuilder_ == null) {
            finally_ = boa.types.Ast.Statement.getDefaultInstance();
            onChanged();
          } else {
            finallyBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }
        /**
         * <code>optional .boa.types.Statement finally = 4;</code>
         */
        public boa.types.Ast.Statement.Builder getFinallyBuilder() {
          bitField0_ |= 0x00000008;
          onChanged();
          return getFinallyFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .boa.types.Statement finally = 4;</code>
         */
        public boa.types.Ast.StatementOrBuilder getFinallyOrBuilder() {
          if (finallyBuilder_ != null) {
            return finallyBuilder_.getMessageOrBuilder();
          } else {
            return finally_;
          }
        }
        /**
         * <code>optional .boa.types.Statement finally = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> 
            getFinallyFieldBuilder() {
          if (finallyBuilder_ == null) {
            finallyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder>(
                    finally_,
                    getParentForChildren(),
                    isClean());
            finally_ = null;
          }
          return finallyBuilder_;
        }

        // repeated .boa.types.Expression resources = 5;
        private java.util.List<boa.types.Ast.Expression> resources_ =
          java.util.Collections.emptyList();
        private void ensureResourcesIsMutable() {
          if (!((bitField0_ & 0x00000010) == 0x00000010)) {
            resources_ = new java.util.ArrayList<boa.types.Ast.Expression>(resources_);
            bitField0_ |= 0x00000010;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> resourcesBuilder_;

        /**
         * <code>repeated .boa.types.Expression resources = 5;</code>
         */
        public java.util.List<boa.types.Ast.Expression> getResourcesList() {
          if (resourcesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(resources_);
          } else {
            return resourcesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .boa.types.Expression resources = 5;</code>
         */
        public int getResourcesCount() {
          if (resourcesBuilder_ == null) {
            return resources_.size();
          } else {
            return resourcesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .boa.types.Expression resources = 5;</code>
         */
        public boa.types.Ast.Expression getResources(int index) {
          if (resourcesBuilder_ == null) {
            return resources_.get(index);
          } else {
            return resourcesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .boa.types.Expression resources = 5;</code>
         */
        public Builder setResources(
            int index, boa.types.Ast.Expression value) {
          if (resourcesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureResourcesIsMutable();
            resources_.set(index, value);
            onChanged();
          } else {
            resourcesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression resources = 5;</code>
         */
        public Builder setResources(
            int index, boa.types.Ast.Expression.Builder builderForValue) {
          if (resourcesBuilder_ == null) {
            ensureResourcesIsMutable();
            resources_.set(index, builderForValue.build());
            onChanged();
          } else {
            resourcesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression resources = 5;</code>
         */
        public Builder addResources(boa.types.Ast.Expression value) {
          if (resourcesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureResourcesIsMutable();
            resources_.add(value);
            onChanged();
          } else {
            resourcesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression resources = 5;</code>
         */
        public Builder addResources(
            int index, boa.types.Ast.Expression value) {
          if (resourcesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureResourcesIsMutable();
            resources_.add(index, value);
            onChanged();
          } else {
            resourcesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression resources = 5;</code>
         */
        public Builder addResources(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (resourcesBuilder_ == null) {
            ensureResourcesIsMutable();
            resources_.add(builderForValue.build());
            onChanged();
          } else {
            resourcesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression resources = 5;</code>
         */
        public Builder addResources(
            int index, boa.types.Ast.Expression.Builder builderForValue) {
          if (resourcesBuilder_ == null) {
            ensureResourcesIsMutable();
            resources_.add(index, builderForValue.build());
            onChanged();
          } else {
            resourcesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression resources = 5;</code>
         */
        public Builder addAllResources(
            java.lang.Iterable<? extends boa.types.Ast.Expression> values) {
          if (resourcesBuilder_ == null) {
            ensureResourcesIsMutable();
            super.addAll(values, resources_);
            onChanged();
          } else {
            resourcesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression resources = 5;</code>
         */
        public Builder clearResources() {
          if (resourcesBuilder_ == null) {
            resources_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000010);
            onChanged();
          } else {
            resourcesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression resources = 5;</code>
         */
        public Builder removeResources(int index) {
          if (resourcesBuilder_ == null) {
            ensureResourcesIsMutable();
            resources_.remove(index);
            onChanged();
          } else {
            resourcesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression resources = 5;</code>
         */
        public boa.types.Ast.Expression.Builder getResourcesBuilder(
            int index) {
          return getResourcesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .boa.types.Expression resources = 5;</code>
         */
        public boa.types.Ast.ExpressionOrBuilder getResourcesOrBuilder(
            int index) {
          if (resourcesBuilder_ == null) {
            return resources_.get(index);  } else {
            return resourcesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .boa.types.Expression resources = 5;</code>
         */
        public java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
             getResourcesOrBuilderList() {
          if (resourcesBuilder_ != null) {
            return resourcesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(resources_);
          }
        }
        /**
         * <code>repeated .boa.types.Expression resources = 5;</code>
         */
        public boa.types.Ast.Expression.Builder addResourcesBuilder() {
          return getResourcesFieldBuilder().addBuilder(
              boa.types.Ast.Expression.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Expression resources = 5;</code>
         */
        public boa.types.Ast.Expression.Builder addResourcesBuilder(
            int index) {
          return getResourcesFieldBuilder().addBuilder(
              index, boa.types.Ast.Expression.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Expression resources = 5;</code>
         */
        public java.util.List<boa.types.Ast.Expression.Builder> 
             getResourcesBuilderList() {
          return getResourcesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getResourcesFieldBuilder() {
          if (resourcesBuilder_ == null) {
            resourcesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    resources_,
                    ((bitField0_ & 0x00000010) == 0x00000010),
                    getParentForChildren(),
                    isClean());
            resources_ = null;
          }
          return resourcesBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Statement.TryStatement)
      }

      static {
        defaultInstance = new TryStatement(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Statement.TryStatement)
    }

    public interface TypeDeclarationStatementOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = TYPEDECL];
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = TYPEDECL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = TYPEDECL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Statement.StatementKind getShadowKind();

      // required .boa.types.Declaration new_type = 2;
      /**
       * <code>required .boa.types.Declaration new_type = 2;</code>
       */
      boolean hasNewType();
      /**
       * <code>required .boa.types.Declaration new_type = 2;</code>
       */
      boa.types.Ast.Declaration getNewType();
      /**
       * <code>required .boa.types.Declaration new_type = 2;</code>
       */
      boa.types.Ast.DeclarationOrBuilder getNewTypeOrBuilder();
    }
    /**
     * Protobuf type {@code boa.types.Statement.TypeDeclarationStatement}
     */
    public static final class TypeDeclarationStatement extends
        com.google.protobuf.GeneratedMessage
        implements TypeDeclarationStatementOrBuilder {
      // Use TypeDeclarationStatement.newBuilder() to construct.
      private TypeDeclarationStatement(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private TypeDeclarationStatement(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final TypeDeclarationStatement defaultInstance;
      public static TypeDeclarationStatement getDefaultInstance() {
        return defaultInstance;
      }

      public TypeDeclarationStatement getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private TypeDeclarationStatement(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Statement.StatementKind value = boa.types.Ast.Statement.StatementKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                boa.types.Ast.Declaration.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = newType_.toBuilder();
                }
                newType_ = input.readMessage(boa.types.Ast.Declaration.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(newType_);
                  newType_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Statement_TypeDeclarationStatement_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Statement_TypeDeclarationStatement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Statement.TypeDeclarationStatement.class, boa.types.Ast.Statement.TypeDeclarationStatement.Builder.class);
      }

      public static com.google.protobuf.Parser<TypeDeclarationStatement> PARSER =
          new com.google.protobuf.AbstractParser<TypeDeclarationStatement>() {
        public TypeDeclarationStatement parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new TypeDeclarationStatement(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<TypeDeclarationStatement> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = TYPEDECL];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Statement.StatementKind shadowKind_;
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = TYPEDECL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = TYPEDECL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement.StatementKind getShadowKind() {
        return shadowKind_;
      }

      // required .boa.types.Declaration new_type = 2;
      public static final int NEW_TYPE_FIELD_NUMBER = 2;
      private boa.types.Ast.Declaration newType_;
      /**
       * <code>required .boa.types.Declaration new_type = 2;</code>
       */
      public boolean hasNewType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .boa.types.Declaration new_type = 2;</code>
       */
      public boa.types.Ast.Declaration getNewType() {
        return newType_;
      }
      /**
       * <code>required .boa.types.Declaration new_type = 2;</code>
       */
      public boa.types.Ast.DeclarationOrBuilder getNewTypeOrBuilder() {
        return newType_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Statement.StatementKind.TYPEDECL;
        newType_ = boa.types.Ast.Declaration.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasNewType()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getNewType().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, newType_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, newType_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Statement.TypeDeclarationStatement parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.TypeDeclarationStatement parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.TypeDeclarationStatement parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.TypeDeclarationStatement parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.TypeDeclarationStatement parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.TypeDeclarationStatement parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.TypeDeclarationStatement parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Statement.TypeDeclarationStatement parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.TypeDeclarationStatement parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.TypeDeclarationStatement parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Statement.TypeDeclarationStatement prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Statement.TypeDeclarationStatement}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Statement.TypeDeclarationStatementOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Statement_TypeDeclarationStatement_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Statement_TypeDeclarationStatement_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Statement.TypeDeclarationStatement.class, boa.types.Ast.Statement.TypeDeclarationStatement.Builder.class);
        }

        // Construct using boa.types.Ast.Statement.TypeDeclarationStatement.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getNewTypeFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Statement.StatementKind.TYPEDECL;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (newTypeBuilder_ == null) {
            newType_ = boa.types.Ast.Declaration.getDefaultInstance();
          } else {
            newTypeBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Statement_TypeDeclarationStatement_descriptor;
        }

        public boa.types.Ast.Statement.TypeDeclarationStatement getDefaultInstanceForType() {
          return boa.types.Ast.Statement.TypeDeclarationStatement.getDefaultInstance();
        }

        public boa.types.Ast.Statement.TypeDeclarationStatement build() {
          boa.types.Ast.Statement.TypeDeclarationStatement result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Statement.TypeDeclarationStatement buildPartial() {
          boa.types.Ast.Statement.TypeDeclarationStatement result = new boa.types.Ast.Statement.TypeDeclarationStatement(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (newTypeBuilder_ == null) {
            result.newType_ = newType_;
          } else {
            result.newType_ = newTypeBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Statement.TypeDeclarationStatement) {
            return mergeFrom((boa.types.Ast.Statement.TypeDeclarationStatement)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Statement.TypeDeclarationStatement other) {
          if (other == boa.types.Ast.Statement.TypeDeclarationStatement.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasNewType()) {
            mergeNewType(other.getNewType());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasNewType()) {
            
            return false;
          }
          if (!getNewType().isInitialized()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Statement.TypeDeclarationStatement parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Statement.TypeDeclarationStatement) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = TYPEDECL];
        private boa.types.Ast.Statement.StatementKind shadowKind_ = boa.types.Ast.Statement.StatementKind.TYPEDECL;
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = TYPEDECL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = TYPEDECL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Statement.StatementKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = TYPEDECL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Statement.StatementKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = TYPEDECL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Statement.StatementKind.TYPEDECL;
          onChanged();
          return this;
        }

        // required .boa.types.Declaration new_type = 2;
        private boa.types.Ast.Declaration newType_ = boa.types.Ast.Declaration.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Declaration, boa.types.Ast.Declaration.Builder, boa.types.Ast.DeclarationOrBuilder> newTypeBuilder_;
        /**
         * <code>required .boa.types.Declaration new_type = 2;</code>
         */
        public boolean hasNewType() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required .boa.types.Declaration new_type = 2;</code>
         */
        public boa.types.Ast.Declaration getNewType() {
          if (newTypeBuilder_ == null) {
            return newType_;
          } else {
            return newTypeBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Declaration new_type = 2;</code>
         */
        public Builder setNewType(boa.types.Ast.Declaration value) {
          if (newTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            newType_ = value;
            onChanged();
          } else {
            newTypeBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Declaration new_type = 2;</code>
         */
        public Builder setNewType(
            boa.types.Ast.Declaration.Builder builderForValue) {
          if (newTypeBuilder_ == null) {
            newType_ = builderForValue.build();
            onChanged();
          } else {
            newTypeBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Declaration new_type = 2;</code>
         */
        public Builder mergeNewType(boa.types.Ast.Declaration value) {
          if (newTypeBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                newType_ != boa.types.Ast.Declaration.getDefaultInstance()) {
              newType_ =
                boa.types.Ast.Declaration.newBuilder(newType_).mergeFrom(value).buildPartial();
            } else {
              newType_ = value;
            }
            onChanged();
          } else {
            newTypeBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Declaration new_type = 2;</code>
         */
        public Builder clearNewType() {
          if (newTypeBuilder_ == null) {
            newType_ = boa.types.Ast.Declaration.getDefaultInstance();
            onChanged();
          } else {
            newTypeBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>required .boa.types.Declaration new_type = 2;</code>
         */
        public boa.types.Ast.Declaration.Builder getNewTypeBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getNewTypeFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Declaration new_type = 2;</code>
         */
        public boa.types.Ast.DeclarationOrBuilder getNewTypeOrBuilder() {
          if (newTypeBuilder_ != null) {
            return newTypeBuilder_.getMessageOrBuilder();
          } else {
            return newType_;
          }
        }
        /**
         * <code>required .boa.types.Declaration new_type = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Declaration, boa.types.Ast.Declaration.Builder, boa.types.Ast.DeclarationOrBuilder> 
            getNewTypeFieldBuilder() {
          if (newTypeBuilder_ == null) {
            newTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Declaration, boa.types.Ast.Declaration.Builder, boa.types.Ast.DeclarationOrBuilder>(
                    newType_,
                    getParentForChildren(),
                    isClean());
            newType_ = null;
          }
          return newTypeBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Statement.TypeDeclarationStatement)
      }

      static {
        defaultInstance = new TypeDeclarationStatement(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Statement.TypeDeclarationStatement)
    }

    public interface WhileStatementOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = WHILE];
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = WHILE];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = WHILE];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Statement.StatementKind getShadowKind();

      // required .boa.types.Expression condition = 2;
      /**
       * <code>required .boa.types.Expression condition = 2;</code>
       */
      boolean hasCondition();
      /**
       * <code>required .boa.types.Expression condition = 2;</code>
       */
      boa.types.Ast.Expression getCondition();
      /**
       * <code>required .boa.types.Expression condition = 2;</code>
       */
      boa.types.Ast.ExpressionOrBuilder getConditionOrBuilder();

      // required .boa.types.Statement body = 3;
      /**
       * <code>required .boa.types.Statement body = 3;</code>
       */
      boolean hasBody();
      /**
       * <code>required .boa.types.Statement body = 3;</code>
       */
      boa.types.Ast.Statement getBody();
      /**
       * <code>required .boa.types.Statement body = 3;</code>
       */
      boa.types.Ast.StatementOrBuilder getBodyOrBuilder();
    }
    /**
     * Protobuf type {@code boa.types.Statement.WhileStatement}
     */
    public static final class WhileStatement extends
        com.google.protobuf.GeneratedMessage
        implements WhileStatementOrBuilder {
      // Use WhileStatement.newBuilder() to construct.
      private WhileStatement(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private WhileStatement(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final WhileStatement defaultInstance;
      public static WhileStatement getDefaultInstance() {
        return defaultInstance;
      }

      public WhileStatement getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private WhileStatement(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Statement.StatementKind value = boa.types.Ast.Statement.StatementKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = condition_.toBuilder();
                }
                condition_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(condition_);
                  condition_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 26: {
                boa.types.Ast.Statement.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = body_.toBuilder();
                }
                body_ = input.readMessage(boa.types.Ast.Statement.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(body_);
                  body_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Statement_WhileStatement_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Statement_WhileStatement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Statement.WhileStatement.class, boa.types.Ast.Statement.WhileStatement.Builder.class);
      }

      public static com.google.protobuf.Parser<WhileStatement> PARSER =
          new com.google.protobuf.AbstractParser<WhileStatement>() {
        public WhileStatement parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new WhileStatement(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<WhileStatement> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = WHILE];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Statement.StatementKind shadowKind_;
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = WHILE];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = WHILE];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement.StatementKind getShadowKind() {
        return shadowKind_;
      }

      // required .boa.types.Expression condition = 2;
      public static final int CONDITION_FIELD_NUMBER = 2;
      private boa.types.Ast.Expression condition_;
      /**
       * <code>required .boa.types.Expression condition = 2;</code>
       */
      public boolean hasCondition() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .boa.types.Expression condition = 2;</code>
       */
      public boa.types.Ast.Expression getCondition() {
        return condition_;
      }
      /**
       * <code>required .boa.types.Expression condition = 2;</code>
       */
      public boa.types.Ast.ExpressionOrBuilder getConditionOrBuilder() {
        return condition_;
      }

      // required .boa.types.Statement body = 3;
      public static final int BODY_FIELD_NUMBER = 3;
      private boa.types.Ast.Statement body_;
      /**
       * <code>required .boa.types.Statement body = 3;</code>
       */
      public boolean hasBody() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .boa.types.Statement body = 3;</code>
       */
      public boa.types.Ast.Statement getBody() {
        return body_;
      }
      /**
       * <code>required .boa.types.Statement body = 3;</code>
       */
      public boa.types.Ast.StatementOrBuilder getBodyOrBuilder() {
        return body_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Statement.StatementKind.WHILE;
        condition_ = boa.types.Ast.Expression.getDefaultInstance();
        body_ = boa.types.Ast.Statement.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasCondition()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasBody()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getCondition().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getBody().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, condition_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(3, body_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, condition_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, body_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Statement.WhileStatement parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.WhileStatement parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.WhileStatement parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Statement.WhileStatement parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Statement.WhileStatement parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.WhileStatement parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.WhileStatement parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Statement.WhileStatement parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Statement.WhileStatement parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Statement.WhileStatement parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Statement.WhileStatement prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Statement.WhileStatement}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Statement.WhileStatementOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Statement_WhileStatement_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Statement_WhileStatement_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Statement.WhileStatement.class, boa.types.Ast.Statement.WhileStatement.Builder.class);
        }

        // Construct using boa.types.Ast.Statement.WhileStatement.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getConditionFieldBuilder();
            getBodyFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Statement.StatementKind.WHILE;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (conditionBuilder_ == null) {
            condition_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            conditionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          if (bodyBuilder_ == null) {
            body_ = boa.types.Ast.Statement.getDefaultInstance();
          } else {
            bodyBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Statement_WhileStatement_descriptor;
        }

        public boa.types.Ast.Statement.WhileStatement getDefaultInstanceForType() {
          return boa.types.Ast.Statement.WhileStatement.getDefaultInstance();
        }

        public boa.types.Ast.Statement.WhileStatement build() {
          boa.types.Ast.Statement.WhileStatement result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Statement.WhileStatement buildPartial() {
          boa.types.Ast.Statement.WhileStatement result = new boa.types.Ast.Statement.WhileStatement(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (conditionBuilder_ == null) {
            result.condition_ = condition_;
          } else {
            result.condition_ = conditionBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          if (bodyBuilder_ == null) {
            result.body_ = body_;
          } else {
            result.body_ = bodyBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Statement.WhileStatement) {
            return mergeFrom((boa.types.Ast.Statement.WhileStatement)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Statement.WhileStatement other) {
          if (other == boa.types.Ast.Statement.WhileStatement.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasCondition()) {
            mergeCondition(other.getCondition());
          }
          if (other.hasBody()) {
            mergeBody(other.getBody());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasCondition()) {
            
            return false;
          }
          if (!hasBody()) {
            
            return false;
          }
          if (!getCondition().isInitialized()) {
            
            return false;
          }
          if (!getBody().isInitialized()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Statement.WhileStatement parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Statement.WhileStatement) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = WHILE];
        private boa.types.Ast.Statement.StatementKind shadowKind_ = boa.types.Ast.Statement.StatementKind.WHILE;
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = WHILE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = WHILE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Statement.StatementKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = WHILE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Statement.StatementKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Statement.StatementKind shadow_kind = 1 [default = WHILE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Statement.StatementKind.WHILE;
          onChanged();
          return this;
        }

        // required .boa.types.Expression condition = 2;
        private boa.types.Ast.Expression condition_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> conditionBuilder_;
        /**
         * <code>required .boa.types.Expression condition = 2;</code>
         */
        public boolean hasCondition() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required .boa.types.Expression condition = 2;</code>
         */
        public boa.types.Ast.Expression getCondition() {
          if (conditionBuilder_ == null) {
            return condition_;
          } else {
            return conditionBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Expression condition = 2;</code>
         */
        public Builder setCondition(boa.types.Ast.Expression value) {
          if (conditionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            condition_ = value;
            onChanged();
          } else {
            conditionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression condition = 2;</code>
         */
        public Builder setCondition(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (conditionBuilder_ == null) {
            condition_ = builderForValue.build();
            onChanged();
          } else {
            conditionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression condition = 2;</code>
         */
        public Builder mergeCondition(boa.types.Ast.Expression value) {
          if (conditionBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                condition_ != boa.types.Ast.Expression.getDefaultInstance()) {
              condition_ =
                boa.types.Ast.Expression.newBuilder(condition_).mergeFrom(value).buildPartial();
            } else {
              condition_ = value;
            }
            onChanged();
          } else {
            conditionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression condition = 2;</code>
         */
        public Builder clearCondition() {
          if (conditionBuilder_ == null) {
            condition_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            conditionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>required .boa.types.Expression condition = 2;</code>
         */
        public boa.types.Ast.Expression.Builder getConditionBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getConditionFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Expression condition = 2;</code>
         */
        public boa.types.Ast.ExpressionOrBuilder getConditionOrBuilder() {
          if (conditionBuilder_ != null) {
            return conditionBuilder_.getMessageOrBuilder();
          } else {
            return condition_;
          }
        }
        /**
         * <code>required .boa.types.Expression condition = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getConditionFieldBuilder() {
          if (conditionBuilder_ == null) {
            conditionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    condition_,
                    getParentForChildren(),
                    isClean());
            condition_ = null;
          }
          return conditionBuilder_;
        }

        // required .boa.types.Statement body = 3;
        private boa.types.Ast.Statement body_ = boa.types.Ast.Statement.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> bodyBuilder_;
        /**
         * <code>required .boa.types.Statement body = 3;</code>
         */
        public boolean hasBody() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required .boa.types.Statement body = 3;</code>
         */
        public boa.types.Ast.Statement getBody() {
          if (bodyBuilder_ == null) {
            return body_;
          } else {
            return bodyBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Statement body = 3;</code>
         */
        public Builder setBody(boa.types.Ast.Statement value) {
          if (bodyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            body_ = value;
            onChanged();
          } else {
            bodyBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Statement body = 3;</code>
         */
        public Builder setBody(
            boa.types.Ast.Statement.Builder builderForValue) {
          if (bodyBuilder_ == null) {
            body_ = builderForValue.build();
            onChanged();
          } else {
            bodyBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Statement body = 3;</code>
         */
        public Builder mergeBody(boa.types.Ast.Statement value) {
          if (bodyBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                body_ != boa.types.Ast.Statement.getDefaultInstance()) {
              body_ =
                boa.types.Ast.Statement.newBuilder(body_).mergeFrom(value).buildPartial();
            } else {
              body_ = value;
            }
            onChanged();
          } else {
            bodyBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Statement body = 3;</code>
         */
        public Builder clearBody() {
          if (bodyBuilder_ == null) {
            body_ = boa.types.Ast.Statement.getDefaultInstance();
            onChanged();
          } else {
            bodyBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <code>required .boa.types.Statement body = 3;</code>
         */
        public boa.types.Ast.Statement.Builder getBodyBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getBodyFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Statement body = 3;</code>
         */
        public boa.types.Ast.StatementOrBuilder getBodyOrBuilder() {
          if (bodyBuilder_ != null) {
            return bodyBuilder_.getMessageOrBuilder();
          } else {
            return body_;
          }
        }
        /**
         * <code>required .boa.types.Statement body = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> 
            getBodyFieldBuilder() {
          if (bodyBuilder_ == null) {
            bodyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder>(
                    body_,
                    getParentForChildren(),
                    isClean());
            body_ = null;
          }
          return bodyBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Statement.WhileStatement)
      }

      static {
        defaultInstance = new WhileStatement(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Statement.WhileStatement)
    }

    private int bitField0_;
    // required .boa.types.Statement.StatementKind kind = 1;
    public static final int KIND_FIELD_NUMBER = 1;
    private boa.types.Ast.Statement.StatementKind kind_;
    /**
     * <code>required .boa.types.Statement.StatementKind kind = 1;</code>
     *
     * <pre>
     ** The kind of statement 
     * </pre>
     */
    public boolean hasKind() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .boa.types.Statement.StatementKind kind = 1;</code>
     *
     * <pre>
     ** The kind of statement 
     * </pre>
     */
    public boa.types.Ast.Statement.StatementKind getKind() {
      return kind_;
    }

    // optional .boa.types.Statement statement_1 = 2;
    public static final int STATEMENT_1_FIELD_NUMBER = 2;
    private boa.types.Ast.Statement statement1_;
    /**
     * <code>optional .boa.types.Statement statement_1 = 2;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boolean hasStatement1() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .boa.types.Statement statement_1 = 2;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.Statement getStatement1() {
      return statement1_;
    }
    /**
     * <code>optional .boa.types.Statement statement_1 = 2;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.StatementOrBuilder getStatement1OrBuilder() {
      return statement1_;
    }

    // optional .boa.types.Statement statement_2 = 3;
    public static final int STATEMENT_2_FIELD_NUMBER = 3;
    private boa.types.Ast.Statement statement2_;
    /**
     * <code>optional .boa.types.Statement statement_2 = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boolean hasStatement2() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .boa.types.Statement statement_2 = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.Statement getStatement2() {
      return statement2_;
    }
    /**
     * <code>optional .boa.types.Statement statement_2 = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.StatementOrBuilder getStatement2OrBuilder() {
      return statement2_;
    }

    // repeated .boa.types.Statement statements_1 = 4;
    public static final int STATEMENTS_1_FIELD_NUMBER = 4;
    private java.util.List<boa.types.Ast.Statement> statements1_;
    /**
     * <code>repeated .boa.types.Statement statements_1 = 4;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public java.util.List<boa.types.Ast.Statement> getStatements1List() {
      return statements1_;
    }
    /**
     * <code>repeated .boa.types.Statement statements_1 = 4;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public java.util.List<? extends boa.types.Ast.StatementOrBuilder> 
        getStatements1OrBuilderList() {
      return statements1_;
    }
    /**
     * <code>repeated .boa.types.Statement statements_1 = 4;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public int getStatements1Count() {
      return statements1_.size();
    }
    /**
     * <code>repeated .boa.types.Statement statements_1 = 4;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.Statement getStatements1(int index) {
      return statements1_.get(index);
    }
    /**
     * <code>repeated .boa.types.Statement statements_1 = 4;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.StatementOrBuilder getStatements1OrBuilder(
        int index) {
      return statements1_.get(index);
    }

    // repeated .boa.types.Statement statements_2 = 5;
    public static final int STATEMENTS_2_FIELD_NUMBER = 5;
    private java.util.List<boa.types.Ast.Statement> statements2_;
    /**
     * <code>repeated .boa.types.Statement statements_2 = 5;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public java.util.List<boa.types.Ast.Statement> getStatements2List() {
      return statements2_;
    }
    /**
     * <code>repeated .boa.types.Statement statements_2 = 5;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public java.util.List<? extends boa.types.Ast.StatementOrBuilder> 
        getStatements2OrBuilderList() {
      return statements2_;
    }
    /**
     * <code>repeated .boa.types.Statement statements_2 = 5;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public int getStatements2Count() {
      return statements2_.size();
    }
    /**
     * <code>repeated .boa.types.Statement statements_2 = 5;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.Statement getStatements2(int index) {
      return statements2_.get(index);
    }
    /**
     * <code>repeated .boa.types.Statement statements_2 = 5;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.StatementOrBuilder getStatements2OrBuilder(
        int index) {
      return statements2_.get(index);
    }

    // optional .boa.types.Expression expression_1 = 6;
    public static final int EXPRESSION_1_FIELD_NUMBER = 6;
    private boa.types.Ast.Expression expression1_;
    /**
     * <code>optional .boa.types.Expression expression_1 = 6;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boolean hasExpression1() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .boa.types.Expression expression_1 = 6;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.Expression getExpression1() {
      return expression1_;
    }
    /**
     * <code>optional .boa.types.Expression expression_1 = 6;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.ExpressionOrBuilder getExpression1OrBuilder() {
      return expression1_;
    }

    // optional .boa.types.Expression expression_2 = 7;
    public static final int EXPRESSION_2_FIELD_NUMBER = 7;
    private boa.types.Ast.Expression expression2_;
    /**
     * <code>optional .boa.types.Expression expression_2 = 7;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boolean hasExpression2() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .boa.types.Expression expression_2 = 7;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.Expression getExpression2() {
      return expression2_;
    }
    /**
     * <code>optional .boa.types.Expression expression_2 = 7;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.ExpressionOrBuilder getExpression2OrBuilder() {
      return expression2_;
    }

    // repeated .boa.types.Expression expressions_1 = 8;
    public static final int EXPRESSIONS_1_FIELD_NUMBER = 8;
    private java.util.List<boa.types.Ast.Expression> expressions1_;
    /**
     * <code>repeated .boa.types.Expression expressions_1 = 8;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public java.util.List<boa.types.Ast.Expression> getExpressions1List() {
      return expressions1_;
    }
    /**
     * <code>repeated .boa.types.Expression expressions_1 = 8;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
        getExpressions1OrBuilderList() {
      return expressions1_;
    }
    /**
     * <code>repeated .boa.types.Expression expressions_1 = 8;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public int getExpressions1Count() {
      return expressions1_.size();
    }
    /**
     * <code>repeated .boa.types.Expression expressions_1 = 8;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.Expression getExpressions1(int index) {
      return expressions1_.get(index);
    }
    /**
     * <code>repeated .boa.types.Expression expressions_1 = 8;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.ExpressionOrBuilder getExpressions1OrBuilder(
        int index) {
      return expressions1_.get(index);
    }

    // repeated .boa.types.Expression expressions_2 = 9;
    public static final int EXPRESSIONS_2_FIELD_NUMBER = 9;
    private java.util.List<boa.types.Ast.Expression> expressions2_;
    /**
     * <code>repeated .boa.types.Expression expressions_2 = 9;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public java.util.List<boa.types.Ast.Expression> getExpressions2List() {
      return expressions2_;
    }
    /**
     * <code>repeated .boa.types.Expression expressions_2 = 9;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
        getExpressions2OrBuilderList() {
      return expressions2_;
    }
    /**
     * <code>repeated .boa.types.Expression expressions_2 = 9;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public int getExpressions2Count() {
      return expressions2_.size();
    }
    /**
     * <code>repeated .boa.types.Expression expressions_2 = 9;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.Expression getExpressions2(int index) {
      return expressions2_.get(index);
    }
    /**
     * <code>repeated .boa.types.Expression expressions_2 = 9;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.ExpressionOrBuilder getExpressions2OrBuilder(
        int index) {
      return expressions2_.get(index);
    }

    // optional .boa.types.Variable variable_1 = 10;
    public static final int VARIABLE_1_FIELD_NUMBER = 10;
    private boa.types.Ast.Variable variable1_;
    /**
     * <code>optional .boa.types.Variable variable_1 = 10;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boolean hasVariable1() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .boa.types.Variable variable_1 = 10;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.Variable getVariable1() {
      return variable1_;
    }
    /**
     * <code>optional .boa.types.Variable variable_1 = 10;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.VariableOrBuilder getVariable1OrBuilder() {
      return variable1_;
    }

    // optional .boa.types.Declaration declaration_1 = 11;
    public static final int DECLARATION_1_FIELD_NUMBER = 11;
    private boa.types.Ast.Declaration declaration1_;
    /**
     * <code>optional .boa.types.Declaration declaration_1 = 11;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boolean hasDeclaration1() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .boa.types.Declaration declaration_1 = 11;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.Declaration getDeclaration1() {
      return declaration1_;
    }
    /**
     * <code>optional .boa.types.Declaration declaration_1 = 11;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.DeclarationOrBuilder getDeclaration1OrBuilder() {
      return declaration1_;
    }

    // optional bool bool_1 = 12 [default = false];
    public static final int BOOL_1_FIELD_NUMBER = 12;
    private boolean bool1_;
    /**
     * <code>optional bool bool_1 = 12 [default = false];</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boolean hasBool1() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool bool_1 = 12 [default = false];</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boolean getBool1() {
      return bool1_;
    }

    // optional .boa.types.ChangeKind structural_change_kind = 13;
    public static final int STRUCTURAL_CHANGE_KIND_FIELD_NUMBER = 13;
    private boa.types.Shared.ChangeKind structuralChangeKind_;
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 13;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    public boolean hasStructuralChangeKind() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 13;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    public boa.types.Shared.ChangeKind getStructuralChangeKind() {
      return structuralChangeKind_;
    }

    // optional .boa.types.ChangeKind label_change_kind = 14;
    public static final int LABEL_CHANGE_KIND_FIELD_NUMBER = 14;
    private boa.types.Shared.ChangeKind labelChangeKind_;
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 14;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    public boolean hasLabelChangeKind() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 14;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    public boa.types.Shared.ChangeKind getLabelChangeKind() {
      return labelChangeKind_;
    }

    private void initFields() {
      kind_ = boa.types.Ast.Statement.StatementKind.OTHER;
      statement1_ = boa.types.Ast.Statement.getDefaultInstance();
      statement2_ = boa.types.Ast.Statement.getDefaultInstance();
      statements1_ = java.util.Collections.emptyList();
      statements2_ = java.util.Collections.emptyList();
      expression1_ = boa.types.Ast.Expression.getDefaultInstance();
      expression2_ = boa.types.Ast.Expression.getDefaultInstance();
      expressions1_ = java.util.Collections.emptyList();
      expressions2_ = java.util.Collections.emptyList();
      variable1_ = boa.types.Ast.Variable.getDefaultInstance();
      declaration1_ = boa.types.Ast.Declaration.getDefaultInstance();
      bool1_ = false;
      structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
      labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKind()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasStatement1()) {
        if (!getStatement1().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasStatement2()) {
        if (!getStatement2().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getStatements1Count(); i++) {
        if (!getStatements1(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getStatements2Count(); i++) {
        if (!getStatements2(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasExpression1()) {
        if (!getExpression1().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasExpression2()) {
        if (!getExpression2().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getExpressions1Count(); i++) {
        if (!getExpressions1(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getExpressions2Count(); i++) {
        if (!getExpressions2(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasVariable1()) {
        if (!getVariable1().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasDeclaration1()) {
        if (!getDeclaration1().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, kind_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, statement1_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, statement2_);
      }
      for (int i = 0; i < statements1_.size(); i++) {
        output.writeMessage(4, statements1_.get(i));
      }
      for (int i = 0; i < statements2_.size(); i++) {
        output.writeMessage(5, statements2_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(6, expression1_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(7, expression2_);
      }
      for (int i = 0; i < expressions1_.size(); i++) {
        output.writeMessage(8, expressions1_.get(i));
      }
      for (int i = 0; i < expressions2_.size(); i++) {
        output.writeMessage(9, expressions2_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(10, variable1_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(11, declaration1_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(12, bool1_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeEnum(13, structuralChangeKind_.getNumber());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeEnum(14, labelChangeKind_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, kind_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, statement1_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, statement2_);
      }
      for (int i = 0; i < statements1_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, statements1_.get(i));
      }
      for (int i = 0; i < statements2_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, statements2_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, expression1_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, expression2_);
      }
      for (int i = 0; i < expressions1_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, expressions1_.get(i));
      }
      for (int i = 0; i < expressions2_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, expressions2_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, variable1_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, declaration1_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, bool1_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(13, structuralChangeKind_.getNumber());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(14, labelChangeKind_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static boa.types.Ast.Statement parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static boa.types.Ast.Statement parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static boa.types.Ast.Statement parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static boa.types.Ast.Statement parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static boa.types.Ast.Statement parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static boa.types.Ast.Statement parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static boa.types.Ast.Statement parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static boa.types.Ast.Statement parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static boa.types.Ast.Statement parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static boa.types.Ast.Statement parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(boa.types.Ast.Statement prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code boa.types.Statement}
     *
     * <pre>
     ** A single statement 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements boa.types.Ast.StatementOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Statement_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Statement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Statement.class, boa.types.Ast.Statement.Builder.class);
      }

      // Construct using boa.types.Ast.Statement.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getStatement1FieldBuilder();
          getStatement2FieldBuilder();
          getStatements1FieldBuilder();
          getStatements2FieldBuilder();
          getExpression1FieldBuilder();
          getExpression2FieldBuilder();
          getExpressions1FieldBuilder();
          getExpressions2FieldBuilder();
          getVariable1FieldBuilder();
          getDeclaration1FieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        kind_ = boa.types.Ast.Statement.StatementKind.OTHER;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (statement1Builder_ == null) {
          statement1_ = boa.types.Ast.Statement.getDefaultInstance();
        } else {
          statement1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (statement2Builder_ == null) {
          statement2_ = boa.types.Ast.Statement.getDefaultInstance();
        } else {
          statement2Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (statements1Builder_ == null) {
          statements1_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          statements1Builder_.clear();
        }
        if (statements2Builder_ == null) {
          statements2_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          statements2Builder_.clear();
        }
        if (expression1Builder_ == null) {
          expression1_ = boa.types.Ast.Expression.getDefaultInstance();
        } else {
          expression1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (expression2Builder_ == null) {
          expression2_ = boa.types.Ast.Expression.getDefaultInstance();
        } else {
          expression2Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (expressions1Builder_ == null) {
          expressions1_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          expressions1Builder_.clear();
        }
        if (expressions2Builder_ == null) {
          expressions2_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          expressions2Builder_.clear();
        }
        if (variable1Builder_ == null) {
          variable1_ = boa.types.Ast.Variable.getDefaultInstance();
        } else {
          variable1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        if (declaration1Builder_ == null) {
          declaration1_ = boa.types.Ast.Declaration.getDefaultInstance();
        } else {
          declaration1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        bool1_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        bitField0_ = (bitField0_ & ~0x00001000);
        labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return boa.types.Ast.internal_static_boa_types_Statement_descriptor;
      }

      public boa.types.Ast.Statement getDefaultInstanceForType() {
        return boa.types.Ast.Statement.getDefaultInstance();
      }

      public boa.types.Ast.Statement build() {
        boa.types.Ast.Statement result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public boa.types.Ast.Statement buildPartial() {
        boa.types.Ast.Statement result = new boa.types.Ast.Statement(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.kind_ = kind_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (statement1Builder_ == null) {
          result.statement1_ = statement1_;
        } else {
          result.statement1_ = statement1Builder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (statement2Builder_ == null) {
          result.statement2_ = statement2_;
        } else {
          result.statement2_ = statement2Builder_.build();
        }
        if (statements1Builder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            statements1_ = java.util.Collections.unmodifiableList(statements1_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.statements1_ = statements1_;
        } else {
          result.statements1_ = statements1Builder_.build();
        }
        if (statements2Builder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            statements2_ = java.util.Collections.unmodifiableList(statements2_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.statements2_ = statements2_;
        } else {
          result.statements2_ = statements2Builder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        if (expression1Builder_ == null) {
          result.expression1_ = expression1_;
        } else {
          result.expression1_ = expression1Builder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        if (expression2Builder_ == null) {
          result.expression2_ = expression2_;
        } else {
          result.expression2_ = expression2Builder_.build();
        }
        if (expressions1Builder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            expressions1_ = java.util.Collections.unmodifiableList(expressions1_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.expressions1_ = expressions1_;
        } else {
          result.expressions1_ = expressions1Builder_.build();
        }
        if (expressions2Builder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            expressions2_ = java.util.Collections.unmodifiableList(expressions2_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.expressions2_ = expressions2_;
        } else {
          result.expressions2_ = expressions2Builder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000020;
        }
        if (variable1Builder_ == null) {
          result.variable1_ = variable1_;
        } else {
          result.variable1_ = variable1Builder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000040;
        }
        if (declaration1Builder_ == null) {
          result.declaration1_ = declaration1_;
        } else {
          result.declaration1_ = declaration1Builder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000080;
        }
        result.bool1_ = bool1_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000100;
        }
        result.structuralChangeKind_ = structuralChangeKind_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000200;
        }
        result.labelChangeKind_ = labelChangeKind_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof boa.types.Ast.Statement) {
          return mergeFrom((boa.types.Ast.Statement)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(boa.types.Ast.Statement other) {
        if (other == boa.types.Ast.Statement.getDefaultInstance()) return this;
        if (other.hasKind()) {
          setKind(other.getKind());
        }
        if (other.hasStatement1()) {
          mergeStatement1(other.getStatement1());
        }
        if (other.hasStatement2()) {
          mergeStatement2(other.getStatement2());
        }
        if (statements1Builder_ == null) {
          if (!other.statements1_.isEmpty()) {
            if (statements1_.isEmpty()) {
              statements1_ = other.statements1_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureStatements1IsMutable();
              statements1_.addAll(other.statements1_);
            }
            onChanged();
          }
        } else {
          if (!other.statements1_.isEmpty()) {
            if (statements1Builder_.isEmpty()) {
              statements1Builder_.dispose();
              statements1Builder_ = null;
              statements1_ = other.statements1_;
              bitField0_ = (bitField0_ & ~0x00000008);
              statements1Builder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getStatements1FieldBuilder() : null;
            } else {
              statements1Builder_.addAllMessages(other.statements1_);
            }
          }
        }
        if (statements2Builder_ == null) {
          if (!other.statements2_.isEmpty()) {
            if (statements2_.isEmpty()) {
              statements2_ = other.statements2_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureStatements2IsMutable();
              statements2_.addAll(other.statements2_);
            }
            onChanged();
          }
        } else {
          if (!other.statements2_.isEmpty()) {
            if (statements2Builder_.isEmpty()) {
              statements2Builder_.dispose();
              statements2Builder_ = null;
              statements2_ = other.statements2_;
              bitField0_ = (bitField0_ & ~0x00000010);
              statements2Builder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getStatements2FieldBuilder() : null;
            } else {
              statements2Builder_.addAllMessages(other.statements2_);
            }
          }
        }
        if (other.hasExpression1()) {
          mergeExpression1(other.getExpression1());
        }
        if (other.hasExpression2()) {
          mergeExpression2(other.getExpression2());
        }
        if (expressions1Builder_ == null) {
          if (!other.expressions1_.isEmpty()) {
            if (expressions1_.isEmpty()) {
              expressions1_ = other.expressions1_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureExpressions1IsMutable();
              expressions1_.addAll(other.expressions1_);
            }
            onChanged();
          }
        } else {
          if (!other.expressions1_.isEmpty()) {
            if (expressions1Builder_.isEmpty()) {
              expressions1Builder_.dispose();
              expressions1Builder_ = null;
              expressions1_ = other.expressions1_;
              bitField0_ = (bitField0_ & ~0x00000080);
              expressions1Builder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getExpressions1FieldBuilder() : null;
            } else {
              expressions1Builder_.addAllMessages(other.expressions1_);
            }
          }
        }
        if (expressions2Builder_ == null) {
          if (!other.expressions2_.isEmpty()) {
            if (expressions2_.isEmpty()) {
              expressions2_ = other.expressions2_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureExpressions2IsMutable();
              expressions2_.addAll(other.expressions2_);
            }
            onChanged();
          }
        } else {
          if (!other.expressions2_.isEmpty()) {
            if (expressions2Builder_.isEmpty()) {
              expressions2Builder_.dispose();
              expressions2Builder_ = null;
              expressions2_ = other.expressions2_;
              bitField0_ = (bitField0_ & ~0x00000100);
              expressions2Builder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getExpressions2FieldBuilder() : null;
            } else {
              expressions2Builder_.addAllMessages(other.expressions2_);
            }
          }
        }
        if (other.hasVariable1()) {
          mergeVariable1(other.getVariable1());
        }
        if (other.hasDeclaration1()) {
          mergeDeclaration1(other.getDeclaration1());
        }
        if (other.hasBool1()) {
          setBool1(other.getBool1());
        }
        if (other.hasStructuralChangeKind()) {
          setStructuralChangeKind(other.getStructuralChangeKind());
        }
        if (other.hasLabelChangeKind()) {
          setLabelChangeKind(other.getLabelChangeKind());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKind()) {
          
          return false;
        }
        if (hasStatement1()) {
          if (!getStatement1().isInitialized()) {
            
            return false;
          }
        }
        if (hasStatement2()) {
          if (!getStatement2().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getStatements1Count(); i++) {
          if (!getStatements1(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getStatements2Count(); i++) {
          if (!getStatements2(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasExpression1()) {
          if (!getExpression1().isInitialized()) {
            
            return false;
          }
        }
        if (hasExpression2()) {
          if (!getExpression2().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getExpressions1Count(); i++) {
          if (!getExpressions1(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getExpressions2Count(); i++) {
          if (!getExpressions2(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasVariable1()) {
          if (!getVariable1().isInitialized()) {
            
            return false;
          }
        }
        if (hasDeclaration1()) {
          if (!getDeclaration1().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        boa.types.Ast.Statement parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (boa.types.Ast.Statement) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .boa.types.Statement.StatementKind kind = 1;
      private boa.types.Ast.Statement.StatementKind kind_ = boa.types.Ast.Statement.StatementKind.OTHER;
      /**
       * <code>required .boa.types.Statement.StatementKind kind = 1;</code>
       *
       * <pre>
       ** The kind of statement 
       * </pre>
       */
      public boolean hasKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .boa.types.Statement.StatementKind kind = 1;</code>
       *
       * <pre>
       ** The kind of statement 
       * </pre>
       */
      public boa.types.Ast.Statement.StatementKind getKind() {
        return kind_;
      }
      /**
       * <code>required .boa.types.Statement.StatementKind kind = 1;</code>
       *
       * <pre>
       ** The kind of statement 
       * </pre>
       */
      public Builder setKind(boa.types.Ast.Statement.StatementKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        kind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .boa.types.Statement.StatementKind kind = 1;</code>
       *
       * <pre>
       ** The kind of statement 
       * </pre>
       */
      public Builder clearKind() {
        bitField0_ = (bitField0_ & ~0x00000001);
        kind_ = boa.types.Ast.Statement.StatementKind.OTHER;
        onChanged();
        return this;
      }

      // optional .boa.types.Statement statement_1 = 2;
      private boa.types.Ast.Statement statement1_ = boa.types.Ast.Statement.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> statement1Builder_;
      /**
       * <code>optional .boa.types.Statement statement_1 = 2;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasStatement1() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .boa.types.Statement statement_1 = 2;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement getStatement1() {
        if (statement1Builder_ == null) {
          return statement1_;
        } else {
          return statement1Builder_.getMessage();
        }
      }
      /**
       * <code>optional .boa.types.Statement statement_1 = 2;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setStatement1(boa.types.Ast.Statement value) {
        if (statement1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          statement1_ = value;
          onChanged();
        } else {
          statement1Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .boa.types.Statement statement_1 = 2;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setStatement1(
          boa.types.Ast.Statement.Builder builderForValue) {
        if (statement1Builder_ == null) {
          statement1_ = builderForValue.build();
          onChanged();
        } else {
          statement1Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .boa.types.Statement statement_1 = 2;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder mergeStatement1(boa.types.Ast.Statement value) {
        if (statement1Builder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              statement1_ != boa.types.Ast.Statement.getDefaultInstance()) {
            statement1_ =
              boa.types.Ast.Statement.newBuilder(statement1_).mergeFrom(value).buildPartial();
          } else {
            statement1_ = value;
          }
          onChanged();
        } else {
          statement1Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .boa.types.Statement statement_1 = 2;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearStatement1() {
        if (statement1Builder_ == null) {
          statement1_ = boa.types.Ast.Statement.getDefaultInstance();
          onChanged();
        } else {
          statement1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .boa.types.Statement statement_1 = 2;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement.Builder getStatement1Builder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getStatement1FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .boa.types.Statement statement_1 = 2;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.StatementOrBuilder getStatement1OrBuilder() {
        if (statement1Builder_ != null) {
          return statement1Builder_.getMessageOrBuilder();
        } else {
          return statement1_;
        }
      }
      /**
       * <code>optional .boa.types.Statement statement_1 = 2;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> 
          getStatement1FieldBuilder() {
        if (statement1Builder_ == null) {
          statement1Builder_ = new com.google.protobuf.SingleFieldBuilder<
              boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder>(
                  statement1_,
                  getParentForChildren(),
                  isClean());
          statement1_ = null;
        }
        return statement1Builder_;
      }

      // optional .boa.types.Statement statement_2 = 3;
      private boa.types.Ast.Statement statement2_ = boa.types.Ast.Statement.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> statement2Builder_;
      /**
       * <code>optional .boa.types.Statement statement_2 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasStatement2() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .boa.types.Statement statement_2 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement getStatement2() {
        if (statement2Builder_ == null) {
          return statement2_;
        } else {
          return statement2Builder_.getMessage();
        }
      }
      /**
       * <code>optional .boa.types.Statement statement_2 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setStatement2(boa.types.Ast.Statement value) {
        if (statement2Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          statement2_ = value;
          onChanged();
        } else {
          statement2Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .boa.types.Statement statement_2 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setStatement2(
          boa.types.Ast.Statement.Builder builderForValue) {
        if (statement2Builder_ == null) {
          statement2_ = builderForValue.build();
          onChanged();
        } else {
          statement2Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .boa.types.Statement statement_2 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder mergeStatement2(boa.types.Ast.Statement value) {
        if (statement2Builder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              statement2_ != boa.types.Ast.Statement.getDefaultInstance()) {
            statement2_ =
              boa.types.Ast.Statement.newBuilder(statement2_).mergeFrom(value).buildPartial();
          } else {
            statement2_ = value;
          }
          onChanged();
        } else {
          statement2Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .boa.types.Statement statement_2 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearStatement2() {
        if (statement2Builder_ == null) {
          statement2_ = boa.types.Ast.Statement.getDefaultInstance();
          onChanged();
        } else {
          statement2Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .boa.types.Statement statement_2 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement.Builder getStatement2Builder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getStatement2FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .boa.types.Statement statement_2 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.StatementOrBuilder getStatement2OrBuilder() {
        if (statement2Builder_ != null) {
          return statement2Builder_.getMessageOrBuilder();
        } else {
          return statement2_;
        }
      }
      /**
       * <code>optional .boa.types.Statement statement_2 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> 
          getStatement2FieldBuilder() {
        if (statement2Builder_ == null) {
          statement2Builder_ = new com.google.protobuf.SingleFieldBuilder<
              boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder>(
                  statement2_,
                  getParentForChildren(),
                  isClean());
          statement2_ = null;
        }
        return statement2Builder_;
      }

      // repeated .boa.types.Statement statements_1 = 4;
      private java.util.List<boa.types.Ast.Statement> statements1_ =
        java.util.Collections.emptyList();
      private void ensureStatements1IsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          statements1_ = new java.util.ArrayList<boa.types.Ast.Statement>(statements1_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> statements1Builder_;

      /**
       * <code>repeated .boa.types.Statement statements_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Statement> getStatements1List() {
        if (statements1Builder_ == null) {
          return java.util.Collections.unmodifiableList(statements1_);
        } else {
          return statements1Builder_.getMessageList();
        }
      }
      /**
       * <code>repeated .boa.types.Statement statements_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public int getStatements1Count() {
        if (statements1Builder_ == null) {
          return statements1_.size();
        } else {
          return statements1Builder_.getCount();
        }
      }
      /**
       * <code>repeated .boa.types.Statement statements_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement getStatements1(int index) {
        if (statements1Builder_ == null) {
          return statements1_.get(index);
        } else {
          return statements1Builder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .boa.types.Statement statements_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setStatements1(
          int index, boa.types.Ast.Statement value) {
        if (statements1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatements1IsMutable();
          statements1_.set(index, value);
          onChanged();
        } else {
          statements1Builder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setStatements1(
          int index, boa.types.Ast.Statement.Builder builderForValue) {
        if (statements1Builder_ == null) {
          ensureStatements1IsMutable();
          statements1_.set(index, builderForValue.build());
          onChanged();
        } else {
          statements1Builder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addStatements1(boa.types.Ast.Statement value) {
        if (statements1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatements1IsMutable();
          statements1_.add(value);
          onChanged();
        } else {
          statements1Builder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addStatements1(
          int index, boa.types.Ast.Statement value) {
        if (statements1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatements1IsMutable();
          statements1_.add(index, value);
          onChanged();
        } else {
          statements1Builder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addStatements1(
          boa.types.Ast.Statement.Builder builderForValue) {
        if (statements1Builder_ == null) {
          ensureStatements1IsMutable();
          statements1_.add(builderForValue.build());
          onChanged();
        } else {
          statements1Builder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addStatements1(
          int index, boa.types.Ast.Statement.Builder builderForValue) {
        if (statements1Builder_ == null) {
          ensureStatements1IsMutable();
          statements1_.add(index, builderForValue.build());
          onChanged();
        } else {
          statements1Builder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addAllStatements1(
          java.lang.Iterable<? extends boa.types.Ast.Statement> values) {
        if (statements1Builder_ == null) {
          ensureStatements1IsMutable();
          super.addAll(values, statements1_);
          onChanged();
        } else {
          statements1Builder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearStatements1() {
        if (statements1Builder_ == null) {
          statements1_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          statements1Builder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder removeStatements1(int index) {
        if (statements1Builder_ == null) {
          ensureStatements1IsMutable();
          statements1_.remove(index);
          onChanged();
        } else {
          statements1Builder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement.Builder getStatements1Builder(
          int index) {
        return getStatements1FieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .boa.types.Statement statements_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.StatementOrBuilder getStatements1OrBuilder(
          int index) {
        if (statements1Builder_ == null) {
          return statements1_.get(index);  } else {
          return statements1Builder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .boa.types.Statement statements_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.StatementOrBuilder> 
           getStatements1OrBuilderList() {
        if (statements1Builder_ != null) {
          return statements1Builder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(statements1_);
        }
      }
      /**
       * <code>repeated .boa.types.Statement statements_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement.Builder addStatements1Builder() {
        return getStatements1FieldBuilder().addBuilder(
            boa.types.Ast.Statement.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Statement statements_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement.Builder addStatements1Builder(
          int index) {
        return getStatements1FieldBuilder().addBuilder(
            index, boa.types.Ast.Statement.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Statement statements_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Statement.Builder> 
           getStatements1BuilderList() {
        return getStatements1FieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> 
          getStatements1FieldBuilder() {
        if (statements1Builder_ == null) {
          statements1Builder_ = new com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder>(
                  statements1_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          statements1_ = null;
        }
        return statements1Builder_;
      }

      // repeated .boa.types.Statement statements_2 = 5;
      private java.util.List<boa.types.Ast.Statement> statements2_ =
        java.util.Collections.emptyList();
      private void ensureStatements2IsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          statements2_ = new java.util.ArrayList<boa.types.Ast.Statement>(statements2_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> statements2Builder_;

      /**
       * <code>repeated .boa.types.Statement statements_2 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Statement> getStatements2List() {
        if (statements2Builder_ == null) {
          return java.util.Collections.unmodifiableList(statements2_);
        } else {
          return statements2Builder_.getMessageList();
        }
      }
      /**
       * <code>repeated .boa.types.Statement statements_2 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public int getStatements2Count() {
        if (statements2Builder_ == null) {
          return statements2_.size();
        } else {
          return statements2Builder_.getCount();
        }
      }
      /**
       * <code>repeated .boa.types.Statement statements_2 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement getStatements2(int index) {
        if (statements2Builder_ == null) {
          return statements2_.get(index);
        } else {
          return statements2Builder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .boa.types.Statement statements_2 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setStatements2(
          int index, boa.types.Ast.Statement value) {
        if (statements2Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatements2IsMutable();
          statements2_.set(index, value);
          onChanged();
        } else {
          statements2Builder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements_2 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setStatements2(
          int index, boa.types.Ast.Statement.Builder builderForValue) {
        if (statements2Builder_ == null) {
          ensureStatements2IsMutable();
          statements2_.set(index, builderForValue.build());
          onChanged();
        } else {
          statements2Builder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements_2 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addStatements2(boa.types.Ast.Statement value) {
        if (statements2Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatements2IsMutable();
          statements2_.add(value);
          onChanged();
        } else {
          statements2Builder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements_2 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addStatements2(
          int index, boa.types.Ast.Statement value) {
        if (statements2Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatements2IsMutable();
          statements2_.add(index, value);
          onChanged();
        } else {
          statements2Builder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements_2 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addStatements2(
          boa.types.Ast.Statement.Builder builderForValue) {
        if (statements2Builder_ == null) {
          ensureStatements2IsMutable();
          statements2_.add(builderForValue.build());
          onChanged();
        } else {
          statements2Builder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements_2 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addStatements2(
          int index, boa.types.Ast.Statement.Builder builderForValue) {
        if (statements2Builder_ == null) {
          ensureStatements2IsMutable();
          statements2_.add(index, builderForValue.build());
          onChanged();
        } else {
          statements2Builder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements_2 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addAllStatements2(
          java.lang.Iterable<? extends boa.types.Ast.Statement> values) {
        if (statements2Builder_ == null) {
          ensureStatements2IsMutable();
          super.addAll(values, statements2_);
          onChanged();
        } else {
          statements2Builder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements_2 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearStatements2() {
        if (statements2Builder_ == null) {
          statements2_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          statements2Builder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements_2 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder removeStatements2(int index) {
        if (statements2Builder_ == null) {
          ensureStatements2IsMutable();
          statements2_.remove(index);
          onChanged();
        } else {
          statements2Builder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Statement statements_2 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement.Builder getStatements2Builder(
          int index) {
        return getStatements2FieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .boa.types.Statement statements_2 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.StatementOrBuilder getStatements2OrBuilder(
          int index) {
        if (statements2Builder_ == null) {
          return statements2_.get(index);  } else {
          return statements2Builder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .boa.types.Statement statements_2 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.StatementOrBuilder> 
           getStatements2OrBuilderList() {
        if (statements2Builder_ != null) {
          return statements2Builder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(statements2_);
        }
      }
      /**
       * <code>repeated .boa.types.Statement statements_2 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement.Builder addStatements2Builder() {
        return getStatements2FieldBuilder().addBuilder(
            boa.types.Ast.Statement.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Statement statements_2 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement.Builder addStatements2Builder(
          int index) {
        return getStatements2FieldBuilder().addBuilder(
            index, boa.types.Ast.Statement.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Statement statements_2 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Statement.Builder> 
           getStatements2BuilderList() {
        return getStatements2FieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> 
          getStatements2FieldBuilder() {
        if (statements2Builder_ == null) {
          statements2Builder_ = new com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder>(
                  statements2_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          statements2_ = null;
        }
        return statements2Builder_;
      }

      // optional .boa.types.Expression expression_1 = 6;
      private boa.types.Ast.Expression expression1_ = boa.types.Ast.Expression.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> expression1Builder_;
      /**
       * <code>optional .boa.types.Expression expression_1 = 6;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasExpression1() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .boa.types.Expression expression_1 = 6;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression getExpression1() {
        if (expression1Builder_ == null) {
          return expression1_;
        } else {
          return expression1Builder_.getMessage();
        }
      }
      /**
       * <code>optional .boa.types.Expression expression_1 = 6;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setExpression1(boa.types.Ast.Expression value) {
        if (expression1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          expression1_ = value;
          onChanged();
        } else {
          expression1Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .boa.types.Expression expression_1 = 6;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setExpression1(
          boa.types.Ast.Expression.Builder builderForValue) {
        if (expression1Builder_ == null) {
          expression1_ = builderForValue.build();
          onChanged();
        } else {
          expression1Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .boa.types.Expression expression_1 = 6;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder mergeExpression1(boa.types.Ast.Expression value) {
        if (expression1Builder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              expression1_ != boa.types.Ast.Expression.getDefaultInstance()) {
            expression1_ =
              boa.types.Ast.Expression.newBuilder(expression1_).mergeFrom(value).buildPartial();
          } else {
            expression1_ = value;
          }
          onChanged();
        } else {
          expression1Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .boa.types.Expression expression_1 = 6;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearExpression1() {
        if (expression1Builder_ == null) {
          expression1_ = boa.types.Ast.Expression.getDefaultInstance();
          onChanged();
        } else {
          expression1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .boa.types.Expression expression_1 = 6;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.Builder getExpression1Builder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getExpression1FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .boa.types.Expression expression_1 = 6;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getExpression1OrBuilder() {
        if (expression1Builder_ != null) {
          return expression1Builder_.getMessageOrBuilder();
        } else {
          return expression1_;
        }
      }
      /**
       * <code>optional .boa.types.Expression expression_1 = 6;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
          getExpression1FieldBuilder() {
        if (expression1Builder_ == null) {
          expression1Builder_ = new com.google.protobuf.SingleFieldBuilder<
              boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                  expression1_,
                  getParentForChildren(),
                  isClean());
          expression1_ = null;
        }
        return expression1Builder_;
      }

      // optional .boa.types.Expression expression_2 = 7;
      private boa.types.Ast.Expression expression2_ = boa.types.Ast.Expression.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> expression2Builder_;
      /**
       * <code>optional .boa.types.Expression expression_2 = 7;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasExpression2() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .boa.types.Expression expression_2 = 7;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression getExpression2() {
        if (expression2Builder_ == null) {
          return expression2_;
        } else {
          return expression2Builder_.getMessage();
        }
      }
      /**
       * <code>optional .boa.types.Expression expression_2 = 7;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setExpression2(boa.types.Ast.Expression value) {
        if (expression2Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          expression2_ = value;
          onChanged();
        } else {
          expression2Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .boa.types.Expression expression_2 = 7;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setExpression2(
          boa.types.Ast.Expression.Builder builderForValue) {
        if (expression2Builder_ == null) {
          expression2_ = builderForValue.build();
          onChanged();
        } else {
          expression2Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .boa.types.Expression expression_2 = 7;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder mergeExpression2(boa.types.Ast.Expression value) {
        if (expression2Builder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              expression2_ != boa.types.Ast.Expression.getDefaultInstance()) {
            expression2_ =
              boa.types.Ast.Expression.newBuilder(expression2_).mergeFrom(value).buildPartial();
          } else {
            expression2_ = value;
          }
          onChanged();
        } else {
          expression2Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .boa.types.Expression expression_2 = 7;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearExpression2() {
        if (expression2Builder_ == null) {
          expression2_ = boa.types.Ast.Expression.getDefaultInstance();
          onChanged();
        } else {
          expression2Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .boa.types.Expression expression_2 = 7;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.Builder getExpression2Builder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getExpression2FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .boa.types.Expression expression_2 = 7;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getExpression2OrBuilder() {
        if (expression2Builder_ != null) {
          return expression2Builder_.getMessageOrBuilder();
        } else {
          return expression2_;
        }
      }
      /**
       * <code>optional .boa.types.Expression expression_2 = 7;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
          getExpression2FieldBuilder() {
        if (expression2Builder_ == null) {
          expression2Builder_ = new com.google.protobuf.SingleFieldBuilder<
              boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                  expression2_,
                  getParentForChildren(),
                  isClean());
          expression2_ = null;
        }
        return expression2Builder_;
      }

      // repeated .boa.types.Expression expressions_1 = 8;
      private java.util.List<boa.types.Ast.Expression> expressions1_ =
        java.util.Collections.emptyList();
      private void ensureExpressions1IsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          expressions1_ = new java.util.ArrayList<boa.types.Ast.Expression>(expressions1_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> expressions1Builder_;

      /**
       * <code>repeated .boa.types.Expression expressions_1 = 8;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Expression> getExpressions1List() {
        if (expressions1Builder_ == null) {
          return java.util.Collections.unmodifiableList(expressions1_);
        } else {
          return expressions1Builder_.getMessageList();
        }
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 8;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public int getExpressions1Count() {
        if (expressions1Builder_ == null) {
          return expressions1_.size();
        } else {
          return expressions1Builder_.getCount();
        }
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 8;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression getExpressions1(int index) {
        if (expressions1Builder_ == null) {
          return expressions1_.get(index);
        } else {
          return expressions1Builder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 8;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setExpressions1(
          int index, boa.types.Ast.Expression value) {
        if (expressions1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExpressions1IsMutable();
          expressions1_.set(index, value);
          onChanged();
        } else {
          expressions1Builder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 8;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setExpressions1(
          int index, boa.types.Ast.Expression.Builder builderForValue) {
        if (expressions1Builder_ == null) {
          ensureExpressions1IsMutable();
          expressions1_.set(index, builderForValue.build());
          onChanged();
        } else {
          expressions1Builder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 8;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addExpressions1(boa.types.Ast.Expression value) {
        if (expressions1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExpressions1IsMutable();
          expressions1_.add(value);
          onChanged();
        } else {
          expressions1Builder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 8;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addExpressions1(
          int index, boa.types.Ast.Expression value) {
        if (expressions1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExpressions1IsMutable();
          expressions1_.add(index, value);
          onChanged();
        } else {
          expressions1Builder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 8;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addExpressions1(
          boa.types.Ast.Expression.Builder builderForValue) {
        if (expressions1Builder_ == null) {
          ensureExpressions1IsMutable();
          expressions1_.add(builderForValue.build());
          onChanged();
        } else {
          expressions1Builder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 8;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addExpressions1(
          int index, boa.types.Ast.Expression.Builder builderForValue) {
        if (expressions1Builder_ == null) {
          ensureExpressions1IsMutable();
          expressions1_.add(index, builderForValue.build());
          onChanged();
        } else {
          expressions1Builder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 8;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addAllExpressions1(
          java.lang.Iterable<? extends boa.types.Ast.Expression> values) {
        if (expressions1Builder_ == null) {
          ensureExpressions1IsMutable();
          super.addAll(values, expressions1_);
          onChanged();
        } else {
          expressions1Builder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 8;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearExpressions1() {
        if (expressions1Builder_ == null) {
          expressions1_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          expressions1Builder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 8;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder removeExpressions1(int index) {
        if (expressions1Builder_ == null) {
          ensureExpressions1IsMutable();
          expressions1_.remove(index);
          onChanged();
        } else {
          expressions1Builder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 8;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.Builder getExpressions1Builder(
          int index) {
        return getExpressions1FieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 8;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getExpressions1OrBuilder(
          int index) {
        if (expressions1Builder_ == null) {
          return expressions1_.get(index);  } else {
          return expressions1Builder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 8;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
           getExpressions1OrBuilderList() {
        if (expressions1Builder_ != null) {
          return expressions1Builder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(expressions1_);
        }
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 8;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.Builder addExpressions1Builder() {
        return getExpressions1FieldBuilder().addBuilder(
            boa.types.Ast.Expression.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 8;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.Builder addExpressions1Builder(
          int index) {
        return getExpressions1FieldBuilder().addBuilder(
            index, boa.types.Ast.Expression.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 8;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Expression.Builder> 
           getExpressions1BuilderList() {
        return getExpressions1FieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
          getExpressions1FieldBuilder() {
        if (expressions1Builder_ == null) {
          expressions1Builder_ = new com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                  expressions1_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          expressions1_ = null;
        }
        return expressions1Builder_;
      }

      // repeated .boa.types.Expression expressions_2 = 9;
      private java.util.List<boa.types.Ast.Expression> expressions2_ =
        java.util.Collections.emptyList();
      private void ensureExpressions2IsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          expressions2_ = new java.util.ArrayList<boa.types.Ast.Expression>(expressions2_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> expressions2Builder_;

      /**
       * <code>repeated .boa.types.Expression expressions_2 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Expression> getExpressions2List() {
        if (expressions2Builder_ == null) {
          return java.util.Collections.unmodifiableList(expressions2_);
        } else {
          return expressions2Builder_.getMessageList();
        }
      }
      /**
       * <code>repeated .boa.types.Expression expressions_2 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public int getExpressions2Count() {
        if (expressions2Builder_ == null) {
          return expressions2_.size();
        } else {
          return expressions2Builder_.getCount();
        }
      }
      /**
       * <code>repeated .boa.types.Expression expressions_2 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression getExpressions2(int index) {
        if (expressions2Builder_ == null) {
          return expressions2_.get(index);
        } else {
          return expressions2Builder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .boa.types.Expression expressions_2 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setExpressions2(
          int index, boa.types.Ast.Expression value) {
        if (expressions2Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExpressions2IsMutable();
          expressions2_.set(index, value);
          onChanged();
        } else {
          expressions2Builder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_2 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setExpressions2(
          int index, boa.types.Ast.Expression.Builder builderForValue) {
        if (expressions2Builder_ == null) {
          ensureExpressions2IsMutable();
          expressions2_.set(index, builderForValue.build());
          onChanged();
        } else {
          expressions2Builder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_2 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addExpressions2(boa.types.Ast.Expression value) {
        if (expressions2Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExpressions2IsMutable();
          expressions2_.add(value);
          onChanged();
        } else {
          expressions2Builder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_2 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addExpressions2(
          int index, boa.types.Ast.Expression value) {
        if (expressions2Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExpressions2IsMutable();
          expressions2_.add(index, value);
          onChanged();
        } else {
          expressions2Builder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_2 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addExpressions2(
          boa.types.Ast.Expression.Builder builderForValue) {
        if (expressions2Builder_ == null) {
          ensureExpressions2IsMutable();
          expressions2_.add(builderForValue.build());
          onChanged();
        } else {
          expressions2Builder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_2 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addExpressions2(
          int index, boa.types.Ast.Expression.Builder builderForValue) {
        if (expressions2Builder_ == null) {
          ensureExpressions2IsMutable();
          expressions2_.add(index, builderForValue.build());
          onChanged();
        } else {
          expressions2Builder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_2 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addAllExpressions2(
          java.lang.Iterable<? extends boa.types.Ast.Expression> values) {
        if (expressions2Builder_ == null) {
          ensureExpressions2IsMutable();
          super.addAll(values, expressions2_);
          onChanged();
        } else {
          expressions2Builder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_2 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearExpressions2() {
        if (expressions2Builder_ == null) {
          expressions2_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          expressions2Builder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_2 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder removeExpressions2(int index) {
        if (expressions2Builder_ == null) {
          ensureExpressions2IsMutable();
          expressions2_.remove(index);
          onChanged();
        } else {
          expressions2Builder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_2 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.Builder getExpressions2Builder(
          int index) {
        return getExpressions2FieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .boa.types.Expression expressions_2 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getExpressions2OrBuilder(
          int index) {
        if (expressions2Builder_ == null) {
          return expressions2_.get(index);  } else {
          return expressions2Builder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .boa.types.Expression expressions_2 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
           getExpressions2OrBuilderList() {
        if (expressions2Builder_ != null) {
          return expressions2Builder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(expressions2_);
        }
      }
      /**
       * <code>repeated .boa.types.Expression expressions_2 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.Builder addExpressions2Builder() {
        return getExpressions2FieldBuilder().addBuilder(
            boa.types.Ast.Expression.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Expression expressions_2 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.Builder addExpressions2Builder(
          int index) {
        return getExpressions2FieldBuilder().addBuilder(
            index, boa.types.Ast.Expression.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Expression expressions_2 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Expression.Builder> 
           getExpressions2BuilderList() {
        return getExpressions2FieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
          getExpressions2FieldBuilder() {
        if (expressions2Builder_ == null) {
          expressions2Builder_ = new com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                  expressions2_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          expressions2_ = null;
        }
        return expressions2Builder_;
      }

      // optional .boa.types.Variable variable_1 = 10;
      private boa.types.Ast.Variable variable1_ = boa.types.Ast.Variable.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Variable, boa.types.Ast.Variable.Builder, boa.types.Ast.VariableOrBuilder> variable1Builder_;
      /**
       * <code>optional .boa.types.Variable variable_1 = 10;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasVariable1() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .boa.types.Variable variable_1 = 10;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Variable getVariable1() {
        if (variable1Builder_ == null) {
          return variable1_;
        } else {
          return variable1Builder_.getMessage();
        }
      }
      /**
       * <code>optional .boa.types.Variable variable_1 = 10;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setVariable1(boa.types.Ast.Variable value) {
        if (variable1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          variable1_ = value;
          onChanged();
        } else {
          variable1Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .boa.types.Variable variable_1 = 10;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setVariable1(
          boa.types.Ast.Variable.Builder builderForValue) {
        if (variable1Builder_ == null) {
          variable1_ = builderForValue.build();
          onChanged();
        } else {
          variable1Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .boa.types.Variable variable_1 = 10;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder mergeVariable1(boa.types.Ast.Variable value) {
        if (variable1Builder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              variable1_ != boa.types.Ast.Variable.getDefaultInstance()) {
            variable1_ =
              boa.types.Ast.Variable.newBuilder(variable1_).mergeFrom(value).buildPartial();
          } else {
            variable1_ = value;
          }
          onChanged();
        } else {
          variable1Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .boa.types.Variable variable_1 = 10;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearVariable1() {
        if (variable1Builder_ == null) {
          variable1_ = boa.types.Ast.Variable.getDefaultInstance();
          onChanged();
        } else {
          variable1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .boa.types.Variable variable_1 = 10;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Variable.Builder getVariable1Builder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getVariable1FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .boa.types.Variable variable_1 = 10;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.VariableOrBuilder getVariable1OrBuilder() {
        if (variable1Builder_ != null) {
          return variable1Builder_.getMessageOrBuilder();
        } else {
          return variable1_;
        }
      }
      /**
       * <code>optional .boa.types.Variable variable_1 = 10;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Variable, boa.types.Ast.Variable.Builder, boa.types.Ast.VariableOrBuilder> 
          getVariable1FieldBuilder() {
        if (variable1Builder_ == null) {
          variable1Builder_ = new com.google.protobuf.SingleFieldBuilder<
              boa.types.Ast.Variable, boa.types.Ast.Variable.Builder, boa.types.Ast.VariableOrBuilder>(
                  variable1_,
                  getParentForChildren(),
                  isClean());
          variable1_ = null;
        }
        return variable1Builder_;
      }

      // optional .boa.types.Declaration declaration_1 = 11;
      private boa.types.Ast.Declaration declaration1_ = boa.types.Ast.Declaration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Declaration, boa.types.Ast.Declaration.Builder, boa.types.Ast.DeclarationOrBuilder> declaration1Builder_;
      /**
       * <code>optional .boa.types.Declaration declaration_1 = 11;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasDeclaration1() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .boa.types.Declaration declaration_1 = 11;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Declaration getDeclaration1() {
        if (declaration1Builder_ == null) {
          return declaration1_;
        } else {
          return declaration1Builder_.getMessage();
        }
      }
      /**
       * <code>optional .boa.types.Declaration declaration_1 = 11;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setDeclaration1(boa.types.Ast.Declaration value) {
        if (declaration1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          declaration1_ = value;
          onChanged();
        } else {
          declaration1Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .boa.types.Declaration declaration_1 = 11;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setDeclaration1(
          boa.types.Ast.Declaration.Builder builderForValue) {
        if (declaration1Builder_ == null) {
          declaration1_ = builderForValue.build();
          onChanged();
        } else {
          declaration1Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .boa.types.Declaration declaration_1 = 11;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder mergeDeclaration1(boa.types.Ast.Declaration value) {
        if (declaration1Builder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              declaration1_ != boa.types.Ast.Declaration.getDefaultInstance()) {
            declaration1_ =
              boa.types.Ast.Declaration.newBuilder(declaration1_).mergeFrom(value).buildPartial();
          } else {
            declaration1_ = value;
          }
          onChanged();
        } else {
          declaration1Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .boa.types.Declaration declaration_1 = 11;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearDeclaration1() {
        if (declaration1Builder_ == null) {
          declaration1_ = boa.types.Ast.Declaration.getDefaultInstance();
          onChanged();
        } else {
          declaration1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .boa.types.Declaration declaration_1 = 11;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Declaration.Builder getDeclaration1Builder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getDeclaration1FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .boa.types.Declaration declaration_1 = 11;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.DeclarationOrBuilder getDeclaration1OrBuilder() {
        if (declaration1Builder_ != null) {
          return declaration1Builder_.getMessageOrBuilder();
        } else {
          return declaration1_;
        }
      }
      /**
       * <code>optional .boa.types.Declaration declaration_1 = 11;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Declaration, boa.types.Ast.Declaration.Builder, boa.types.Ast.DeclarationOrBuilder> 
          getDeclaration1FieldBuilder() {
        if (declaration1Builder_ == null) {
          declaration1Builder_ = new com.google.protobuf.SingleFieldBuilder<
              boa.types.Ast.Declaration, boa.types.Ast.Declaration.Builder, boa.types.Ast.DeclarationOrBuilder>(
                  declaration1_,
                  getParentForChildren(),
                  isClean());
          declaration1_ = null;
        }
        return declaration1Builder_;
      }

      // optional bool bool_1 = 12 [default = false];
      private boolean bool1_ ;
      /**
       * <code>optional bool bool_1 = 12 [default = false];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasBool1() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool bool_1 = 12 [default = false];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean getBool1() {
        return bool1_;
      }
      /**
       * <code>optional bool bool_1 = 12 [default = false];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setBool1(boolean value) {
        bitField0_ |= 0x00000800;
        bool1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool bool_1 = 12 [default = false];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearBool1() {
        bitField0_ = (bitField0_ & ~0x00000800);
        bool1_ = false;
        onChanged();
        return this;
      }

      // optional .boa.types.ChangeKind structural_change_kind = 13;
      private boa.types.Shared.ChangeKind structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 13;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public boolean hasStructuralChangeKind() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 13;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public boa.types.Shared.ChangeKind getStructuralChangeKind() {
        return structuralChangeKind_;
      }
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 13;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public Builder setStructuralChangeKind(boa.types.Shared.ChangeKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00001000;
        structuralChangeKind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 13;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public Builder clearStructuralChangeKind() {
        bitField0_ = (bitField0_ & ~0x00001000);
        structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        onChanged();
        return this;
      }

      // optional .boa.types.ChangeKind label_change_kind = 14;
      private boa.types.Shared.ChangeKind labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 14;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public boolean hasLabelChangeKind() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 14;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public boa.types.Shared.ChangeKind getLabelChangeKind() {
        return labelChangeKind_;
      }
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 14;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public Builder setLabelChangeKind(boa.types.Shared.ChangeKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00002000;
        labelChangeKind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 14;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public Builder clearLabelChangeKind() {
        bitField0_ = (bitField0_ & ~0x00002000);
        labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:boa.types.Statement)
    }

    static {
      defaultInstance = new Statement(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:boa.types.Statement)
  }

  public interface ExpressionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .boa.types.Expression.ExpressionKind kind = 1;
    /**
     * <code>required .boa.types.Expression.ExpressionKind kind = 1;</code>
     *
     * <pre>
     ** The kind of expression 
     * </pre>
     */
    boolean hasKind();
    /**
     * <code>required .boa.types.Expression.ExpressionKind kind = 1;</code>
     *
     * <pre>
     ** The kind of expression 
     * </pre>
     */
    boa.types.Ast.Expression.ExpressionKind getKind();

    // optional string string_1 = 2;
    /**
     * <code>optional string string_1 = 2;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boolean hasString1();
    /**
     * <code>optional string string_1 = 2;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    java.lang.String getString1();
    /**
     * <code>optional string string_1 = 2;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    com.google.protobuf.ByteString
        getString1Bytes();

    // optional string string_2 = 3;
    /**
     * <code>optional string string_2 = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boolean hasString2();
    /**
     * <code>optional string string_2 = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    java.lang.String getString2();
    /**
     * <code>optional string string_2 = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    com.google.protobuf.ByteString
        getString2Bytes();

    // optional .boa.types.Expression expression_1 = 4;
    /**
     * <code>optional .boa.types.Expression expression_1 = 4;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boolean hasExpression1();
    /**
     * <code>optional .boa.types.Expression expression_1 = 4;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.Expression getExpression1();
    /**
     * <code>optional .boa.types.Expression expression_1 = 4;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.ExpressionOrBuilder getExpression1OrBuilder();

    // optional .boa.types.Expression expression_2 = 5;
    /**
     * <code>optional .boa.types.Expression expression_2 = 5;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boolean hasExpression2();
    /**
     * <code>optional .boa.types.Expression expression_2 = 5;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.Expression getExpression2();
    /**
     * <code>optional .boa.types.Expression expression_2 = 5;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.ExpressionOrBuilder getExpression2OrBuilder();

    // optional .boa.types.Expression expression_3 = 6;
    /**
     * <code>optional .boa.types.Expression expression_3 = 6;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boolean hasExpression3();
    /**
     * <code>optional .boa.types.Expression expression_3 = 6;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.Expression getExpression3();
    /**
     * <code>optional .boa.types.Expression expression_3 = 6;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.ExpressionOrBuilder getExpression3OrBuilder();

    // repeated .boa.types.Expression expressions_1 = 7;
    /**
     * <code>repeated .boa.types.Expression expressions_1 = 7;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    java.util.List<boa.types.Ast.Expression> 
        getExpressions1List();
    /**
     * <code>repeated .boa.types.Expression expressions_1 = 7;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.Expression getExpressions1(int index);
    /**
     * <code>repeated .boa.types.Expression expressions_1 = 7;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    int getExpressions1Count();
    /**
     * <code>repeated .boa.types.Expression expressions_1 = 7;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
        getExpressions1OrBuilderList();
    /**
     * <code>repeated .boa.types.Expression expressions_1 = 7;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.ExpressionOrBuilder getExpressions1OrBuilder(
        int index);

    // optional .boa.types.Type type_1 = 8;
    /**
     * <code>optional .boa.types.Type type_1 = 8;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boolean hasType1();
    /**
     * <code>optional .boa.types.Type type_1 = 8;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.Type getType1();
    /**
     * <code>optional .boa.types.Type type_1 = 8;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.TypeOrBuilder getType1OrBuilder();

    // repeated .boa.types.Type types_1 = 9;
    /**
     * <code>repeated .boa.types.Type types_1 = 9;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    java.util.List<boa.types.Ast.Type> 
        getTypes1List();
    /**
     * <code>repeated .boa.types.Type types_1 = 9;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.Type getTypes1(int index);
    /**
     * <code>repeated .boa.types.Type types_1 = 9;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    int getTypes1Count();
    /**
     * <code>repeated .boa.types.Type types_1 = 9;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
        getTypes1OrBuilderList();
    /**
     * <code>repeated .boa.types.Type types_1 = 9;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.TypeOrBuilder getTypes1OrBuilder(
        int index);

    // optional .boa.types.Declaration declaration_1 = 10;
    /**
     * <code>optional .boa.types.Declaration declaration_1 = 10;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boolean hasDeclaration1();
    /**
     * <code>optional .boa.types.Declaration declaration_1 = 10;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.Declaration getDeclaration1();
    /**
     * <code>optional .boa.types.Declaration declaration_1 = 10;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.DeclarationOrBuilder getDeclaration1OrBuilder();

    // optional bool bool_1 = 11;
    /**
     * <code>optional bool bool_1 = 11;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boolean hasBool1();
    /**
     * <code>optional bool bool_1 = 11;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boolean getBool1();

    // optional int32 int32_1 = 12;
    /**
     * <code>optional int32 int32_1 = 12;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boolean hasInt321();
    /**
     * <code>optional int32 int32_1 = 12;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    int getInt321();

    // repeated .boa.types.Variable variables_1 = 13;
    /**
     * <code>repeated .boa.types.Variable variables_1 = 13;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    java.util.List<boa.types.Ast.Variable> 
        getVariables1List();
    /**
     * <code>repeated .boa.types.Variable variables_1 = 13;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.Variable getVariables1(int index);
    /**
     * <code>repeated .boa.types.Variable variables_1 = 13;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    int getVariables1Count();
    /**
     * <code>repeated .boa.types.Variable variables_1 = 13;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    java.util.List<? extends boa.types.Ast.VariableOrBuilder> 
        getVariables1OrBuilderList();
    /**
     * <code>repeated .boa.types.Variable variables_1 = 13;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.VariableOrBuilder getVariables1OrBuilder(
        int index);

    // optional .boa.types.Statement statement_1 = 14;
    /**
     * <code>optional .boa.types.Statement statement_1 = 14;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boolean hasStatement1();
    /**
     * <code>optional .boa.types.Statement statement_1 = 14;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.Statement getStatement1();
    /**
     * <code>optional .boa.types.Statement statement_1 = 14;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.StatementOrBuilder getStatement1OrBuilder();

    // repeated .boa.types.Modifier modifiers_1 = 15;
    /**
     * <code>repeated .boa.types.Modifier modifiers_1 = 15;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    java.util.List<boa.types.Ast.Modifier> 
        getModifiers1List();
    /**
     * <code>repeated .boa.types.Modifier modifiers_1 = 15;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.Modifier getModifiers1(int index);
    /**
     * <code>repeated .boa.types.Modifier modifiers_1 = 15;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    int getModifiers1Count();
    /**
     * <code>repeated .boa.types.Modifier modifiers_1 = 15;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    java.util.List<? extends boa.types.Ast.ModifierOrBuilder> 
        getModifiers1OrBuilderList();
    /**
     * <code>repeated .boa.types.Modifier modifiers_1 = 15;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.ModifierOrBuilder getModifiers1OrBuilder(
        int index);

    // repeated string strings_1 = 16;
    /**
     * <code>repeated string strings_1 = 16;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    java.util.List<java.lang.String>
    getStrings1List();
    /**
     * <code>repeated string strings_1 = 16;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    int getStrings1Count();
    /**
     * <code>repeated string strings_1 = 16;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    java.lang.String getStrings1(int index);
    /**
     * <code>repeated string strings_1 = 16;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    com.google.protobuf.ByteString
        getStrings1Bytes(int index);

    // optional .boa.types.Modifier modifier_1 = 17;
    /**
     * <code>optional .boa.types.Modifier modifier_1 = 17;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boolean hasModifier1();
    /**
     * <code>optional .boa.types.Modifier modifier_1 = 17;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.Modifier getModifier1();
    /**
     * <code>optional .boa.types.Modifier modifier_1 = 17;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.ModifierOrBuilder getModifier1OrBuilder();

    // optional .boa.types.ChangeKind structural_change_kind = 18;
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 18;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    boolean hasStructuralChangeKind();
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 18;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    boa.types.Shared.ChangeKind getStructuralChangeKind();

    // optional .boa.types.ChangeKind label_change_kind = 19;
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 19;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    boolean hasLabelChangeKind();
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 19;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    boa.types.Shared.ChangeKind getLabelChangeKind();
  }
  /**
   * Protobuf type {@code boa.types.Expression}
   *
   * <pre>
   ** A single expression 
   * </pre>
   */
  public static final class Expression extends
      com.google.protobuf.GeneratedMessage
      implements ExpressionOrBuilder {
    // Use Expression.newBuilder() to construct.
    private Expression(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Expression(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Expression defaultInstance;
    public static Expression getDefaultInstance() {
      return defaultInstance;
    }

    public Expression getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Expression(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                kind_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              string1_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              string2_ = input.readBytes();
              break;
            }
            case 34: {
              boa.types.Ast.Expression.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = expression1_.toBuilder();
              }
              expression1_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(expression1_);
                expression1_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              boa.types.Ast.Expression.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = expression2_.toBuilder();
              }
              expression2_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(expression2_);
                expression2_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              boa.types.Ast.Expression.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = expression3_.toBuilder();
              }
              expression3_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(expression3_);
                expression3_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                expressions1_ = new java.util.ArrayList<boa.types.Ast.Expression>();
                mutable_bitField0_ |= 0x00000040;
              }
              expressions1_.add(input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry));
              break;
            }
            case 66: {
              boa.types.Ast.Type.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = type1_.toBuilder();
              }
              type1_ = input.readMessage(boa.types.Ast.Type.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(type1_);
                type1_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                types1_ = new java.util.ArrayList<boa.types.Ast.Type>();
                mutable_bitField0_ |= 0x00000100;
              }
              types1_.add(input.readMessage(boa.types.Ast.Type.PARSER, extensionRegistry));
              break;
            }
            case 82: {
              boa.types.Ast.Declaration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = declaration1_.toBuilder();
              }
              declaration1_ = input.readMessage(boa.types.Ast.Declaration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(declaration1_);
                declaration1_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 88: {
              bitField0_ |= 0x00000100;
              bool1_ = input.readBool();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000200;
              int321_ = input.readInt32();
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                variables1_ = new java.util.ArrayList<boa.types.Ast.Variable>();
                mutable_bitField0_ |= 0x00001000;
              }
              variables1_.add(input.readMessage(boa.types.Ast.Variable.PARSER, extensionRegistry));
              break;
            }
            case 114: {
              boa.types.Ast.Statement.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = statement1_.toBuilder();
              }
              statement1_ = input.readMessage(boa.types.Ast.Statement.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(statement1_);
                statement1_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 122: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                modifiers1_ = new java.util.ArrayList<boa.types.Ast.Modifier>();
                mutable_bitField0_ |= 0x00004000;
              }
              modifiers1_.add(input.readMessage(boa.types.Ast.Modifier.PARSER, extensionRegistry));
              break;
            }
            case 130: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                strings1_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00008000;
              }
              strings1_.add(input.readBytes());
              break;
            }
            case 138: {
              boa.types.Ast.Modifier.Builder subBuilder = null;
              if (((bitField0_ & 0x00000800) == 0x00000800)) {
                subBuilder = modifier1_.toBuilder();
              }
              modifier1_ = input.readMessage(boa.types.Ast.Modifier.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(modifier1_);
                modifier1_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000800;
              break;
            }
            case 144: {
              int rawValue = input.readEnum();
              boa.types.Shared.ChangeKind value = boa.types.Shared.ChangeKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(18, rawValue);
              } else {
                bitField0_ |= 0x00001000;
                structuralChangeKind_ = value;
              }
              break;
            }
            case 152: {
              int rawValue = input.readEnum();
              boa.types.Shared.ChangeKind value = boa.types.Shared.ChangeKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(19, rawValue);
              } else {
                bitField0_ |= 0x00002000;
                labelChangeKind_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          expressions1_ = java.util.Collections.unmodifiableList(expressions1_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          types1_ = java.util.Collections.unmodifiableList(types1_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          variables1_ = java.util.Collections.unmodifiableList(variables1_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          modifiers1_ = java.util.Collections.unmodifiableList(modifiers1_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          strings1_ = new com.google.protobuf.UnmodifiableLazyStringList(strings1_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return boa.types.Ast.internal_static_boa_types_Expression_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return boa.types.Ast.internal_static_boa_types_Expression_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              boa.types.Ast.Expression.class, boa.types.Ast.Expression.Builder.class);
    }

    public static com.google.protobuf.Parser<Expression> PARSER =
        new com.google.protobuf.AbstractParser<Expression>() {
      public Expression parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Expression(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Expression> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code boa.types.Expression.ExpressionKind}
     *
     * <pre>
     ** The kind of expression 
     * </pre>
     */
    public enum ExpressionKind
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>OTHER = 0;</code>
       *
       * <pre>
       ** Any other expression 
       * </pre>
       */
      OTHER(0, 0),
      /**
       * <code>LITERAL = 1;</code>
       */
      LITERAL(1, 1),
      /**
       * <code>VARACCESS = 2;</code>
       */
      VARACCESS(2, 2),
      /**
       * <code>VARDECL = 3;</code>
       */
      VARDECL(3, 3),
      /**
       * <code>METHODCALL = 4;</code>
       */
      METHODCALL(4, 4),
      /**
       * <code>CAST = 5;</code>
       */
      CAST(5, 5),
      /**
       * <code>ARRAYINDEX = 6;</code>
       */
      ARRAYINDEX(6, 6),
      /**
       * <code>ARRAYINIT = 7;</code>
       */
      ARRAYINIT(7, 7),
      /**
       * <code>TYPECOMPARE = 8;</code>
       */
      TYPECOMPARE(8, 8),
      /**
       * <code>NEW = 9;</code>
       */
      NEW(9, 9),
      /**
       * <code>NEWARRAY = 10;</code>
       */
      NEWARRAY(10, 10),
      /**
       * <code>OP_ADD = 11;</code>
       */
      OP_ADD(11, 11),
      /**
       * <code>OP_SUB = 12;</code>
       */
      OP_SUB(12, 12),
      /**
       * <code>OP_MULT = 13;</code>
       */
      OP_MULT(13, 13),
      /**
       * <code>OP_DIV = 14;</code>
       */
      OP_DIV(14, 14),
      /**
       * <code>OP_MOD = 15;</code>
       */
      OP_MOD(15, 15),
      /**
       * <code>OP_INC = 16;</code>
       */
      OP_INC(16, 16),
      /**
       * <code>OP_DEC = 17;</code>
       */
      OP_DEC(17, 17),
      /**
       * <code>BIT_LSHIFT = 18;</code>
       */
      BIT_LSHIFT(18, 18),
      /**
       * <code>BIT_RSHIFT = 19;</code>
       */
      BIT_RSHIFT(19, 19),
      /**
       * <code>BIT_UNSIGNEDRSHIFT = 20;</code>
       */
      BIT_UNSIGNEDRSHIFT(20, 20),
      /**
       * <code>BIT_AND = 21;</code>
       */
      BIT_AND(21, 21),
      /**
       * <code>BIT_OR = 22;</code>
       */
      BIT_OR(22, 22),
      /**
       * <code>BIT_NOT = 23;</code>
       */
      BIT_NOT(23, 23),
      /**
       * <code>BIT_XOR = 24;</code>
       */
      BIT_XOR(24, 24),
      /**
       * <code>LOGICAL_NOT = 25;</code>
       */
      LOGICAL_NOT(25, 25),
      /**
       * <code>LOGICAL_AND = 26;</code>
       */
      LOGICAL_AND(26, 26),
      /**
       * <code>LOGICAL_OR = 27;</code>
       */
      LOGICAL_OR(27, 27),
      /**
       * <code>EQ = 28;</code>
       */
      EQ(28, 28),
      /**
       * <code>NEQ = 29;</code>
       */
      NEQ(29, 29),
      /**
       * <code>LT = 30;</code>
       */
      LT(30, 30),
      /**
       * <code>GT = 31;</code>
       */
      GT(31, 31),
      /**
       * <code>LTEQ = 32;</code>
       */
      LTEQ(32, 32),
      /**
       * <code>GTEQ = 33;</code>
       */
      GTEQ(33, 33),
      /**
       * <code>CONDITIONAL = 34;</code>
       */
      CONDITIONAL(34, 34),
      /**
       * <code>NULLCOALESCE = 35;</code>
       */
      NULLCOALESCE(35, 35),
      /**
       * <code>ASSIGN = 36;</code>
       */
      ASSIGN(36, 36),
      /**
       * <code>ASSIGN_ADD = 37;</code>
       */
      ASSIGN_ADD(37, 37),
      /**
       * <code>ASSIGN_SUB = 38;</code>
       */
      ASSIGN_SUB(38, 38),
      /**
       * <code>ASSIGN_MULT = 39;</code>
       */
      ASSIGN_MULT(39, 39),
      /**
       * <code>ASSIGN_DIV = 40;</code>
       */
      ASSIGN_DIV(40, 40),
      /**
       * <code>ASSIGN_MOD = 41;</code>
       */
      ASSIGN_MOD(41, 41),
      /**
       * <code>ASSIGN_BITXOR = 42;</code>
       */
      ASSIGN_BITXOR(42, 42),
      /**
       * <code>ASSIGN_BITAND = 43;</code>
       */
      ASSIGN_BITAND(43, 43),
      /**
       * <code>ASSIGN_BITOR = 44;</code>
       */
      ASSIGN_BITOR(44, 44),
      /**
       * <code>ASSIGN_LSHIFT = 45;</code>
       */
      ASSIGN_LSHIFT(45, 45),
      /**
       * <code>ASSIGN_RSHIFT = 46;</code>
       */
      ASSIGN_RSHIFT(46, 46),
      /**
       * <code>ASSIGN_UNSIGNEDRSHIFT = 47;</code>
       */
      ASSIGN_UNSIGNEDRSHIFT(47, 47),
      /**
       * <code>ANNOTATION = 48;</code>
       */
      ANNOTATION(48, 48),
      /**
       * <code>PAREN = 49;</code>
       */
      PAREN(49, 49),
      /**
       * <code>METHOD_REFERENCE = 50;</code>
       *
       * <pre>
       ** @exclude TODO 
       * </pre>
       */
      METHOD_REFERENCE(50, 50),
      /**
       * <code>LAMBDA = 51;</code>
       *
       * <pre>
       ** @exclude TODO 
       * </pre>
       */
      LAMBDA(51, 51),
      /**
       * <code>ANON_METHOD = 52;</code>
       *
       * <pre>
       ** @exclude TODO 
       * </pre>
       */
      ANON_METHOD(52, 52),
      ;

      /**
       * <code>OTHER = 0;</code>
       *
       * <pre>
       ** Any other expression 
       * </pre>
       */
      public static final int OTHER_VALUE = 0;
      /**
       * <code>LITERAL = 1;</code>
       */
      public static final int LITERAL_VALUE = 1;
      /**
       * <code>VARACCESS = 2;</code>
       */
      public static final int VARACCESS_VALUE = 2;
      /**
       * <code>VARDECL = 3;</code>
       */
      public static final int VARDECL_VALUE = 3;
      /**
       * <code>METHODCALL = 4;</code>
       */
      public static final int METHODCALL_VALUE = 4;
      /**
       * <code>CAST = 5;</code>
       */
      public static final int CAST_VALUE = 5;
      /**
       * <code>ARRAYINDEX = 6;</code>
       */
      public static final int ARRAYINDEX_VALUE = 6;
      /**
       * <code>ARRAYINIT = 7;</code>
       */
      public static final int ARRAYINIT_VALUE = 7;
      /**
       * <code>TYPECOMPARE = 8;</code>
       */
      public static final int TYPECOMPARE_VALUE = 8;
      /**
       * <code>NEW = 9;</code>
       */
      public static final int NEW_VALUE = 9;
      /**
       * <code>NEWARRAY = 10;</code>
       */
      public static final int NEWARRAY_VALUE = 10;
      /**
       * <code>OP_ADD = 11;</code>
       */
      public static final int OP_ADD_VALUE = 11;
      /**
       * <code>OP_SUB = 12;</code>
       */
      public static final int OP_SUB_VALUE = 12;
      /**
       * <code>OP_MULT = 13;</code>
       */
      public static final int OP_MULT_VALUE = 13;
      /**
       * <code>OP_DIV = 14;</code>
       */
      public static final int OP_DIV_VALUE = 14;
      /**
       * <code>OP_MOD = 15;</code>
       */
      public static final int OP_MOD_VALUE = 15;
      /**
       * <code>OP_INC = 16;</code>
       */
      public static final int OP_INC_VALUE = 16;
      /**
       * <code>OP_DEC = 17;</code>
       */
      public static final int OP_DEC_VALUE = 17;
      /**
       * <code>BIT_LSHIFT = 18;</code>
       */
      public static final int BIT_LSHIFT_VALUE = 18;
      /**
       * <code>BIT_RSHIFT = 19;</code>
       */
      public static final int BIT_RSHIFT_VALUE = 19;
      /**
       * <code>BIT_UNSIGNEDRSHIFT = 20;</code>
       */
      public static final int BIT_UNSIGNEDRSHIFT_VALUE = 20;
      /**
       * <code>BIT_AND = 21;</code>
       */
      public static final int BIT_AND_VALUE = 21;
      /**
       * <code>BIT_OR = 22;</code>
       */
      public static final int BIT_OR_VALUE = 22;
      /**
       * <code>BIT_NOT = 23;</code>
       */
      public static final int BIT_NOT_VALUE = 23;
      /**
       * <code>BIT_XOR = 24;</code>
       */
      public static final int BIT_XOR_VALUE = 24;
      /**
       * <code>LOGICAL_NOT = 25;</code>
       */
      public static final int LOGICAL_NOT_VALUE = 25;
      /**
       * <code>LOGICAL_AND = 26;</code>
       */
      public static final int LOGICAL_AND_VALUE = 26;
      /**
       * <code>LOGICAL_OR = 27;</code>
       */
      public static final int LOGICAL_OR_VALUE = 27;
      /**
       * <code>EQ = 28;</code>
       */
      public static final int EQ_VALUE = 28;
      /**
       * <code>NEQ = 29;</code>
       */
      public static final int NEQ_VALUE = 29;
      /**
       * <code>LT = 30;</code>
       */
      public static final int LT_VALUE = 30;
      /**
       * <code>GT = 31;</code>
       */
      public static final int GT_VALUE = 31;
      /**
       * <code>LTEQ = 32;</code>
       */
      public static final int LTEQ_VALUE = 32;
      /**
       * <code>GTEQ = 33;</code>
       */
      public static final int GTEQ_VALUE = 33;
      /**
       * <code>CONDITIONAL = 34;</code>
       */
      public static final int CONDITIONAL_VALUE = 34;
      /**
       * <code>NULLCOALESCE = 35;</code>
       */
      public static final int NULLCOALESCE_VALUE = 35;
      /**
       * <code>ASSIGN = 36;</code>
       */
      public static final int ASSIGN_VALUE = 36;
      /**
       * <code>ASSIGN_ADD = 37;</code>
       */
      public static final int ASSIGN_ADD_VALUE = 37;
      /**
       * <code>ASSIGN_SUB = 38;</code>
       */
      public static final int ASSIGN_SUB_VALUE = 38;
      /**
       * <code>ASSIGN_MULT = 39;</code>
       */
      public static final int ASSIGN_MULT_VALUE = 39;
      /**
       * <code>ASSIGN_DIV = 40;</code>
       */
      public static final int ASSIGN_DIV_VALUE = 40;
      /**
       * <code>ASSIGN_MOD = 41;</code>
       */
      public static final int ASSIGN_MOD_VALUE = 41;
      /**
       * <code>ASSIGN_BITXOR = 42;</code>
       */
      public static final int ASSIGN_BITXOR_VALUE = 42;
      /**
       * <code>ASSIGN_BITAND = 43;</code>
       */
      public static final int ASSIGN_BITAND_VALUE = 43;
      /**
       * <code>ASSIGN_BITOR = 44;</code>
       */
      public static final int ASSIGN_BITOR_VALUE = 44;
      /**
       * <code>ASSIGN_LSHIFT = 45;</code>
       */
      public static final int ASSIGN_LSHIFT_VALUE = 45;
      /**
       * <code>ASSIGN_RSHIFT = 46;</code>
       */
      public static final int ASSIGN_RSHIFT_VALUE = 46;
      /**
       * <code>ASSIGN_UNSIGNEDRSHIFT = 47;</code>
       */
      public static final int ASSIGN_UNSIGNEDRSHIFT_VALUE = 47;
      /**
       * <code>ANNOTATION = 48;</code>
       */
      public static final int ANNOTATION_VALUE = 48;
      /**
       * <code>PAREN = 49;</code>
       */
      public static final int PAREN_VALUE = 49;
      /**
       * <code>METHOD_REFERENCE = 50;</code>
       *
       * <pre>
       ** @exclude TODO 
       * </pre>
       */
      public static final int METHOD_REFERENCE_VALUE = 50;
      /**
       * <code>LAMBDA = 51;</code>
       *
       * <pre>
       ** @exclude TODO 
       * </pre>
       */
      public static final int LAMBDA_VALUE = 51;
      /**
       * <code>ANON_METHOD = 52;</code>
       *
       * <pre>
       ** @exclude TODO 
       * </pre>
       */
      public static final int ANON_METHOD_VALUE = 52;


      public final int getNumber() { return value; }

      public static ExpressionKind valueOf(int value) {
        switch (value) {
          case 0: return OTHER;
          case 1: return LITERAL;
          case 2: return VARACCESS;
          case 3: return VARDECL;
          case 4: return METHODCALL;
          case 5: return CAST;
          case 6: return ARRAYINDEX;
          case 7: return ARRAYINIT;
          case 8: return TYPECOMPARE;
          case 9: return NEW;
          case 10: return NEWARRAY;
          case 11: return OP_ADD;
          case 12: return OP_SUB;
          case 13: return OP_MULT;
          case 14: return OP_DIV;
          case 15: return OP_MOD;
          case 16: return OP_INC;
          case 17: return OP_DEC;
          case 18: return BIT_LSHIFT;
          case 19: return BIT_RSHIFT;
          case 20: return BIT_UNSIGNEDRSHIFT;
          case 21: return BIT_AND;
          case 22: return BIT_OR;
          case 23: return BIT_NOT;
          case 24: return BIT_XOR;
          case 25: return LOGICAL_NOT;
          case 26: return LOGICAL_AND;
          case 27: return LOGICAL_OR;
          case 28: return EQ;
          case 29: return NEQ;
          case 30: return LT;
          case 31: return GT;
          case 32: return LTEQ;
          case 33: return GTEQ;
          case 34: return CONDITIONAL;
          case 35: return NULLCOALESCE;
          case 36: return ASSIGN;
          case 37: return ASSIGN_ADD;
          case 38: return ASSIGN_SUB;
          case 39: return ASSIGN_MULT;
          case 40: return ASSIGN_DIV;
          case 41: return ASSIGN_MOD;
          case 42: return ASSIGN_BITXOR;
          case 43: return ASSIGN_BITAND;
          case 44: return ASSIGN_BITOR;
          case 45: return ASSIGN_LSHIFT;
          case 46: return ASSIGN_RSHIFT;
          case 47: return ASSIGN_UNSIGNEDRSHIFT;
          case 48: return ANNOTATION;
          case 49: return PAREN;
          case 50: return METHOD_REFERENCE;
          case 51: return LAMBDA;
          case 52: return ANON_METHOD;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ExpressionKind>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<ExpressionKind>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ExpressionKind>() {
              public ExpressionKind findValueByNumber(int number) {
                return ExpressionKind.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return boa.types.Ast.Expression.getDescriptor().getEnumTypes().get(0);
      }

      private static final ExpressionKind[] VALUES = values();

      public static ExpressionKind valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private ExpressionKind(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:boa.types.Expression.ExpressionKind)
    }

    public interface AnnotationExpressionOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ANNOTATION];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ANNOTATION];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ANNOTATION];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind();

      // required .boa.types.Modifier annotation = 2;
      /**
       * <code>required .boa.types.Modifier annotation = 2;</code>
       *
       * <pre>
       ** The annotation 
       * </pre>
       */
      boolean hasAnnotation();
      /**
       * <code>required .boa.types.Modifier annotation = 2;</code>
       *
       * <pre>
       ** The annotation 
       * </pre>
       */
      boa.types.Ast.Modifier getAnnotation();
      /**
       * <code>required .boa.types.Modifier annotation = 2;</code>
       *
       * <pre>
       ** The annotation 
       * </pre>
       */
      boa.types.Ast.ModifierOrBuilder getAnnotationOrBuilder();
    }
    /**
     * Protobuf type {@code boa.types.Expression.AnnotationExpression}
     *
     * <pre>
     ** An annotation expression 
     * </pre>
     */
    public static final class AnnotationExpression extends
        com.google.protobuf.GeneratedMessage
        implements AnnotationExpressionOrBuilder {
      // Use AnnotationExpression.newBuilder() to construct.
      private AnnotationExpression(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private AnnotationExpression(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final AnnotationExpression defaultInstance;
      public static AnnotationExpression getDefaultInstance() {
        return defaultInstance;
      }

      public AnnotationExpression getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private AnnotationExpression(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                boa.types.Ast.Modifier.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = annotation_.toBuilder();
                }
                annotation_ = input.readMessage(boa.types.Ast.Modifier.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(annotation_);
                  annotation_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Expression_AnnotationExpression_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Expression_AnnotationExpression_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Expression.AnnotationExpression.class, boa.types.Ast.Expression.AnnotationExpression.Builder.class);
      }

      public static com.google.protobuf.Parser<AnnotationExpression> PARSER =
          new com.google.protobuf.AbstractParser<AnnotationExpression>() {
        public AnnotationExpression parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new AnnotationExpression(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<AnnotationExpression> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ANNOTATION];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Expression.ExpressionKind shadowKind_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ANNOTATION];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ANNOTATION];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
        return shadowKind_;
      }

      // required .boa.types.Modifier annotation = 2;
      public static final int ANNOTATION_FIELD_NUMBER = 2;
      private boa.types.Ast.Modifier annotation_;
      /**
       * <code>required .boa.types.Modifier annotation = 2;</code>
       *
       * <pre>
       ** The annotation 
       * </pre>
       */
      public boolean hasAnnotation() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .boa.types.Modifier annotation = 2;</code>
       *
       * <pre>
       ** The annotation 
       * </pre>
       */
      public boa.types.Ast.Modifier getAnnotation() {
        return annotation_;
      }
      /**
       * <code>required .boa.types.Modifier annotation = 2;</code>
       *
       * <pre>
       ** The annotation 
       * </pre>
       */
      public boa.types.Ast.ModifierOrBuilder getAnnotationOrBuilder() {
        return annotation_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Expression.ExpressionKind.ANNOTATION;
        annotation_ = boa.types.Ast.Modifier.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasAnnotation()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getAnnotation().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, annotation_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, annotation_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Expression.AnnotationExpression parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.AnnotationExpression parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.AnnotationExpression parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.AnnotationExpression parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.AnnotationExpression parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.AnnotationExpression parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.AnnotationExpression parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Expression.AnnotationExpression parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.AnnotationExpression parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.AnnotationExpression parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Expression.AnnotationExpression prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Expression.AnnotationExpression}
       *
       * <pre>
       ** An annotation expression 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Expression.AnnotationExpressionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Expression_AnnotationExpression_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Expression_AnnotationExpression_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Expression.AnnotationExpression.class, boa.types.Ast.Expression.AnnotationExpression.Builder.class);
        }

        // Construct using boa.types.Ast.Expression.AnnotationExpression.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getAnnotationFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.ANNOTATION;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (annotationBuilder_ == null) {
            annotation_ = boa.types.Ast.Modifier.getDefaultInstance();
          } else {
            annotationBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Expression_AnnotationExpression_descriptor;
        }

        public boa.types.Ast.Expression.AnnotationExpression getDefaultInstanceForType() {
          return boa.types.Ast.Expression.AnnotationExpression.getDefaultInstance();
        }

        public boa.types.Ast.Expression.AnnotationExpression build() {
          boa.types.Ast.Expression.AnnotationExpression result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Expression.AnnotationExpression buildPartial() {
          boa.types.Ast.Expression.AnnotationExpression result = new boa.types.Ast.Expression.AnnotationExpression(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (annotationBuilder_ == null) {
            result.annotation_ = annotation_;
          } else {
            result.annotation_ = annotationBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Expression.AnnotationExpression) {
            return mergeFrom((boa.types.Ast.Expression.AnnotationExpression)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Expression.AnnotationExpression other) {
          if (other == boa.types.Ast.Expression.AnnotationExpression.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasAnnotation()) {
            mergeAnnotation(other.getAnnotation());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasAnnotation()) {
            
            return false;
          }
          if (!getAnnotation().isInitialized()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Expression.AnnotationExpression parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Expression.AnnotationExpression) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ANNOTATION];
        private boa.types.Ast.Expression.ExpressionKind shadowKind_ = boa.types.Ast.Expression.ExpressionKind.ANNOTATION;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ANNOTATION];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ANNOTATION];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ANNOTATION];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ANNOTATION];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.ANNOTATION;
          onChanged();
          return this;
        }

        // required .boa.types.Modifier annotation = 2;
        private boa.types.Ast.Modifier annotation_ = boa.types.Ast.Modifier.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Modifier, boa.types.Ast.Modifier.Builder, boa.types.Ast.ModifierOrBuilder> annotationBuilder_;
        /**
         * <code>required .boa.types.Modifier annotation = 2;</code>
         *
         * <pre>
         ** The annotation 
         * </pre>
         */
        public boolean hasAnnotation() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required .boa.types.Modifier annotation = 2;</code>
         *
         * <pre>
         ** The annotation 
         * </pre>
         */
        public boa.types.Ast.Modifier getAnnotation() {
          if (annotationBuilder_ == null) {
            return annotation_;
          } else {
            return annotationBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Modifier annotation = 2;</code>
         *
         * <pre>
         ** The annotation 
         * </pre>
         */
        public Builder setAnnotation(boa.types.Ast.Modifier value) {
          if (annotationBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            annotation_ = value;
            onChanged();
          } else {
            annotationBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Modifier annotation = 2;</code>
         *
         * <pre>
         ** The annotation 
         * </pre>
         */
        public Builder setAnnotation(
            boa.types.Ast.Modifier.Builder builderForValue) {
          if (annotationBuilder_ == null) {
            annotation_ = builderForValue.build();
            onChanged();
          } else {
            annotationBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Modifier annotation = 2;</code>
         *
         * <pre>
         ** The annotation 
         * </pre>
         */
        public Builder mergeAnnotation(boa.types.Ast.Modifier value) {
          if (annotationBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                annotation_ != boa.types.Ast.Modifier.getDefaultInstance()) {
              annotation_ =
                boa.types.Ast.Modifier.newBuilder(annotation_).mergeFrom(value).buildPartial();
            } else {
              annotation_ = value;
            }
            onChanged();
          } else {
            annotationBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Modifier annotation = 2;</code>
         *
         * <pre>
         ** The annotation 
         * </pre>
         */
        public Builder clearAnnotation() {
          if (annotationBuilder_ == null) {
            annotation_ = boa.types.Ast.Modifier.getDefaultInstance();
            onChanged();
          } else {
            annotationBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>required .boa.types.Modifier annotation = 2;</code>
         *
         * <pre>
         ** The annotation 
         * </pre>
         */
        public boa.types.Ast.Modifier.Builder getAnnotationBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getAnnotationFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Modifier annotation = 2;</code>
         *
         * <pre>
         ** The annotation 
         * </pre>
         */
        public boa.types.Ast.ModifierOrBuilder getAnnotationOrBuilder() {
          if (annotationBuilder_ != null) {
            return annotationBuilder_.getMessageOrBuilder();
          } else {
            return annotation_;
          }
        }
        /**
         * <code>required .boa.types.Modifier annotation = 2;</code>
         *
         * <pre>
         ** The annotation 
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Modifier, boa.types.Ast.Modifier.Builder, boa.types.Ast.ModifierOrBuilder> 
            getAnnotationFieldBuilder() {
          if (annotationBuilder_ == null) {
            annotationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Modifier, boa.types.Ast.Modifier.Builder, boa.types.Ast.ModifierOrBuilder>(
                    annotation_,
                    getParentForChildren(),
                    isClean());
            annotation_ = null;
          }
          return annotationBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Expression.AnnotationExpression)
      }

      static {
        defaultInstance = new AnnotationExpression(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Expression.AnnotationExpression)
    }

    public interface ArrayAccessOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ARRAYINDEX];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ARRAYINDEX];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ARRAYINDEX];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind();

      // required .boa.types.Expression array = 2;
      /**
       * <code>required .boa.types.Expression array = 2;</code>
       *
       * <pre>
       ** The array expression 
       * </pre>
       */
      boolean hasArray();
      /**
       * <code>required .boa.types.Expression array = 2;</code>
       *
       * <pre>
       ** The array expression 
       * </pre>
       */
      boa.types.Ast.Expression getArray();
      /**
       * <code>required .boa.types.Expression array = 2;</code>
       *
       * <pre>
       ** The array expression 
       * </pre>
       */
      boa.types.Ast.ExpressionOrBuilder getArrayOrBuilder();

      // required .boa.types.Expression index = 3;
      /**
       * <code>required .boa.types.Expression index = 3;</code>
       *
       * <pre>
       ** The index expression 
       * </pre>
       */
      boolean hasIndex();
      /**
       * <code>required .boa.types.Expression index = 3;</code>
       *
       * <pre>
       ** The index expression 
       * </pre>
       */
      boa.types.Ast.Expression getIndex();
      /**
       * <code>required .boa.types.Expression index = 3;</code>
       *
       * <pre>
       ** The index expression 
       * </pre>
       */
      boa.types.Ast.ExpressionOrBuilder getIndexOrBuilder();
    }
    /**
     * Protobuf type {@code boa.types.Expression.ArrayAccess}
     *
     * <pre>
     ** An array access expression 
     * </pre>
     */
    public static final class ArrayAccess extends
        com.google.protobuf.GeneratedMessage
        implements ArrayAccessOrBuilder {
      // Use ArrayAccess.newBuilder() to construct.
      private ArrayAccess(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private ArrayAccess(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final ArrayAccess defaultInstance;
      public static ArrayAccess getDefaultInstance() {
        return defaultInstance;
      }

      public ArrayAccess getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private ArrayAccess(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = array_.toBuilder();
                }
                array_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(array_);
                  array_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 26: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = index_.toBuilder();
                }
                index_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(index_);
                  index_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Expression_ArrayAccess_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Expression_ArrayAccess_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Expression.ArrayAccess.class, boa.types.Ast.Expression.ArrayAccess.Builder.class);
      }

      public static com.google.protobuf.Parser<ArrayAccess> PARSER =
          new com.google.protobuf.AbstractParser<ArrayAccess>() {
        public ArrayAccess parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ArrayAccess(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<ArrayAccess> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ARRAYINDEX];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Expression.ExpressionKind shadowKind_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ARRAYINDEX];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ARRAYINDEX];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
        return shadowKind_;
      }

      // required .boa.types.Expression array = 2;
      public static final int ARRAY_FIELD_NUMBER = 2;
      private boa.types.Ast.Expression array_;
      /**
       * <code>required .boa.types.Expression array = 2;</code>
       *
       * <pre>
       ** The array expression 
       * </pre>
       */
      public boolean hasArray() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .boa.types.Expression array = 2;</code>
       *
       * <pre>
       ** The array expression 
       * </pre>
       */
      public boa.types.Ast.Expression getArray() {
        return array_;
      }
      /**
       * <code>required .boa.types.Expression array = 2;</code>
       *
       * <pre>
       ** The array expression 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getArrayOrBuilder() {
        return array_;
      }

      // required .boa.types.Expression index = 3;
      public static final int INDEX_FIELD_NUMBER = 3;
      private boa.types.Ast.Expression index_;
      /**
       * <code>required .boa.types.Expression index = 3;</code>
       *
       * <pre>
       ** The index expression 
       * </pre>
       */
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .boa.types.Expression index = 3;</code>
       *
       * <pre>
       ** The index expression 
       * </pre>
       */
      public boa.types.Ast.Expression getIndex() {
        return index_;
      }
      /**
       * <code>required .boa.types.Expression index = 3;</code>
       *
       * <pre>
       ** The index expression 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getIndexOrBuilder() {
        return index_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Expression.ExpressionKind.ARRAYINDEX;
        array_ = boa.types.Ast.Expression.getDefaultInstance();
        index_ = boa.types.Ast.Expression.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasArray()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasIndex()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getArray().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getIndex().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, array_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(3, index_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, array_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, index_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Expression.ArrayAccess parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.ArrayAccess parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.ArrayAccess parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.ArrayAccess parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.ArrayAccess parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.ArrayAccess parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.ArrayAccess parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Expression.ArrayAccess parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.ArrayAccess parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.ArrayAccess parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Expression.ArrayAccess prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Expression.ArrayAccess}
       *
       * <pre>
       ** An array access expression 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Expression.ArrayAccessOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Expression_ArrayAccess_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Expression_ArrayAccess_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Expression.ArrayAccess.class, boa.types.Ast.Expression.ArrayAccess.Builder.class);
        }

        // Construct using boa.types.Ast.Expression.ArrayAccess.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getArrayFieldBuilder();
            getIndexFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.ARRAYINDEX;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (arrayBuilder_ == null) {
            array_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            arrayBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          if (indexBuilder_ == null) {
            index_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            indexBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Expression_ArrayAccess_descriptor;
        }

        public boa.types.Ast.Expression.ArrayAccess getDefaultInstanceForType() {
          return boa.types.Ast.Expression.ArrayAccess.getDefaultInstance();
        }

        public boa.types.Ast.Expression.ArrayAccess build() {
          boa.types.Ast.Expression.ArrayAccess result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Expression.ArrayAccess buildPartial() {
          boa.types.Ast.Expression.ArrayAccess result = new boa.types.Ast.Expression.ArrayAccess(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (arrayBuilder_ == null) {
            result.array_ = array_;
          } else {
            result.array_ = arrayBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          if (indexBuilder_ == null) {
            result.index_ = index_;
          } else {
            result.index_ = indexBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Expression.ArrayAccess) {
            return mergeFrom((boa.types.Ast.Expression.ArrayAccess)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Expression.ArrayAccess other) {
          if (other == boa.types.Ast.Expression.ArrayAccess.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasArray()) {
            mergeArray(other.getArray());
          }
          if (other.hasIndex()) {
            mergeIndex(other.getIndex());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasArray()) {
            
            return false;
          }
          if (!hasIndex()) {
            
            return false;
          }
          if (!getArray().isInitialized()) {
            
            return false;
          }
          if (!getIndex().isInitialized()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Expression.ArrayAccess parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Expression.ArrayAccess) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ARRAYINDEX];
        private boa.types.Ast.Expression.ExpressionKind shadowKind_ = boa.types.Ast.Expression.ExpressionKind.ARRAYINDEX;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ARRAYINDEX];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ARRAYINDEX];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ARRAYINDEX];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ARRAYINDEX];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.ARRAYINDEX;
          onChanged();
          return this;
        }

        // required .boa.types.Expression array = 2;
        private boa.types.Ast.Expression array_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> arrayBuilder_;
        /**
         * <code>required .boa.types.Expression array = 2;</code>
         *
         * <pre>
         ** The array expression 
         * </pre>
         */
        public boolean hasArray() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required .boa.types.Expression array = 2;</code>
         *
         * <pre>
         ** The array expression 
         * </pre>
         */
        public boa.types.Ast.Expression getArray() {
          if (arrayBuilder_ == null) {
            return array_;
          } else {
            return arrayBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Expression array = 2;</code>
         *
         * <pre>
         ** The array expression 
         * </pre>
         */
        public Builder setArray(boa.types.Ast.Expression value) {
          if (arrayBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            array_ = value;
            onChanged();
          } else {
            arrayBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression array = 2;</code>
         *
         * <pre>
         ** The array expression 
         * </pre>
         */
        public Builder setArray(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (arrayBuilder_ == null) {
            array_ = builderForValue.build();
            onChanged();
          } else {
            arrayBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression array = 2;</code>
         *
         * <pre>
         ** The array expression 
         * </pre>
         */
        public Builder mergeArray(boa.types.Ast.Expression value) {
          if (arrayBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                array_ != boa.types.Ast.Expression.getDefaultInstance()) {
              array_ =
                boa.types.Ast.Expression.newBuilder(array_).mergeFrom(value).buildPartial();
            } else {
              array_ = value;
            }
            onChanged();
          } else {
            arrayBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression array = 2;</code>
         *
         * <pre>
         ** The array expression 
         * </pre>
         */
        public Builder clearArray() {
          if (arrayBuilder_ == null) {
            array_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            arrayBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>required .boa.types.Expression array = 2;</code>
         *
         * <pre>
         ** The array expression 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder getArrayBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getArrayFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Expression array = 2;</code>
         *
         * <pre>
         ** The array expression 
         * </pre>
         */
        public boa.types.Ast.ExpressionOrBuilder getArrayOrBuilder() {
          if (arrayBuilder_ != null) {
            return arrayBuilder_.getMessageOrBuilder();
          } else {
            return array_;
          }
        }
        /**
         * <code>required .boa.types.Expression array = 2;</code>
         *
         * <pre>
         ** The array expression 
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getArrayFieldBuilder() {
          if (arrayBuilder_ == null) {
            arrayBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    array_,
                    getParentForChildren(),
                    isClean());
            array_ = null;
          }
          return arrayBuilder_;
        }

        // required .boa.types.Expression index = 3;
        private boa.types.Ast.Expression index_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> indexBuilder_;
        /**
         * <code>required .boa.types.Expression index = 3;</code>
         *
         * <pre>
         ** The index expression 
         * </pre>
         */
        public boolean hasIndex() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required .boa.types.Expression index = 3;</code>
         *
         * <pre>
         ** The index expression 
         * </pre>
         */
        public boa.types.Ast.Expression getIndex() {
          if (indexBuilder_ == null) {
            return index_;
          } else {
            return indexBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Expression index = 3;</code>
         *
         * <pre>
         ** The index expression 
         * </pre>
         */
        public Builder setIndex(boa.types.Ast.Expression value) {
          if (indexBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            index_ = value;
            onChanged();
          } else {
            indexBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Expression index = 3;</code>
         *
         * <pre>
         ** The index expression 
         * </pre>
         */
        public Builder setIndex(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (indexBuilder_ == null) {
            index_ = builderForValue.build();
            onChanged();
          } else {
            indexBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Expression index = 3;</code>
         *
         * <pre>
         ** The index expression 
         * </pre>
         */
        public Builder mergeIndex(boa.types.Ast.Expression value) {
          if (indexBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                index_ != boa.types.Ast.Expression.getDefaultInstance()) {
              index_ =
                boa.types.Ast.Expression.newBuilder(index_).mergeFrom(value).buildPartial();
            } else {
              index_ = value;
            }
            onChanged();
          } else {
            indexBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Expression index = 3;</code>
         *
         * <pre>
         ** The index expression 
         * </pre>
         */
        public Builder clearIndex() {
          if (indexBuilder_ == null) {
            index_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            indexBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <code>required .boa.types.Expression index = 3;</code>
         *
         * <pre>
         ** The index expression 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder getIndexBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getIndexFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Expression index = 3;</code>
         *
         * <pre>
         ** The index expression 
         * </pre>
         */
        public boa.types.Ast.ExpressionOrBuilder getIndexOrBuilder() {
          if (indexBuilder_ != null) {
            return indexBuilder_.getMessageOrBuilder();
          } else {
            return index_;
          }
        }
        /**
         * <code>required .boa.types.Expression index = 3;</code>
         *
         * <pre>
         ** The index expression 
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getIndexFieldBuilder() {
          if (indexBuilder_ == null) {
            indexBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    index_,
                    getParentForChildren(),
                    isClean());
            index_ = null;
          }
          return indexBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Expression.ArrayAccess)
      }

      static {
        defaultInstance = new ArrayAccess(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Expression.ArrayAccess)
    }

    public interface ArrayCreationOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NEWARRAY];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NEWARRAY];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NEWARRAY];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind();

      // required .boa.types.Type new_type = 2;
      /**
       * <code>required .boa.types.Type new_type = 2;</code>
       *
       * <pre>
       ** The array type 
       * </pre>
       */
      boolean hasNewType();
      /**
       * <code>required .boa.types.Type new_type = 2;</code>
       *
       * <pre>
       ** The array type 
       * </pre>
       */
      boa.types.Ast.Type getNewType();
      /**
       * <code>required .boa.types.Type new_type = 2;</code>
       *
       * <pre>
       ** The array type 
       * </pre>
       */
      boa.types.Ast.TypeOrBuilder getNewTypeOrBuilder();

      // repeated .boa.types.Expression dimensions = 3;
      /**
       * <code>repeated .boa.types.Expression dimensions = 3;</code>
       *
       * <pre>
       ** The dimension expressions 
       * </pre>
       */
      java.util.List<boa.types.Ast.Expression> 
          getDimensionsList();
      /**
       * <code>repeated .boa.types.Expression dimensions = 3;</code>
       *
       * <pre>
       ** The dimension expressions 
       * </pre>
       */
      boa.types.Ast.Expression getDimensions(int index);
      /**
       * <code>repeated .boa.types.Expression dimensions = 3;</code>
       *
       * <pre>
       ** The dimension expressions 
       * </pre>
       */
      int getDimensionsCount();
      /**
       * <code>repeated .boa.types.Expression dimensions = 3;</code>
       *
       * <pre>
       ** The dimension expressions 
       * </pre>
       */
      java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
          getDimensionsOrBuilderList();
      /**
       * <code>repeated .boa.types.Expression dimensions = 3;</code>
       *
       * <pre>
       ** The dimension expressions 
       * </pre>
       */
      boa.types.Ast.ExpressionOrBuilder getDimensionsOrBuilder(
          int index);

      // optional .boa.types.Expression initializer = 4;
      /**
       * <code>optional .boa.types.Expression initializer = 4;</code>
       *
       * <pre>
       *optional ArrayInitializer initializer = 4 [(boa.types.alias) = "statement_1"]; FIXME
       * </pre>
       */
      boolean hasInitializer();
      /**
       * <code>optional .boa.types.Expression initializer = 4;</code>
       *
       * <pre>
       *optional ArrayInitializer initializer = 4 [(boa.types.alias) = "statement_1"]; FIXME
       * </pre>
       */
      boa.types.Ast.Expression getInitializer();
      /**
       * <code>optional .boa.types.Expression initializer = 4;</code>
       *
       * <pre>
       *optional ArrayInitializer initializer = 4 [(boa.types.alias) = "statement_1"]; FIXME
       * </pre>
       */
      boa.types.Ast.ExpressionOrBuilder getInitializerOrBuilder();
    }
    /**
     * Protobuf type {@code boa.types.Expression.ArrayCreation}
     *
     * <pre>
     ** An array creation expression 
     * </pre>
     */
    public static final class ArrayCreation extends
        com.google.protobuf.GeneratedMessage
        implements ArrayCreationOrBuilder {
      // Use ArrayCreation.newBuilder() to construct.
      private ArrayCreation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private ArrayCreation(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final ArrayCreation defaultInstance;
      public static ArrayCreation getDefaultInstance() {
        return defaultInstance;
      }

      public ArrayCreation getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private ArrayCreation(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                boa.types.Ast.Type.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = newType_.toBuilder();
                }
                newType_ = input.readMessage(boa.types.Ast.Type.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(newType_);
                  newType_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 26: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  dimensions_ = new java.util.ArrayList<boa.types.Ast.Expression>();
                  mutable_bitField0_ |= 0x00000004;
                }
                dimensions_.add(input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry));
                break;
              }
              case 34: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = initializer_.toBuilder();
                }
                initializer_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(initializer_);
                  initializer_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            dimensions_ = java.util.Collections.unmodifiableList(dimensions_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Expression_ArrayCreation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Expression_ArrayCreation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Expression.ArrayCreation.class, boa.types.Ast.Expression.ArrayCreation.Builder.class);
      }

      public static com.google.protobuf.Parser<ArrayCreation> PARSER =
          new com.google.protobuf.AbstractParser<ArrayCreation>() {
        public ArrayCreation parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ArrayCreation(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<ArrayCreation> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NEWARRAY];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Expression.ExpressionKind shadowKind_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NEWARRAY];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NEWARRAY];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
        return shadowKind_;
      }

      // required .boa.types.Type new_type = 2;
      public static final int NEW_TYPE_FIELD_NUMBER = 2;
      private boa.types.Ast.Type newType_;
      /**
       * <code>required .boa.types.Type new_type = 2;</code>
       *
       * <pre>
       ** The array type 
       * </pre>
       */
      public boolean hasNewType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .boa.types.Type new_type = 2;</code>
       *
       * <pre>
       ** The array type 
       * </pre>
       */
      public boa.types.Ast.Type getNewType() {
        return newType_;
      }
      /**
       * <code>required .boa.types.Type new_type = 2;</code>
       *
       * <pre>
       ** The array type 
       * </pre>
       */
      public boa.types.Ast.TypeOrBuilder getNewTypeOrBuilder() {
        return newType_;
      }

      // repeated .boa.types.Expression dimensions = 3;
      public static final int DIMENSIONS_FIELD_NUMBER = 3;
      private java.util.List<boa.types.Ast.Expression> dimensions_;
      /**
       * <code>repeated .boa.types.Expression dimensions = 3;</code>
       *
       * <pre>
       ** The dimension expressions 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Expression> getDimensionsList() {
        return dimensions_;
      }
      /**
       * <code>repeated .boa.types.Expression dimensions = 3;</code>
       *
       * <pre>
       ** The dimension expressions 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
          getDimensionsOrBuilderList() {
        return dimensions_;
      }
      /**
       * <code>repeated .boa.types.Expression dimensions = 3;</code>
       *
       * <pre>
       ** The dimension expressions 
       * </pre>
       */
      public int getDimensionsCount() {
        return dimensions_.size();
      }
      /**
       * <code>repeated .boa.types.Expression dimensions = 3;</code>
       *
       * <pre>
       ** The dimension expressions 
       * </pre>
       */
      public boa.types.Ast.Expression getDimensions(int index) {
        return dimensions_.get(index);
      }
      /**
       * <code>repeated .boa.types.Expression dimensions = 3;</code>
       *
       * <pre>
       ** The dimension expressions 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getDimensionsOrBuilder(
          int index) {
        return dimensions_.get(index);
      }

      // optional .boa.types.Expression initializer = 4;
      public static final int INITIALIZER_FIELD_NUMBER = 4;
      private boa.types.Ast.Expression initializer_;
      /**
       * <code>optional .boa.types.Expression initializer = 4;</code>
       *
       * <pre>
       *optional ArrayInitializer initializer = 4 [(boa.types.alias) = "statement_1"]; FIXME
       * </pre>
       */
      public boolean hasInitializer() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .boa.types.Expression initializer = 4;</code>
       *
       * <pre>
       *optional ArrayInitializer initializer = 4 [(boa.types.alias) = "statement_1"]; FIXME
       * </pre>
       */
      public boa.types.Ast.Expression getInitializer() {
        return initializer_;
      }
      /**
       * <code>optional .boa.types.Expression initializer = 4;</code>
       *
       * <pre>
       *optional ArrayInitializer initializer = 4 [(boa.types.alias) = "statement_1"]; FIXME
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getInitializerOrBuilder() {
        return initializer_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Expression.ExpressionKind.NEWARRAY;
        newType_ = boa.types.Ast.Type.getDefaultInstance();
        dimensions_ = java.util.Collections.emptyList();
        initializer_ = boa.types.Ast.Expression.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasNewType()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getNewType().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        for (int i = 0; i < getDimensionsCount(); i++) {
          if (!getDimensions(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        if (hasInitializer()) {
          if (!getInitializer().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, newType_);
        }
        for (int i = 0; i < dimensions_.size(); i++) {
          output.writeMessage(3, dimensions_.get(i));
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(4, initializer_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, newType_);
        }
        for (int i = 0; i < dimensions_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, dimensions_.get(i));
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, initializer_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Expression.ArrayCreation parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.ArrayCreation parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.ArrayCreation parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.ArrayCreation parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.ArrayCreation parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.ArrayCreation parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.ArrayCreation parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Expression.ArrayCreation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.ArrayCreation parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.ArrayCreation parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Expression.ArrayCreation prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Expression.ArrayCreation}
       *
       * <pre>
       ** An array creation expression 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Expression.ArrayCreationOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Expression_ArrayCreation_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Expression_ArrayCreation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Expression.ArrayCreation.class, boa.types.Ast.Expression.ArrayCreation.Builder.class);
        }

        // Construct using boa.types.Ast.Expression.ArrayCreation.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getNewTypeFieldBuilder();
            getDimensionsFieldBuilder();
            getInitializerFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.NEWARRAY;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (newTypeBuilder_ == null) {
            newType_ = boa.types.Ast.Type.getDefaultInstance();
          } else {
            newTypeBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          if (dimensionsBuilder_ == null) {
            dimensions_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            dimensionsBuilder_.clear();
          }
          if (initializerBuilder_ == null) {
            initializer_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            initializerBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Expression_ArrayCreation_descriptor;
        }

        public boa.types.Ast.Expression.ArrayCreation getDefaultInstanceForType() {
          return boa.types.Ast.Expression.ArrayCreation.getDefaultInstance();
        }

        public boa.types.Ast.Expression.ArrayCreation build() {
          boa.types.Ast.Expression.ArrayCreation result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Expression.ArrayCreation buildPartial() {
          boa.types.Ast.Expression.ArrayCreation result = new boa.types.Ast.Expression.ArrayCreation(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (newTypeBuilder_ == null) {
            result.newType_ = newType_;
          } else {
            result.newType_ = newTypeBuilder_.build();
          }
          if (dimensionsBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              dimensions_ = java.util.Collections.unmodifiableList(dimensions_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.dimensions_ = dimensions_;
          } else {
            result.dimensions_ = dimensionsBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000004;
          }
          if (initializerBuilder_ == null) {
            result.initializer_ = initializer_;
          } else {
            result.initializer_ = initializerBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Expression.ArrayCreation) {
            return mergeFrom((boa.types.Ast.Expression.ArrayCreation)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Expression.ArrayCreation other) {
          if (other == boa.types.Ast.Expression.ArrayCreation.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasNewType()) {
            mergeNewType(other.getNewType());
          }
          if (dimensionsBuilder_ == null) {
            if (!other.dimensions_.isEmpty()) {
              if (dimensions_.isEmpty()) {
                dimensions_ = other.dimensions_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureDimensionsIsMutable();
                dimensions_.addAll(other.dimensions_);
              }
              onChanged();
            }
          } else {
            if (!other.dimensions_.isEmpty()) {
              if (dimensionsBuilder_.isEmpty()) {
                dimensionsBuilder_.dispose();
                dimensionsBuilder_ = null;
                dimensions_ = other.dimensions_;
                bitField0_ = (bitField0_ & ~0x00000004);
                dimensionsBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getDimensionsFieldBuilder() : null;
              } else {
                dimensionsBuilder_.addAllMessages(other.dimensions_);
              }
            }
          }
          if (other.hasInitializer()) {
            mergeInitializer(other.getInitializer());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasNewType()) {
            
            return false;
          }
          if (!getNewType().isInitialized()) {
            
            return false;
          }
          for (int i = 0; i < getDimensionsCount(); i++) {
            if (!getDimensions(i).isInitialized()) {
              
              return false;
            }
          }
          if (hasInitializer()) {
            if (!getInitializer().isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Expression.ArrayCreation parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Expression.ArrayCreation) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NEWARRAY];
        private boa.types.Ast.Expression.ExpressionKind shadowKind_ = boa.types.Ast.Expression.ExpressionKind.NEWARRAY;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NEWARRAY];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NEWARRAY];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NEWARRAY];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NEWARRAY];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.NEWARRAY;
          onChanged();
          return this;
        }

        // required .boa.types.Type new_type = 2;
        private boa.types.Ast.Type newType_ = boa.types.Ast.Type.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> newTypeBuilder_;
        /**
         * <code>required .boa.types.Type new_type = 2;</code>
         *
         * <pre>
         ** The array type 
         * </pre>
         */
        public boolean hasNewType() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required .boa.types.Type new_type = 2;</code>
         *
         * <pre>
         ** The array type 
         * </pre>
         */
        public boa.types.Ast.Type getNewType() {
          if (newTypeBuilder_ == null) {
            return newType_;
          } else {
            return newTypeBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Type new_type = 2;</code>
         *
         * <pre>
         ** The array type 
         * </pre>
         */
        public Builder setNewType(boa.types.Ast.Type value) {
          if (newTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            newType_ = value;
            onChanged();
          } else {
            newTypeBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Type new_type = 2;</code>
         *
         * <pre>
         ** The array type 
         * </pre>
         */
        public Builder setNewType(
            boa.types.Ast.Type.Builder builderForValue) {
          if (newTypeBuilder_ == null) {
            newType_ = builderForValue.build();
            onChanged();
          } else {
            newTypeBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Type new_type = 2;</code>
         *
         * <pre>
         ** The array type 
         * </pre>
         */
        public Builder mergeNewType(boa.types.Ast.Type value) {
          if (newTypeBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                newType_ != boa.types.Ast.Type.getDefaultInstance()) {
              newType_ =
                boa.types.Ast.Type.newBuilder(newType_).mergeFrom(value).buildPartial();
            } else {
              newType_ = value;
            }
            onChanged();
          } else {
            newTypeBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Type new_type = 2;</code>
         *
         * <pre>
         ** The array type 
         * </pre>
         */
        public Builder clearNewType() {
          if (newTypeBuilder_ == null) {
            newType_ = boa.types.Ast.Type.getDefaultInstance();
            onChanged();
          } else {
            newTypeBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>required .boa.types.Type new_type = 2;</code>
         *
         * <pre>
         ** The array type 
         * </pre>
         */
        public boa.types.Ast.Type.Builder getNewTypeBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getNewTypeFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Type new_type = 2;</code>
         *
         * <pre>
         ** The array type 
         * </pre>
         */
        public boa.types.Ast.TypeOrBuilder getNewTypeOrBuilder() {
          if (newTypeBuilder_ != null) {
            return newTypeBuilder_.getMessageOrBuilder();
          } else {
            return newType_;
          }
        }
        /**
         * <code>required .boa.types.Type new_type = 2;</code>
         *
         * <pre>
         ** The array type 
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> 
            getNewTypeFieldBuilder() {
          if (newTypeBuilder_ == null) {
            newTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder>(
                    newType_,
                    getParentForChildren(),
                    isClean());
            newType_ = null;
          }
          return newTypeBuilder_;
        }

        // repeated .boa.types.Expression dimensions = 3;
        private java.util.List<boa.types.Ast.Expression> dimensions_ =
          java.util.Collections.emptyList();
        private void ensureDimensionsIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            dimensions_ = new java.util.ArrayList<boa.types.Ast.Expression>(dimensions_);
            bitField0_ |= 0x00000004;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> dimensionsBuilder_;

        /**
         * <code>repeated .boa.types.Expression dimensions = 3;</code>
         *
         * <pre>
         ** The dimension expressions 
         * </pre>
         */
        public java.util.List<boa.types.Ast.Expression> getDimensionsList() {
          if (dimensionsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(dimensions_);
          } else {
            return dimensionsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .boa.types.Expression dimensions = 3;</code>
         *
         * <pre>
         ** The dimension expressions 
         * </pre>
         */
        public int getDimensionsCount() {
          if (dimensionsBuilder_ == null) {
            return dimensions_.size();
          } else {
            return dimensionsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .boa.types.Expression dimensions = 3;</code>
         *
         * <pre>
         ** The dimension expressions 
         * </pre>
         */
        public boa.types.Ast.Expression getDimensions(int index) {
          if (dimensionsBuilder_ == null) {
            return dimensions_.get(index);
          } else {
            return dimensionsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .boa.types.Expression dimensions = 3;</code>
         *
         * <pre>
         ** The dimension expressions 
         * </pre>
         */
        public Builder setDimensions(
            int index, boa.types.Ast.Expression value) {
          if (dimensionsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDimensionsIsMutable();
            dimensions_.set(index, value);
            onChanged();
          } else {
            dimensionsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression dimensions = 3;</code>
         *
         * <pre>
         ** The dimension expressions 
         * </pre>
         */
        public Builder setDimensions(
            int index, boa.types.Ast.Expression.Builder builderForValue) {
          if (dimensionsBuilder_ == null) {
            ensureDimensionsIsMutable();
            dimensions_.set(index, builderForValue.build());
            onChanged();
          } else {
            dimensionsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression dimensions = 3;</code>
         *
         * <pre>
         ** The dimension expressions 
         * </pre>
         */
        public Builder addDimensions(boa.types.Ast.Expression value) {
          if (dimensionsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDimensionsIsMutable();
            dimensions_.add(value);
            onChanged();
          } else {
            dimensionsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression dimensions = 3;</code>
         *
         * <pre>
         ** The dimension expressions 
         * </pre>
         */
        public Builder addDimensions(
            int index, boa.types.Ast.Expression value) {
          if (dimensionsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDimensionsIsMutable();
            dimensions_.add(index, value);
            onChanged();
          } else {
            dimensionsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression dimensions = 3;</code>
         *
         * <pre>
         ** The dimension expressions 
         * </pre>
         */
        public Builder addDimensions(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (dimensionsBuilder_ == null) {
            ensureDimensionsIsMutable();
            dimensions_.add(builderForValue.build());
            onChanged();
          } else {
            dimensionsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression dimensions = 3;</code>
         *
         * <pre>
         ** The dimension expressions 
         * </pre>
         */
        public Builder addDimensions(
            int index, boa.types.Ast.Expression.Builder builderForValue) {
          if (dimensionsBuilder_ == null) {
            ensureDimensionsIsMutable();
            dimensions_.add(index, builderForValue.build());
            onChanged();
          } else {
            dimensionsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression dimensions = 3;</code>
         *
         * <pre>
         ** The dimension expressions 
         * </pre>
         */
        public Builder addAllDimensions(
            java.lang.Iterable<? extends boa.types.Ast.Expression> values) {
          if (dimensionsBuilder_ == null) {
            ensureDimensionsIsMutable();
            super.addAll(values, dimensions_);
            onChanged();
          } else {
            dimensionsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression dimensions = 3;</code>
         *
         * <pre>
         ** The dimension expressions 
         * </pre>
         */
        public Builder clearDimensions() {
          if (dimensionsBuilder_ == null) {
            dimensions_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
          } else {
            dimensionsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression dimensions = 3;</code>
         *
         * <pre>
         ** The dimension expressions 
         * </pre>
         */
        public Builder removeDimensions(int index) {
          if (dimensionsBuilder_ == null) {
            ensureDimensionsIsMutable();
            dimensions_.remove(index);
            onChanged();
          } else {
            dimensionsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression dimensions = 3;</code>
         *
         * <pre>
         ** The dimension expressions 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder getDimensionsBuilder(
            int index) {
          return getDimensionsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .boa.types.Expression dimensions = 3;</code>
         *
         * <pre>
         ** The dimension expressions 
         * </pre>
         */
        public boa.types.Ast.ExpressionOrBuilder getDimensionsOrBuilder(
            int index) {
          if (dimensionsBuilder_ == null) {
            return dimensions_.get(index);  } else {
            return dimensionsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .boa.types.Expression dimensions = 3;</code>
         *
         * <pre>
         ** The dimension expressions 
         * </pre>
         */
        public java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
             getDimensionsOrBuilderList() {
          if (dimensionsBuilder_ != null) {
            return dimensionsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(dimensions_);
          }
        }
        /**
         * <code>repeated .boa.types.Expression dimensions = 3;</code>
         *
         * <pre>
         ** The dimension expressions 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder addDimensionsBuilder() {
          return getDimensionsFieldBuilder().addBuilder(
              boa.types.Ast.Expression.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Expression dimensions = 3;</code>
         *
         * <pre>
         ** The dimension expressions 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder addDimensionsBuilder(
            int index) {
          return getDimensionsFieldBuilder().addBuilder(
              index, boa.types.Ast.Expression.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Expression dimensions = 3;</code>
         *
         * <pre>
         ** The dimension expressions 
         * </pre>
         */
        public java.util.List<boa.types.Ast.Expression.Builder> 
             getDimensionsBuilderList() {
          return getDimensionsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getDimensionsFieldBuilder() {
          if (dimensionsBuilder_ == null) {
            dimensionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    dimensions_,
                    ((bitField0_ & 0x00000004) == 0x00000004),
                    getParentForChildren(),
                    isClean());
            dimensions_ = null;
          }
          return dimensionsBuilder_;
        }

        // optional .boa.types.Expression initializer = 4;
        private boa.types.Ast.Expression initializer_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> initializerBuilder_;
        /**
         * <code>optional .boa.types.Expression initializer = 4;</code>
         *
         * <pre>
         *optional ArrayInitializer initializer = 4 [(boa.types.alias) = "statement_1"]; FIXME
         * </pre>
         */
        public boolean hasInitializer() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional .boa.types.Expression initializer = 4;</code>
         *
         * <pre>
         *optional ArrayInitializer initializer = 4 [(boa.types.alias) = "statement_1"]; FIXME
         * </pre>
         */
        public boa.types.Ast.Expression getInitializer() {
          if (initializerBuilder_ == null) {
            return initializer_;
          } else {
            return initializerBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .boa.types.Expression initializer = 4;</code>
         *
         * <pre>
         *optional ArrayInitializer initializer = 4 [(boa.types.alias) = "statement_1"]; FIXME
         * </pre>
         */
        public Builder setInitializer(boa.types.Ast.Expression value) {
          if (initializerBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            initializer_ = value;
            onChanged();
          } else {
            initializerBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .boa.types.Expression initializer = 4;</code>
         *
         * <pre>
         *optional ArrayInitializer initializer = 4 [(boa.types.alias) = "statement_1"]; FIXME
         * </pre>
         */
        public Builder setInitializer(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (initializerBuilder_ == null) {
            initializer_ = builderForValue.build();
            onChanged();
          } else {
            initializerBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .boa.types.Expression initializer = 4;</code>
         *
         * <pre>
         *optional ArrayInitializer initializer = 4 [(boa.types.alias) = "statement_1"]; FIXME
         * </pre>
         */
        public Builder mergeInitializer(boa.types.Ast.Expression value) {
          if (initializerBuilder_ == null) {
            if (((bitField0_ & 0x00000008) == 0x00000008) &&
                initializer_ != boa.types.Ast.Expression.getDefaultInstance()) {
              initializer_ =
                boa.types.Ast.Expression.newBuilder(initializer_).mergeFrom(value).buildPartial();
            } else {
              initializer_ = value;
            }
            onChanged();
          } else {
            initializerBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .boa.types.Expression initializer = 4;</code>
         *
         * <pre>
         *optional ArrayInitializer initializer = 4 [(boa.types.alias) = "statement_1"]; FIXME
         * </pre>
         */
        public Builder clearInitializer() {
          if (initializerBuilder_ == null) {
            initializer_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            initializerBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }
        /**
         * <code>optional .boa.types.Expression initializer = 4;</code>
         *
         * <pre>
         *optional ArrayInitializer initializer = 4 [(boa.types.alias) = "statement_1"]; FIXME
         * </pre>
         */
        public boa.types.Ast.Expression.Builder getInitializerBuilder() {
          bitField0_ |= 0x00000008;
          onChanged();
          return getInitializerFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .boa.types.Expression initializer = 4;</code>
         *
         * <pre>
         *optional ArrayInitializer initializer = 4 [(boa.types.alias) = "statement_1"]; FIXME
         * </pre>
         */
        public boa.types.Ast.ExpressionOrBuilder getInitializerOrBuilder() {
          if (initializerBuilder_ != null) {
            return initializerBuilder_.getMessageOrBuilder();
          } else {
            return initializer_;
          }
        }
        /**
         * <code>optional .boa.types.Expression initializer = 4;</code>
         *
         * <pre>
         *optional ArrayInitializer initializer = 4 [(boa.types.alias) = "statement_1"]; FIXME
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getInitializerFieldBuilder() {
          if (initializerBuilder_ == null) {
            initializerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    initializer_,
                    getParentForChildren(),
                    isClean());
            initializer_ = null;
          }
          return initializerBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Expression.ArrayCreation)
      }

      static {
        defaultInstance = new ArrayCreation(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Expression.ArrayCreation)
    }

    public interface ArrayInitializerOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ARRAYINIT];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ARRAYINIT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ARRAYINIT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind();

      // repeated .boa.types.Expression expressions = 2;
      /**
       * <code>repeated .boa.types.Expression expressions = 2;</code>
       *
       * <pre>
       ** The expressions in the initializer 
       * </pre>
       */
      java.util.List<boa.types.Ast.Expression> 
          getExpressionsList();
      /**
       * <code>repeated .boa.types.Expression expressions = 2;</code>
       *
       * <pre>
       ** The expressions in the initializer 
       * </pre>
       */
      boa.types.Ast.Expression getExpressions(int index);
      /**
       * <code>repeated .boa.types.Expression expressions = 2;</code>
       *
       * <pre>
       ** The expressions in the initializer 
       * </pre>
       */
      int getExpressionsCount();
      /**
       * <code>repeated .boa.types.Expression expressions = 2;</code>
       *
       * <pre>
       ** The expressions in the initializer 
       * </pre>
       */
      java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
          getExpressionsOrBuilderList();
      /**
       * <code>repeated .boa.types.Expression expressions = 2;</code>
       *
       * <pre>
       ** The expressions in the initializer 
       * </pre>
       */
      boa.types.Ast.ExpressionOrBuilder getExpressionsOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code boa.types.Expression.ArrayInitializer}
     *
     * <pre>
     ** An array initializer expression 
     * </pre>
     */
    public static final class ArrayInitializer extends
        com.google.protobuf.GeneratedMessage
        implements ArrayInitializerOrBuilder {
      // Use ArrayInitializer.newBuilder() to construct.
      private ArrayInitializer(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private ArrayInitializer(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final ArrayInitializer defaultInstance;
      public static ArrayInitializer getDefaultInstance() {
        return defaultInstance;
      }

      public ArrayInitializer getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private ArrayInitializer(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  expressions_ = new java.util.ArrayList<boa.types.Ast.Expression>();
                  mutable_bitField0_ |= 0x00000002;
                }
                expressions_.add(input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            expressions_ = java.util.Collections.unmodifiableList(expressions_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Expression_ArrayInitializer_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Expression_ArrayInitializer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Expression.ArrayInitializer.class, boa.types.Ast.Expression.ArrayInitializer.Builder.class);
      }

      public static com.google.protobuf.Parser<ArrayInitializer> PARSER =
          new com.google.protobuf.AbstractParser<ArrayInitializer>() {
        public ArrayInitializer parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ArrayInitializer(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<ArrayInitializer> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ARRAYINIT];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Expression.ExpressionKind shadowKind_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ARRAYINIT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ARRAYINIT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
        return shadowKind_;
      }

      // repeated .boa.types.Expression expressions = 2;
      public static final int EXPRESSIONS_FIELD_NUMBER = 2;
      private java.util.List<boa.types.Ast.Expression> expressions_;
      /**
       * <code>repeated .boa.types.Expression expressions = 2;</code>
       *
       * <pre>
       ** The expressions in the initializer 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Expression> getExpressionsList() {
        return expressions_;
      }
      /**
       * <code>repeated .boa.types.Expression expressions = 2;</code>
       *
       * <pre>
       ** The expressions in the initializer 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
          getExpressionsOrBuilderList() {
        return expressions_;
      }
      /**
       * <code>repeated .boa.types.Expression expressions = 2;</code>
       *
       * <pre>
       ** The expressions in the initializer 
       * </pre>
       */
      public int getExpressionsCount() {
        return expressions_.size();
      }
      /**
       * <code>repeated .boa.types.Expression expressions = 2;</code>
       *
       * <pre>
       ** The expressions in the initializer 
       * </pre>
       */
      public boa.types.Ast.Expression getExpressions(int index) {
        return expressions_.get(index);
      }
      /**
       * <code>repeated .boa.types.Expression expressions = 2;</code>
       *
       * <pre>
       ** The expressions in the initializer 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getExpressionsOrBuilder(
          int index) {
        return expressions_.get(index);
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Expression.ExpressionKind.ARRAYINIT;
        expressions_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        for (int i = 0; i < getExpressionsCount(); i++) {
          if (!getExpressions(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        for (int i = 0; i < expressions_.size(); i++) {
          output.writeMessage(2, expressions_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        for (int i = 0; i < expressions_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, expressions_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Expression.ArrayInitializer parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.ArrayInitializer parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.ArrayInitializer parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.ArrayInitializer parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.ArrayInitializer parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.ArrayInitializer parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.ArrayInitializer parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Expression.ArrayInitializer parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.ArrayInitializer parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.ArrayInitializer parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Expression.ArrayInitializer prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Expression.ArrayInitializer}
       *
       * <pre>
       ** An array initializer expression 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Expression.ArrayInitializerOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Expression_ArrayInitializer_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Expression_ArrayInitializer_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Expression.ArrayInitializer.class, boa.types.Ast.Expression.ArrayInitializer.Builder.class);
        }

        // Construct using boa.types.Ast.Expression.ArrayInitializer.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getExpressionsFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.ARRAYINIT;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (expressionsBuilder_ == null) {
            expressions_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            expressionsBuilder_.clear();
          }
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Expression_ArrayInitializer_descriptor;
        }

        public boa.types.Ast.Expression.ArrayInitializer getDefaultInstanceForType() {
          return boa.types.Ast.Expression.ArrayInitializer.getDefaultInstance();
        }

        public boa.types.Ast.Expression.ArrayInitializer build() {
          boa.types.Ast.Expression.ArrayInitializer result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Expression.ArrayInitializer buildPartial() {
          boa.types.Ast.Expression.ArrayInitializer result = new boa.types.Ast.Expression.ArrayInitializer(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (expressionsBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              expressions_ = java.util.Collections.unmodifiableList(expressions_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.expressions_ = expressions_;
          } else {
            result.expressions_ = expressionsBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Expression.ArrayInitializer) {
            return mergeFrom((boa.types.Ast.Expression.ArrayInitializer)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Expression.ArrayInitializer other) {
          if (other == boa.types.Ast.Expression.ArrayInitializer.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (expressionsBuilder_ == null) {
            if (!other.expressions_.isEmpty()) {
              if (expressions_.isEmpty()) {
                expressions_ = other.expressions_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureExpressionsIsMutable();
                expressions_.addAll(other.expressions_);
              }
              onChanged();
            }
          } else {
            if (!other.expressions_.isEmpty()) {
              if (expressionsBuilder_.isEmpty()) {
                expressionsBuilder_.dispose();
                expressionsBuilder_ = null;
                expressions_ = other.expressions_;
                bitField0_ = (bitField0_ & ~0x00000002);
                expressionsBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getExpressionsFieldBuilder() : null;
              } else {
                expressionsBuilder_.addAllMessages(other.expressions_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          for (int i = 0; i < getExpressionsCount(); i++) {
            if (!getExpressions(i).isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Expression.ArrayInitializer parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Expression.ArrayInitializer) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ARRAYINIT];
        private boa.types.Ast.Expression.ExpressionKind shadowKind_ = boa.types.Ast.Expression.ExpressionKind.ARRAYINIT;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ARRAYINIT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ARRAYINIT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ARRAYINIT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = ARRAYINIT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.ARRAYINIT;
          onChanged();
          return this;
        }

        // repeated .boa.types.Expression expressions = 2;
        private java.util.List<boa.types.Ast.Expression> expressions_ =
          java.util.Collections.emptyList();
        private void ensureExpressionsIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            expressions_ = new java.util.ArrayList<boa.types.Ast.Expression>(expressions_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> expressionsBuilder_;

        /**
         * <code>repeated .boa.types.Expression expressions = 2;</code>
         *
         * <pre>
         ** The expressions in the initializer 
         * </pre>
         */
        public java.util.List<boa.types.Ast.Expression> getExpressionsList() {
          if (expressionsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(expressions_);
          } else {
            return expressionsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .boa.types.Expression expressions = 2;</code>
         *
         * <pre>
         ** The expressions in the initializer 
         * </pre>
         */
        public int getExpressionsCount() {
          if (expressionsBuilder_ == null) {
            return expressions_.size();
          } else {
            return expressionsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .boa.types.Expression expressions = 2;</code>
         *
         * <pre>
         ** The expressions in the initializer 
         * </pre>
         */
        public boa.types.Ast.Expression getExpressions(int index) {
          if (expressionsBuilder_ == null) {
            return expressions_.get(index);
          } else {
            return expressionsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .boa.types.Expression expressions = 2;</code>
         *
         * <pre>
         ** The expressions in the initializer 
         * </pre>
         */
        public Builder setExpressions(
            int index, boa.types.Ast.Expression value) {
          if (expressionsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureExpressionsIsMutable();
            expressions_.set(index, value);
            onChanged();
          } else {
            expressionsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression expressions = 2;</code>
         *
         * <pre>
         ** The expressions in the initializer 
         * </pre>
         */
        public Builder setExpressions(
            int index, boa.types.Ast.Expression.Builder builderForValue) {
          if (expressionsBuilder_ == null) {
            ensureExpressionsIsMutable();
            expressions_.set(index, builderForValue.build());
            onChanged();
          } else {
            expressionsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression expressions = 2;</code>
         *
         * <pre>
         ** The expressions in the initializer 
         * </pre>
         */
        public Builder addExpressions(boa.types.Ast.Expression value) {
          if (expressionsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureExpressionsIsMutable();
            expressions_.add(value);
            onChanged();
          } else {
            expressionsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression expressions = 2;</code>
         *
         * <pre>
         ** The expressions in the initializer 
         * </pre>
         */
        public Builder addExpressions(
            int index, boa.types.Ast.Expression value) {
          if (expressionsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureExpressionsIsMutable();
            expressions_.add(index, value);
            onChanged();
          } else {
            expressionsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression expressions = 2;</code>
         *
         * <pre>
         ** The expressions in the initializer 
         * </pre>
         */
        public Builder addExpressions(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (expressionsBuilder_ == null) {
            ensureExpressionsIsMutable();
            expressions_.add(builderForValue.build());
            onChanged();
          } else {
            expressionsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression expressions = 2;</code>
         *
         * <pre>
         ** The expressions in the initializer 
         * </pre>
         */
        public Builder addExpressions(
            int index, boa.types.Ast.Expression.Builder builderForValue) {
          if (expressionsBuilder_ == null) {
            ensureExpressionsIsMutable();
            expressions_.add(index, builderForValue.build());
            onChanged();
          } else {
            expressionsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression expressions = 2;</code>
         *
         * <pre>
         ** The expressions in the initializer 
         * </pre>
         */
        public Builder addAllExpressions(
            java.lang.Iterable<? extends boa.types.Ast.Expression> values) {
          if (expressionsBuilder_ == null) {
            ensureExpressionsIsMutable();
            super.addAll(values, expressions_);
            onChanged();
          } else {
            expressionsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression expressions = 2;</code>
         *
         * <pre>
         ** The expressions in the initializer 
         * </pre>
         */
        public Builder clearExpressions() {
          if (expressionsBuilder_ == null) {
            expressions_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            expressionsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression expressions = 2;</code>
         *
         * <pre>
         ** The expressions in the initializer 
         * </pre>
         */
        public Builder removeExpressions(int index) {
          if (expressionsBuilder_ == null) {
            ensureExpressionsIsMutable();
            expressions_.remove(index);
            onChanged();
          } else {
            expressionsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression expressions = 2;</code>
         *
         * <pre>
         ** The expressions in the initializer 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder getExpressionsBuilder(
            int index) {
          return getExpressionsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .boa.types.Expression expressions = 2;</code>
         *
         * <pre>
         ** The expressions in the initializer 
         * </pre>
         */
        public boa.types.Ast.ExpressionOrBuilder getExpressionsOrBuilder(
            int index) {
          if (expressionsBuilder_ == null) {
            return expressions_.get(index);  } else {
            return expressionsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .boa.types.Expression expressions = 2;</code>
         *
         * <pre>
         ** The expressions in the initializer 
         * </pre>
         */
        public java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
             getExpressionsOrBuilderList() {
          if (expressionsBuilder_ != null) {
            return expressionsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(expressions_);
          }
        }
        /**
         * <code>repeated .boa.types.Expression expressions = 2;</code>
         *
         * <pre>
         ** The expressions in the initializer 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder addExpressionsBuilder() {
          return getExpressionsFieldBuilder().addBuilder(
              boa.types.Ast.Expression.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Expression expressions = 2;</code>
         *
         * <pre>
         ** The expressions in the initializer 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder addExpressionsBuilder(
            int index) {
          return getExpressionsFieldBuilder().addBuilder(
              index, boa.types.Ast.Expression.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Expression expressions = 2;</code>
         *
         * <pre>
         ** The expressions in the initializer 
         * </pre>
         */
        public java.util.List<boa.types.Ast.Expression.Builder> 
             getExpressionsBuilderList() {
          return getExpressionsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getExpressionsFieldBuilder() {
          if (expressionsBuilder_ == null) {
            expressionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    expressions_,
                    ((bitField0_ & 0x00000002) == 0x00000002),
                    getParentForChildren(),
                    isClean());
            expressions_ = null;
          }
          return expressionsBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Expression.ArrayInitializer)
      }

      static {
        defaultInstance = new ArrayInitializer(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Expression.ArrayInitializer)
    }

    public interface AssignmentOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = ASSIGN];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = ASSIGN];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind1();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = ASSIGN];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind1();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = ASSIGN_ADD];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = ASSIGN_ADD];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind2();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = ASSIGN_ADD];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind2();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = ASSIGN_SUB];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = ASSIGN_SUB];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind3();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = ASSIGN_SUB];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind3();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = ASSIGN_MULT];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = ASSIGN_MULT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind4();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = ASSIGN_MULT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind4();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = ASSIGN_DIV];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = ASSIGN_DIV];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind5();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = ASSIGN_DIV];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind5();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = ASSIGN_MOD];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = ASSIGN_MOD];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind6();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = ASSIGN_MOD];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind6();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_7 = 7 [default = ASSIGN_BITXOR];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_7 = 7 [default = ASSIGN_BITXOR];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind7();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_7 = 7 [default = ASSIGN_BITXOR];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind7();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_8 = 8 [default = ASSIGN_BITAND];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_8 = 8 [default = ASSIGN_BITAND];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind8();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_8 = 8 [default = ASSIGN_BITAND];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind8();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_9 = 9 [default = ASSIGN_BITOR];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_9 = 9 [default = ASSIGN_BITOR];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind9();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_9 = 9 [default = ASSIGN_BITOR];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind9();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_10 = 10 [default = ASSIGN_LSHIFT];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_10 = 10 [default = ASSIGN_LSHIFT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind10();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_10 = 10 [default = ASSIGN_LSHIFT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind10();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_11 = 11 [default = ASSIGN_RSHIFT];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_11 = 11 [default = ASSIGN_RSHIFT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind11();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_11 = 11 [default = ASSIGN_RSHIFT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind11();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_12 = 12 [default = ASSIGN_UNSIGNEDRSHIFT];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_12 = 12 [default = ASSIGN_UNSIGNEDRSHIFT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind12();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_12 = 12 [default = ASSIGN_UNSIGNEDRSHIFT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind12();

      // required .boa.types.Expression left_hand_side = 13;
      /**
       * <code>required .boa.types.Expression left_hand_side = 13;</code>
       *
       * <pre>
       ** The left hand side of the assignment 
       * </pre>
       */
      boolean hasLeftHandSide();
      /**
       * <code>required .boa.types.Expression left_hand_side = 13;</code>
       *
       * <pre>
       ** The left hand side of the assignment 
       * </pre>
       */
      boa.types.Ast.Expression getLeftHandSide();
      /**
       * <code>required .boa.types.Expression left_hand_side = 13;</code>
       *
       * <pre>
       ** The left hand side of the assignment 
       * </pre>
       */
      boa.types.Ast.ExpressionOrBuilder getLeftHandSideOrBuilder();

      // required .boa.types.Expression right_hand_side = 14;
      /**
       * <code>required .boa.types.Expression right_hand_side = 14;</code>
       *
       * <pre>
       ** The right hand side of the assignment 
       * </pre>
       */
      boolean hasRightHandSide();
      /**
       * <code>required .boa.types.Expression right_hand_side = 14;</code>
       *
       * <pre>
       ** The right hand side of the assignment 
       * </pre>
       */
      boa.types.Ast.Expression getRightHandSide();
      /**
       * <code>required .boa.types.Expression right_hand_side = 14;</code>
       *
       * <pre>
       ** The right hand side of the assignment 
       * </pre>
       */
      boa.types.Ast.ExpressionOrBuilder getRightHandSideOrBuilder();

      // required .boa.types.Expression.ExpressionKind operator = 15;
      /**
       * <code>required .boa.types.Expression.ExpressionKind operator = 15;</code>
       *
       * <pre>
       ** The assignment operator 
       * </pre>
       */
      boolean hasOperator();
      /**
       * <code>required .boa.types.Expression.ExpressionKind operator = 15;</code>
       *
       * <pre>
       ** The assignment operator 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getOperator();
    }
    /**
     * Protobuf type {@code boa.types.Expression.Assignment}
     *
     * <pre>
     ** Any kind of assignment expression 
     * </pre>
     */
    public static final class Assignment extends
        com.google.protobuf.GeneratedMessage
        implements AssignmentOrBuilder {
      // Use Assignment.newBuilder() to construct.
      private Assignment(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Assignment(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Assignment defaultInstance;
      public static Assignment getDefaultInstance() {
        return defaultInstance;
      }

      public Assignment getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Assignment(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind1_ = value;
                }
                break;
              }
              case 16: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(2, rawValue);
                } else {
                  bitField0_ |= 0x00000002;
                  shadowKind2_ = value;
                }
                break;
              }
              case 24: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(3, rawValue);
                } else {
                  bitField0_ |= 0x00000004;
                  shadowKind3_ = value;
                }
                break;
              }
              case 32: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(4, rawValue);
                } else {
                  bitField0_ |= 0x00000008;
                  shadowKind4_ = value;
                }
                break;
              }
              case 40: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(5, rawValue);
                } else {
                  bitField0_ |= 0x00000010;
                  shadowKind5_ = value;
                }
                break;
              }
              case 48: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(6, rawValue);
                } else {
                  bitField0_ |= 0x00000020;
                  shadowKind6_ = value;
                }
                break;
              }
              case 56: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(7, rawValue);
                } else {
                  bitField0_ |= 0x00000040;
                  shadowKind7_ = value;
                }
                break;
              }
              case 64: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(8, rawValue);
                } else {
                  bitField0_ |= 0x00000080;
                  shadowKind8_ = value;
                }
                break;
              }
              case 72: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(9, rawValue);
                } else {
                  bitField0_ |= 0x00000100;
                  shadowKind9_ = value;
                }
                break;
              }
              case 80: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(10, rawValue);
                } else {
                  bitField0_ |= 0x00000200;
                  shadowKind10_ = value;
                }
                break;
              }
              case 88: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(11, rawValue);
                } else {
                  bitField0_ |= 0x00000400;
                  shadowKind11_ = value;
                }
                break;
              }
              case 96: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(12, rawValue);
                } else {
                  bitField0_ |= 0x00000800;
                  shadowKind12_ = value;
                }
                break;
              }
              case 106: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00001000) == 0x00001000)) {
                  subBuilder = leftHandSide_.toBuilder();
                }
                leftHandSide_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(leftHandSide_);
                  leftHandSide_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00001000;
                break;
              }
              case 114: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00002000) == 0x00002000)) {
                  subBuilder = rightHandSide_.toBuilder();
                }
                rightHandSide_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(rightHandSide_);
                  rightHandSide_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00002000;
                break;
              }
              case 120: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(15, rawValue);
                } else {
                  bitField0_ |= 0x00004000;
                  operator_ = value;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Expression_Assignment_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Expression_Assignment_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Expression.Assignment.class, boa.types.Ast.Expression.Assignment.Builder.class);
      }

      public static com.google.protobuf.Parser<Assignment> PARSER =
          new com.google.protobuf.AbstractParser<Assignment>() {
        public Assignment parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Assignment(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Assignment> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = ASSIGN];
      public static final int SHADOW_KIND_1_FIELD_NUMBER = 1;
      private boa.types.Ast.Expression.ExpressionKind shadowKind1_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = ASSIGN];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind1() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = ASSIGN];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind1() {
        return shadowKind1_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = ASSIGN_ADD];
      public static final int SHADOW_KIND_2_FIELD_NUMBER = 2;
      private boa.types.Ast.Expression.ExpressionKind shadowKind2_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = ASSIGN_ADD];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind2() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = ASSIGN_ADD];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind2() {
        return shadowKind2_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = ASSIGN_SUB];
      public static final int SHADOW_KIND_3_FIELD_NUMBER = 3;
      private boa.types.Ast.Expression.ExpressionKind shadowKind3_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = ASSIGN_SUB];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind3() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = ASSIGN_SUB];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind3() {
        return shadowKind3_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = ASSIGN_MULT];
      public static final int SHADOW_KIND_4_FIELD_NUMBER = 4;
      private boa.types.Ast.Expression.ExpressionKind shadowKind4_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = ASSIGN_MULT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind4() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = ASSIGN_MULT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind4() {
        return shadowKind4_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = ASSIGN_DIV];
      public static final int SHADOW_KIND_5_FIELD_NUMBER = 5;
      private boa.types.Ast.Expression.ExpressionKind shadowKind5_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = ASSIGN_DIV];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind5() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = ASSIGN_DIV];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind5() {
        return shadowKind5_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = ASSIGN_MOD];
      public static final int SHADOW_KIND_6_FIELD_NUMBER = 6;
      private boa.types.Ast.Expression.ExpressionKind shadowKind6_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = ASSIGN_MOD];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind6() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = ASSIGN_MOD];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind6() {
        return shadowKind6_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_7 = 7 [default = ASSIGN_BITXOR];
      public static final int SHADOW_KIND_7_FIELD_NUMBER = 7;
      private boa.types.Ast.Expression.ExpressionKind shadowKind7_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_7 = 7 [default = ASSIGN_BITXOR];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind7() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_7 = 7 [default = ASSIGN_BITXOR];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind7() {
        return shadowKind7_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_8 = 8 [default = ASSIGN_BITAND];
      public static final int SHADOW_KIND_8_FIELD_NUMBER = 8;
      private boa.types.Ast.Expression.ExpressionKind shadowKind8_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_8 = 8 [default = ASSIGN_BITAND];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind8() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_8 = 8 [default = ASSIGN_BITAND];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind8() {
        return shadowKind8_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_9 = 9 [default = ASSIGN_BITOR];
      public static final int SHADOW_KIND_9_FIELD_NUMBER = 9;
      private boa.types.Ast.Expression.ExpressionKind shadowKind9_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_9 = 9 [default = ASSIGN_BITOR];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind9() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_9 = 9 [default = ASSIGN_BITOR];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind9() {
        return shadowKind9_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_10 = 10 [default = ASSIGN_LSHIFT];
      public static final int SHADOW_KIND_10_FIELD_NUMBER = 10;
      private boa.types.Ast.Expression.ExpressionKind shadowKind10_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_10 = 10 [default = ASSIGN_LSHIFT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind10() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_10 = 10 [default = ASSIGN_LSHIFT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind10() {
        return shadowKind10_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_11 = 11 [default = ASSIGN_RSHIFT];
      public static final int SHADOW_KIND_11_FIELD_NUMBER = 11;
      private boa.types.Ast.Expression.ExpressionKind shadowKind11_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_11 = 11 [default = ASSIGN_RSHIFT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind11() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_11 = 11 [default = ASSIGN_RSHIFT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind11() {
        return shadowKind11_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_12 = 12 [default = ASSIGN_UNSIGNEDRSHIFT];
      public static final int SHADOW_KIND_12_FIELD_NUMBER = 12;
      private boa.types.Ast.Expression.ExpressionKind shadowKind12_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_12 = 12 [default = ASSIGN_UNSIGNEDRSHIFT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind12() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_12 = 12 [default = ASSIGN_UNSIGNEDRSHIFT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind12() {
        return shadowKind12_;
      }

      // required .boa.types.Expression left_hand_side = 13;
      public static final int LEFT_HAND_SIDE_FIELD_NUMBER = 13;
      private boa.types.Ast.Expression leftHandSide_;
      /**
       * <code>required .boa.types.Expression left_hand_side = 13;</code>
       *
       * <pre>
       ** The left hand side of the assignment 
       * </pre>
       */
      public boolean hasLeftHandSide() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required .boa.types.Expression left_hand_side = 13;</code>
       *
       * <pre>
       ** The left hand side of the assignment 
       * </pre>
       */
      public boa.types.Ast.Expression getLeftHandSide() {
        return leftHandSide_;
      }
      /**
       * <code>required .boa.types.Expression left_hand_side = 13;</code>
       *
       * <pre>
       ** The left hand side of the assignment 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getLeftHandSideOrBuilder() {
        return leftHandSide_;
      }

      // required .boa.types.Expression right_hand_side = 14;
      public static final int RIGHT_HAND_SIDE_FIELD_NUMBER = 14;
      private boa.types.Ast.Expression rightHandSide_;
      /**
       * <code>required .boa.types.Expression right_hand_side = 14;</code>
       *
       * <pre>
       ** The right hand side of the assignment 
       * </pre>
       */
      public boolean hasRightHandSide() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>required .boa.types.Expression right_hand_side = 14;</code>
       *
       * <pre>
       ** The right hand side of the assignment 
       * </pre>
       */
      public boa.types.Ast.Expression getRightHandSide() {
        return rightHandSide_;
      }
      /**
       * <code>required .boa.types.Expression right_hand_side = 14;</code>
       *
       * <pre>
       ** The right hand side of the assignment 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getRightHandSideOrBuilder() {
        return rightHandSide_;
      }

      // required .boa.types.Expression.ExpressionKind operator = 15;
      public static final int OPERATOR_FIELD_NUMBER = 15;
      private boa.types.Ast.Expression.ExpressionKind operator_;
      /**
       * <code>required .boa.types.Expression.ExpressionKind operator = 15;</code>
       *
       * <pre>
       ** The assignment operator 
       * </pre>
       */
      public boolean hasOperator() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>required .boa.types.Expression.ExpressionKind operator = 15;</code>
       *
       * <pre>
       ** The assignment operator 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getOperator() {
        return operator_;
      }

      private void initFields() {
        shadowKind1_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN;
        shadowKind2_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_ADD;
        shadowKind3_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_SUB;
        shadowKind4_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_MULT;
        shadowKind5_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_DIV;
        shadowKind6_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_MOD;
        shadowKind7_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_BITXOR;
        shadowKind8_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_BITAND;
        shadowKind9_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_BITOR;
        shadowKind10_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_LSHIFT;
        shadowKind11_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_RSHIFT;
        shadowKind12_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_UNSIGNEDRSHIFT;
        leftHandSide_ = boa.types.Ast.Expression.getDefaultInstance();
        rightHandSide_ = boa.types.Ast.Expression.getDefaultInstance();
        operator_ = boa.types.Ast.Expression.ExpressionKind.OTHER;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasLeftHandSide()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasRightHandSide()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasOperator()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getLeftHandSide().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getRightHandSide().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind1_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeEnum(2, shadowKind2_.getNumber());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeEnum(3, shadowKind3_.getNumber());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeEnum(4, shadowKind4_.getNumber());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeEnum(5, shadowKind5_.getNumber());
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeEnum(6, shadowKind6_.getNumber());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeEnum(7, shadowKind7_.getNumber());
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeEnum(8, shadowKind8_.getNumber());
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeEnum(9, shadowKind9_.getNumber());
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeEnum(10, shadowKind10_.getNumber());
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeEnum(11, shadowKind11_.getNumber());
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          output.writeEnum(12, shadowKind12_.getNumber());
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          output.writeMessage(13, leftHandSide_);
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          output.writeMessage(14, rightHandSide_);
        }
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          output.writeEnum(15, operator_.getNumber());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind1_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, shadowKind2_.getNumber());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(3, shadowKind3_.getNumber());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(4, shadowKind4_.getNumber());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(5, shadowKind5_.getNumber());
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(6, shadowKind6_.getNumber());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(7, shadowKind7_.getNumber());
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(8, shadowKind8_.getNumber());
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(9, shadowKind9_.getNumber());
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(10, shadowKind10_.getNumber());
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(11, shadowKind11_.getNumber());
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(12, shadowKind12_.getNumber());
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(13, leftHandSide_);
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(14, rightHandSide_);
        }
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(15, operator_.getNumber());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Expression.Assignment parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.Assignment parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.Assignment parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.Assignment parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.Assignment parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.Assignment parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.Assignment parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Expression.Assignment parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.Assignment parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.Assignment parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Expression.Assignment prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Expression.Assignment}
       *
       * <pre>
       ** Any kind of assignment expression 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Expression.AssignmentOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Expression_Assignment_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Expression_Assignment_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Expression.Assignment.class, boa.types.Ast.Expression.Assignment.Builder.class);
        }

        // Construct using boa.types.Ast.Expression.Assignment.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getLeftHandSideFieldBuilder();
            getRightHandSideFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind1_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN;
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind2_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_ADD;
          bitField0_ = (bitField0_ & ~0x00000002);
          shadowKind3_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_SUB;
          bitField0_ = (bitField0_ & ~0x00000004);
          shadowKind4_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_MULT;
          bitField0_ = (bitField0_ & ~0x00000008);
          shadowKind5_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_DIV;
          bitField0_ = (bitField0_ & ~0x00000010);
          shadowKind6_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_MOD;
          bitField0_ = (bitField0_ & ~0x00000020);
          shadowKind7_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_BITXOR;
          bitField0_ = (bitField0_ & ~0x00000040);
          shadowKind8_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_BITAND;
          bitField0_ = (bitField0_ & ~0x00000080);
          shadowKind9_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_BITOR;
          bitField0_ = (bitField0_ & ~0x00000100);
          shadowKind10_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_LSHIFT;
          bitField0_ = (bitField0_ & ~0x00000200);
          shadowKind11_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_RSHIFT;
          bitField0_ = (bitField0_ & ~0x00000400);
          shadowKind12_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_UNSIGNEDRSHIFT;
          bitField0_ = (bitField0_ & ~0x00000800);
          if (leftHandSideBuilder_ == null) {
            leftHandSide_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            leftHandSideBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00001000);
          if (rightHandSideBuilder_ == null) {
            rightHandSide_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            rightHandSideBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00002000);
          operator_ = boa.types.Ast.Expression.ExpressionKind.OTHER;
          bitField0_ = (bitField0_ & ~0x00004000);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Expression_Assignment_descriptor;
        }

        public boa.types.Ast.Expression.Assignment getDefaultInstanceForType() {
          return boa.types.Ast.Expression.Assignment.getDefaultInstance();
        }

        public boa.types.Ast.Expression.Assignment build() {
          boa.types.Ast.Expression.Assignment result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Expression.Assignment buildPartial() {
          boa.types.Ast.Expression.Assignment result = new boa.types.Ast.Expression.Assignment(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind1_ = shadowKind1_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.shadowKind2_ = shadowKind2_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.shadowKind3_ = shadowKind3_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.shadowKind4_ = shadowKind4_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.shadowKind5_ = shadowKind5_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.shadowKind6_ = shadowKind6_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.shadowKind7_ = shadowKind7_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.shadowKind8_ = shadowKind8_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.shadowKind9_ = shadowKind9_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000200;
          }
          result.shadowKind10_ = shadowKind10_;
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000400;
          }
          result.shadowKind11_ = shadowKind11_;
          if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
            to_bitField0_ |= 0x00000800;
          }
          result.shadowKind12_ = shadowKind12_;
          if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
            to_bitField0_ |= 0x00001000;
          }
          if (leftHandSideBuilder_ == null) {
            result.leftHandSide_ = leftHandSide_;
          } else {
            result.leftHandSide_ = leftHandSideBuilder_.build();
          }
          if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
            to_bitField0_ |= 0x00002000;
          }
          if (rightHandSideBuilder_ == null) {
            result.rightHandSide_ = rightHandSide_;
          } else {
            result.rightHandSide_ = rightHandSideBuilder_.build();
          }
          if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
            to_bitField0_ |= 0x00004000;
          }
          result.operator_ = operator_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Expression.Assignment) {
            return mergeFrom((boa.types.Ast.Expression.Assignment)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Expression.Assignment other) {
          if (other == boa.types.Ast.Expression.Assignment.getDefaultInstance()) return this;
          if (other.hasShadowKind1()) {
            setShadowKind1(other.getShadowKind1());
          }
          if (other.hasShadowKind2()) {
            setShadowKind2(other.getShadowKind2());
          }
          if (other.hasShadowKind3()) {
            setShadowKind3(other.getShadowKind3());
          }
          if (other.hasShadowKind4()) {
            setShadowKind4(other.getShadowKind4());
          }
          if (other.hasShadowKind5()) {
            setShadowKind5(other.getShadowKind5());
          }
          if (other.hasShadowKind6()) {
            setShadowKind6(other.getShadowKind6());
          }
          if (other.hasShadowKind7()) {
            setShadowKind7(other.getShadowKind7());
          }
          if (other.hasShadowKind8()) {
            setShadowKind8(other.getShadowKind8());
          }
          if (other.hasShadowKind9()) {
            setShadowKind9(other.getShadowKind9());
          }
          if (other.hasShadowKind10()) {
            setShadowKind10(other.getShadowKind10());
          }
          if (other.hasShadowKind11()) {
            setShadowKind11(other.getShadowKind11());
          }
          if (other.hasShadowKind12()) {
            setShadowKind12(other.getShadowKind12());
          }
          if (other.hasLeftHandSide()) {
            mergeLeftHandSide(other.getLeftHandSide());
          }
          if (other.hasRightHandSide()) {
            mergeRightHandSide(other.getRightHandSide());
          }
          if (other.hasOperator()) {
            setOperator(other.getOperator());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasLeftHandSide()) {
            
            return false;
          }
          if (!hasRightHandSide()) {
            
            return false;
          }
          if (!hasOperator()) {
            
            return false;
          }
          if (!getLeftHandSide().isInitialized()) {
            
            return false;
          }
          if (!getRightHandSide().isInitialized()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Expression.Assignment parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Expression.Assignment) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = ASSIGN];
        private boa.types.Ast.Expression.ExpressionKind shadowKind1_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = ASSIGN];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind1() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = ASSIGN];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind1() {
          return shadowKind1_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = ASSIGN];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind1(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind1_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = ASSIGN];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind1() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind1_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = ASSIGN_ADD];
        private boa.types.Ast.Expression.ExpressionKind shadowKind2_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_ADD;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = ASSIGN_ADD];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind2() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = ASSIGN_ADD];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind2() {
          return shadowKind2_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = ASSIGN_ADD];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind2(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          shadowKind2_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = ASSIGN_ADD];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind2() {
          bitField0_ = (bitField0_ & ~0x00000002);
          shadowKind2_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_ADD;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = ASSIGN_SUB];
        private boa.types.Ast.Expression.ExpressionKind shadowKind3_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_SUB;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = ASSIGN_SUB];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind3() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = ASSIGN_SUB];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind3() {
          return shadowKind3_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = ASSIGN_SUB];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind3(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000004;
          shadowKind3_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = ASSIGN_SUB];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind3() {
          bitField0_ = (bitField0_ & ~0x00000004);
          shadowKind3_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_SUB;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = ASSIGN_MULT];
        private boa.types.Ast.Expression.ExpressionKind shadowKind4_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_MULT;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = ASSIGN_MULT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind4() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = ASSIGN_MULT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind4() {
          return shadowKind4_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = ASSIGN_MULT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind4(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000008;
          shadowKind4_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = ASSIGN_MULT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind4() {
          bitField0_ = (bitField0_ & ~0x00000008);
          shadowKind4_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_MULT;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = ASSIGN_DIV];
        private boa.types.Ast.Expression.ExpressionKind shadowKind5_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_DIV;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = ASSIGN_DIV];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind5() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = ASSIGN_DIV];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind5() {
          return shadowKind5_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = ASSIGN_DIV];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind5(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000010;
          shadowKind5_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = ASSIGN_DIV];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind5() {
          bitField0_ = (bitField0_ & ~0x00000010);
          shadowKind5_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_DIV;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = ASSIGN_MOD];
        private boa.types.Ast.Expression.ExpressionKind shadowKind6_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_MOD;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = ASSIGN_MOD];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind6() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = ASSIGN_MOD];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind6() {
          return shadowKind6_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = ASSIGN_MOD];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind6(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000020;
          shadowKind6_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = ASSIGN_MOD];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind6() {
          bitField0_ = (bitField0_ & ~0x00000020);
          shadowKind6_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_MOD;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_7 = 7 [default = ASSIGN_BITXOR];
        private boa.types.Ast.Expression.ExpressionKind shadowKind7_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_BITXOR;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_7 = 7 [default = ASSIGN_BITXOR];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind7() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_7 = 7 [default = ASSIGN_BITXOR];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind7() {
          return shadowKind7_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_7 = 7 [default = ASSIGN_BITXOR];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind7(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000040;
          shadowKind7_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_7 = 7 [default = ASSIGN_BITXOR];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind7() {
          bitField0_ = (bitField0_ & ~0x00000040);
          shadowKind7_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_BITXOR;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_8 = 8 [default = ASSIGN_BITAND];
        private boa.types.Ast.Expression.ExpressionKind shadowKind8_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_BITAND;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_8 = 8 [default = ASSIGN_BITAND];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind8() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_8 = 8 [default = ASSIGN_BITAND];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind8() {
          return shadowKind8_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_8 = 8 [default = ASSIGN_BITAND];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind8(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000080;
          shadowKind8_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_8 = 8 [default = ASSIGN_BITAND];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind8() {
          bitField0_ = (bitField0_ & ~0x00000080);
          shadowKind8_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_BITAND;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_9 = 9 [default = ASSIGN_BITOR];
        private boa.types.Ast.Expression.ExpressionKind shadowKind9_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_BITOR;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_9 = 9 [default = ASSIGN_BITOR];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind9() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_9 = 9 [default = ASSIGN_BITOR];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind9() {
          return shadowKind9_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_9 = 9 [default = ASSIGN_BITOR];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind9(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000100;
          shadowKind9_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_9 = 9 [default = ASSIGN_BITOR];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind9() {
          bitField0_ = (bitField0_ & ~0x00000100);
          shadowKind9_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_BITOR;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_10 = 10 [default = ASSIGN_LSHIFT];
        private boa.types.Ast.Expression.ExpressionKind shadowKind10_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_LSHIFT;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_10 = 10 [default = ASSIGN_LSHIFT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind10() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_10 = 10 [default = ASSIGN_LSHIFT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind10() {
          return shadowKind10_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_10 = 10 [default = ASSIGN_LSHIFT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind10(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000200;
          shadowKind10_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_10 = 10 [default = ASSIGN_LSHIFT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind10() {
          bitField0_ = (bitField0_ & ~0x00000200);
          shadowKind10_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_LSHIFT;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_11 = 11 [default = ASSIGN_RSHIFT];
        private boa.types.Ast.Expression.ExpressionKind shadowKind11_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_RSHIFT;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_11 = 11 [default = ASSIGN_RSHIFT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind11() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_11 = 11 [default = ASSIGN_RSHIFT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind11() {
          return shadowKind11_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_11 = 11 [default = ASSIGN_RSHIFT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind11(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000400;
          shadowKind11_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_11 = 11 [default = ASSIGN_RSHIFT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind11() {
          bitField0_ = (bitField0_ & ~0x00000400);
          shadowKind11_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_RSHIFT;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_12 = 12 [default = ASSIGN_UNSIGNEDRSHIFT];
        private boa.types.Ast.Expression.ExpressionKind shadowKind12_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_UNSIGNEDRSHIFT;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_12 = 12 [default = ASSIGN_UNSIGNEDRSHIFT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind12() {
          return ((bitField0_ & 0x00000800) == 0x00000800);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_12 = 12 [default = ASSIGN_UNSIGNEDRSHIFT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind12() {
          return shadowKind12_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_12 = 12 [default = ASSIGN_UNSIGNEDRSHIFT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind12(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000800;
          shadowKind12_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_12 = 12 [default = ASSIGN_UNSIGNEDRSHIFT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind12() {
          bitField0_ = (bitField0_ & ~0x00000800);
          shadowKind12_ = boa.types.Ast.Expression.ExpressionKind.ASSIGN_UNSIGNEDRSHIFT;
          onChanged();
          return this;
        }

        // required .boa.types.Expression left_hand_side = 13;
        private boa.types.Ast.Expression leftHandSide_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> leftHandSideBuilder_;
        /**
         * <code>required .boa.types.Expression left_hand_side = 13;</code>
         *
         * <pre>
         ** The left hand side of the assignment 
         * </pre>
         */
        public boolean hasLeftHandSide() {
          return ((bitField0_ & 0x00001000) == 0x00001000);
        }
        /**
         * <code>required .boa.types.Expression left_hand_side = 13;</code>
         *
         * <pre>
         ** The left hand side of the assignment 
         * </pre>
         */
        public boa.types.Ast.Expression getLeftHandSide() {
          if (leftHandSideBuilder_ == null) {
            return leftHandSide_;
          } else {
            return leftHandSideBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Expression left_hand_side = 13;</code>
         *
         * <pre>
         ** The left hand side of the assignment 
         * </pre>
         */
        public Builder setLeftHandSide(boa.types.Ast.Expression value) {
          if (leftHandSideBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            leftHandSide_ = value;
            onChanged();
          } else {
            leftHandSideBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00001000;
          return this;
        }
        /**
         * <code>required .boa.types.Expression left_hand_side = 13;</code>
         *
         * <pre>
         ** The left hand side of the assignment 
         * </pre>
         */
        public Builder setLeftHandSide(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (leftHandSideBuilder_ == null) {
            leftHandSide_ = builderForValue.build();
            onChanged();
          } else {
            leftHandSideBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00001000;
          return this;
        }
        /**
         * <code>required .boa.types.Expression left_hand_side = 13;</code>
         *
         * <pre>
         ** The left hand side of the assignment 
         * </pre>
         */
        public Builder mergeLeftHandSide(boa.types.Ast.Expression value) {
          if (leftHandSideBuilder_ == null) {
            if (((bitField0_ & 0x00001000) == 0x00001000) &&
                leftHandSide_ != boa.types.Ast.Expression.getDefaultInstance()) {
              leftHandSide_ =
                boa.types.Ast.Expression.newBuilder(leftHandSide_).mergeFrom(value).buildPartial();
            } else {
              leftHandSide_ = value;
            }
            onChanged();
          } else {
            leftHandSideBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00001000;
          return this;
        }
        /**
         * <code>required .boa.types.Expression left_hand_side = 13;</code>
         *
         * <pre>
         ** The left hand side of the assignment 
         * </pre>
         */
        public Builder clearLeftHandSide() {
          if (leftHandSideBuilder_ == null) {
            leftHandSide_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            leftHandSideBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00001000);
          return this;
        }
        /**
         * <code>required .boa.types.Expression left_hand_side = 13;</code>
         *
         * <pre>
         ** The left hand side of the assignment 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder getLeftHandSideBuilder() {
          bitField0_ |= 0x00001000;
          onChanged();
          return getLeftHandSideFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Expression left_hand_side = 13;</code>
         *
         * <pre>
         ** The left hand side of the assignment 
         * </pre>
         */
        public boa.types.Ast.ExpressionOrBuilder getLeftHandSideOrBuilder() {
          if (leftHandSideBuilder_ != null) {
            return leftHandSideBuilder_.getMessageOrBuilder();
          } else {
            return leftHandSide_;
          }
        }
        /**
         * <code>required .boa.types.Expression left_hand_side = 13;</code>
         *
         * <pre>
         ** The left hand side of the assignment 
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getLeftHandSideFieldBuilder() {
          if (leftHandSideBuilder_ == null) {
            leftHandSideBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    leftHandSide_,
                    getParentForChildren(),
                    isClean());
            leftHandSide_ = null;
          }
          return leftHandSideBuilder_;
        }

        // required .boa.types.Expression right_hand_side = 14;
        private boa.types.Ast.Expression rightHandSide_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> rightHandSideBuilder_;
        /**
         * <code>required .boa.types.Expression right_hand_side = 14;</code>
         *
         * <pre>
         ** The right hand side of the assignment 
         * </pre>
         */
        public boolean hasRightHandSide() {
          return ((bitField0_ & 0x00002000) == 0x00002000);
        }
        /**
         * <code>required .boa.types.Expression right_hand_side = 14;</code>
         *
         * <pre>
         ** The right hand side of the assignment 
         * </pre>
         */
        public boa.types.Ast.Expression getRightHandSide() {
          if (rightHandSideBuilder_ == null) {
            return rightHandSide_;
          } else {
            return rightHandSideBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Expression right_hand_side = 14;</code>
         *
         * <pre>
         ** The right hand side of the assignment 
         * </pre>
         */
        public Builder setRightHandSide(boa.types.Ast.Expression value) {
          if (rightHandSideBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            rightHandSide_ = value;
            onChanged();
          } else {
            rightHandSideBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00002000;
          return this;
        }
        /**
         * <code>required .boa.types.Expression right_hand_side = 14;</code>
         *
         * <pre>
         ** The right hand side of the assignment 
         * </pre>
         */
        public Builder setRightHandSide(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (rightHandSideBuilder_ == null) {
            rightHandSide_ = builderForValue.build();
            onChanged();
          } else {
            rightHandSideBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00002000;
          return this;
        }
        /**
         * <code>required .boa.types.Expression right_hand_side = 14;</code>
         *
         * <pre>
         ** The right hand side of the assignment 
         * </pre>
         */
        public Builder mergeRightHandSide(boa.types.Ast.Expression value) {
          if (rightHandSideBuilder_ == null) {
            if (((bitField0_ & 0x00002000) == 0x00002000) &&
                rightHandSide_ != boa.types.Ast.Expression.getDefaultInstance()) {
              rightHandSide_ =
                boa.types.Ast.Expression.newBuilder(rightHandSide_).mergeFrom(value).buildPartial();
            } else {
              rightHandSide_ = value;
            }
            onChanged();
          } else {
            rightHandSideBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00002000;
          return this;
        }
        /**
         * <code>required .boa.types.Expression right_hand_side = 14;</code>
         *
         * <pre>
         ** The right hand side of the assignment 
         * </pre>
         */
        public Builder clearRightHandSide() {
          if (rightHandSideBuilder_ == null) {
            rightHandSide_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            rightHandSideBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00002000);
          return this;
        }
        /**
         * <code>required .boa.types.Expression right_hand_side = 14;</code>
         *
         * <pre>
         ** The right hand side of the assignment 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder getRightHandSideBuilder() {
          bitField0_ |= 0x00002000;
          onChanged();
          return getRightHandSideFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Expression right_hand_side = 14;</code>
         *
         * <pre>
         ** The right hand side of the assignment 
         * </pre>
         */
        public boa.types.Ast.ExpressionOrBuilder getRightHandSideOrBuilder() {
          if (rightHandSideBuilder_ != null) {
            return rightHandSideBuilder_.getMessageOrBuilder();
          } else {
            return rightHandSide_;
          }
        }
        /**
         * <code>required .boa.types.Expression right_hand_side = 14;</code>
         *
         * <pre>
         ** The right hand side of the assignment 
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getRightHandSideFieldBuilder() {
          if (rightHandSideBuilder_ == null) {
            rightHandSideBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    rightHandSide_,
                    getParentForChildren(),
                    isClean());
            rightHandSide_ = null;
          }
          return rightHandSideBuilder_;
        }

        // required .boa.types.Expression.ExpressionKind operator = 15;
        private boa.types.Ast.Expression.ExpressionKind operator_ = boa.types.Ast.Expression.ExpressionKind.OTHER;
        /**
         * <code>required .boa.types.Expression.ExpressionKind operator = 15;</code>
         *
         * <pre>
         ** The assignment operator 
         * </pre>
         */
        public boolean hasOperator() {
          return ((bitField0_ & 0x00004000) == 0x00004000);
        }
        /**
         * <code>required .boa.types.Expression.ExpressionKind operator = 15;</code>
         *
         * <pre>
         ** The assignment operator 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getOperator() {
          return operator_;
        }
        /**
         * <code>required .boa.types.Expression.ExpressionKind operator = 15;</code>
         *
         * <pre>
         ** The assignment operator 
         * </pre>
         */
        public Builder setOperator(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00004000;
          operator_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required .boa.types.Expression.ExpressionKind operator = 15;</code>
         *
         * <pre>
         ** The assignment operator 
         * </pre>
         */
        public Builder clearOperator() {
          bitField0_ = (bitField0_ & ~0x00004000);
          operator_ = boa.types.Ast.Expression.ExpressionKind.OTHER;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Expression.Assignment)
      }

      static {
        defaultInstance = new Assignment(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Expression.Assignment)
    }

    public interface BooleanLiteralOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind();

      // required bool boolean_value = 2;
      /**
       * <code>required bool boolean_value = 2;</code>
       *
       * <pre>
       ** The boolean literal value 
       * </pre>
       */
      boolean hasBooleanValue();
      /**
       * <code>required bool boolean_value = 2;</code>
       *
       * <pre>
       ** The boolean literal value 
       * </pre>
       */
      boolean getBooleanValue();
    }
    /**
     * Protobuf type {@code boa.types.Expression.BooleanLiteral}
     *
     * <pre>
     ** A boolean literal 
     * </pre>
     */
    public static final class BooleanLiteral extends
        com.google.protobuf.GeneratedMessage
        implements BooleanLiteralOrBuilder {
      // Use BooleanLiteral.newBuilder() to construct.
      private BooleanLiteral(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private BooleanLiteral(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final BooleanLiteral defaultInstance;
      public static BooleanLiteral getDefaultInstance() {
        return defaultInstance;
      }

      public BooleanLiteral getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private BooleanLiteral(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                booleanValue_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Expression_BooleanLiteral_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Expression_BooleanLiteral_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Expression.BooleanLiteral.class, boa.types.Ast.Expression.BooleanLiteral.Builder.class);
      }

      public static com.google.protobuf.Parser<BooleanLiteral> PARSER =
          new com.google.protobuf.AbstractParser<BooleanLiteral>() {
        public BooleanLiteral parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new BooleanLiteral(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<BooleanLiteral> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Expression.ExpressionKind shadowKind_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
        return shadowKind_;
      }

      // required bool boolean_value = 2;
      public static final int BOOLEAN_VALUE_FIELD_NUMBER = 2;
      private boolean booleanValue_;
      /**
       * <code>required bool boolean_value = 2;</code>
       *
       * <pre>
       ** The boolean literal value 
       * </pre>
       */
      public boolean hasBooleanValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bool boolean_value = 2;</code>
       *
       * <pre>
       ** The boolean literal value 
       * </pre>
       */
      public boolean getBooleanValue() {
        return booleanValue_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Expression.ExpressionKind.LITERAL;
        booleanValue_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasBooleanValue()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBool(2, booleanValue_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, booleanValue_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Expression.BooleanLiteral parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.BooleanLiteral parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.BooleanLiteral parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.BooleanLiteral parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.BooleanLiteral parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.BooleanLiteral parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.BooleanLiteral parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Expression.BooleanLiteral parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.BooleanLiteral parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.BooleanLiteral parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Expression.BooleanLiteral prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Expression.BooleanLiteral}
       *
       * <pre>
       ** A boolean literal 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Expression.BooleanLiteralOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Expression_BooleanLiteral_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Expression_BooleanLiteral_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Expression.BooleanLiteral.class, boa.types.Ast.Expression.BooleanLiteral.Builder.class);
        }

        // Construct using boa.types.Ast.Expression.BooleanLiteral.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.LITERAL;
          bitField0_ = (bitField0_ & ~0x00000001);
          booleanValue_ = false;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Expression_BooleanLiteral_descriptor;
        }

        public boa.types.Ast.Expression.BooleanLiteral getDefaultInstanceForType() {
          return boa.types.Ast.Expression.BooleanLiteral.getDefaultInstance();
        }

        public boa.types.Ast.Expression.BooleanLiteral build() {
          boa.types.Ast.Expression.BooleanLiteral result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Expression.BooleanLiteral buildPartial() {
          boa.types.Ast.Expression.BooleanLiteral result = new boa.types.Ast.Expression.BooleanLiteral(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.booleanValue_ = booleanValue_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Expression.BooleanLiteral) {
            return mergeFrom((boa.types.Ast.Expression.BooleanLiteral)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Expression.BooleanLiteral other) {
          if (other == boa.types.Ast.Expression.BooleanLiteral.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasBooleanValue()) {
            setBooleanValue(other.getBooleanValue());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasBooleanValue()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Expression.BooleanLiteral parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Expression.BooleanLiteral) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];
        private boa.types.Ast.Expression.ExpressionKind shadowKind_ = boa.types.Ast.Expression.ExpressionKind.LITERAL;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.LITERAL;
          onChanged();
          return this;
        }

        // required bool boolean_value = 2;
        private boolean booleanValue_ ;
        /**
         * <code>required bool boolean_value = 2;</code>
         *
         * <pre>
         ** The boolean literal value 
         * </pre>
         */
        public boolean hasBooleanValue() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required bool boolean_value = 2;</code>
         *
         * <pre>
         ** The boolean literal value 
         * </pre>
         */
        public boolean getBooleanValue() {
          return booleanValue_;
        }
        /**
         * <code>required bool boolean_value = 2;</code>
         *
         * <pre>
         ** The boolean literal value 
         * </pre>
         */
        public Builder setBooleanValue(boolean value) {
          bitField0_ |= 0x00000002;
          booleanValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bool boolean_value = 2;</code>
         *
         * <pre>
         ** The boolean literal value 
         * </pre>
         */
        public Builder clearBooleanValue() {
          bitField0_ = (bitField0_ & ~0x00000002);
          booleanValue_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Expression.BooleanLiteral)
      }

      static {
        defaultInstance = new BooleanLiteral(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Expression.BooleanLiteral)
    }

    public interface CastExpressionOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = CAST];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = CAST];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = CAST];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind();

      // required .boa.types.Expression expression = 2;
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       *
       * <pre>
       ** The expression being cast 
       * </pre>
       */
      boolean hasExpression();
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       *
       * <pre>
       ** The expression being cast 
       * </pre>
       */
      boa.types.Ast.Expression getExpression();
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       *
       * <pre>
       ** The expression being cast 
       * </pre>
       */
      boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder();

      // required .boa.types.Type new_type = 3;
      /**
       * <code>required .boa.types.Type new_type = 3;</code>
       *
       * <pre>
       ** The type being cast to 
       * </pre>
       */
      boolean hasNewType();
      /**
       * <code>required .boa.types.Type new_type = 3;</code>
       *
       * <pre>
       ** The type being cast to 
       * </pre>
       */
      boa.types.Ast.Type getNewType();
      /**
       * <code>required .boa.types.Type new_type = 3;</code>
       *
       * <pre>
       ** The type being cast to 
       * </pre>
       */
      boa.types.Ast.TypeOrBuilder getNewTypeOrBuilder();
    }
    /**
     * Protobuf type {@code boa.types.Expression.CastExpression}
     *
     * <pre>
     ** A type cast 
     * </pre>
     */
    public static final class CastExpression extends
        com.google.protobuf.GeneratedMessage
        implements CastExpressionOrBuilder {
      // Use CastExpression.newBuilder() to construct.
      private CastExpression(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private CastExpression(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final CastExpression defaultInstance;
      public static CastExpression getDefaultInstance() {
        return defaultInstance;
      }

      public CastExpression getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private CastExpression(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = expression_.toBuilder();
                }
                expression_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(expression_);
                  expression_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 26: {
                boa.types.Ast.Type.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = newType_.toBuilder();
                }
                newType_ = input.readMessage(boa.types.Ast.Type.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(newType_);
                  newType_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Expression_CastExpression_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Expression_CastExpression_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Expression.CastExpression.class, boa.types.Ast.Expression.CastExpression.Builder.class);
      }

      public static com.google.protobuf.Parser<CastExpression> PARSER =
          new com.google.protobuf.AbstractParser<CastExpression>() {
        public CastExpression parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CastExpression(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<CastExpression> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = CAST];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Expression.ExpressionKind shadowKind_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = CAST];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = CAST];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
        return shadowKind_;
      }

      // required .boa.types.Expression expression = 2;
      public static final int EXPRESSION_FIELD_NUMBER = 2;
      private boa.types.Ast.Expression expression_;
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       *
       * <pre>
       ** The expression being cast 
       * </pre>
       */
      public boolean hasExpression() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       *
       * <pre>
       ** The expression being cast 
       * </pre>
       */
      public boa.types.Ast.Expression getExpression() {
        return expression_;
      }
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       *
       * <pre>
       ** The expression being cast 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder() {
        return expression_;
      }

      // required .boa.types.Type new_type = 3;
      public static final int NEW_TYPE_FIELD_NUMBER = 3;
      private boa.types.Ast.Type newType_;
      /**
       * <code>required .boa.types.Type new_type = 3;</code>
       *
       * <pre>
       ** The type being cast to 
       * </pre>
       */
      public boolean hasNewType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .boa.types.Type new_type = 3;</code>
       *
       * <pre>
       ** The type being cast to 
       * </pre>
       */
      public boa.types.Ast.Type getNewType() {
        return newType_;
      }
      /**
       * <code>required .boa.types.Type new_type = 3;</code>
       *
       * <pre>
       ** The type being cast to 
       * </pre>
       */
      public boa.types.Ast.TypeOrBuilder getNewTypeOrBuilder() {
        return newType_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Expression.ExpressionKind.CAST;
        expression_ = boa.types.Ast.Expression.getDefaultInstance();
        newType_ = boa.types.Ast.Type.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasExpression()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasNewType()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getExpression().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getNewType().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, expression_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(3, newType_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, expression_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, newType_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Expression.CastExpression parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.CastExpression parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.CastExpression parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.CastExpression parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.CastExpression parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.CastExpression parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.CastExpression parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Expression.CastExpression parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.CastExpression parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.CastExpression parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Expression.CastExpression prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Expression.CastExpression}
       *
       * <pre>
       ** A type cast 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Expression.CastExpressionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Expression_CastExpression_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Expression_CastExpression_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Expression.CastExpression.class, boa.types.Ast.Expression.CastExpression.Builder.class);
        }

        // Construct using boa.types.Ast.Expression.CastExpression.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getExpressionFieldBuilder();
            getNewTypeFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.CAST;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (expressionBuilder_ == null) {
            expression_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            expressionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          if (newTypeBuilder_ == null) {
            newType_ = boa.types.Ast.Type.getDefaultInstance();
          } else {
            newTypeBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Expression_CastExpression_descriptor;
        }

        public boa.types.Ast.Expression.CastExpression getDefaultInstanceForType() {
          return boa.types.Ast.Expression.CastExpression.getDefaultInstance();
        }

        public boa.types.Ast.Expression.CastExpression build() {
          boa.types.Ast.Expression.CastExpression result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Expression.CastExpression buildPartial() {
          boa.types.Ast.Expression.CastExpression result = new boa.types.Ast.Expression.CastExpression(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (expressionBuilder_ == null) {
            result.expression_ = expression_;
          } else {
            result.expression_ = expressionBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          if (newTypeBuilder_ == null) {
            result.newType_ = newType_;
          } else {
            result.newType_ = newTypeBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Expression.CastExpression) {
            return mergeFrom((boa.types.Ast.Expression.CastExpression)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Expression.CastExpression other) {
          if (other == boa.types.Ast.Expression.CastExpression.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasExpression()) {
            mergeExpression(other.getExpression());
          }
          if (other.hasNewType()) {
            mergeNewType(other.getNewType());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasExpression()) {
            
            return false;
          }
          if (!hasNewType()) {
            
            return false;
          }
          if (!getExpression().isInitialized()) {
            
            return false;
          }
          if (!getNewType().isInitialized()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Expression.CastExpression parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Expression.CastExpression) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = CAST];
        private boa.types.Ast.Expression.ExpressionKind shadowKind_ = boa.types.Ast.Expression.ExpressionKind.CAST;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = CAST];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = CAST];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = CAST];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = CAST];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.CAST;
          onChanged();
          return this;
        }

        // required .boa.types.Expression expression = 2;
        private boa.types.Ast.Expression expression_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> expressionBuilder_;
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The expression being cast 
         * </pre>
         */
        public boolean hasExpression() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The expression being cast 
         * </pre>
         */
        public boa.types.Ast.Expression getExpression() {
          if (expressionBuilder_ == null) {
            return expression_;
          } else {
            return expressionBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The expression being cast 
         * </pre>
         */
        public Builder setExpression(boa.types.Ast.Expression value) {
          if (expressionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            expression_ = value;
            onChanged();
          } else {
            expressionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The expression being cast 
         * </pre>
         */
        public Builder setExpression(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (expressionBuilder_ == null) {
            expression_ = builderForValue.build();
            onChanged();
          } else {
            expressionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The expression being cast 
         * </pre>
         */
        public Builder mergeExpression(boa.types.Ast.Expression value) {
          if (expressionBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                expression_ != boa.types.Ast.Expression.getDefaultInstance()) {
              expression_ =
                boa.types.Ast.Expression.newBuilder(expression_).mergeFrom(value).buildPartial();
            } else {
              expression_ = value;
            }
            onChanged();
          } else {
            expressionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The expression being cast 
         * </pre>
         */
        public Builder clearExpression() {
          if (expressionBuilder_ == null) {
            expression_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            expressionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The expression being cast 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder getExpressionBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getExpressionFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The expression being cast 
         * </pre>
         */
        public boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder() {
          if (expressionBuilder_ != null) {
            return expressionBuilder_.getMessageOrBuilder();
          } else {
            return expression_;
          }
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The expression being cast 
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getExpressionFieldBuilder() {
          if (expressionBuilder_ == null) {
            expressionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    expression_,
                    getParentForChildren(),
                    isClean());
            expression_ = null;
          }
          return expressionBuilder_;
        }

        // required .boa.types.Type new_type = 3;
        private boa.types.Ast.Type newType_ = boa.types.Ast.Type.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> newTypeBuilder_;
        /**
         * <code>required .boa.types.Type new_type = 3;</code>
         *
         * <pre>
         ** The type being cast to 
         * </pre>
         */
        public boolean hasNewType() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required .boa.types.Type new_type = 3;</code>
         *
         * <pre>
         ** The type being cast to 
         * </pre>
         */
        public boa.types.Ast.Type getNewType() {
          if (newTypeBuilder_ == null) {
            return newType_;
          } else {
            return newTypeBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Type new_type = 3;</code>
         *
         * <pre>
         ** The type being cast to 
         * </pre>
         */
        public Builder setNewType(boa.types.Ast.Type value) {
          if (newTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            newType_ = value;
            onChanged();
          } else {
            newTypeBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Type new_type = 3;</code>
         *
         * <pre>
         ** The type being cast to 
         * </pre>
         */
        public Builder setNewType(
            boa.types.Ast.Type.Builder builderForValue) {
          if (newTypeBuilder_ == null) {
            newType_ = builderForValue.build();
            onChanged();
          } else {
            newTypeBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Type new_type = 3;</code>
         *
         * <pre>
         ** The type being cast to 
         * </pre>
         */
        public Builder mergeNewType(boa.types.Ast.Type value) {
          if (newTypeBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                newType_ != boa.types.Ast.Type.getDefaultInstance()) {
              newType_ =
                boa.types.Ast.Type.newBuilder(newType_).mergeFrom(value).buildPartial();
            } else {
              newType_ = value;
            }
            onChanged();
          } else {
            newTypeBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Type new_type = 3;</code>
         *
         * <pre>
         ** The type being cast to 
         * </pre>
         */
        public Builder clearNewType() {
          if (newTypeBuilder_ == null) {
            newType_ = boa.types.Ast.Type.getDefaultInstance();
            onChanged();
          } else {
            newTypeBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <code>required .boa.types.Type new_type = 3;</code>
         *
         * <pre>
         ** The type being cast to 
         * </pre>
         */
        public boa.types.Ast.Type.Builder getNewTypeBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getNewTypeFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Type new_type = 3;</code>
         *
         * <pre>
         ** The type being cast to 
         * </pre>
         */
        public boa.types.Ast.TypeOrBuilder getNewTypeOrBuilder() {
          if (newTypeBuilder_ != null) {
            return newTypeBuilder_.getMessageOrBuilder();
          } else {
            return newType_;
          }
        }
        /**
         * <code>required .boa.types.Type new_type = 3;</code>
         *
         * <pre>
         ** The type being cast to 
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> 
            getNewTypeFieldBuilder() {
          if (newTypeBuilder_ == null) {
            newTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder>(
                    newType_,
                    getParentForChildren(),
                    isClean());
            newType_ = null;
          }
          return newTypeBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Expression.CastExpression)
      }

      static {
        defaultInstance = new CastExpression(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Expression.CastExpression)
    }

    public interface CharacterLiteralOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind();

      // required string escaped_value = 2;
      /**
       * <code>required string escaped_value = 2;</code>
       *
       * <pre>
       ** The string value of the literal 
       * </pre>
       */
      boolean hasEscapedValue();
      /**
       * <code>required string escaped_value = 2;</code>
       *
       * <pre>
       ** The string value of the literal 
       * </pre>
       */
      java.lang.String getEscapedValue();
      /**
       * <code>required string escaped_value = 2;</code>
       *
       * <pre>
       ** The string value of the literal 
       * </pre>
       */
      com.google.protobuf.ByteString
          getEscapedValueBytes();

      // required int32 char_value = 3;
      /**
       * <code>required int32 char_value = 3;</code>
       *
       * <pre>
       ** The value of the literal, converted to an int 
       * </pre>
       */
      boolean hasCharValue();
      /**
       * <code>required int32 char_value = 3;</code>
       *
       * <pre>
       ** The value of the literal, converted to an int 
       * </pre>
       */
      int getCharValue();
    }
    /**
     * Protobuf type {@code boa.types.Expression.CharacterLiteral}
     *
     * <pre>
     ** A character literal 
     * </pre>
     */
    public static final class CharacterLiteral extends
        com.google.protobuf.GeneratedMessage
        implements CharacterLiteralOrBuilder {
      // Use CharacterLiteral.newBuilder() to construct.
      private CharacterLiteral(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private CharacterLiteral(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final CharacterLiteral defaultInstance;
      public static CharacterLiteral getDefaultInstance() {
        return defaultInstance;
      }

      public CharacterLiteral getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private CharacterLiteral(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                escapedValue_ = input.readBytes();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                charValue_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Expression_CharacterLiteral_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Expression_CharacterLiteral_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Expression.CharacterLiteral.class, boa.types.Ast.Expression.CharacterLiteral.Builder.class);
      }

      public static com.google.protobuf.Parser<CharacterLiteral> PARSER =
          new com.google.protobuf.AbstractParser<CharacterLiteral>() {
        public CharacterLiteral parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CharacterLiteral(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<CharacterLiteral> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Expression.ExpressionKind shadowKind_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
        return shadowKind_;
      }

      // required string escaped_value = 2;
      public static final int ESCAPED_VALUE_FIELD_NUMBER = 2;
      private java.lang.Object escapedValue_;
      /**
       * <code>required string escaped_value = 2;</code>
       *
       * <pre>
       ** The string value of the literal 
       * </pre>
       */
      public boolean hasEscapedValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string escaped_value = 2;</code>
       *
       * <pre>
       ** The string value of the literal 
       * </pre>
       */
      public java.lang.String getEscapedValue() {
        java.lang.Object ref = escapedValue_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            escapedValue_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string escaped_value = 2;</code>
       *
       * <pre>
       ** The string value of the literal 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getEscapedValueBytes() {
        java.lang.Object ref = escapedValue_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          escapedValue_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // required int32 char_value = 3;
      public static final int CHAR_VALUE_FIELD_NUMBER = 3;
      private int charValue_;
      /**
       * <code>required int32 char_value = 3;</code>
       *
       * <pre>
       ** The value of the literal, converted to an int 
       * </pre>
       */
      public boolean hasCharValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 char_value = 3;</code>
       *
       * <pre>
       ** The value of the literal, converted to an int 
       * </pre>
       */
      public int getCharValue() {
        return charValue_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Expression.ExpressionKind.LITERAL;
        escapedValue_ = "";
        charValue_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasEscapedValue()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasCharValue()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getEscapedValueBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, charValue_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getEscapedValueBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, charValue_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Expression.CharacterLiteral parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.CharacterLiteral parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.CharacterLiteral parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.CharacterLiteral parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.CharacterLiteral parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.CharacterLiteral parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.CharacterLiteral parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Expression.CharacterLiteral parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.CharacterLiteral parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.CharacterLiteral parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Expression.CharacterLiteral prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Expression.CharacterLiteral}
       *
       * <pre>
       ** A character literal 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Expression.CharacterLiteralOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Expression_CharacterLiteral_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Expression_CharacterLiteral_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Expression.CharacterLiteral.class, boa.types.Ast.Expression.CharacterLiteral.Builder.class);
        }

        // Construct using boa.types.Ast.Expression.CharacterLiteral.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.LITERAL;
          bitField0_ = (bitField0_ & ~0x00000001);
          escapedValue_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          charValue_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Expression_CharacterLiteral_descriptor;
        }

        public boa.types.Ast.Expression.CharacterLiteral getDefaultInstanceForType() {
          return boa.types.Ast.Expression.CharacterLiteral.getDefaultInstance();
        }

        public boa.types.Ast.Expression.CharacterLiteral build() {
          boa.types.Ast.Expression.CharacterLiteral result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Expression.CharacterLiteral buildPartial() {
          boa.types.Ast.Expression.CharacterLiteral result = new boa.types.Ast.Expression.CharacterLiteral(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.escapedValue_ = escapedValue_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.charValue_ = charValue_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Expression.CharacterLiteral) {
            return mergeFrom((boa.types.Ast.Expression.CharacterLiteral)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Expression.CharacterLiteral other) {
          if (other == boa.types.Ast.Expression.CharacterLiteral.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasEscapedValue()) {
            bitField0_ |= 0x00000002;
            escapedValue_ = other.escapedValue_;
            onChanged();
          }
          if (other.hasCharValue()) {
            setCharValue(other.getCharValue());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasEscapedValue()) {
            
            return false;
          }
          if (!hasCharValue()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Expression.CharacterLiteral parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Expression.CharacterLiteral) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];
        private boa.types.Ast.Expression.ExpressionKind shadowKind_ = boa.types.Ast.Expression.ExpressionKind.LITERAL;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.LITERAL;
          onChanged();
          return this;
        }

        // required string escaped_value = 2;
        private java.lang.Object escapedValue_ = "";
        /**
         * <code>required string escaped_value = 2;</code>
         *
         * <pre>
         ** The string value of the literal 
         * </pre>
         */
        public boolean hasEscapedValue() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string escaped_value = 2;</code>
         *
         * <pre>
         ** The string value of the literal 
         * </pre>
         */
        public java.lang.String getEscapedValue() {
          java.lang.Object ref = escapedValue_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            escapedValue_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string escaped_value = 2;</code>
         *
         * <pre>
         ** The string value of the literal 
         * </pre>
         */
        public com.google.protobuf.ByteString
            getEscapedValueBytes() {
          java.lang.Object ref = escapedValue_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            escapedValue_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string escaped_value = 2;</code>
         *
         * <pre>
         ** The string value of the literal 
         * </pre>
         */
        public Builder setEscapedValue(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          escapedValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string escaped_value = 2;</code>
         *
         * <pre>
         ** The string value of the literal 
         * </pre>
         */
        public Builder clearEscapedValue() {
          bitField0_ = (bitField0_ & ~0x00000002);
          escapedValue_ = getDefaultInstance().getEscapedValue();
          onChanged();
          return this;
        }
        /**
         * <code>required string escaped_value = 2;</code>
         *
         * <pre>
         ** The string value of the literal 
         * </pre>
         */
        public Builder setEscapedValueBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          escapedValue_ = value;
          onChanged();
          return this;
        }

        // required int32 char_value = 3;
        private int charValue_ ;
        /**
         * <code>required int32 char_value = 3;</code>
         *
         * <pre>
         ** The value of the literal, converted to an int 
         * </pre>
         */
        public boolean hasCharValue() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required int32 char_value = 3;</code>
         *
         * <pre>
         ** The value of the literal, converted to an int 
         * </pre>
         */
        public int getCharValue() {
          return charValue_;
        }
        /**
         * <code>required int32 char_value = 3;</code>
         *
         * <pre>
         ** The value of the literal, converted to an int 
         * </pre>
         */
        public Builder setCharValue(int value) {
          bitField0_ |= 0x00000004;
          charValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 char_value = 3;</code>
         *
         * <pre>
         ** The value of the literal, converted to an int 
         * </pre>
         */
        public Builder clearCharValue() {
          bitField0_ = (bitField0_ & ~0x00000004);
          charValue_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Expression.CharacterLiteral)
      }

      static {
        defaultInstance = new CharacterLiteral(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Expression.CharacterLiteral)
    }

    public interface ClassInstanceCreationOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NEW];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NEW];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NEW];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind();

      // required .boa.types.Type new_type = 2;
      /**
       * <code>required .boa.types.Type new_type = 2;</code>
       *
       * <pre>
       ** The type being instantiated 
       * </pre>
       */
      boolean hasNewType();
      /**
       * <code>required .boa.types.Type new_type = 2;</code>
       *
       * <pre>
       ** The type being instantiated 
       * </pre>
       */
      boa.types.Ast.Type getNewType();
      /**
       * <code>required .boa.types.Type new_type = 2;</code>
       *
       * <pre>
       ** The type being instantiated 
       * </pre>
       */
      boa.types.Ast.TypeOrBuilder getNewTypeOrBuilder();

      // optional .boa.types.Expression expression = 3;
      /**
       * <code>optional .boa.types.Expression expression = 3;</code>
       *
       * <pre>
       ** The qualifier expression 
       * </pre>
       */
      boolean hasExpression();
      /**
       * <code>optional .boa.types.Expression expression = 3;</code>
       *
       * <pre>
       ** The qualifier expression 
       * </pre>
       */
      boa.types.Ast.Expression getExpression();
      /**
       * <code>optional .boa.types.Expression expression = 3;</code>
       *
       * <pre>
       ** The qualifier expression 
       * </pre>
       */
      boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder();

      // repeated .boa.types.Expression arguments = 4;
      /**
       * <code>repeated .boa.types.Expression arguments = 4;</code>
       *
       * <pre>
       ** The constructor arguments 
       * </pre>
       */
      java.util.List<boa.types.Ast.Expression> 
          getArgumentsList();
      /**
       * <code>repeated .boa.types.Expression arguments = 4;</code>
       *
       * <pre>
       ** The constructor arguments 
       * </pre>
       */
      boa.types.Ast.Expression getArguments(int index);
      /**
       * <code>repeated .boa.types.Expression arguments = 4;</code>
       *
       * <pre>
       ** The constructor arguments 
       * </pre>
       */
      int getArgumentsCount();
      /**
       * <code>repeated .boa.types.Expression arguments = 4;</code>
       *
       * <pre>
       ** The constructor arguments 
       * </pre>
       */
      java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
          getArgumentsOrBuilderList();
      /**
       * <code>repeated .boa.types.Expression arguments = 4;</code>
       *
       * <pre>
       ** The constructor arguments 
       * </pre>
       */
      boa.types.Ast.ExpressionOrBuilder getArgumentsOrBuilder(
          int index);

      // repeated .boa.types.Type type_arguments = 5;
      /**
       * <code>repeated .boa.types.Type type_arguments = 5;</code>
       *
       * <pre>
       ** The generic type arguments 
       * </pre>
       */
      java.util.List<boa.types.Ast.Type> 
          getTypeArgumentsList();
      /**
       * <code>repeated .boa.types.Type type_arguments = 5;</code>
       *
       * <pre>
       ** The generic type arguments 
       * </pre>
       */
      boa.types.Ast.Type getTypeArguments(int index);
      /**
       * <code>repeated .boa.types.Type type_arguments = 5;</code>
       *
       * <pre>
       ** The generic type arguments 
       * </pre>
       */
      int getTypeArgumentsCount();
      /**
       * <code>repeated .boa.types.Type type_arguments = 5;</code>
       *
       * <pre>
       ** The generic type arguments 
       * </pre>
       */
      java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
          getTypeArgumentsOrBuilderList();
      /**
       * <code>repeated .boa.types.Type type_arguments = 5;</code>
       *
       * <pre>
       ** The generic type arguments 
       * </pre>
       */
      boa.types.Ast.TypeOrBuilder getTypeArgumentsOrBuilder(
          int index);

      // optional .boa.types.Declaration anonymous_class_decl = 6;
      /**
       * <code>optional .boa.types.Declaration anonymous_class_decl = 6;</code>
       *
       * <pre>
       ** The anonymous class declaration being instantiated 
       * </pre>
       */
      boolean hasAnonymousClassDecl();
      /**
       * <code>optional .boa.types.Declaration anonymous_class_decl = 6;</code>
       *
       * <pre>
       ** The anonymous class declaration being instantiated 
       * </pre>
       */
      boa.types.Ast.Declaration getAnonymousClassDecl();
      /**
       * <code>optional .boa.types.Declaration anonymous_class_decl = 6;</code>
       *
       * <pre>
       ** The anonymous class declaration being instantiated 
       * </pre>
       */
      boa.types.Ast.DeclarationOrBuilder getAnonymousClassDeclOrBuilder();
    }
    /**
     * Protobuf type {@code boa.types.Expression.ClassInstanceCreation}
     *
     * <pre>
     ** A class instance creation 
     * </pre>
     */
    public static final class ClassInstanceCreation extends
        com.google.protobuf.GeneratedMessage
        implements ClassInstanceCreationOrBuilder {
      // Use ClassInstanceCreation.newBuilder() to construct.
      private ClassInstanceCreation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private ClassInstanceCreation(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final ClassInstanceCreation defaultInstance;
      public static ClassInstanceCreation getDefaultInstance() {
        return defaultInstance;
      }

      public ClassInstanceCreation getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private ClassInstanceCreation(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                boa.types.Ast.Type.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = newType_.toBuilder();
                }
                newType_ = input.readMessage(boa.types.Ast.Type.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(newType_);
                  newType_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 26: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = expression_.toBuilder();
                }
                expression_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(expression_);
                  expression_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
              case 34: {
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                  arguments_ = new java.util.ArrayList<boa.types.Ast.Expression>();
                  mutable_bitField0_ |= 0x00000008;
                }
                arguments_.add(input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry));
                break;
              }
              case 42: {
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                  typeArguments_ = new java.util.ArrayList<boa.types.Ast.Type>();
                  mutable_bitField0_ |= 0x00000010;
                }
                typeArguments_.add(input.readMessage(boa.types.Ast.Type.PARSER, extensionRegistry));
                break;
              }
              case 50: {
                boa.types.Ast.Declaration.Builder subBuilder = null;
                if (((bitField0_ & 0x00000008) == 0x00000008)) {
                  subBuilder = anonymousClassDecl_.toBuilder();
                }
                anonymousClassDecl_ = input.readMessage(boa.types.Ast.Declaration.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(anonymousClassDecl_);
                  anonymousClassDecl_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000008;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
            arguments_ = java.util.Collections.unmodifiableList(arguments_);
          }
          if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
            typeArguments_ = java.util.Collections.unmodifiableList(typeArguments_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Expression_ClassInstanceCreation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Expression_ClassInstanceCreation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Expression.ClassInstanceCreation.class, boa.types.Ast.Expression.ClassInstanceCreation.Builder.class);
      }

      public static com.google.protobuf.Parser<ClassInstanceCreation> PARSER =
          new com.google.protobuf.AbstractParser<ClassInstanceCreation>() {
        public ClassInstanceCreation parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ClassInstanceCreation(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<ClassInstanceCreation> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NEW];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Expression.ExpressionKind shadowKind_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NEW];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NEW];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
        return shadowKind_;
      }

      // required .boa.types.Type new_type = 2;
      public static final int NEW_TYPE_FIELD_NUMBER = 2;
      private boa.types.Ast.Type newType_;
      /**
       * <code>required .boa.types.Type new_type = 2;</code>
       *
       * <pre>
       ** The type being instantiated 
       * </pre>
       */
      public boolean hasNewType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .boa.types.Type new_type = 2;</code>
       *
       * <pre>
       ** The type being instantiated 
       * </pre>
       */
      public boa.types.Ast.Type getNewType() {
        return newType_;
      }
      /**
       * <code>required .boa.types.Type new_type = 2;</code>
       *
       * <pre>
       ** The type being instantiated 
       * </pre>
       */
      public boa.types.Ast.TypeOrBuilder getNewTypeOrBuilder() {
        return newType_;
      }

      // optional .boa.types.Expression expression = 3;
      public static final int EXPRESSION_FIELD_NUMBER = 3;
      private boa.types.Ast.Expression expression_;
      /**
       * <code>optional .boa.types.Expression expression = 3;</code>
       *
       * <pre>
       ** The qualifier expression 
       * </pre>
       */
      public boolean hasExpression() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .boa.types.Expression expression = 3;</code>
       *
       * <pre>
       ** The qualifier expression 
       * </pre>
       */
      public boa.types.Ast.Expression getExpression() {
        return expression_;
      }
      /**
       * <code>optional .boa.types.Expression expression = 3;</code>
       *
       * <pre>
       ** The qualifier expression 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder() {
        return expression_;
      }

      // repeated .boa.types.Expression arguments = 4;
      public static final int ARGUMENTS_FIELD_NUMBER = 4;
      private java.util.List<boa.types.Ast.Expression> arguments_;
      /**
       * <code>repeated .boa.types.Expression arguments = 4;</code>
       *
       * <pre>
       ** The constructor arguments 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Expression> getArgumentsList() {
        return arguments_;
      }
      /**
       * <code>repeated .boa.types.Expression arguments = 4;</code>
       *
       * <pre>
       ** The constructor arguments 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
          getArgumentsOrBuilderList() {
        return arguments_;
      }
      /**
       * <code>repeated .boa.types.Expression arguments = 4;</code>
       *
       * <pre>
       ** The constructor arguments 
       * </pre>
       */
      public int getArgumentsCount() {
        return arguments_.size();
      }
      /**
       * <code>repeated .boa.types.Expression arguments = 4;</code>
       *
       * <pre>
       ** The constructor arguments 
       * </pre>
       */
      public boa.types.Ast.Expression getArguments(int index) {
        return arguments_.get(index);
      }
      /**
       * <code>repeated .boa.types.Expression arguments = 4;</code>
       *
       * <pre>
       ** The constructor arguments 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getArgumentsOrBuilder(
          int index) {
        return arguments_.get(index);
      }

      // repeated .boa.types.Type type_arguments = 5;
      public static final int TYPE_ARGUMENTS_FIELD_NUMBER = 5;
      private java.util.List<boa.types.Ast.Type> typeArguments_;
      /**
       * <code>repeated .boa.types.Type type_arguments = 5;</code>
       *
       * <pre>
       ** The generic type arguments 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Type> getTypeArgumentsList() {
        return typeArguments_;
      }
      /**
       * <code>repeated .boa.types.Type type_arguments = 5;</code>
       *
       * <pre>
       ** The generic type arguments 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
          getTypeArgumentsOrBuilderList() {
        return typeArguments_;
      }
      /**
       * <code>repeated .boa.types.Type type_arguments = 5;</code>
       *
       * <pre>
       ** The generic type arguments 
       * </pre>
       */
      public int getTypeArgumentsCount() {
        return typeArguments_.size();
      }
      /**
       * <code>repeated .boa.types.Type type_arguments = 5;</code>
       *
       * <pre>
       ** The generic type arguments 
       * </pre>
       */
      public boa.types.Ast.Type getTypeArguments(int index) {
        return typeArguments_.get(index);
      }
      /**
       * <code>repeated .boa.types.Type type_arguments = 5;</code>
       *
       * <pre>
       ** The generic type arguments 
       * </pre>
       */
      public boa.types.Ast.TypeOrBuilder getTypeArgumentsOrBuilder(
          int index) {
        return typeArguments_.get(index);
      }

      // optional .boa.types.Declaration anonymous_class_decl = 6;
      public static final int ANONYMOUS_CLASS_DECL_FIELD_NUMBER = 6;
      private boa.types.Ast.Declaration anonymousClassDecl_;
      /**
       * <code>optional .boa.types.Declaration anonymous_class_decl = 6;</code>
       *
       * <pre>
       ** The anonymous class declaration being instantiated 
       * </pre>
       */
      public boolean hasAnonymousClassDecl() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .boa.types.Declaration anonymous_class_decl = 6;</code>
       *
       * <pre>
       ** The anonymous class declaration being instantiated 
       * </pre>
       */
      public boa.types.Ast.Declaration getAnonymousClassDecl() {
        return anonymousClassDecl_;
      }
      /**
       * <code>optional .boa.types.Declaration anonymous_class_decl = 6;</code>
       *
       * <pre>
       ** The anonymous class declaration being instantiated 
       * </pre>
       */
      public boa.types.Ast.DeclarationOrBuilder getAnonymousClassDeclOrBuilder() {
        return anonymousClassDecl_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Expression.ExpressionKind.NEW;
        newType_ = boa.types.Ast.Type.getDefaultInstance();
        expression_ = boa.types.Ast.Expression.getDefaultInstance();
        arguments_ = java.util.Collections.emptyList();
        typeArguments_ = java.util.Collections.emptyList();
        anonymousClassDecl_ = boa.types.Ast.Declaration.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasNewType()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getNewType().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (hasExpression()) {
          if (!getExpression().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        for (int i = 0; i < getArgumentsCount(); i++) {
          if (!getArguments(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        for (int i = 0; i < getTypeArgumentsCount(); i++) {
          if (!getTypeArguments(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        if (hasAnonymousClassDecl()) {
          if (!getAnonymousClassDecl().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, newType_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(3, expression_);
        }
        for (int i = 0; i < arguments_.size(); i++) {
          output.writeMessage(4, arguments_.get(i));
        }
        for (int i = 0; i < typeArguments_.size(); i++) {
          output.writeMessage(5, typeArguments_.get(i));
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeMessage(6, anonymousClassDecl_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, newType_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, expression_);
        }
        for (int i = 0; i < arguments_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, arguments_.get(i));
        }
        for (int i = 0; i < typeArguments_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, typeArguments_.get(i));
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, anonymousClassDecl_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Expression.ClassInstanceCreation parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.ClassInstanceCreation parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.ClassInstanceCreation parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.ClassInstanceCreation parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.ClassInstanceCreation parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.ClassInstanceCreation parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.ClassInstanceCreation parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Expression.ClassInstanceCreation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.ClassInstanceCreation parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.ClassInstanceCreation parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Expression.ClassInstanceCreation prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Expression.ClassInstanceCreation}
       *
       * <pre>
       ** A class instance creation 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Expression.ClassInstanceCreationOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Expression_ClassInstanceCreation_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Expression_ClassInstanceCreation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Expression.ClassInstanceCreation.class, boa.types.Ast.Expression.ClassInstanceCreation.Builder.class);
        }

        // Construct using boa.types.Ast.Expression.ClassInstanceCreation.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getNewTypeFieldBuilder();
            getExpressionFieldBuilder();
            getArgumentsFieldBuilder();
            getTypeArgumentsFieldBuilder();
            getAnonymousClassDeclFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.NEW;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (newTypeBuilder_ == null) {
            newType_ = boa.types.Ast.Type.getDefaultInstance();
          } else {
            newTypeBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          if (expressionBuilder_ == null) {
            expression_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            expressionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          if (argumentsBuilder_ == null) {
            arguments_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            argumentsBuilder_.clear();
          }
          if (typeArgumentsBuilder_ == null) {
            typeArguments_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            typeArgumentsBuilder_.clear();
          }
          if (anonymousClassDeclBuilder_ == null) {
            anonymousClassDecl_ = boa.types.Ast.Declaration.getDefaultInstance();
          } else {
            anonymousClassDeclBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Expression_ClassInstanceCreation_descriptor;
        }

        public boa.types.Ast.Expression.ClassInstanceCreation getDefaultInstanceForType() {
          return boa.types.Ast.Expression.ClassInstanceCreation.getDefaultInstance();
        }

        public boa.types.Ast.Expression.ClassInstanceCreation build() {
          boa.types.Ast.Expression.ClassInstanceCreation result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Expression.ClassInstanceCreation buildPartial() {
          boa.types.Ast.Expression.ClassInstanceCreation result = new boa.types.Ast.Expression.ClassInstanceCreation(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (newTypeBuilder_ == null) {
            result.newType_ = newType_;
          } else {
            result.newType_ = newTypeBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          if (expressionBuilder_ == null) {
            result.expression_ = expression_;
          } else {
            result.expression_ = expressionBuilder_.build();
          }
          if (argumentsBuilder_ == null) {
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
              arguments_ = java.util.Collections.unmodifiableList(arguments_);
              bitField0_ = (bitField0_ & ~0x00000008);
            }
            result.arguments_ = arguments_;
          } else {
            result.arguments_ = argumentsBuilder_.build();
          }
          if (typeArgumentsBuilder_ == null) {
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
              typeArguments_ = java.util.Collections.unmodifiableList(typeArguments_);
              bitField0_ = (bitField0_ & ~0x00000010);
            }
            result.typeArguments_ = typeArguments_;
          } else {
            result.typeArguments_ = typeArgumentsBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000008;
          }
          if (anonymousClassDeclBuilder_ == null) {
            result.anonymousClassDecl_ = anonymousClassDecl_;
          } else {
            result.anonymousClassDecl_ = anonymousClassDeclBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Expression.ClassInstanceCreation) {
            return mergeFrom((boa.types.Ast.Expression.ClassInstanceCreation)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Expression.ClassInstanceCreation other) {
          if (other == boa.types.Ast.Expression.ClassInstanceCreation.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasNewType()) {
            mergeNewType(other.getNewType());
          }
          if (other.hasExpression()) {
            mergeExpression(other.getExpression());
          }
          if (argumentsBuilder_ == null) {
            if (!other.arguments_.isEmpty()) {
              if (arguments_.isEmpty()) {
                arguments_ = other.arguments_;
                bitField0_ = (bitField0_ & ~0x00000008);
              } else {
                ensureArgumentsIsMutable();
                arguments_.addAll(other.arguments_);
              }
              onChanged();
            }
          } else {
            if (!other.arguments_.isEmpty()) {
              if (argumentsBuilder_.isEmpty()) {
                argumentsBuilder_.dispose();
                argumentsBuilder_ = null;
                arguments_ = other.arguments_;
                bitField0_ = (bitField0_ & ~0x00000008);
                argumentsBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getArgumentsFieldBuilder() : null;
              } else {
                argumentsBuilder_.addAllMessages(other.arguments_);
              }
            }
          }
          if (typeArgumentsBuilder_ == null) {
            if (!other.typeArguments_.isEmpty()) {
              if (typeArguments_.isEmpty()) {
                typeArguments_ = other.typeArguments_;
                bitField0_ = (bitField0_ & ~0x00000010);
              } else {
                ensureTypeArgumentsIsMutable();
                typeArguments_.addAll(other.typeArguments_);
              }
              onChanged();
            }
          } else {
            if (!other.typeArguments_.isEmpty()) {
              if (typeArgumentsBuilder_.isEmpty()) {
                typeArgumentsBuilder_.dispose();
                typeArgumentsBuilder_ = null;
                typeArguments_ = other.typeArguments_;
                bitField0_ = (bitField0_ & ~0x00000010);
                typeArgumentsBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getTypeArgumentsFieldBuilder() : null;
              } else {
                typeArgumentsBuilder_.addAllMessages(other.typeArguments_);
              }
            }
          }
          if (other.hasAnonymousClassDecl()) {
            mergeAnonymousClassDecl(other.getAnonymousClassDecl());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasNewType()) {
            
            return false;
          }
          if (!getNewType().isInitialized()) {
            
            return false;
          }
          if (hasExpression()) {
            if (!getExpression().isInitialized()) {
              
              return false;
            }
          }
          for (int i = 0; i < getArgumentsCount(); i++) {
            if (!getArguments(i).isInitialized()) {
              
              return false;
            }
          }
          for (int i = 0; i < getTypeArgumentsCount(); i++) {
            if (!getTypeArguments(i).isInitialized()) {
              
              return false;
            }
          }
          if (hasAnonymousClassDecl()) {
            if (!getAnonymousClassDecl().isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Expression.ClassInstanceCreation parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Expression.ClassInstanceCreation) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NEW];
        private boa.types.Ast.Expression.ExpressionKind shadowKind_ = boa.types.Ast.Expression.ExpressionKind.NEW;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NEW];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NEW];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NEW];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NEW];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.NEW;
          onChanged();
          return this;
        }

        // required .boa.types.Type new_type = 2;
        private boa.types.Ast.Type newType_ = boa.types.Ast.Type.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> newTypeBuilder_;
        /**
         * <code>required .boa.types.Type new_type = 2;</code>
         *
         * <pre>
         ** The type being instantiated 
         * </pre>
         */
        public boolean hasNewType() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required .boa.types.Type new_type = 2;</code>
         *
         * <pre>
         ** The type being instantiated 
         * </pre>
         */
        public boa.types.Ast.Type getNewType() {
          if (newTypeBuilder_ == null) {
            return newType_;
          } else {
            return newTypeBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Type new_type = 2;</code>
         *
         * <pre>
         ** The type being instantiated 
         * </pre>
         */
        public Builder setNewType(boa.types.Ast.Type value) {
          if (newTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            newType_ = value;
            onChanged();
          } else {
            newTypeBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Type new_type = 2;</code>
         *
         * <pre>
         ** The type being instantiated 
         * </pre>
         */
        public Builder setNewType(
            boa.types.Ast.Type.Builder builderForValue) {
          if (newTypeBuilder_ == null) {
            newType_ = builderForValue.build();
            onChanged();
          } else {
            newTypeBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Type new_type = 2;</code>
         *
         * <pre>
         ** The type being instantiated 
         * </pre>
         */
        public Builder mergeNewType(boa.types.Ast.Type value) {
          if (newTypeBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                newType_ != boa.types.Ast.Type.getDefaultInstance()) {
              newType_ =
                boa.types.Ast.Type.newBuilder(newType_).mergeFrom(value).buildPartial();
            } else {
              newType_ = value;
            }
            onChanged();
          } else {
            newTypeBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Type new_type = 2;</code>
         *
         * <pre>
         ** The type being instantiated 
         * </pre>
         */
        public Builder clearNewType() {
          if (newTypeBuilder_ == null) {
            newType_ = boa.types.Ast.Type.getDefaultInstance();
            onChanged();
          } else {
            newTypeBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>required .boa.types.Type new_type = 2;</code>
         *
         * <pre>
         ** The type being instantiated 
         * </pre>
         */
        public boa.types.Ast.Type.Builder getNewTypeBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getNewTypeFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Type new_type = 2;</code>
         *
         * <pre>
         ** The type being instantiated 
         * </pre>
         */
        public boa.types.Ast.TypeOrBuilder getNewTypeOrBuilder() {
          if (newTypeBuilder_ != null) {
            return newTypeBuilder_.getMessageOrBuilder();
          } else {
            return newType_;
          }
        }
        /**
         * <code>required .boa.types.Type new_type = 2;</code>
         *
         * <pre>
         ** The type being instantiated 
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> 
            getNewTypeFieldBuilder() {
          if (newTypeBuilder_ == null) {
            newTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder>(
                    newType_,
                    getParentForChildren(),
                    isClean());
            newType_ = null;
          }
          return newTypeBuilder_;
        }

        // optional .boa.types.Expression expression = 3;
        private boa.types.Ast.Expression expression_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> expressionBuilder_;
        /**
         * <code>optional .boa.types.Expression expression = 3;</code>
         *
         * <pre>
         ** The qualifier expression 
         * </pre>
         */
        public boolean hasExpression() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional .boa.types.Expression expression = 3;</code>
         *
         * <pre>
         ** The qualifier expression 
         * </pre>
         */
        public boa.types.Ast.Expression getExpression() {
          if (expressionBuilder_ == null) {
            return expression_;
          } else {
            return expressionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .boa.types.Expression expression = 3;</code>
         *
         * <pre>
         ** The qualifier expression 
         * </pre>
         */
        public Builder setExpression(boa.types.Ast.Expression value) {
          if (expressionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            expression_ = value;
            onChanged();
          } else {
            expressionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .boa.types.Expression expression = 3;</code>
         *
         * <pre>
         ** The qualifier expression 
         * </pre>
         */
        public Builder setExpression(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (expressionBuilder_ == null) {
            expression_ = builderForValue.build();
            onChanged();
          } else {
            expressionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .boa.types.Expression expression = 3;</code>
         *
         * <pre>
         ** The qualifier expression 
         * </pre>
         */
        public Builder mergeExpression(boa.types.Ast.Expression value) {
          if (expressionBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                expression_ != boa.types.Ast.Expression.getDefaultInstance()) {
              expression_ =
                boa.types.Ast.Expression.newBuilder(expression_).mergeFrom(value).buildPartial();
            } else {
              expression_ = value;
            }
            onChanged();
          } else {
            expressionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .boa.types.Expression expression = 3;</code>
         *
         * <pre>
         ** The qualifier expression 
         * </pre>
         */
        public Builder clearExpression() {
          if (expressionBuilder_ == null) {
            expression_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            expressionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <code>optional .boa.types.Expression expression = 3;</code>
         *
         * <pre>
         ** The qualifier expression 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder getExpressionBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getExpressionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .boa.types.Expression expression = 3;</code>
         *
         * <pre>
         ** The qualifier expression 
         * </pre>
         */
        public boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder() {
          if (expressionBuilder_ != null) {
            return expressionBuilder_.getMessageOrBuilder();
          } else {
            return expression_;
          }
        }
        /**
         * <code>optional .boa.types.Expression expression = 3;</code>
         *
         * <pre>
         ** The qualifier expression 
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getExpressionFieldBuilder() {
          if (expressionBuilder_ == null) {
            expressionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    expression_,
                    getParentForChildren(),
                    isClean());
            expression_ = null;
          }
          return expressionBuilder_;
        }

        // repeated .boa.types.Expression arguments = 4;
        private java.util.List<boa.types.Ast.Expression> arguments_ =
          java.util.Collections.emptyList();
        private void ensureArgumentsIsMutable() {
          if (!((bitField0_ & 0x00000008) == 0x00000008)) {
            arguments_ = new java.util.ArrayList<boa.types.Ast.Expression>(arguments_);
            bitField0_ |= 0x00000008;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> argumentsBuilder_;

        /**
         * <code>repeated .boa.types.Expression arguments = 4;</code>
         *
         * <pre>
         ** The constructor arguments 
         * </pre>
         */
        public java.util.List<boa.types.Ast.Expression> getArgumentsList() {
          if (argumentsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(arguments_);
          } else {
            return argumentsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 4;</code>
         *
         * <pre>
         ** The constructor arguments 
         * </pre>
         */
        public int getArgumentsCount() {
          if (argumentsBuilder_ == null) {
            return arguments_.size();
          } else {
            return argumentsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 4;</code>
         *
         * <pre>
         ** The constructor arguments 
         * </pre>
         */
        public boa.types.Ast.Expression getArguments(int index) {
          if (argumentsBuilder_ == null) {
            return arguments_.get(index);
          } else {
            return argumentsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 4;</code>
         *
         * <pre>
         ** The constructor arguments 
         * </pre>
         */
        public Builder setArguments(
            int index, boa.types.Ast.Expression value) {
          if (argumentsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureArgumentsIsMutable();
            arguments_.set(index, value);
            onChanged();
          } else {
            argumentsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 4;</code>
         *
         * <pre>
         ** The constructor arguments 
         * </pre>
         */
        public Builder setArguments(
            int index, boa.types.Ast.Expression.Builder builderForValue) {
          if (argumentsBuilder_ == null) {
            ensureArgumentsIsMutable();
            arguments_.set(index, builderForValue.build());
            onChanged();
          } else {
            argumentsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 4;</code>
         *
         * <pre>
         ** The constructor arguments 
         * </pre>
         */
        public Builder addArguments(boa.types.Ast.Expression value) {
          if (argumentsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureArgumentsIsMutable();
            arguments_.add(value);
            onChanged();
          } else {
            argumentsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 4;</code>
         *
         * <pre>
         ** The constructor arguments 
         * </pre>
         */
        public Builder addArguments(
            int index, boa.types.Ast.Expression value) {
          if (argumentsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureArgumentsIsMutable();
            arguments_.add(index, value);
            onChanged();
          } else {
            argumentsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 4;</code>
         *
         * <pre>
         ** The constructor arguments 
         * </pre>
         */
        public Builder addArguments(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (argumentsBuilder_ == null) {
            ensureArgumentsIsMutable();
            arguments_.add(builderForValue.build());
            onChanged();
          } else {
            argumentsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 4;</code>
         *
         * <pre>
         ** The constructor arguments 
         * </pre>
         */
        public Builder addArguments(
            int index, boa.types.Ast.Expression.Builder builderForValue) {
          if (argumentsBuilder_ == null) {
            ensureArgumentsIsMutable();
            arguments_.add(index, builderForValue.build());
            onChanged();
          } else {
            argumentsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 4;</code>
         *
         * <pre>
         ** The constructor arguments 
         * </pre>
         */
        public Builder addAllArguments(
            java.lang.Iterable<? extends boa.types.Ast.Expression> values) {
          if (argumentsBuilder_ == null) {
            ensureArgumentsIsMutable();
            super.addAll(values, arguments_);
            onChanged();
          } else {
            argumentsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 4;</code>
         *
         * <pre>
         ** The constructor arguments 
         * </pre>
         */
        public Builder clearArguments() {
          if (argumentsBuilder_ == null) {
            arguments_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
            onChanged();
          } else {
            argumentsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 4;</code>
         *
         * <pre>
         ** The constructor arguments 
         * </pre>
         */
        public Builder removeArguments(int index) {
          if (argumentsBuilder_ == null) {
            ensureArgumentsIsMutable();
            arguments_.remove(index);
            onChanged();
          } else {
            argumentsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 4;</code>
         *
         * <pre>
         ** The constructor arguments 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder getArgumentsBuilder(
            int index) {
          return getArgumentsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 4;</code>
         *
         * <pre>
         ** The constructor arguments 
         * </pre>
         */
        public boa.types.Ast.ExpressionOrBuilder getArgumentsOrBuilder(
            int index) {
          if (argumentsBuilder_ == null) {
            return arguments_.get(index);  } else {
            return argumentsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 4;</code>
         *
         * <pre>
         ** The constructor arguments 
         * </pre>
         */
        public java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
             getArgumentsOrBuilderList() {
          if (argumentsBuilder_ != null) {
            return argumentsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(arguments_);
          }
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 4;</code>
         *
         * <pre>
         ** The constructor arguments 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder addArgumentsBuilder() {
          return getArgumentsFieldBuilder().addBuilder(
              boa.types.Ast.Expression.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 4;</code>
         *
         * <pre>
         ** The constructor arguments 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder addArgumentsBuilder(
            int index) {
          return getArgumentsFieldBuilder().addBuilder(
              index, boa.types.Ast.Expression.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 4;</code>
         *
         * <pre>
         ** The constructor arguments 
         * </pre>
         */
        public java.util.List<boa.types.Ast.Expression.Builder> 
             getArgumentsBuilderList() {
          return getArgumentsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getArgumentsFieldBuilder() {
          if (argumentsBuilder_ == null) {
            argumentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    arguments_,
                    ((bitField0_ & 0x00000008) == 0x00000008),
                    getParentForChildren(),
                    isClean());
            arguments_ = null;
          }
          return argumentsBuilder_;
        }

        // repeated .boa.types.Type type_arguments = 5;
        private java.util.List<boa.types.Ast.Type> typeArguments_ =
          java.util.Collections.emptyList();
        private void ensureTypeArgumentsIsMutable() {
          if (!((bitField0_ & 0x00000010) == 0x00000010)) {
            typeArguments_ = new java.util.ArrayList<boa.types.Ast.Type>(typeArguments_);
            bitField0_ |= 0x00000010;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> typeArgumentsBuilder_;

        /**
         * <code>repeated .boa.types.Type type_arguments = 5;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public java.util.List<boa.types.Ast.Type> getTypeArgumentsList() {
          if (typeArgumentsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(typeArguments_);
          } else {
            return typeArgumentsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 5;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public int getTypeArgumentsCount() {
          if (typeArgumentsBuilder_ == null) {
            return typeArguments_.size();
          } else {
            return typeArgumentsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 5;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public boa.types.Ast.Type getTypeArguments(int index) {
          if (typeArgumentsBuilder_ == null) {
            return typeArguments_.get(index);
          } else {
            return typeArgumentsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 5;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public Builder setTypeArguments(
            int index, boa.types.Ast.Type value) {
          if (typeArgumentsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTypeArgumentsIsMutable();
            typeArguments_.set(index, value);
            onChanged();
          } else {
            typeArgumentsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 5;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public Builder setTypeArguments(
            int index, boa.types.Ast.Type.Builder builderForValue) {
          if (typeArgumentsBuilder_ == null) {
            ensureTypeArgumentsIsMutable();
            typeArguments_.set(index, builderForValue.build());
            onChanged();
          } else {
            typeArgumentsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 5;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public Builder addTypeArguments(boa.types.Ast.Type value) {
          if (typeArgumentsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTypeArgumentsIsMutable();
            typeArguments_.add(value);
            onChanged();
          } else {
            typeArgumentsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 5;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public Builder addTypeArguments(
            int index, boa.types.Ast.Type value) {
          if (typeArgumentsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTypeArgumentsIsMutable();
            typeArguments_.add(index, value);
            onChanged();
          } else {
            typeArgumentsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 5;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public Builder addTypeArguments(
            boa.types.Ast.Type.Builder builderForValue) {
          if (typeArgumentsBuilder_ == null) {
            ensureTypeArgumentsIsMutable();
            typeArguments_.add(builderForValue.build());
            onChanged();
          } else {
            typeArgumentsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 5;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public Builder addTypeArguments(
            int index, boa.types.Ast.Type.Builder builderForValue) {
          if (typeArgumentsBuilder_ == null) {
            ensureTypeArgumentsIsMutable();
            typeArguments_.add(index, builderForValue.build());
            onChanged();
          } else {
            typeArgumentsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 5;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public Builder addAllTypeArguments(
            java.lang.Iterable<? extends boa.types.Ast.Type> values) {
          if (typeArgumentsBuilder_ == null) {
            ensureTypeArgumentsIsMutable();
            super.addAll(values, typeArguments_);
            onChanged();
          } else {
            typeArgumentsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 5;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public Builder clearTypeArguments() {
          if (typeArgumentsBuilder_ == null) {
            typeArguments_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000010);
            onChanged();
          } else {
            typeArgumentsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 5;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public Builder removeTypeArguments(int index) {
          if (typeArgumentsBuilder_ == null) {
            ensureTypeArgumentsIsMutable();
            typeArguments_.remove(index);
            onChanged();
          } else {
            typeArgumentsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 5;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public boa.types.Ast.Type.Builder getTypeArgumentsBuilder(
            int index) {
          return getTypeArgumentsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 5;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public boa.types.Ast.TypeOrBuilder getTypeArgumentsOrBuilder(
            int index) {
          if (typeArgumentsBuilder_ == null) {
            return typeArguments_.get(index);  } else {
            return typeArgumentsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 5;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
             getTypeArgumentsOrBuilderList() {
          if (typeArgumentsBuilder_ != null) {
            return typeArgumentsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(typeArguments_);
          }
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 5;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public boa.types.Ast.Type.Builder addTypeArgumentsBuilder() {
          return getTypeArgumentsFieldBuilder().addBuilder(
              boa.types.Ast.Type.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 5;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public boa.types.Ast.Type.Builder addTypeArgumentsBuilder(
            int index) {
          return getTypeArgumentsFieldBuilder().addBuilder(
              index, boa.types.Ast.Type.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 5;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public java.util.List<boa.types.Ast.Type.Builder> 
             getTypeArgumentsBuilderList() {
          return getTypeArgumentsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> 
            getTypeArgumentsFieldBuilder() {
          if (typeArgumentsBuilder_ == null) {
            typeArgumentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder>(
                    typeArguments_,
                    ((bitField0_ & 0x00000010) == 0x00000010),
                    getParentForChildren(),
                    isClean());
            typeArguments_ = null;
          }
          return typeArgumentsBuilder_;
        }

        // optional .boa.types.Declaration anonymous_class_decl = 6;
        private boa.types.Ast.Declaration anonymousClassDecl_ = boa.types.Ast.Declaration.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Declaration, boa.types.Ast.Declaration.Builder, boa.types.Ast.DeclarationOrBuilder> anonymousClassDeclBuilder_;
        /**
         * <code>optional .boa.types.Declaration anonymous_class_decl = 6;</code>
         *
         * <pre>
         ** The anonymous class declaration being instantiated 
         * </pre>
         */
        public boolean hasAnonymousClassDecl() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional .boa.types.Declaration anonymous_class_decl = 6;</code>
         *
         * <pre>
         ** The anonymous class declaration being instantiated 
         * </pre>
         */
        public boa.types.Ast.Declaration getAnonymousClassDecl() {
          if (anonymousClassDeclBuilder_ == null) {
            return anonymousClassDecl_;
          } else {
            return anonymousClassDeclBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .boa.types.Declaration anonymous_class_decl = 6;</code>
         *
         * <pre>
         ** The anonymous class declaration being instantiated 
         * </pre>
         */
        public Builder setAnonymousClassDecl(boa.types.Ast.Declaration value) {
          if (anonymousClassDeclBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            anonymousClassDecl_ = value;
            onChanged();
          } else {
            anonymousClassDeclBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000020;
          return this;
        }
        /**
         * <code>optional .boa.types.Declaration anonymous_class_decl = 6;</code>
         *
         * <pre>
         ** The anonymous class declaration being instantiated 
         * </pre>
         */
        public Builder setAnonymousClassDecl(
            boa.types.Ast.Declaration.Builder builderForValue) {
          if (anonymousClassDeclBuilder_ == null) {
            anonymousClassDecl_ = builderForValue.build();
            onChanged();
          } else {
            anonymousClassDeclBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000020;
          return this;
        }
        /**
         * <code>optional .boa.types.Declaration anonymous_class_decl = 6;</code>
         *
         * <pre>
         ** The anonymous class declaration being instantiated 
         * </pre>
         */
        public Builder mergeAnonymousClassDecl(boa.types.Ast.Declaration value) {
          if (anonymousClassDeclBuilder_ == null) {
            if (((bitField0_ & 0x00000020) == 0x00000020) &&
                anonymousClassDecl_ != boa.types.Ast.Declaration.getDefaultInstance()) {
              anonymousClassDecl_ =
                boa.types.Ast.Declaration.newBuilder(anonymousClassDecl_).mergeFrom(value).buildPartial();
            } else {
              anonymousClassDecl_ = value;
            }
            onChanged();
          } else {
            anonymousClassDeclBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000020;
          return this;
        }
        /**
         * <code>optional .boa.types.Declaration anonymous_class_decl = 6;</code>
         *
         * <pre>
         ** The anonymous class declaration being instantiated 
         * </pre>
         */
        public Builder clearAnonymousClassDecl() {
          if (anonymousClassDeclBuilder_ == null) {
            anonymousClassDecl_ = boa.types.Ast.Declaration.getDefaultInstance();
            onChanged();
          } else {
            anonymousClassDeclBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }
        /**
         * <code>optional .boa.types.Declaration anonymous_class_decl = 6;</code>
         *
         * <pre>
         ** The anonymous class declaration being instantiated 
         * </pre>
         */
        public boa.types.Ast.Declaration.Builder getAnonymousClassDeclBuilder() {
          bitField0_ |= 0x00000020;
          onChanged();
          return getAnonymousClassDeclFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .boa.types.Declaration anonymous_class_decl = 6;</code>
         *
         * <pre>
         ** The anonymous class declaration being instantiated 
         * </pre>
         */
        public boa.types.Ast.DeclarationOrBuilder getAnonymousClassDeclOrBuilder() {
          if (anonymousClassDeclBuilder_ != null) {
            return anonymousClassDeclBuilder_.getMessageOrBuilder();
          } else {
            return anonymousClassDecl_;
          }
        }
        /**
         * <code>optional .boa.types.Declaration anonymous_class_decl = 6;</code>
         *
         * <pre>
         ** The anonymous class declaration being instantiated 
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Declaration, boa.types.Ast.Declaration.Builder, boa.types.Ast.DeclarationOrBuilder> 
            getAnonymousClassDeclFieldBuilder() {
          if (anonymousClassDeclBuilder_ == null) {
            anonymousClassDeclBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Declaration, boa.types.Ast.Declaration.Builder, boa.types.Ast.DeclarationOrBuilder>(
                    anonymousClassDecl_,
                    getParentForChildren(),
                    isClean());
            anonymousClassDecl_ = null;
          }
          return anonymousClassDeclBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Expression.ClassInstanceCreation)
      }

      static {
        defaultInstance = new ClassInstanceCreation(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Expression.ClassInstanceCreation)
    }

    public interface ConditionalExpressionOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = CONDITIONAL];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = CONDITIONAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = CONDITIONAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind();

      // required .boa.types.Expression expression = 2;
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       *
       * <pre>
       ** The conditional expression 
       * </pre>
       */
      boolean hasExpression();
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       *
       * <pre>
       ** The conditional expression 
       * </pre>
       */
      boa.types.Ast.Expression getExpression();
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       *
       * <pre>
       ** The conditional expression 
       * </pre>
       */
      boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder();

      // required .boa.types.Expression then_expression = 3;
      /**
       * <code>required .boa.types.Expression then_expression = 3;</code>
       *
       * <pre>
       ** The then/true expression 
       * </pre>
       */
      boolean hasThenExpression();
      /**
       * <code>required .boa.types.Expression then_expression = 3;</code>
       *
       * <pre>
       ** The then/true expression 
       * </pre>
       */
      boa.types.Ast.Expression getThenExpression();
      /**
       * <code>required .boa.types.Expression then_expression = 3;</code>
       *
       * <pre>
       ** The then/true expression 
       * </pre>
       */
      boa.types.Ast.ExpressionOrBuilder getThenExpressionOrBuilder();

      // required .boa.types.Expression else_expression = 4;
      /**
       * <code>required .boa.types.Expression else_expression = 4;</code>
       *
       * <pre>
       ** The else/false expression 
       * </pre>
       */
      boolean hasElseExpression();
      /**
       * <code>required .boa.types.Expression else_expression = 4;</code>
       *
       * <pre>
       ** The else/false expression 
       * </pre>
       */
      boa.types.Ast.Expression getElseExpression();
      /**
       * <code>required .boa.types.Expression else_expression = 4;</code>
       *
       * <pre>
       ** The else/false expression 
       * </pre>
       */
      boa.types.Ast.ExpressionOrBuilder getElseExpressionOrBuilder();
    }
    /**
     * Protobuf type {@code boa.types.Expression.ConditionalExpression}
     *
     * <pre>
     ** A conditional expression (ternary operator) 
     * </pre>
     */
    public static final class ConditionalExpression extends
        com.google.protobuf.GeneratedMessage
        implements ConditionalExpressionOrBuilder {
      // Use ConditionalExpression.newBuilder() to construct.
      private ConditionalExpression(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private ConditionalExpression(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final ConditionalExpression defaultInstance;
      public static ConditionalExpression getDefaultInstance() {
        return defaultInstance;
      }

      public ConditionalExpression getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private ConditionalExpression(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = expression_.toBuilder();
                }
                expression_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(expression_);
                  expression_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 26: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = thenExpression_.toBuilder();
                }
                thenExpression_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(thenExpression_);
                  thenExpression_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
              case 34: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000008) == 0x00000008)) {
                  subBuilder = elseExpression_.toBuilder();
                }
                elseExpression_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(elseExpression_);
                  elseExpression_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000008;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Expression_ConditionalExpression_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Expression_ConditionalExpression_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Expression.ConditionalExpression.class, boa.types.Ast.Expression.ConditionalExpression.Builder.class);
      }

      public static com.google.protobuf.Parser<ConditionalExpression> PARSER =
          new com.google.protobuf.AbstractParser<ConditionalExpression>() {
        public ConditionalExpression parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ConditionalExpression(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<ConditionalExpression> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = CONDITIONAL];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Expression.ExpressionKind shadowKind_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = CONDITIONAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = CONDITIONAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
        return shadowKind_;
      }

      // required .boa.types.Expression expression = 2;
      public static final int EXPRESSION_FIELD_NUMBER = 2;
      private boa.types.Ast.Expression expression_;
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       *
       * <pre>
       ** The conditional expression 
       * </pre>
       */
      public boolean hasExpression() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       *
       * <pre>
       ** The conditional expression 
       * </pre>
       */
      public boa.types.Ast.Expression getExpression() {
        return expression_;
      }
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       *
       * <pre>
       ** The conditional expression 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder() {
        return expression_;
      }

      // required .boa.types.Expression then_expression = 3;
      public static final int THEN_EXPRESSION_FIELD_NUMBER = 3;
      private boa.types.Ast.Expression thenExpression_;
      /**
       * <code>required .boa.types.Expression then_expression = 3;</code>
       *
       * <pre>
       ** The then/true expression 
       * </pre>
       */
      public boolean hasThenExpression() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .boa.types.Expression then_expression = 3;</code>
       *
       * <pre>
       ** The then/true expression 
       * </pre>
       */
      public boa.types.Ast.Expression getThenExpression() {
        return thenExpression_;
      }
      /**
       * <code>required .boa.types.Expression then_expression = 3;</code>
       *
       * <pre>
       ** The then/true expression 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getThenExpressionOrBuilder() {
        return thenExpression_;
      }

      // required .boa.types.Expression else_expression = 4;
      public static final int ELSE_EXPRESSION_FIELD_NUMBER = 4;
      private boa.types.Ast.Expression elseExpression_;
      /**
       * <code>required .boa.types.Expression else_expression = 4;</code>
       *
       * <pre>
       ** The else/false expression 
       * </pre>
       */
      public boolean hasElseExpression() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .boa.types.Expression else_expression = 4;</code>
       *
       * <pre>
       ** The else/false expression 
       * </pre>
       */
      public boa.types.Ast.Expression getElseExpression() {
        return elseExpression_;
      }
      /**
       * <code>required .boa.types.Expression else_expression = 4;</code>
       *
       * <pre>
       ** The else/false expression 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getElseExpressionOrBuilder() {
        return elseExpression_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Expression.ExpressionKind.CONDITIONAL;
        expression_ = boa.types.Ast.Expression.getDefaultInstance();
        thenExpression_ = boa.types.Ast.Expression.getDefaultInstance();
        elseExpression_ = boa.types.Ast.Expression.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasExpression()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasThenExpression()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasElseExpression()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getExpression().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getThenExpression().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getElseExpression().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, expression_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(3, thenExpression_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeMessage(4, elseExpression_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, expression_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, thenExpression_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, elseExpression_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Expression.ConditionalExpression parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.ConditionalExpression parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.ConditionalExpression parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.ConditionalExpression parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.ConditionalExpression parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.ConditionalExpression parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.ConditionalExpression parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Expression.ConditionalExpression parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.ConditionalExpression parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.ConditionalExpression parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Expression.ConditionalExpression prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Expression.ConditionalExpression}
       *
       * <pre>
       ** A conditional expression (ternary operator) 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Expression.ConditionalExpressionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Expression_ConditionalExpression_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Expression_ConditionalExpression_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Expression.ConditionalExpression.class, boa.types.Ast.Expression.ConditionalExpression.Builder.class);
        }

        // Construct using boa.types.Ast.Expression.ConditionalExpression.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getExpressionFieldBuilder();
            getThenExpressionFieldBuilder();
            getElseExpressionFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.CONDITIONAL;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (expressionBuilder_ == null) {
            expression_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            expressionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          if (thenExpressionBuilder_ == null) {
            thenExpression_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            thenExpressionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          if (elseExpressionBuilder_ == null) {
            elseExpression_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            elseExpressionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Expression_ConditionalExpression_descriptor;
        }

        public boa.types.Ast.Expression.ConditionalExpression getDefaultInstanceForType() {
          return boa.types.Ast.Expression.ConditionalExpression.getDefaultInstance();
        }

        public boa.types.Ast.Expression.ConditionalExpression build() {
          boa.types.Ast.Expression.ConditionalExpression result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Expression.ConditionalExpression buildPartial() {
          boa.types.Ast.Expression.ConditionalExpression result = new boa.types.Ast.Expression.ConditionalExpression(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (expressionBuilder_ == null) {
            result.expression_ = expression_;
          } else {
            result.expression_ = expressionBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          if (thenExpressionBuilder_ == null) {
            result.thenExpression_ = thenExpression_;
          } else {
            result.thenExpression_ = thenExpressionBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          if (elseExpressionBuilder_ == null) {
            result.elseExpression_ = elseExpression_;
          } else {
            result.elseExpression_ = elseExpressionBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Expression.ConditionalExpression) {
            return mergeFrom((boa.types.Ast.Expression.ConditionalExpression)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Expression.ConditionalExpression other) {
          if (other == boa.types.Ast.Expression.ConditionalExpression.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasExpression()) {
            mergeExpression(other.getExpression());
          }
          if (other.hasThenExpression()) {
            mergeThenExpression(other.getThenExpression());
          }
          if (other.hasElseExpression()) {
            mergeElseExpression(other.getElseExpression());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasExpression()) {
            
            return false;
          }
          if (!hasThenExpression()) {
            
            return false;
          }
          if (!hasElseExpression()) {
            
            return false;
          }
          if (!getExpression().isInitialized()) {
            
            return false;
          }
          if (!getThenExpression().isInitialized()) {
            
            return false;
          }
          if (!getElseExpression().isInitialized()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Expression.ConditionalExpression parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Expression.ConditionalExpression) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = CONDITIONAL];
        private boa.types.Ast.Expression.ExpressionKind shadowKind_ = boa.types.Ast.Expression.ExpressionKind.CONDITIONAL;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = CONDITIONAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = CONDITIONAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = CONDITIONAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = CONDITIONAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.CONDITIONAL;
          onChanged();
          return this;
        }

        // required .boa.types.Expression expression = 2;
        private boa.types.Ast.Expression expression_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> expressionBuilder_;
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The conditional expression 
         * </pre>
         */
        public boolean hasExpression() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The conditional expression 
         * </pre>
         */
        public boa.types.Ast.Expression getExpression() {
          if (expressionBuilder_ == null) {
            return expression_;
          } else {
            return expressionBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The conditional expression 
         * </pre>
         */
        public Builder setExpression(boa.types.Ast.Expression value) {
          if (expressionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            expression_ = value;
            onChanged();
          } else {
            expressionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The conditional expression 
         * </pre>
         */
        public Builder setExpression(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (expressionBuilder_ == null) {
            expression_ = builderForValue.build();
            onChanged();
          } else {
            expressionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The conditional expression 
         * </pre>
         */
        public Builder mergeExpression(boa.types.Ast.Expression value) {
          if (expressionBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                expression_ != boa.types.Ast.Expression.getDefaultInstance()) {
              expression_ =
                boa.types.Ast.Expression.newBuilder(expression_).mergeFrom(value).buildPartial();
            } else {
              expression_ = value;
            }
            onChanged();
          } else {
            expressionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The conditional expression 
         * </pre>
         */
        public Builder clearExpression() {
          if (expressionBuilder_ == null) {
            expression_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            expressionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The conditional expression 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder getExpressionBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getExpressionFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The conditional expression 
         * </pre>
         */
        public boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder() {
          if (expressionBuilder_ != null) {
            return expressionBuilder_.getMessageOrBuilder();
          } else {
            return expression_;
          }
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The conditional expression 
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getExpressionFieldBuilder() {
          if (expressionBuilder_ == null) {
            expressionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    expression_,
                    getParentForChildren(),
                    isClean());
            expression_ = null;
          }
          return expressionBuilder_;
        }

        // required .boa.types.Expression then_expression = 3;
        private boa.types.Ast.Expression thenExpression_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> thenExpressionBuilder_;
        /**
         * <code>required .boa.types.Expression then_expression = 3;</code>
         *
         * <pre>
         ** The then/true expression 
         * </pre>
         */
        public boolean hasThenExpression() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required .boa.types.Expression then_expression = 3;</code>
         *
         * <pre>
         ** The then/true expression 
         * </pre>
         */
        public boa.types.Ast.Expression getThenExpression() {
          if (thenExpressionBuilder_ == null) {
            return thenExpression_;
          } else {
            return thenExpressionBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Expression then_expression = 3;</code>
         *
         * <pre>
         ** The then/true expression 
         * </pre>
         */
        public Builder setThenExpression(boa.types.Ast.Expression value) {
          if (thenExpressionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            thenExpression_ = value;
            onChanged();
          } else {
            thenExpressionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Expression then_expression = 3;</code>
         *
         * <pre>
         ** The then/true expression 
         * </pre>
         */
        public Builder setThenExpression(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (thenExpressionBuilder_ == null) {
            thenExpression_ = builderForValue.build();
            onChanged();
          } else {
            thenExpressionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Expression then_expression = 3;</code>
         *
         * <pre>
         ** The then/true expression 
         * </pre>
         */
        public Builder mergeThenExpression(boa.types.Ast.Expression value) {
          if (thenExpressionBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                thenExpression_ != boa.types.Ast.Expression.getDefaultInstance()) {
              thenExpression_ =
                boa.types.Ast.Expression.newBuilder(thenExpression_).mergeFrom(value).buildPartial();
            } else {
              thenExpression_ = value;
            }
            onChanged();
          } else {
            thenExpressionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Expression then_expression = 3;</code>
         *
         * <pre>
         ** The then/true expression 
         * </pre>
         */
        public Builder clearThenExpression() {
          if (thenExpressionBuilder_ == null) {
            thenExpression_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            thenExpressionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <code>required .boa.types.Expression then_expression = 3;</code>
         *
         * <pre>
         ** The then/true expression 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder getThenExpressionBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getThenExpressionFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Expression then_expression = 3;</code>
         *
         * <pre>
         ** The then/true expression 
         * </pre>
         */
        public boa.types.Ast.ExpressionOrBuilder getThenExpressionOrBuilder() {
          if (thenExpressionBuilder_ != null) {
            return thenExpressionBuilder_.getMessageOrBuilder();
          } else {
            return thenExpression_;
          }
        }
        /**
         * <code>required .boa.types.Expression then_expression = 3;</code>
         *
         * <pre>
         ** The then/true expression 
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getThenExpressionFieldBuilder() {
          if (thenExpressionBuilder_ == null) {
            thenExpressionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    thenExpression_,
                    getParentForChildren(),
                    isClean());
            thenExpression_ = null;
          }
          return thenExpressionBuilder_;
        }

        // required .boa.types.Expression else_expression = 4;
        private boa.types.Ast.Expression elseExpression_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> elseExpressionBuilder_;
        /**
         * <code>required .boa.types.Expression else_expression = 4;</code>
         *
         * <pre>
         ** The else/false expression 
         * </pre>
         */
        public boolean hasElseExpression() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>required .boa.types.Expression else_expression = 4;</code>
         *
         * <pre>
         ** The else/false expression 
         * </pre>
         */
        public boa.types.Ast.Expression getElseExpression() {
          if (elseExpressionBuilder_ == null) {
            return elseExpression_;
          } else {
            return elseExpressionBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Expression else_expression = 4;</code>
         *
         * <pre>
         ** The else/false expression 
         * </pre>
         */
        public Builder setElseExpression(boa.types.Ast.Expression value) {
          if (elseExpressionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            elseExpression_ = value;
            onChanged();
          } else {
            elseExpressionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>required .boa.types.Expression else_expression = 4;</code>
         *
         * <pre>
         ** The else/false expression 
         * </pre>
         */
        public Builder setElseExpression(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (elseExpressionBuilder_ == null) {
            elseExpression_ = builderForValue.build();
            onChanged();
          } else {
            elseExpressionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>required .boa.types.Expression else_expression = 4;</code>
         *
         * <pre>
         ** The else/false expression 
         * </pre>
         */
        public Builder mergeElseExpression(boa.types.Ast.Expression value) {
          if (elseExpressionBuilder_ == null) {
            if (((bitField0_ & 0x00000008) == 0x00000008) &&
                elseExpression_ != boa.types.Ast.Expression.getDefaultInstance()) {
              elseExpression_ =
                boa.types.Ast.Expression.newBuilder(elseExpression_).mergeFrom(value).buildPartial();
            } else {
              elseExpression_ = value;
            }
            onChanged();
          } else {
            elseExpressionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>required .boa.types.Expression else_expression = 4;</code>
         *
         * <pre>
         ** The else/false expression 
         * </pre>
         */
        public Builder clearElseExpression() {
          if (elseExpressionBuilder_ == null) {
            elseExpression_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            elseExpressionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }
        /**
         * <code>required .boa.types.Expression else_expression = 4;</code>
         *
         * <pre>
         ** The else/false expression 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder getElseExpressionBuilder() {
          bitField0_ |= 0x00000008;
          onChanged();
          return getElseExpressionFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Expression else_expression = 4;</code>
         *
         * <pre>
         ** The else/false expression 
         * </pre>
         */
        public boa.types.Ast.ExpressionOrBuilder getElseExpressionOrBuilder() {
          if (elseExpressionBuilder_ != null) {
            return elseExpressionBuilder_.getMessageOrBuilder();
          } else {
            return elseExpression_;
          }
        }
        /**
         * <code>required .boa.types.Expression else_expression = 4;</code>
         *
         * <pre>
         ** The else/false expression 
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getElseExpressionFieldBuilder() {
          if (elseExpressionBuilder_ == null) {
            elseExpressionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    elseExpression_,
                    getParentForChildren(),
                    isClean());
            elseExpression_ = null;
          }
          return elseExpressionBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Expression.ConditionalExpression)
      }

      static {
        defaultInstance = new ConditionalExpression(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Expression.ConditionalExpression)
    }

    public interface InfixExpressionOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_ADD];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_ADD];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind1();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_ADD];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind1();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = BIT_AND];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = BIT_AND];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind2();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = BIT_AND];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind2();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = LOGICAL_AND];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = LOGICAL_AND];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind3();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = LOGICAL_AND];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind3();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = LOGICAL_OR];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = LOGICAL_OR];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind4();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = LOGICAL_OR];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind4();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = OP_DIV];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = OP_DIV];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind5();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = OP_DIV];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind5();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = EQ];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = EQ];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind6();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = EQ];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind6();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_7 = 7 [default = GT];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_7 = 7 [default = GT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind7();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_7 = 7 [default = GT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind7();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_8 = 8 [default = GTEQ];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_8 = 8 [default = GTEQ];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind8();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_8 = 8 [default = GTEQ];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind8();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_9 = 9 [default = BIT_LSHIFT];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_9 = 9 [default = BIT_LSHIFT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind9();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_9 = 9 [default = BIT_LSHIFT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind9();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_10 = 10 [default = LT];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_10 = 10 [default = LT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind10();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_10 = 10 [default = LT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind10();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_11 = 11 [default = LTEQ];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_11 = 11 [default = LTEQ];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind11();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_11 = 11 [default = LTEQ];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind11();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_12 = 12 [default = OP_SUB];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_12 = 12 [default = OP_SUB];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind12();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_12 = 12 [default = OP_SUB];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind12();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_13 = 13 [default = NEQ];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_13 = 13 [default = NEQ];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind13();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_13 = 13 [default = NEQ];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind13();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_14 = 14 [default = BIT_OR];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_14 = 14 [default = BIT_OR];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind14();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_14 = 14 [default = BIT_OR];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind14();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_15 = 15 [default = OP_MOD];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_15 = 15 [default = OP_MOD];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind15();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_15 = 15 [default = OP_MOD];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind15();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_16 = 16 [default = BIT_RSHIFT];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_16 = 16 [default = BIT_RSHIFT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind16();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_16 = 16 [default = BIT_RSHIFT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind16();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_17 = 17 [default = BIT_UNSIGNEDRSHIFT];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_17 = 17 [default = BIT_UNSIGNEDRSHIFT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind17();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_17 = 17 [default = BIT_UNSIGNEDRSHIFT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind17();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_18 = 18 [default = OP_MULT];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_18 = 18 [default = OP_MULT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind18();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_18 = 18 [default = OP_MULT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind18();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_19 = 19 [default = BIT_XOR];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_19 = 19 [default = BIT_XOR];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind19();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_19 = 19 [default = BIT_XOR];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind19();

      // required .boa.types.Expression left_operand = 20;
      /**
       * <code>required .boa.types.Expression left_operand = 20;</code>
       *
       * <pre>
       ** The left operand 
       * </pre>
       */
      boolean hasLeftOperand();
      /**
       * <code>required .boa.types.Expression left_operand = 20;</code>
       *
       * <pre>
       ** The left operand 
       * </pre>
       */
      boa.types.Ast.Expression getLeftOperand();
      /**
       * <code>required .boa.types.Expression left_operand = 20;</code>
       *
       * <pre>
       ** The left operand 
       * </pre>
       */
      boa.types.Ast.ExpressionOrBuilder getLeftOperandOrBuilder();

      // required .boa.types.Expression right_operand = 21;
      /**
       * <code>required .boa.types.Expression right_operand = 21;</code>
       *
       * <pre>
       ** The right operand 
       * </pre>
       */
      boolean hasRightOperand();
      /**
       * <code>required .boa.types.Expression right_operand = 21;</code>
       *
       * <pre>
       ** The right operand 
       * </pre>
       */
      boa.types.Ast.Expression getRightOperand();
      /**
       * <code>required .boa.types.Expression right_operand = 21;</code>
       *
       * <pre>
       ** The right operand 
       * </pre>
       */
      boa.types.Ast.ExpressionOrBuilder getRightOperandOrBuilder();

      // repeated .boa.types.Expression extended_operands = 22;
      /**
       * <code>repeated .boa.types.Expression extended_operands = 22;</code>
       *
       * <pre>
       ** Any additional operands 
       * </pre>
       */
      java.util.List<boa.types.Ast.Expression> 
          getExtendedOperandsList();
      /**
       * <code>repeated .boa.types.Expression extended_operands = 22;</code>
       *
       * <pre>
       ** Any additional operands 
       * </pre>
       */
      boa.types.Ast.Expression getExtendedOperands(int index);
      /**
       * <code>repeated .boa.types.Expression extended_operands = 22;</code>
       *
       * <pre>
       ** Any additional operands 
       * </pre>
       */
      int getExtendedOperandsCount();
      /**
       * <code>repeated .boa.types.Expression extended_operands = 22;</code>
       *
       * <pre>
       ** Any additional operands 
       * </pre>
       */
      java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
          getExtendedOperandsOrBuilderList();
      /**
       * <code>repeated .boa.types.Expression extended_operands = 22;</code>
       *
       * <pre>
       ** Any additional operands 
       * </pre>
       */
      boa.types.Ast.ExpressionOrBuilder getExtendedOperandsOrBuilder(
          int index);

      // required .boa.types.Expression.ExpressionKind operator = 23;
      /**
       * <code>required .boa.types.Expression.ExpressionKind operator = 23;</code>
       *
       * <pre>
       ** The operator 
       * </pre>
       */
      boolean hasOperator();
      /**
       * <code>required .boa.types.Expression.ExpressionKind operator = 23;</code>
       *
       * <pre>
       ** The operator 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getOperator();
    }
    /**
     * Protobuf type {@code boa.types.Expression.InfixExpression}
     *
     * <pre>
     ** An infix expression 
     * </pre>
     */
    public static final class InfixExpression extends
        com.google.protobuf.GeneratedMessage
        implements InfixExpressionOrBuilder {
      // Use InfixExpression.newBuilder() to construct.
      private InfixExpression(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private InfixExpression(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final InfixExpression defaultInstance;
      public static InfixExpression getDefaultInstance() {
        return defaultInstance;
      }

      public InfixExpression getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private InfixExpression(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind1_ = value;
                }
                break;
              }
              case 16: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(2, rawValue);
                } else {
                  bitField0_ |= 0x00000002;
                  shadowKind2_ = value;
                }
                break;
              }
              case 24: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(3, rawValue);
                } else {
                  bitField0_ |= 0x00000004;
                  shadowKind3_ = value;
                }
                break;
              }
              case 32: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(4, rawValue);
                } else {
                  bitField0_ |= 0x00000008;
                  shadowKind4_ = value;
                }
                break;
              }
              case 40: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(5, rawValue);
                } else {
                  bitField0_ |= 0x00000010;
                  shadowKind5_ = value;
                }
                break;
              }
              case 48: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(6, rawValue);
                } else {
                  bitField0_ |= 0x00000020;
                  shadowKind6_ = value;
                }
                break;
              }
              case 56: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(7, rawValue);
                } else {
                  bitField0_ |= 0x00000040;
                  shadowKind7_ = value;
                }
                break;
              }
              case 64: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(8, rawValue);
                } else {
                  bitField0_ |= 0x00000080;
                  shadowKind8_ = value;
                }
                break;
              }
              case 72: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(9, rawValue);
                } else {
                  bitField0_ |= 0x00000100;
                  shadowKind9_ = value;
                }
                break;
              }
              case 80: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(10, rawValue);
                } else {
                  bitField0_ |= 0x00000200;
                  shadowKind10_ = value;
                }
                break;
              }
              case 88: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(11, rawValue);
                } else {
                  bitField0_ |= 0x00000400;
                  shadowKind11_ = value;
                }
                break;
              }
              case 96: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(12, rawValue);
                } else {
                  bitField0_ |= 0x00000800;
                  shadowKind12_ = value;
                }
                break;
              }
              case 104: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(13, rawValue);
                } else {
                  bitField0_ |= 0x00001000;
                  shadowKind13_ = value;
                }
                break;
              }
              case 112: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(14, rawValue);
                } else {
                  bitField0_ |= 0x00002000;
                  shadowKind14_ = value;
                }
                break;
              }
              case 120: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(15, rawValue);
                } else {
                  bitField0_ |= 0x00004000;
                  shadowKind15_ = value;
                }
                break;
              }
              case 128: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(16, rawValue);
                } else {
                  bitField0_ |= 0x00008000;
                  shadowKind16_ = value;
                }
                break;
              }
              case 136: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(17, rawValue);
                } else {
                  bitField0_ |= 0x00010000;
                  shadowKind17_ = value;
                }
                break;
              }
              case 144: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(18, rawValue);
                } else {
                  bitField0_ |= 0x00020000;
                  shadowKind18_ = value;
                }
                break;
              }
              case 152: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(19, rawValue);
                } else {
                  bitField0_ |= 0x00040000;
                  shadowKind19_ = value;
                }
                break;
              }
              case 162: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00080000) == 0x00080000)) {
                  subBuilder = leftOperand_.toBuilder();
                }
                leftOperand_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(leftOperand_);
                  leftOperand_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00080000;
                break;
              }
              case 170: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00100000) == 0x00100000)) {
                  subBuilder = rightOperand_.toBuilder();
                }
                rightOperand_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(rightOperand_);
                  rightOperand_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00100000;
                break;
              }
              case 178: {
                if (!((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
                  extendedOperands_ = new java.util.ArrayList<boa.types.Ast.Expression>();
                  mutable_bitField0_ |= 0x00200000;
                }
                extendedOperands_.add(input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry));
                break;
              }
              case 184: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(23, rawValue);
                } else {
                  bitField0_ |= 0x00200000;
                  operator_ = value;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
            extendedOperands_ = java.util.Collections.unmodifiableList(extendedOperands_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Expression_InfixExpression_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Expression_InfixExpression_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Expression.InfixExpression.class, boa.types.Ast.Expression.InfixExpression.Builder.class);
      }

      public static com.google.protobuf.Parser<InfixExpression> PARSER =
          new com.google.protobuf.AbstractParser<InfixExpression>() {
        public InfixExpression parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new InfixExpression(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<InfixExpression> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_ADD];
      public static final int SHADOW_KIND_1_FIELD_NUMBER = 1;
      private boa.types.Ast.Expression.ExpressionKind shadowKind1_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_ADD];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind1() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_ADD];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind1() {
        return shadowKind1_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = BIT_AND];
      public static final int SHADOW_KIND_2_FIELD_NUMBER = 2;
      private boa.types.Ast.Expression.ExpressionKind shadowKind2_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = BIT_AND];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind2() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = BIT_AND];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind2() {
        return shadowKind2_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = LOGICAL_AND];
      public static final int SHADOW_KIND_3_FIELD_NUMBER = 3;
      private boa.types.Ast.Expression.ExpressionKind shadowKind3_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = LOGICAL_AND];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind3() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = LOGICAL_AND];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind3() {
        return shadowKind3_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = LOGICAL_OR];
      public static final int SHADOW_KIND_4_FIELD_NUMBER = 4;
      private boa.types.Ast.Expression.ExpressionKind shadowKind4_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = LOGICAL_OR];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind4() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = LOGICAL_OR];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind4() {
        return shadowKind4_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = OP_DIV];
      public static final int SHADOW_KIND_5_FIELD_NUMBER = 5;
      private boa.types.Ast.Expression.ExpressionKind shadowKind5_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = OP_DIV];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind5() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = OP_DIV];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind5() {
        return shadowKind5_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = EQ];
      public static final int SHADOW_KIND_6_FIELD_NUMBER = 6;
      private boa.types.Ast.Expression.ExpressionKind shadowKind6_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = EQ];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind6() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = EQ];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind6() {
        return shadowKind6_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_7 = 7 [default = GT];
      public static final int SHADOW_KIND_7_FIELD_NUMBER = 7;
      private boa.types.Ast.Expression.ExpressionKind shadowKind7_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_7 = 7 [default = GT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind7() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_7 = 7 [default = GT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind7() {
        return shadowKind7_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_8 = 8 [default = GTEQ];
      public static final int SHADOW_KIND_8_FIELD_NUMBER = 8;
      private boa.types.Ast.Expression.ExpressionKind shadowKind8_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_8 = 8 [default = GTEQ];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind8() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_8 = 8 [default = GTEQ];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind8() {
        return shadowKind8_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_9 = 9 [default = BIT_LSHIFT];
      public static final int SHADOW_KIND_9_FIELD_NUMBER = 9;
      private boa.types.Ast.Expression.ExpressionKind shadowKind9_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_9 = 9 [default = BIT_LSHIFT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind9() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_9 = 9 [default = BIT_LSHIFT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind9() {
        return shadowKind9_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_10 = 10 [default = LT];
      public static final int SHADOW_KIND_10_FIELD_NUMBER = 10;
      private boa.types.Ast.Expression.ExpressionKind shadowKind10_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_10 = 10 [default = LT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind10() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_10 = 10 [default = LT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind10() {
        return shadowKind10_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_11 = 11 [default = LTEQ];
      public static final int SHADOW_KIND_11_FIELD_NUMBER = 11;
      private boa.types.Ast.Expression.ExpressionKind shadowKind11_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_11 = 11 [default = LTEQ];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind11() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_11 = 11 [default = LTEQ];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind11() {
        return shadowKind11_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_12 = 12 [default = OP_SUB];
      public static final int SHADOW_KIND_12_FIELD_NUMBER = 12;
      private boa.types.Ast.Expression.ExpressionKind shadowKind12_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_12 = 12 [default = OP_SUB];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind12() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_12 = 12 [default = OP_SUB];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind12() {
        return shadowKind12_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_13 = 13 [default = NEQ];
      public static final int SHADOW_KIND_13_FIELD_NUMBER = 13;
      private boa.types.Ast.Expression.ExpressionKind shadowKind13_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_13 = 13 [default = NEQ];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind13() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_13 = 13 [default = NEQ];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind13() {
        return shadowKind13_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_14 = 14 [default = BIT_OR];
      public static final int SHADOW_KIND_14_FIELD_NUMBER = 14;
      private boa.types.Ast.Expression.ExpressionKind shadowKind14_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_14 = 14 [default = BIT_OR];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind14() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_14 = 14 [default = BIT_OR];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind14() {
        return shadowKind14_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_15 = 15 [default = OP_MOD];
      public static final int SHADOW_KIND_15_FIELD_NUMBER = 15;
      private boa.types.Ast.Expression.ExpressionKind shadowKind15_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_15 = 15 [default = OP_MOD];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind15() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_15 = 15 [default = OP_MOD];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind15() {
        return shadowKind15_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_16 = 16 [default = BIT_RSHIFT];
      public static final int SHADOW_KIND_16_FIELD_NUMBER = 16;
      private boa.types.Ast.Expression.ExpressionKind shadowKind16_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_16 = 16 [default = BIT_RSHIFT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind16() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_16 = 16 [default = BIT_RSHIFT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind16() {
        return shadowKind16_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_17 = 17 [default = BIT_UNSIGNEDRSHIFT];
      public static final int SHADOW_KIND_17_FIELD_NUMBER = 17;
      private boa.types.Ast.Expression.ExpressionKind shadowKind17_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_17 = 17 [default = BIT_UNSIGNEDRSHIFT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind17() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_17 = 17 [default = BIT_UNSIGNEDRSHIFT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind17() {
        return shadowKind17_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_18 = 18 [default = OP_MULT];
      public static final int SHADOW_KIND_18_FIELD_NUMBER = 18;
      private boa.types.Ast.Expression.ExpressionKind shadowKind18_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_18 = 18 [default = OP_MULT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind18() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_18 = 18 [default = OP_MULT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind18() {
        return shadowKind18_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_19 = 19 [default = BIT_XOR];
      public static final int SHADOW_KIND_19_FIELD_NUMBER = 19;
      private boa.types.Ast.Expression.ExpressionKind shadowKind19_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_19 = 19 [default = BIT_XOR];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind19() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_19 = 19 [default = BIT_XOR];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind19() {
        return shadowKind19_;
      }

      // required .boa.types.Expression left_operand = 20;
      public static final int LEFT_OPERAND_FIELD_NUMBER = 20;
      private boa.types.Ast.Expression leftOperand_;
      /**
       * <code>required .boa.types.Expression left_operand = 20;</code>
       *
       * <pre>
       ** The left operand 
       * </pre>
       */
      public boolean hasLeftOperand() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>required .boa.types.Expression left_operand = 20;</code>
       *
       * <pre>
       ** The left operand 
       * </pre>
       */
      public boa.types.Ast.Expression getLeftOperand() {
        return leftOperand_;
      }
      /**
       * <code>required .boa.types.Expression left_operand = 20;</code>
       *
       * <pre>
       ** The left operand 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getLeftOperandOrBuilder() {
        return leftOperand_;
      }

      // required .boa.types.Expression right_operand = 21;
      public static final int RIGHT_OPERAND_FIELD_NUMBER = 21;
      private boa.types.Ast.Expression rightOperand_;
      /**
       * <code>required .boa.types.Expression right_operand = 21;</code>
       *
       * <pre>
       ** The right operand 
       * </pre>
       */
      public boolean hasRightOperand() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>required .boa.types.Expression right_operand = 21;</code>
       *
       * <pre>
       ** The right operand 
       * </pre>
       */
      public boa.types.Ast.Expression getRightOperand() {
        return rightOperand_;
      }
      /**
       * <code>required .boa.types.Expression right_operand = 21;</code>
       *
       * <pre>
       ** The right operand 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getRightOperandOrBuilder() {
        return rightOperand_;
      }

      // repeated .boa.types.Expression extended_operands = 22;
      public static final int EXTENDED_OPERANDS_FIELD_NUMBER = 22;
      private java.util.List<boa.types.Ast.Expression> extendedOperands_;
      /**
       * <code>repeated .boa.types.Expression extended_operands = 22;</code>
       *
       * <pre>
       ** Any additional operands 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Expression> getExtendedOperandsList() {
        return extendedOperands_;
      }
      /**
       * <code>repeated .boa.types.Expression extended_operands = 22;</code>
       *
       * <pre>
       ** Any additional operands 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
          getExtendedOperandsOrBuilderList() {
        return extendedOperands_;
      }
      /**
       * <code>repeated .boa.types.Expression extended_operands = 22;</code>
       *
       * <pre>
       ** Any additional operands 
       * </pre>
       */
      public int getExtendedOperandsCount() {
        return extendedOperands_.size();
      }
      /**
       * <code>repeated .boa.types.Expression extended_operands = 22;</code>
       *
       * <pre>
       ** Any additional operands 
       * </pre>
       */
      public boa.types.Ast.Expression getExtendedOperands(int index) {
        return extendedOperands_.get(index);
      }
      /**
       * <code>repeated .boa.types.Expression extended_operands = 22;</code>
       *
       * <pre>
       ** Any additional operands 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getExtendedOperandsOrBuilder(
          int index) {
        return extendedOperands_.get(index);
      }

      // required .boa.types.Expression.ExpressionKind operator = 23;
      public static final int OPERATOR_FIELD_NUMBER = 23;
      private boa.types.Ast.Expression.ExpressionKind operator_;
      /**
       * <code>required .boa.types.Expression.ExpressionKind operator = 23;</code>
       *
       * <pre>
       ** The operator 
       * </pre>
       */
      public boolean hasOperator() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>required .boa.types.Expression.ExpressionKind operator = 23;</code>
       *
       * <pre>
       ** The operator 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getOperator() {
        return operator_;
      }

      private void initFields() {
        shadowKind1_ = boa.types.Ast.Expression.ExpressionKind.OP_ADD;
        shadowKind2_ = boa.types.Ast.Expression.ExpressionKind.BIT_AND;
        shadowKind3_ = boa.types.Ast.Expression.ExpressionKind.LOGICAL_AND;
        shadowKind4_ = boa.types.Ast.Expression.ExpressionKind.LOGICAL_OR;
        shadowKind5_ = boa.types.Ast.Expression.ExpressionKind.OP_DIV;
        shadowKind6_ = boa.types.Ast.Expression.ExpressionKind.EQ;
        shadowKind7_ = boa.types.Ast.Expression.ExpressionKind.GT;
        shadowKind8_ = boa.types.Ast.Expression.ExpressionKind.GTEQ;
        shadowKind9_ = boa.types.Ast.Expression.ExpressionKind.BIT_LSHIFT;
        shadowKind10_ = boa.types.Ast.Expression.ExpressionKind.LT;
        shadowKind11_ = boa.types.Ast.Expression.ExpressionKind.LTEQ;
        shadowKind12_ = boa.types.Ast.Expression.ExpressionKind.OP_SUB;
        shadowKind13_ = boa.types.Ast.Expression.ExpressionKind.NEQ;
        shadowKind14_ = boa.types.Ast.Expression.ExpressionKind.BIT_OR;
        shadowKind15_ = boa.types.Ast.Expression.ExpressionKind.OP_MOD;
        shadowKind16_ = boa.types.Ast.Expression.ExpressionKind.BIT_RSHIFT;
        shadowKind17_ = boa.types.Ast.Expression.ExpressionKind.BIT_UNSIGNEDRSHIFT;
        shadowKind18_ = boa.types.Ast.Expression.ExpressionKind.OP_MULT;
        shadowKind19_ = boa.types.Ast.Expression.ExpressionKind.BIT_XOR;
        leftOperand_ = boa.types.Ast.Expression.getDefaultInstance();
        rightOperand_ = boa.types.Ast.Expression.getDefaultInstance();
        extendedOperands_ = java.util.Collections.emptyList();
        operator_ = boa.types.Ast.Expression.ExpressionKind.OTHER;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasLeftOperand()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasRightOperand()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasOperator()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getLeftOperand().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getRightOperand().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        for (int i = 0; i < getExtendedOperandsCount(); i++) {
          if (!getExtendedOperands(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind1_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeEnum(2, shadowKind2_.getNumber());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeEnum(3, shadowKind3_.getNumber());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeEnum(4, shadowKind4_.getNumber());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeEnum(5, shadowKind5_.getNumber());
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeEnum(6, shadowKind6_.getNumber());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeEnum(7, shadowKind7_.getNumber());
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeEnum(8, shadowKind8_.getNumber());
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeEnum(9, shadowKind9_.getNumber());
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeEnum(10, shadowKind10_.getNumber());
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeEnum(11, shadowKind11_.getNumber());
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          output.writeEnum(12, shadowKind12_.getNumber());
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          output.writeEnum(13, shadowKind13_.getNumber());
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          output.writeEnum(14, shadowKind14_.getNumber());
        }
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          output.writeEnum(15, shadowKind15_.getNumber());
        }
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          output.writeEnum(16, shadowKind16_.getNumber());
        }
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          output.writeEnum(17, shadowKind17_.getNumber());
        }
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          output.writeEnum(18, shadowKind18_.getNumber());
        }
        if (((bitField0_ & 0x00040000) == 0x00040000)) {
          output.writeEnum(19, shadowKind19_.getNumber());
        }
        if (((bitField0_ & 0x00080000) == 0x00080000)) {
          output.writeMessage(20, leftOperand_);
        }
        if (((bitField0_ & 0x00100000) == 0x00100000)) {
          output.writeMessage(21, rightOperand_);
        }
        for (int i = 0; i < extendedOperands_.size(); i++) {
          output.writeMessage(22, extendedOperands_.get(i));
        }
        if (((bitField0_ & 0x00200000) == 0x00200000)) {
          output.writeEnum(23, operator_.getNumber());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind1_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, shadowKind2_.getNumber());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(3, shadowKind3_.getNumber());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(4, shadowKind4_.getNumber());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(5, shadowKind5_.getNumber());
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(6, shadowKind6_.getNumber());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(7, shadowKind7_.getNumber());
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(8, shadowKind8_.getNumber());
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(9, shadowKind9_.getNumber());
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(10, shadowKind10_.getNumber());
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(11, shadowKind11_.getNumber());
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(12, shadowKind12_.getNumber());
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(13, shadowKind13_.getNumber());
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(14, shadowKind14_.getNumber());
        }
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(15, shadowKind15_.getNumber());
        }
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(16, shadowKind16_.getNumber());
        }
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(17, shadowKind17_.getNumber());
        }
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(18, shadowKind18_.getNumber());
        }
        if (((bitField0_ & 0x00040000) == 0x00040000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(19, shadowKind19_.getNumber());
        }
        if (((bitField0_ & 0x00080000) == 0x00080000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20, leftOperand_);
        }
        if (((bitField0_ & 0x00100000) == 0x00100000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(21, rightOperand_);
        }
        for (int i = 0; i < extendedOperands_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(22, extendedOperands_.get(i));
        }
        if (((bitField0_ & 0x00200000) == 0x00200000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(23, operator_.getNumber());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Expression.InfixExpression parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.InfixExpression parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.InfixExpression parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.InfixExpression parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.InfixExpression parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.InfixExpression parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.InfixExpression parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Expression.InfixExpression parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.InfixExpression parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.InfixExpression parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Expression.InfixExpression prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Expression.InfixExpression}
       *
       * <pre>
       ** An infix expression 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Expression.InfixExpressionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Expression_InfixExpression_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Expression_InfixExpression_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Expression.InfixExpression.class, boa.types.Ast.Expression.InfixExpression.Builder.class);
        }

        // Construct using boa.types.Ast.Expression.InfixExpression.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getLeftOperandFieldBuilder();
            getRightOperandFieldBuilder();
            getExtendedOperandsFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind1_ = boa.types.Ast.Expression.ExpressionKind.OP_ADD;
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind2_ = boa.types.Ast.Expression.ExpressionKind.BIT_AND;
          bitField0_ = (bitField0_ & ~0x00000002);
          shadowKind3_ = boa.types.Ast.Expression.ExpressionKind.LOGICAL_AND;
          bitField0_ = (bitField0_ & ~0x00000004);
          shadowKind4_ = boa.types.Ast.Expression.ExpressionKind.LOGICAL_OR;
          bitField0_ = (bitField0_ & ~0x00000008);
          shadowKind5_ = boa.types.Ast.Expression.ExpressionKind.OP_DIV;
          bitField0_ = (bitField0_ & ~0x00000010);
          shadowKind6_ = boa.types.Ast.Expression.ExpressionKind.EQ;
          bitField0_ = (bitField0_ & ~0x00000020);
          shadowKind7_ = boa.types.Ast.Expression.ExpressionKind.GT;
          bitField0_ = (bitField0_ & ~0x00000040);
          shadowKind8_ = boa.types.Ast.Expression.ExpressionKind.GTEQ;
          bitField0_ = (bitField0_ & ~0x00000080);
          shadowKind9_ = boa.types.Ast.Expression.ExpressionKind.BIT_LSHIFT;
          bitField0_ = (bitField0_ & ~0x00000100);
          shadowKind10_ = boa.types.Ast.Expression.ExpressionKind.LT;
          bitField0_ = (bitField0_ & ~0x00000200);
          shadowKind11_ = boa.types.Ast.Expression.ExpressionKind.LTEQ;
          bitField0_ = (bitField0_ & ~0x00000400);
          shadowKind12_ = boa.types.Ast.Expression.ExpressionKind.OP_SUB;
          bitField0_ = (bitField0_ & ~0x00000800);
          shadowKind13_ = boa.types.Ast.Expression.ExpressionKind.NEQ;
          bitField0_ = (bitField0_ & ~0x00001000);
          shadowKind14_ = boa.types.Ast.Expression.ExpressionKind.BIT_OR;
          bitField0_ = (bitField0_ & ~0x00002000);
          shadowKind15_ = boa.types.Ast.Expression.ExpressionKind.OP_MOD;
          bitField0_ = (bitField0_ & ~0x00004000);
          shadowKind16_ = boa.types.Ast.Expression.ExpressionKind.BIT_RSHIFT;
          bitField0_ = (bitField0_ & ~0x00008000);
          shadowKind17_ = boa.types.Ast.Expression.ExpressionKind.BIT_UNSIGNEDRSHIFT;
          bitField0_ = (bitField0_ & ~0x00010000);
          shadowKind18_ = boa.types.Ast.Expression.ExpressionKind.OP_MULT;
          bitField0_ = (bitField0_ & ~0x00020000);
          shadowKind19_ = boa.types.Ast.Expression.ExpressionKind.BIT_XOR;
          bitField0_ = (bitField0_ & ~0x00040000);
          if (leftOperandBuilder_ == null) {
            leftOperand_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            leftOperandBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00080000);
          if (rightOperandBuilder_ == null) {
            rightOperand_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            rightOperandBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00100000);
          if (extendedOperandsBuilder_ == null) {
            extendedOperands_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00200000);
          } else {
            extendedOperandsBuilder_.clear();
          }
          operator_ = boa.types.Ast.Expression.ExpressionKind.OTHER;
          bitField0_ = (bitField0_ & ~0x00400000);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Expression_InfixExpression_descriptor;
        }

        public boa.types.Ast.Expression.InfixExpression getDefaultInstanceForType() {
          return boa.types.Ast.Expression.InfixExpression.getDefaultInstance();
        }

        public boa.types.Ast.Expression.InfixExpression build() {
          boa.types.Ast.Expression.InfixExpression result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Expression.InfixExpression buildPartial() {
          boa.types.Ast.Expression.InfixExpression result = new boa.types.Ast.Expression.InfixExpression(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind1_ = shadowKind1_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.shadowKind2_ = shadowKind2_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.shadowKind3_ = shadowKind3_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.shadowKind4_ = shadowKind4_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.shadowKind5_ = shadowKind5_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.shadowKind6_ = shadowKind6_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.shadowKind7_ = shadowKind7_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.shadowKind8_ = shadowKind8_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.shadowKind9_ = shadowKind9_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000200;
          }
          result.shadowKind10_ = shadowKind10_;
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000400;
          }
          result.shadowKind11_ = shadowKind11_;
          if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
            to_bitField0_ |= 0x00000800;
          }
          result.shadowKind12_ = shadowKind12_;
          if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
            to_bitField0_ |= 0x00001000;
          }
          result.shadowKind13_ = shadowKind13_;
          if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
            to_bitField0_ |= 0x00002000;
          }
          result.shadowKind14_ = shadowKind14_;
          if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
            to_bitField0_ |= 0x00004000;
          }
          result.shadowKind15_ = shadowKind15_;
          if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
            to_bitField0_ |= 0x00008000;
          }
          result.shadowKind16_ = shadowKind16_;
          if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
            to_bitField0_ |= 0x00010000;
          }
          result.shadowKind17_ = shadowKind17_;
          if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
            to_bitField0_ |= 0x00020000;
          }
          result.shadowKind18_ = shadowKind18_;
          if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
            to_bitField0_ |= 0x00040000;
          }
          result.shadowKind19_ = shadowKind19_;
          if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
            to_bitField0_ |= 0x00080000;
          }
          if (leftOperandBuilder_ == null) {
            result.leftOperand_ = leftOperand_;
          } else {
            result.leftOperand_ = leftOperandBuilder_.build();
          }
          if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
            to_bitField0_ |= 0x00100000;
          }
          if (rightOperandBuilder_ == null) {
            result.rightOperand_ = rightOperand_;
          } else {
            result.rightOperand_ = rightOperandBuilder_.build();
          }
          if (extendedOperandsBuilder_ == null) {
            if (((bitField0_ & 0x00200000) == 0x00200000)) {
              extendedOperands_ = java.util.Collections.unmodifiableList(extendedOperands_);
              bitField0_ = (bitField0_ & ~0x00200000);
            }
            result.extendedOperands_ = extendedOperands_;
          } else {
            result.extendedOperands_ = extendedOperandsBuilder_.build();
          }
          if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
            to_bitField0_ |= 0x00200000;
          }
          result.operator_ = operator_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Expression.InfixExpression) {
            return mergeFrom((boa.types.Ast.Expression.InfixExpression)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Expression.InfixExpression other) {
          if (other == boa.types.Ast.Expression.InfixExpression.getDefaultInstance()) return this;
          if (other.hasShadowKind1()) {
            setShadowKind1(other.getShadowKind1());
          }
          if (other.hasShadowKind2()) {
            setShadowKind2(other.getShadowKind2());
          }
          if (other.hasShadowKind3()) {
            setShadowKind3(other.getShadowKind3());
          }
          if (other.hasShadowKind4()) {
            setShadowKind4(other.getShadowKind4());
          }
          if (other.hasShadowKind5()) {
            setShadowKind5(other.getShadowKind5());
          }
          if (other.hasShadowKind6()) {
            setShadowKind6(other.getShadowKind6());
          }
          if (other.hasShadowKind7()) {
            setShadowKind7(other.getShadowKind7());
          }
          if (other.hasShadowKind8()) {
            setShadowKind8(other.getShadowKind8());
          }
          if (other.hasShadowKind9()) {
            setShadowKind9(other.getShadowKind9());
          }
          if (other.hasShadowKind10()) {
            setShadowKind10(other.getShadowKind10());
          }
          if (other.hasShadowKind11()) {
            setShadowKind11(other.getShadowKind11());
          }
          if (other.hasShadowKind12()) {
            setShadowKind12(other.getShadowKind12());
          }
          if (other.hasShadowKind13()) {
            setShadowKind13(other.getShadowKind13());
          }
          if (other.hasShadowKind14()) {
            setShadowKind14(other.getShadowKind14());
          }
          if (other.hasShadowKind15()) {
            setShadowKind15(other.getShadowKind15());
          }
          if (other.hasShadowKind16()) {
            setShadowKind16(other.getShadowKind16());
          }
          if (other.hasShadowKind17()) {
            setShadowKind17(other.getShadowKind17());
          }
          if (other.hasShadowKind18()) {
            setShadowKind18(other.getShadowKind18());
          }
          if (other.hasShadowKind19()) {
            setShadowKind19(other.getShadowKind19());
          }
          if (other.hasLeftOperand()) {
            mergeLeftOperand(other.getLeftOperand());
          }
          if (other.hasRightOperand()) {
            mergeRightOperand(other.getRightOperand());
          }
          if (extendedOperandsBuilder_ == null) {
            if (!other.extendedOperands_.isEmpty()) {
              if (extendedOperands_.isEmpty()) {
                extendedOperands_ = other.extendedOperands_;
                bitField0_ = (bitField0_ & ~0x00200000);
              } else {
                ensureExtendedOperandsIsMutable();
                extendedOperands_.addAll(other.extendedOperands_);
              }
              onChanged();
            }
          } else {
            if (!other.extendedOperands_.isEmpty()) {
              if (extendedOperandsBuilder_.isEmpty()) {
                extendedOperandsBuilder_.dispose();
                extendedOperandsBuilder_ = null;
                extendedOperands_ = other.extendedOperands_;
                bitField0_ = (bitField0_ & ~0x00200000);
                extendedOperandsBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getExtendedOperandsFieldBuilder() : null;
              } else {
                extendedOperandsBuilder_.addAllMessages(other.extendedOperands_);
              }
            }
          }
          if (other.hasOperator()) {
            setOperator(other.getOperator());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasLeftOperand()) {
            
            return false;
          }
          if (!hasRightOperand()) {
            
            return false;
          }
          if (!hasOperator()) {
            
            return false;
          }
          if (!getLeftOperand().isInitialized()) {
            
            return false;
          }
          if (!getRightOperand().isInitialized()) {
            
            return false;
          }
          for (int i = 0; i < getExtendedOperandsCount(); i++) {
            if (!getExtendedOperands(i).isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Expression.InfixExpression parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Expression.InfixExpression) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_ADD];
        private boa.types.Ast.Expression.ExpressionKind shadowKind1_ = boa.types.Ast.Expression.ExpressionKind.OP_ADD;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_ADD];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind1() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_ADD];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind1() {
          return shadowKind1_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_ADD];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind1(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind1_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_ADD];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind1() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind1_ = boa.types.Ast.Expression.ExpressionKind.OP_ADD;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = BIT_AND];
        private boa.types.Ast.Expression.ExpressionKind shadowKind2_ = boa.types.Ast.Expression.ExpressionKind.BIT_AND;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = BIT_AND];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind2() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = BIT_AND];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind2() {
          return shadowKind2_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = BIT_AND];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind2(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          shadowKind2_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = BIT_AND];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind2() {
          bitField0_ = (bitField0_ & ~0x00000002);
          shadowKind2_ = boa.types.Ast.Expression.ExpressionKind.BIT_AND;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = LOGICAL_AND];
        private boa.types.Ast.Expression.ExpressionKind shadowKind3_ = boa.types.Ast.Expression.ExpressionKind.LOGICAL_AND;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = LOGICAL_AND];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind3() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = LOGICAL_AND];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind3() {
          return shadowKind3_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = LOGICAL_AND];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind3(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000004;
          shadowKind3_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = LOGICAL_AND];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind3() {
          bitField0_ = (bitField0_ & ~0x00000004);
          shadowKind3_ = boa.types.Ast.Expression.ExpressionKind.LOGICAL_AND;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = LOGICAL_OR];
        private boa.types.Ast.Expression.ExpressionKind shadowKind4_ = boa.types.Ast.Expression.ExpressionKind.LOGICAL_OR;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = LOGICAL_OR];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind4() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = LOGICAL_OR];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind4() {
          return shadowKind4_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = LOGICAL_OR];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind4(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000008;
          shadowKind4_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = LOGICAL_OR];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind4() {
          bitField0_ = (bitField0_ & ~0x00000008);
          shadowKind4_ = boa.types.Ast.Expression.ExpressionKind.LOGICAL_OR;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = OP_DIV];
        private boa.types.Ast.Expression.ExpressionKind shadowKind5_ = boa.types.Ast.Expression.ExpressionKind.OP_DIV;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = OP_DIV];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind5() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = OP_DIV];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind5() {
          return shadowKind5_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = OP_DIV];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind5(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000010;
          shadowKind5_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = OP_DIV];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind5() {
          bitField0_ = (bitField0_ & ~0x00000010);
          shadowKind5_ = boa.types.Ast.Expression.ExpressionKind.OP_DIV;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = EQ];
        private boa.types.Ast.Expression.ExpressionKind shadowKind6_ = boa.types.Ast.Expression.ExpressionKind.EQ;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = EQ];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind6() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = EQ];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind6() {
          return shadowKind6_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = EQ];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind6(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000020;
          shadowKind6_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = EQ];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind6() {
          bitField0_ = (bitField0_ & ~0x00000020);
          shadowKind6_ = boa.types.Ast.Expression.ExpressionKind.EQ;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_7 = 7 [default = GT];
        private boa.types.Ast.Expression.ExpressionKind shadowKind7_ = boa.types.Ast.Expression.ExpressionKind.GT;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_7 = 7 [default = GT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind7() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_7 = 7 [default = GT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind7() {
          return shadowKind7_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_7 = 7 [default = GT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind7(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000040;
          shadowKind7_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_7 = 7 [default = GT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind7() {
          bitField0_ = (bitField0_ & ~0x00000040);
          shadowKind7_ = boa.types.Ast.Expression.ExpressionKind.GT;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_8 = 8 [default = GTEQ];
        private boa.types.Ast.Expression.ExpressionKind shadowKind8_ = boa.types.Ast.Expression.ExpressionKind.GTEQ;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_8 = 8 [default = GTEQ];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind8() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_8 = 8 [default = GTEQ];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind8() {
          return shadowKind8_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_8 = 8 [default = GTEQ];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind8(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000080;
          shadowKind8_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_8 = 8 [default = GTEQ];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind8() {
          bitField0_ = (bitField0_ & ~0x00000080);
          shadowKind8_ = boa.types.Ast.Expression.ExpressionKind.GTEQ;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_9 = 9 [default = BIT_LSHIFT];
        private boa.types.Ast.Expression.ExpressionKind shadowKind9_ = boa.types.Ast.Expression.ExpressionKind.BIT_LSHIFT;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_9 = 9 [default = BIT_LSHIFT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind9() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_9 = 9 [default = BIT_LSHIFT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind9() {
          return shadowKind9_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_9 = 9 [default = BIT_LSHIFT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind9(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000100;
          shadowKind9_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_9 = 9 [default = BIT_LSHIFT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind9() {
          bitField0_ = (bitField0_ & ~0x00000100);
          shadowKind9_ = boa.types.Ast.Expression.ExpressionKind.BIT_LSHIFT;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_10 = 10 [default = LT];
        private boa.types.Ast.Expression.ExpressionKind shadowKind10_ = boa.types.Ast.Expression.ExpressionKind.LT;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_10 = 10 [default = LT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind10() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_10 = 10 [default = LT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind10() {
          return shadowKind10_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_10 = 10 [default = LT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind10(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000200;
          shadowKind10_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_10 = 10 [default = LT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind10() {
          bitField0_ = (bitField0_ & ~0x00000200);
          shadowKind10_ = boa.types.Ast.Expression.ExpressionKind.LT;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_11 = 11 [default = LTEQ];
        private boa.types.Ast.Expression.ExpressionKind shadowKind11_ = boa.types.Ast.Expression.ExpressionKind.LTEQ;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_11 = 11 [default = LTEQ];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind11() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_11 = 11 [default = LTEQ];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind11() {
          return shadowKind11_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_11 = 11 [default = LTEQ];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind11(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000400;
          shadowKind11_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_11 = 11 [default = LTEQ];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind11() {
          bitField0_ = (bitField0_ & ~0x00000400);
          shadowKind11_ = boa.types.Ast.Expression.ExpressionKind.LTEQ;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_12 = 12 [default = OP_SUB];
        private boa.types.Ast.Expression.ExpressionKind shadowKind12_ = boa.types.Ast.Expression.ExpressionKind.OP_SUB;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_12 = 12 [default = OP_SUB];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind12() {
          return ((bitField0_ & 0x00000800) == 0x00000800);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_12 = 12 [default = OP_SUB];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind12() {
          return shadowKind12_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_12 = 12 [default = OP_SUB];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind12(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000800;
          shadowKind12_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_12 = 12 [default = OP_SUB];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind12() {
          bitField0_ = (bitField0_ & ~0x00000800);
          shadowKind12_ = boa.types.Ast.Expression.ExpressionKind.OP_SUB;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_13 = 13 [default = NEQ];
        private boa.types.Ast.Expression.ExpressionKind shadowKind13_ = boa.types.Ast.Expression.ExpressionKind.NEQ;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_13 = 13 [default = NEQ];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind13() {
          return ((bitField0_ & 0x00001000) == 0x00001000);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_13 = 13 [default = NEQ];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind13() {
          return shadowKind13_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_13 = 13 [default = NEQ];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind13(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00001000;
          shadowKind13_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_13 = 13 [default = NEQ];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind13() {
          bitField0_ = (bitField0_ & ~0x00001000);
          shadowKind13_ = boa.types.Ast.Expression.ExpressionKind.NEQ;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_14 = 14 [default = BIT_OR];
        private boa.types.Ast.Expression.ExpressionKind shadowKind14_ = boa.types.Ast.Expression.ExpressionKind.BIT_OR;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_14 = 14 [default = BIT_OR];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind14() {
          return ((bitField0_ & 0x00002000) == 0x00002000);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_14 = 14 [default = BIT_OR];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind14() {
          return shadowKind14_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_14 = 14 [default = BIT_OR];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind14(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00002000;
          shadowKind14_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_14 = 14 [default = BIT_OR];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind14() {
          bitField0_ = (bitField0_ & ~0x00002000);
          shadowKind14_ = boa.types.Ast.Expression.ExpressionKind.BIT_OR;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_15 = 15 [default = OP_MOD];
        private boa.types.Ast.Expression.ExpressionKind shadowKind15_ = boa.types.Ast.Expression.ExpressionKind.OP_MOD;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_15 = 15 [default = OP_MOD];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind15() {
          return ((bitField0_ & 0x00004000) == 0x00004000);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_15 = 15 [default = OP_MOD];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind15() {
          return shadowKind15_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_15 = 15 [default = OP_MOD];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind15(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00004000;
          shadowKind15_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_15 = 15 [default = OP_MOD];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind15() {
          bitField0_ = (bitField0_ & ~0x00004000);
          shadowKind15_ = boa.types.Ast.Expression.ExpressionKind.OP_MOD;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_16 = 16 [default = BIT_RSHIFT];
        private boa.types.Ast.Expression.ExpressionKind shadowKind16_ = boa.types.Ast.Expression.ExpressionKind.BIT_RSHIFT;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_16 = 16 [default = BIT_RSHIFT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind16() {
          return ((bitField0_ & 0x00008000) == 0x00008000);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_16 = 16 [default = BIT_RSHIFT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind16() {
          return shadowKind16_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_16 = 16 [default = BIT_RSHIFT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind16(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00008000;
          shadowKind16_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_16 = 16 [default = BIT_RSHIFT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind16() {
          bitField0_ = (bitField0_ & ~0x00008000);
          shadowKind16_ = boa.types.Ast.Expression.ExpressionKind.BIT_RSHIFT;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_17 = 17 [default = BIT_UNSIGNEDRSHIFT];
        private boa.types.Ast.Expression.ExpressionKind shadowKind17_ = boa.types.Ast.Expression.ExpressionKind.BIT_UNSIGNEDRSHIFT;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_17 = 17 [default = BIT_UNSIGNEDRSHIFT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind17() {
          return ((bitField0_ & 0x00010000) == 0x00010000);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_17 = 17 [default = BIT_UNSIGNEDRSHIFT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind17() {
          return shadowKind17_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_17 = 17 [default = BIT_UNSIGNEDRSHIFT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind17(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00010000;
          shadowKind17_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_17 = 17 [default = BIT_UNSIGNEDRSHIFT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind17() {
          bitField0_ = (bitField0_ & ~0x00010000);
          shadowKind17_ = boa.types.Ast.Expression.ExpressionKind.BIT_UNSIGNEDRSHIFT;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_18 = 18 [default = OP_MULT];
        private boa.types.Ast.Expression.ExpressionKind shadowKind18_ = boa.types.Ast.Expression.ExpressionKind.OP_MULT;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_18 = 18 [default = OP_MULT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind18() {
          return ((bitField0_ & 0x00020000) == 0x00020000);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_18 = 18 [default = OP_MULT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind18() {
          return shadowKind18_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_18 = 18 [default = OP_MULT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind18(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00020000;
          shadowKind18_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_18 = 18 [default = OP_MULT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind18() {
          bitField0_ = (bitField0_ & ~0x00020000);
          shadowKind18_ = boa.types.Ast.Expression.ExpressionKind.OP_MULT;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_19 = 19 [default = BIT_XOR];
        private boa.types.Ast.Expression.ExpressionKind shadowKind19_ = boa.types.Ast.Expression.ExpressionKind.BIT_XOR;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_19 = 19 [default = BIT_XOR];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind19() {
          return ((bitField0_ & 0x00040000) == 0x00040000);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_19 = 19 [default = BIT_XOR];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind19() {
          return shadowKind19_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_19 = 19 [default = BIT_XOR];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind19(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00040000;
          shadowKind19_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_19 = 19 [default = BIT_XOR];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind19() {
          bitField0_ = (bitField0_ & ~0x00040000);
          shadowKind19_ = boa.types.Ast.Expression.ExpressionKind.BIT_XOR;
          onChanged();
          return this;
        }

        // required .boa.types.Expression left_operand = 20;
        private boa.types.Ast.Expression leftOperand_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> leftOperandBuilder_;
        /**
         * <code>required .boa.types.Expression left_operand = 20;</code>
         *
         * <pre>
         ** The left operand 
         * </pre>
         */
        public boolean hasLeftOperand() {
          return ((bitField0_ & 0x00080000) == 0x00080000);
        }
        /**
         * <code>required .boa.types.Expression left_operand = 20;</code>
         *
         * <pre>
         ** The left operand 
         * </pre>
         */
        public boa.types.Ast.Expression getLeftOperand() {
          if (leftOperandBuilder_ == null) {
            return leftOperand_;
          } else {
            return leftOperandBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Expression left_operand = 20;</code>
         *
         * <pre>
         ** The left operand 
         * </pre>
         */
        public Builder setLeftOperand(boa.types.Ast.Expression value) {
          if (leftOperandBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            leftOperand_ = value;
            onChanged();
          } else {
            leftOperandBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00080000;
          return this;
        }
        /**
         * <code>required .boa.types.Expression left_operand = 20;</code>
         *
         * <pre>
         ** The left operand 
         * </pre>
         */
        public Builder setLeftOperand(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (leftOperandBuilder_ == null) {
            leftOperand_ = builderForValue.build();
            onChanged();
          } else {
            leftOperandBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00080000;
          return this;
        }
        /**
         * <code>required .boa.types.Expression left_operand = 20;</code>
         *
         * <pre>
         ** The left operand 
         * </pre>
         */
        public Builder mergeLeftOperand(boa.types.Ast.Expression value) {
          if (leftOperandBuilder_ == null) {
            if (((bitField0_ & 0x00080000) == 0x00080000) &&
                leftOperand_ != boa.types.Ast.Expression.getDefaultInstance()) {
              leftOperand_ =
                boa.types.Ast.Expression.newBuilder(leftOperand_).mergeFrom(value).buildPartial();
            } else {
              leftOperand_ = value;
            }
            onChanged();
          } else {
            leftOperandBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00080000;
          return this;
        }
        /**
         * <code>required .boa.types.Expression left_operand = 20;</code>
         *
         * <pre>
         ** The left operand 
         * </pre>
         */
        public Builder clearLeftOperand() {
          if (leftOperandBuilder_ == null) {
            leftOperand_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            leftOperandBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00080000);
          return this;
        }
        /**
         * <code>required .boa.types.Expression left_operand = 20;</code>
         *
         * <pre>
         ** The left operand 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder getLeftOperandBuilder() {
          bitField0_ |= 0x00080000;
          onChanged();
          return getLeftOperandFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Expression left_operand = 20;</code>
         *
         * <pre>
         ** The left operand 
         * </pre>
         */
        public boa.types.Ast.ExpressionOrBuilder getLeftOperandOrBuilder() {
          if (leftOperandBuilder_ != null) {
            return leftOperandBuilder_.getMessageOrBuilder();
          } else {
            return leftOperand_;
          }
        }
        /**
         * <code>required .boa.types.Expression left_operand = 20;</code>
         *
         * <pre>
         ** The left operand 
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getLeftOperandFieldBuilder() {
          if (leftOperandBuilder_ == null) {
            leftOperandBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    leftOperand_,
                    getParentForChildren(),
                    isClean());
            leftOperand_ = null;
          }
          return leftOperandBuilder_;
        }

        // required .boa.types.Expression right_operand = 21;
        private boa.types.Ast.Expression rightOperand_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> rightOperandBuilder_;
        /**
         * <code>required .boa.types.Expression right_operand = 21;</code>
         *
         * <pre>
         ** The right operand 
         * </pre>
         */
        public boolean hasRightOperand() {
          return ((bitField0_ & 0x00100000) == 0x00100000);
        }
        /**
         * <code>required .boa.types.Expression right_operand = 21;</code>
         *
         * <pre>
         ** The right operand 
         * </pre>
         */
        public boa.types.Ast.Expression getRightOperand() {
          if (rightOperandBuilder_ == null) {
            return rightOperand_;
          } else {
            return rightOperandBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Expression right_operand = 21;</code>
         *
         * <pre>
         ** The right operand 
         * </pre>
         */
        public Builder setRightOperand(boa.types.Ast.Expression value) {
          if (rightOperandBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            rightOperand_ = value;
            onChanged();
          } else {
            rightOperandBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00100000;
          return this;
        }
        /**
         * <code>required .boa.types.Expression right_operand = 21;</code>
         *
         * <pre>
         ** The right operand 
         * </pre>
         */
        public Builder setRightOperand(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (rightOperandBuilder_ == null) {
            rightOperand_ = builderForValue.build();
            onChanged();
          } else {
            rightOperandBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00100000;
          return this;
        }
        /**
         * <code>required .boa.types.Expression right_operand = 21;</code>
         *
         * <pre>
         ** The right operand 
         * </pre>
         */
        public Builder mergeRightOperand(boa.types.Ast.Expression value) {
          if (rightOperandBuilder_ == null) {
            if (((bitField0_ & 0x00100000) == 0x00100000) &&
                rightOperand_ != boa.types.Ast.Expression.getDefaultInstance()) {
              rightOperand_ =
                boa.types.Ast.Expression.newBuilder(rightOperand_).mergeFrom(value).buildPartial();
            } else {
              rightOperand_ = value;
            }
            onChanged();
          } else {
            rightOperandBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00100000;
          return this;
        }
        /**
         * <code>required .boa.types.Expression right_operand = 21;</code>
         *
         * <pre>
         ** The right operand 
         * </pre>
         */
        public Builder clearRightOperand() {
          if (rightOperandBuilder_ == null) {
            rightOperand_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            rightOperandBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00100000);
          return this;
        }
        /**
         * <code>required .boa.types.Expression right_operand = 21;</code>
         *
         * <pre>
         ** The right operand 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder getRightOperandBuilder() {
          bitField0_ |= 0x00100000;
          onChanged();
          return getRightOperandFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Expression right_operand = 21;</code>
         *
         * <pre>
         ** The right operand 
         * </pre>
         */
        public boa.types.Ast.ExpressionOrBuilder getRightOperandOrBuilder() {
          if (rightOperandBuilder_ != null) {
            return rightOperandBuilder_.getMessageOrBuilder();
          } else {
            return rightOperand_;
          }
        }
        /**
         * <code>required .boa.types.Expression right_operand = 21;</code>
         *
         * <pre>
         ** The right operand 
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getRightOperandFieldBuilder() {
          if (rightOperandBuilder_ == null) {
            rightOperandBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    rightOperand_,
                    getParentForChildren(),
                    isClean());
            rightOperand_ = null;
          }
          return rightOperandBuilder_;
        }

        // repeated .boa.types.Expression extended_operands = 22;
        private java.util.List<boa.types.Ast.Expression> extendedOperands_ =
          java.util.Collections.emptyList();
        private void ensureExtendedOperandsIsMutable() {
          if (!((bitField0_ & 0x00200000) == 0x00200000)) {
            extendedOperands_ = new java.util.ArrayList<boa.types.Ast.Expression>(extendedOperands_);
            bitField0_ |= 0x00200000;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> extendedOperandsBuilder_;

        /**
         * <code>repeated .boa.types.Expression extended_operands = 22;</code>
         *
         * <pre>
         ** Any additional operands 
         * </pre>
         */
        public java.util.List<boa.types.Ast.Expression> getExtendedOperandsList() {
          if (extendedOperandsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(extendedOperands_);
          } else {
            return extendedOperandsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .boa.types.Expression extended_operands = 22;</code>
         *
         * <pre>
         ** Any additional operands 
         * </pre>
         */
        public int getExtendedOperandsCount() {
          if (extendedOperandsBuilder_ == null) {
            return extendedOperands_.size();
          } else {
            return extendedOperandsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .boa.types.Expression extended_operands = 22;</code>
         *
         * <pre>
         ** Any additional operands 
         * </pre>
         */
        public boa.types.Ast.Expression getExtendedOperands(int index) {
          if (extendedOperandsBuilder_ == null) {
            return extendedOperands_.get(index);
          } else {
            return extendedOperandsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .boa.types.Expression extended_operands = 22;</code>
         *
         * <pre>
         ** Any additional operands 
         * </pre>
         */
        public Builder setExtendedOperands(
            int index, boa.types.Ast.Expression value) {
          if (extendedOperandsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureExtendedOperandsIsMutable();
            extendedOperands_.set(index, value);
            onChanged();
          } else {
            extendedOperandsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression extended_operands = 22;</code>
         *
         * <pre>
         ** Any additional operands 
         * </pre>
         */
        public Builder setExtendedOperands(
            int index, boa.types.Ast.Expression.Builder builderForValue) {
          if (extendedOperandsBuilder_ == null) {
            ensureExtendedOperandsIsMutable();
            extendedOperands_.set(index, builderForValue.build());
            onChanged();
          } else {
            extendedOperandsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression extended_operands = 22;</code>
         *
         * <pre>
         ** Any additional operands 
         * </pre>
         */
        public Builder addExtendedOperands(boa.types.Ast.Expression value) {
          if (extendedOperandsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureExtendedOperandsIsMutable();
            extendedOperands_.add(value);
            onChanged();
          } else {
            extendedOperandsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression extended_operands = 22;</code>
         *
         * <pre>
         ** Any additional operands 
         * </pre>
         */
        public Builder addExtendedOperands(
            int index, boa.types.Ast.Expression value) {
          if (extendedOperandsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureExtendedOperandsIsMutable();
            extendedOperands_.add(index, value);
            onChanged();
          } else {
            extendedOperandsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression extended_operands = 22;</code>
         *
         * <pre>
         ** Any additional operands 
         * </pre>
         */
        public Builder addExtendedOperands(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (extendedOperandsBuilder_ == null) {
            ensureExtendedOperandsIsMutable();
            extendedOperands_.add(builderForValue.build());
            onChanged();
          } else {
            extendedOperandsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression extended_operands = 22;</code>
         *
         * <pre>
         ** Any additional operands 
         * </pre>
         */
        public Builder addExtendedOperands(
            int index, boa.types.Ast.Expression.Builder builderForValue) {
          if (extendedOperandsBuilder_ == null) {
            ensureExtendedOperandsIsMutable();
            extendedOperands_.add(index, builderForValue.build());
            onChanged();
          } else {
            extendedOperandsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression extended_operands = 22;</code>
         *
         * <pre>
         ** Any additional operands 
         * </pre>
         */
        public Builder addAllExtendedOperands(
            java.lang.Iterable<? extends boa.types.Ast.Expression> values) {
          if (extendedOperandsBuilder_ == null) {
            ensureExtendedOperandsIsMutable();
            super.addAll(values, extendedOperands_);
            onChanged();
          } else {
            extendedOperandsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression extended_operands = 22;</code>
         *
         * <pre>
         ** Any additional operands 
         * </pre>
         */
        public Builder clearExtendedOperands() {
          if (extendedOperandsBuilder_ == null) {
            extendedOperands_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00200000);
            onChanged();
          } else {
            extendedOperandsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression extended_operands = 22;</code>
         *
         * <pre>
         ** Any additional operands 
         * </pre>
         */
        public Builder removeExtendedOperands(int index) {
          if (extendedOperandsBuilder_ == null) {
            ensureExtendedOperandsIsMutable();
            extendedOperands_.remove(index);
            onChanged();
          } else {
            extendedOperandsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression extended_operands = 22;</code>
         *
         * <pre>
         ** Any additional operands 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder getExtendedOperandsBuilder(
            int index) {
          return getExtendedOperandsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .boa.types.Expression extended_operands = 22;</code>
         *
         * <pre>
         ** Any additional operands 
         * </pre>
         */
        public boa.types.Ast.ExpressionOrBuilder getExtendedOperandsOrBuilder(
            int index) {
          if (extendedOperandsBuilder_ == null) {
            return extendedOperands_.get(index);  } else {
            return extendedOperandsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .boa.types.Expression extended_operands = 22;</code>
         *
         * <pre>
         ** Any additional operands 
         * </pre>
         */
        public java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
             getExtendedOperandsOrBuilderList() {
          if (extendedOperandsBuilder_ != null) {
            return extendedOperandsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(extendedOperands_);
          }
        }
        /**
         * <code>repeated .boa.types.Expression extended_operands = 22;</code>
         *
         * <pre>
         ** Any additional operands 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder addExtendedOperandsBuilder() {
          return getExtendedOperandsFieldBuilder().addBuilder(
              boa.types.Ast.Expression.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Expression extended_operands = 22;</code>
         *
         * <pre>
         ** Any additional operands 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder addExtendedOperandsBuilder(
            int index) {
          return getExtendedOperandsFieldBuilder().addBuilder(
              index, boa.types.Ast.Expression.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Expression extended_operands = 22;</code>
         *
         * <pre>
         ** Any additional operands 
         * </pre>
         */
        public java.util.List<boa.types.Ast.Expression.Builder> 
             getExtendedOperandsBuilderList() {
          return getExtendedOperandsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getExtendedOperandsFieldBuilder() {
          if (extendedOperandsBuilder_ == null) {
            extendedOperandsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    extendedOperands_,
                    ((bitField0_ & 0x00200000) == 0x00200000),
                    getParentForChildren(),
                    isClean());
            extendedOperands_ = null;
          }
          return extendedOperandsBuilder_;
        }

        // required .boa.types.Expression.ExpressionKind operator = 23;
        private boa.types.Ast.Expression.ExpressionKind operator_ = boa.types.Ast.Expression.ExpressionKind.OTHER;
        /**
         * <code>required .boa.types.Expression.ExpressionKind operator = 23;</code>
         *
         * <pre>
         ** The operator 
         * </pre>
         */
        public boolean hasOperator() {
          return ((bitField0_ & 0x00400000) == 0x00400000);
        }
        /**
         * <code>required .boa.types.Expression.ExpressionKind operator = 23;</code>
         *
         * <pre>
         ** The operator 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getOperator() {
          return operator_;
        }
        /**
         * <code>required .boa.types.Expression.ExpressionKind operator = 23;</code>
         *
         * <pre>
         ** The operator 
         * </pre>
         */
        public Builder setOperator(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00400000;
          operator_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required .boa.types.Expression.ExpressionKind operator = 23;</code>
         *
         * <pre>
         ** The operator 
         * </pre>
         */
        public Builder clearOperator() {
          bitField0_ = (bitField0_ & ~0x00400000);
          operator_ = boa.types.Ast.Expression.ExpressionKind.OTHER;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Expression.InfixExpression)
      }

      static {
        defaultInstance = new InfixExpression(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Expression.InfixExpression)
    }

    public interface InstanceofExpressionOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = TYPECOMPARE];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = TYPECOMPARE];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = TYPECOMPARE];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind();

      // required .boa.types.Expression left_operand = 2;
      /**
       * <code>required .boa.types.Expression left_operand = 2;</code>
       *
       * <pre>
       ** The expression being tested 
       * </pre>
       */
      boolean hasLeftOperand();
      /**
       * <code>required .boa.types.Expression left_operand = 2;</code>
       *
       * <pre>
       ** The expression being tested 
       * </pre>
       */
      boa.types.Ast.Expression getLeftOperand();
      /**
       * <code>required .boa.types.Expression left_operand = 2;</code>
       *
       * <pre>
       ** The expression being tested 
       * </pre>
       */
      boa.types.Ast.ExpressionOrBuilder getLeftOperandOrBuilder();

      // required .boa.types.Type right_operand = 3;
      /**
       * <code>required .boa.types.Type right_operand = 3;</code>
       *
       * <pre>
       ** The type to test for 
       * </pre>
       */
      boolean hasRightOperand();
      /**
       * <code>required .boa.types.Type right_operand = 3;</code>
       *
       * <pre>
       ** The type to test for 
       * </pre>
       */
      boa.types.Ast.Type getRightOperand();
      /**
       * <code>required .boa.types.Type right_operand = 3;</code>
       *
       * <pre>
       ** The type to test for 
       * </pre>
       */
      boa.types.Ast.TypeOrBuilder getRightOperandOrBuilder();
    }
    /**
     * Protobuf type {@code boa.types.Expression.InstanceofExpression}
     *
     * <pre>
     ** An instanceof type test 
     * </pre>
     */
    public static final class InstanceofExpression extends
        com.google.protobuf.GeneratedMessage
        implements InstanceofExpressionOrBuilder {
      // Use InstanceofExpression.newBuilder() to construct.
      private InstanceofExpression(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private InstanceofExpression(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final InstanceofExpression defaultInstance;
      public static InstanceofExpression getDefaultInstance() {
        return defaultInstance;
      }

      public InstanceofExpression getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private InstanceofExpression(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = leftOperand_.toBuilder();
                }
                leftOperand_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(leftOperand_);
                  leftOperand_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 26: {
                boa.types.Ast.Type.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = rightOperand_.toBuilder();
                }
                rightOperand_ = input.readMessage(boa.types.Ast.Type.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(rightOperand_);
                  rightOperand_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Expression_InstanceofExpression_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Expression_InstanceofExpression_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Expression.InstanceofExpression.class, boa.types.Ast.Expression.InstanceofExpression.Builder.class);
      }

      public static com.google.protobuf.Parser<InstanceofExpression> PARSER =
          new com.google.protobuf.AbstractParser<InstanceofExpression>() {
        public InstanceofExpression parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new InstanceofExpression(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<InstanceofExpression> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = TYPECOMPARE];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Expression.ExpressionKind shadowKind_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = TYPECOMPARE];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = TYPECOMPARE];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
        return shadowKind_;
      }

      // required .boa.types.Expression left_operand = 2;
      public static final int LEFT_OPERAND_FIELD_NUMBER = 2;
      private boa.types.Ast.Expression leftOperand_;
      /**
       * <code>required .boa.types.Expression left_operand = 2;</code>
       *
       * <pre>
       ** The expression being tested 
       * </pre>
       */
      public boolean hasLeftOperand() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .boa.types.Expression left_operand = 2;</code>
       *
       * <pre>
       ** The expression being tested 
       * </pre>
       */
      public boa.types.Ast.Expression getLeftOperand() {
        return leftOperand_;
      }
      /**
       * <code>required .boa.types.Expression left_operand = 2;</code>
       *
       * <pre>
       ** The expression being tested 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getLeftOperandOrBuilder() {
        return leftOperand_;
      }

      // required .boa.types.Type right_operand = 3;
      public static final int RIGHT_OPERAND_FIELD_NUMBER = 3;
      private boa.types.Ast.Type rightOperand_;
      /**
       * <code>required .boa.types.Type right_operand = 3;</code>
       *
       * <pre>
       ** The type to test for 
       * </pre>
       */
      public boolean hasRightOperand() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .boa.types.Type right_operand = 3;</code>
       *
       * <pre>
       ** The type to test for 
       * </pre>
       */
      public boa.types.Ast.Type getRightOperand() {
        return rightOperand_;
      }
      /**
       * <code>required .boa.types.Type right_operand = 3;</code>
       *
       * <pre>
       ** The type to test for 
       * </pre>
       */
      public boa.types.Ast.TypeOrBuilder getRightOperandOrBuilder() {
        return rightOperand_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Expression.ExpressionKind.TYPECOMPARE;
        leftOperand_ = boa.types.Ast.Expression.getDefaultInstance();
        rightOperand_ = boa.types.Ast.Type.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasLeftOperand()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasRightOperand()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getLeftOperand().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getRightOperand().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, leftOperand_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(3, rightOperand_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, leftOperand_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, rightOperand_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Expression.InstanceofExpression parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.InstanceofExpression parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.InstanceofExpression parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.InstanceofExpression parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.InstanceofExpression parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.InstanceofExpression parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.InstanceofExpression parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Expression.InstanceofExpression parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.InstanceofExpression parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.InstanceofExpression parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Expression.InstanceofExpression prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Expression.InstanceofExpression}
       *
       * <pre>
       ** An instanceof type test 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Expression.InstanceofExpressionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Expression_InstanceofExpression_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Expression_InstanceofExpression_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Expression.InstanceofExpression.class, boa.types.Ast.Expression.InstanceofExpression.Builder.class);
        }

        // Construct using boa.types.Ast.Expression.InstanceofExpression.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getLeftOperandFieldBuilder();
            getRightOperandFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.TYPECOMPARE;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (leftOperandBuilder_ == null) {
            leftOperand_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            leftOperandBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          if (rightOperandBuilder_ == null) {
            rightOperand_ = boa.types.Ast.Type.getDefaultInstance();
          } else {
            rightOperandBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Expression_InstanceofExpression_descriptor;
        }

        public boa.types.Ast.Expression.InstanceofExpression getDefaultInstanceForType() {
          return boa.types.Ast.Expression.InstanceofExpression.getDefaultInstance();
        }

        public boa.types.Ast.Expression.InstanceofExpression build() {
          boa.types.Ast.Expression.InstanceofExpression result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Expression.InstanceofExpression buildPartial() {
          boa.types.Ast.Expression.InstanceofExpression result = new boa.types.Ast.Expression.InstanceofExpression(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (leftOperandBuilder_ == null) {
            result.leftOperand_ = leftOperand_;
          } else {
            result.leftOperand_ = leftOperandBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          if (rightOperandBuilder_ == null) {
            result.rightOperand_ = rightOperand_;
          } else {
            result.rightOperand_ = rightOperandBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Expression.InstanceofExpression) {
            return mergeFrom((boa.types.Ast.Expression.InstanceofExpression)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Expression.InstanceofExpression other) {
          if (other == boa.types.Ast.Expression.InstanceofExpression.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasLeftOperand()) {
            mergeLeftOperand(other.getLeftOperand());
          }
          if (other.hasRightOperand()) {
            mergeRightOperand(other.getRightOperand());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasLeftOperand()) {
            
            return false;
          }
          if (!hasRightOperand()) {
            
            return false;
          }
          if (!getLeftOperand().isInitialized()) {
            
            return false;
          }
          if (!getRightOperand().isInitialized()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Expression.InstanceofExpression parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Expression.InstanceofExpression) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = TYPECOMPARE];
        private boa.types.Ast.Expression.ExpressionKind shadowKind_ = boa.types.Ast.Expression.ExpressionKind.TYPECOMPARE;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = TYPECOMPARE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = TYPECOMPARE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = TYPECOMPARE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = TYPECOMPARE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.TYPECOMPARE;
          onChanged();
          return this;
        }

        // required .boa.types.Expression left_operand = 2;
        private boa.types.Ast.Expression leftOperand_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> leftOperandBuilder_;
        /**
         * <code>required .boa.types.Expression left_operand = 2;</code>
         *
         * <pre>
         ** The expression being tested 
         * </pre>
         */
        public boolean hasLeftOperand() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required .boa.types.Expression left_operand = 2;</code>
         *
         * <pre>
         ** The expression being tested 
         * </pre>
         */
        public boa.types.Ast.Expression getLeftOperand() {
          if (leftOperandBuilder_ == null) {
            return leftOperand_;
          } else {
            return leftOperandBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Expression left_operand = 2;</code>
         *
         * <pre>
         ** The expression being tested 
         * </pre>
         */
        public Builder setLeftOperand(boa.types.Ast.Expression value) {
          if (leftOperandBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            leftOperand_ = value;
            onChanged();
          } else {
            leftOperandBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression left_operand = 2;</code>
         *
         * <pre>
         ** The expression being tested 
         * </pre>
         */
        public Builder setLeftOperand(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (leftOperandBuilder_ == null) {
            leftOperand_ = builderForValue.build();
            onChanged();
          } else {
            leftOperandBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression left_operand = 2;</code>
         *
         * <pre>
         ** The expression being tested 
         * </pre>
         */
        public Builder mergeLeftOperand(boa.types.Ast.Expression value) {
          if (leftOperandBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                leftOperand_ != boa.types.Ast.Expression.getDefaultInstance()) {
              leftOperand_ =
                boa.types.Ast.Expression.newBuilder(leftOperand_).mergeFrom(value).buildPartial();
            } else {
              leftOperand_ = value;
            }
            onChanged();
          } else {
            leftOperandBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression left_operand = 2;</code>
         *
         * <pre>
         ** The expression being tested 
         * </pre>
         */
        public Builder clearLeftOperand() {
          if (leftOperandBuilder_ == null) {
            leftOperand_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            leftOperandBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>required .boa.types.Expression left_operand = 2;</code>
         *
         * <pre>
         ** The expression being tested 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder getLeftOperandBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getLeftOperandFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Expression left_operand = 2;</code>
         *
         * <pre>
         ** The expression being tested 
         * </pre>
         */
        public boa.types.Ast.ExpressionOrBuilder getLeftOperandOrBuilder() {
          if (leftOperandBuilder_ != null) {
            return leftOperandBuilder_.getMessageOrBuilder();
          } else {
            return leftOperand_;
          }
        }
        /**
         * <code>required .boa.types.Expression left_operand = 2;</code>
         *
         * <pre>
         ** The expression being tested 
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getLeftOperandFieldBuilder() {
          if (leftOperandBuilder_ == null) {
            leftOperandBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    leftOperand_,
                    getParentForChildren(),
                    isClean());
            leftOperand_ = null;
          }
          return leftOperandBuilder_;
        }

        // required .boa.types.Type right_operand = 3;
        private boa.types.Ast.Type rightOperand_ = boa.types.Ast.Type.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> rightOperandBuilder_;
        /**
         * <code>required .boa.types.Type right_operand = 3;</code>
         *
         * <pre>
         ** The type to test for 
         * </pre>
         */
        public boolean hasRightOperand() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required .boa.types.Type right_operand = 3;</code>
         *
         * <pre>
         ** The type to test for 
         * </pre>
         */
        public boa.types.Ast.Type getRightOperand() {
          if (rightOperandBuilder_ == null) {
            return rightOperand_;
          } else {
            return rightOperandBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Type right_operand = 3;</code>
         *
         * <pre>
         ** The type to test for 
         * </pre>
         */
        public Builder setRightOperand(boa.types.Ast.Type value) {
          if (rightOperandBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            rightOperand_ = value;
            onChanged();
          } else {
            rightOperandBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Type right_operand = 3;</code>
         *
         * <pre>
         ** The type to test for 
         * </pre>
         */
        public Builder setRightOperand(
            boa.types.Ast.Type.Builder builderForValue) {
          if (rightOperandBuilder_ == null) {
            rightOperand_ = builderForValue.build();
            onChanged();
          } else {
            rightOperandBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Type right_operand = 3;</code>
         *
         * <pre>
         ** The type to test for 
         * </pre>
         */
        public Builder mergeRightOperand(boa.types.Ast.Type value) {
          if (rightOperandBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                rightOperand_ != boa.types.Ast.Type.getDefaultInstance()) {
              rightOperand_ =
                boa.types.Ast.Type.newBuilder(rightOperand_).mergeFrom(value).buildPartial();
            } else {
              rightOperand_ = value;
            }
            onChanged();
          } else {
            rightOperandBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Type right_operand = 3;</code>
         *
         * <pre>
         ** The type to test for 
         * </pre>
         */
        public Builder clearRightOperand() {
          if (rightOperandBuilder_ == null) {
            rightOperand_ = boa.types.Ast.Type.getDefaultInstance();
            onChanged();
          } else {
            rightOperandBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <code>required .boa.types.Type right_operand = 3;</code>
         *
         * <pre>
         ** The type to test for 
         * </pre>
         */
        public boa.types.Ast.Type.Builder getRightOperandBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getRightOperandFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Type right_operand = 3;</code>
         *
         * <pre>
         ** The type to test for 
         * </pre>
         */
        public boa.types.Ast.TypeOrBuilder getRightOperandOrBuilder() {
          if (rightOperandBuilder_ != null) {
            return rightOperandBuilder_.getMessageOrBuilder();
          } else {
            return rightOperand_;
          }
        }
        /**
         * <code>required .boa.types.Type right_operand = 3;</code>
         *
         * <pre>
         ** The type to test for 
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> 
            getRightOperandFieldBuilder() {
          if (rightOperandBuilder_ == null) {
            rightOperandBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder>(
                    rightOperand_,
                    getParentForChildren(),
                    isClean());
            rightOperand_ = null;
          }
          return rightOperandBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Expression.InstanceofExpression)
      }

      static {
        defaultInstance = new InstanceofExpression(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Expression.InstanceofExpression)
    }

    public interface LambdaExpressionOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LAMBDA];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LAMBDA];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LAMBDA];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind();

      // required bool has_parentheses = 2;
      /**
       * <code>required bool has_parentheses = 2;</code>
       *
       * <pre>
       ** Whether parentheses around the parameters are present or not 
       * </pre>
       */
      boolean hasHasParentheses();
      /**
       * <code>required bool has_parentheses = 2;</code>
       *
       * <pre>
       ** Whether parentheses around the parameters are present or not 
       * </pre>
       */
      boolean getHasParentheses();

      // repeated .boa.types.Variable parameters = 3;
      /**
       * <code>repeated .boa.types.Variable parameters = 3;</code>
       *
       * <pre>
       ** The formal parameters - note, the type may or may not be present 
       * </pre>
       */
      java.util.List<boa.types.Ast.Variable> 
          getParametersList();
      /**
       * <code>repeated .boa.types.Variable parameters = 3;</code>
       *
       * <pre>
       ** The formal parameters - note, the type may or may not be present 
       * </pre>
       */
      boa.types.Ast.Variable getParameters(int index);
      /**
       * <code>repeated .boa.types.Variable parameters = 3;</code>
       *
       * <pre>
       ** The formal parameters - note, the type may or may not be present 
       * </pre>
       */
      int getParametersCount();
      /**
       * <code>repeated .boa.types.Variable parameters = 3;</code>
       *
       * <pre>
       ** The formal parameters - note, the type may or may not be present 
       * </pre>
       */
      java.util.List<? extends boa.types.Ast.VariableOrBuilder> 
          getParametersOrBuilderList();
      /**
       * <code>repeated .boa.types.Variable parameters = 3;</code>
       *
       * <pre>
       ** The formal parameters - note, the type may or may not be present 
       * </pre>
       */
      boa.types.Ast.VariableOrBuilder getParametersOrBuilder(
          int index);

      // required .boa.types.Statement body = 4;
      /**
       * <code>required .boa.types.Statement body = 4;</code>
       *
       * <pre>
       ** The body of the lambda 
       * </pre>
       */
      boolean hasBody();
      /**
       * <code>required .boa.types.Statement body = 4;</code>
       *
       * <pre>
       ** The body of the lambda 
       * </pre>
       */
      boa.types.Ast.Statement getBody();
      /**
       * <code>required .boa.types.Statement body = 4;</code>
       *
       * <pre>
       ** The body of the lambda 
       * </pre>
       */
      boa.types.Ast.StatementOrBuilder getBodyOrBuilder();
    }
    /**
     * Protobuf type {@code boa.types.Expression.LambdaExpression}
     *
     * <pre>
     ** A lambda expression 
     * </pre>
     */
    public static final class LambdaExpression extends
        com.google.protobuf.GeneratedMessage
        implements LambdaExpressionOrBuilder {
      // Use LambdaExpression.newBuilder() to construct.
      private LambdaExpression(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private LambdaExpression(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final LambdaExpression defaultInstance;
      public static LambdaExpression getDefaultInstance() {
        return defaultInstance;
      }

      public LambdaExpression getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private LambdaExpression(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                hasParentheses_ = input.readBool();
                break;
              }
              case 26: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  parameters_ = new java.util.ArrayList<boa.types.Ast.Variable>();
                  mutable_bitField0_ |= 0x00000004;
                }
                parameters_.add(input.readMessage(boa.types.Ast.Variable.PARSER, extensionRegistry));
                break;
              }
              case 34: {
                boa.types.Ast.Statement.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = body_.toBuilder();
                }
                body_ = input.readMessage(boa.types.Ast.Statement.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(body_);
                  body_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            parameters_ = java.util.Collections.unmodifiableList(parameters_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Expression_LambdaExpression_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Expression_LambdaExpression_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Expression.LambdaExpression.class, boa.types.Ast.Expression.LambdaExpression.Builder.class);
      }

      public static com.google.protobuf.Parser<LambdaExpression> PARSER =
          new com.google.protobuf.AbstractParser<LambdaExpression>() {
        public LambdaExpression parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new LambdaExpression(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<LambdaExpression> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LAMBDA];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Expression.ExpressionKind shadowKind_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LAMBDA];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LAMBDA];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
        return shadowKind_;
      }

      // required bool has_parentheses = 2;
      public static final int HAS_PARENTHESES_FIELD_NUMBER = 2;
      private boolean hasParentheses_;
      /**
       * <code>required bool has_parentheses = 2;</code>
       *
       * <pre>
       ** Whether parentheses around the parameters are present or not 
       * </pre>
       */
      public boolean hasHasParentheses() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bool has_parentheses = 2;</code>
       *
       * <pre>
       ** Whether parentheses around the parameters are present or not 
       * </pre>
       */
      public boolean getHasParentheses() {
        return hasParentheses_;
      }

      // repeated .boa.types.Variable parameters = 3;
      public static final int PARAMETERS_FIELD_NUMBER = 3;
      private java.util.List<boa.types.Ast.Variable> parameters_;
      /**
       * <code>repeated .boa.types.Variable parameters = 3;</code>
       *
       * <pre>
       ** The formal parameters - note, the type may or may not be present 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Variable> getParametersList() {
        return parameters_;
      }
      /**
       * <code>repeated .boa.types.Variable parameters = 3;</code>
       *
       * <pre>
       ** The formal parameters - note, the type may or may not be present 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.VariableOrBuilder> 
          getParametersOrBuilderList() {
        return parameters_;
      }
      /**
       * <code>repeated .boa.types.Variable parameters = 3;</code>
       *
       * <pre>
       ** The formal parameters - note, the type may or may not be present 
       * </pre>
       */
      public int getParametersCount() {
        return parameters_.size();
      }
      /**
       * <code>repeated .boa.types.Variable parameters = 3;</code>
       *
       * <pre>
       ** The formal parameters - note, the type may or may not be present 
       * </pre>
       */
      public boa.types.Ast.Variable getParameters(int index) {
        return parameters_.get(index);
      }
      /**
       * <code>repeated .boa.types.Variable parameters = 3;</code>
       *
       * <pre>
       ** The formal parameters - note, the type may or may not be present 
       * </pre>
       */
      public boa.types.Ast.VariableOrBuilder getParametersOrBuilder(
          int index) {
        return parameters_.get(index);
      }

      // required .boa.types.Statement body = 4;
      public static final int BODY_FIELD_NUMBER = 4;
      private boa.types.Ast.Statement body_;
      /**
       * <code>required .boa.types.Statement body = 4;</code>
       *
       * <pre>
       ** The body of the lambda 
       * </pre>
       */
      public boolean hasBody() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .boa.types.Statement body = 4;</code>
       *
       * <pre>
       ** The body of the lambda 
       * </pre>
       */
      public boa.types.Ast.Statement getBody() {
        return body_;
      }
      /**
       * <code>required .boa.types.Statement body = 4;</code>
       *
       * <pre>
       ** The body of the lambda 
       * </pre>
       */
      public boa.types.Ast.StatementOrBuilder getBodyOrBuilder() {
        return body_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Expression.ExpressionKind.LAMBDA;
        hasParentheses_ = false;
        parameters_ = java.util.Collections.emptyList();
        body_ = boa.types.Ast.Statement.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasHasParentheses()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasBody()) {
          memoizedIsInitialized = 0;
          return false;
        }
        for (int i = 0; i < getParametersCount(); i++) {
          if (!getParameters(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        if (!getBody().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBool(2, hasParentheses_);
        }
        for (int i = 0; i < parameters_.size(); i++) {
          output.writeMessage(3, parameters_.get(i));
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(4, body_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, hasParentheses_);
        }
        for (int i = 0; i < parameters_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, parameters_.get(i));
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, body_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Expression.LambdaExpression parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.LambdaExpression parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.LambdaExpression parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.LambdaExpression parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.LambdaExpression parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.LambdaExpression parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.LambdaExpression parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Expression.LambdaExpression parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.LambdaExpression parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.LambdaExpression parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Expression.LambdaExpression prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Expression.LambdaExpression}
       *
       * <pre>
       ** A lambda expression 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Expression.LambdaExpressionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Expression_LambdaExpression_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Expression_LambdaExpression_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Expression.LambdaExpression.class, boa.types.Ast.Expression.LambdaExpression.Builder.class);
        }

        // Construct using boa.types.Ast.Expression.LambdaExpression.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getParametersFieldBuilder();
            getBodyFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.LAMBDA;
          bitField0_ = (bitField0_ & ~0x00000001);
          hasParentheses_ = false;
          bitField0_ = (bitField0_ & ~0x00000002);
          if (parametersBuilder_ == null) {
            parameters_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            parametersBuilder_.clear();
          }
          if (bodyBuilder_ == null) {
            body_ = boa.types.Ast.Statement.getDefaultInstance();
          } else {
            bodyBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Expression_LambdaExpression_descriptor;
        }

        public boa.types.Ast.Expression.LambdaExpression getDefaultInstanceForType() {
          return boa.types.Ast.Expression.LambdaExpression.getDefaultInstance();
        }

        public boa.types.Ast.Expression.LambdaExpression build() {
          boa.types.Ast.Expression.LambdaExpression result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Expression.LambdaExpression buildPartial() {
          boa.types.Ast.Expression.LambdaExpression result = new boa.types.Ast.Expression.LambdaExpression(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.hasParentheses_ = hasParentheses_;
          if (parametersBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              parameters_ = java.util.Collections.unmodifiableList(parameters_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.parameters_ = parameters_;
          } else {
            result.parameters_ = parametersBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000004;
          }
          if (bodyBuilder_ == null) {
            result.body_ = body_;
          } else {
            result.body_ = bodyBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Expression.LambdaExpression) {
            return mergeFrom((boa.types.Ast.Expression.LambdaExpression)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Expression.LambdaExpression other) {
          if (other == boa.types.Ast.Expression.LambdaExpression.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasHasParentheses()) {
            setHasParentheses(other.getHasParentheses());
          }
          if (parametersBuilder_ == null) {
            if (!other.parameters_.isEmpty()) {
              if (parameters_.isEmpty()) {
                parameters_ = other.parameters_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureParametersIsMutable();
                parameters_.addAll(other.parameters_);
              }
              onChanged();
            }
          } else {
            if (!other.parameters_.isEmpty()) {
              if (parametersBuilder_.isEmpty()) {
                parametersBuilder_.dispose();
                parametersBuilder_ = null;
                parameters_ = other.parameters_;
                bitField0_ = (bitField0_ & ~0x00000004);
                parametersBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getParametersFieldBuilder() : null;
              } else {
                parametersBuilder_.addAllMessages(other.parameters_);
              }
            }
          }
          if (other.hasBody()) {
            mergeBody(other.getBody());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasHasParentheses()) {
            
            return false;
          }
          if (!hasBody()) {
            
            return false;
          }
          for (int i = 0; i < getParametersCount(); i++) {
            if (!getParameters(i).isInitialized()) {
              
              return false;
            }
          }
          if (!getBody().isInitialized()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Expression.LambdaExpression parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Expression.LambdaExpression) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LAMBDA];
        private boa.types.Ast.Expression.ExpressionKind shadowKind_ = boa.types.Ast.Expression.ExpressionKind.LAMBDA;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LAMBDA];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LAMBDA];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LAMBDA];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LAMBDA];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.LAMBDA;
          onChanged();
          return this;
        }

        // required bool has_parentheses = 2;
        private boolean hasParentheses_ ;
        /**
         * <code>required bool has_parentheses = 2;</code>
         *
         * <pre>
         ** Whether parentheses around the parameters are present or not 
         * </pre>
         */
        public boolean hasHasParentheses() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required bool has_parentheses = 2;</code>
         *
         * <pre>
         ** Whether parentheses around the parameters are present or not 
         * </pre>
         */
        public boolean getHasParentheses() {
          return hasParentheses_;
        }
        /**
         * <code>required bool has_parentheses = 2;</code>
         *
         * <pre>
         ** Whether parentheses around the parameters are present or not 
         * </pre>
         */
        public Builder setHasParentheses(boolean value) {
          bitField0_ |= 0x00000002;
          hasParentheses_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bool has_parentheses = 2;</code>
         *
         * <pre>
         ** Whether parentheses around the parameters are present or not 
         * </pre>
         */
        public Builder clearHasParentheses() {
          bitField0_ = (bitField0_ & ~0x00000002);
          hasParentheses_ = false;
          onChanged();
          return this;
        }

        // repeated .boa.types.Variable parameters = 3;
        private java.util.List<boa.types.Ast.Variable> parameters_ =
          java.util.Collections.emptyList();
        private void ensureParametersIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            parameters_ = new java.util.ArrayList<boa.types.Ast.Variable>(parameters_);
            bitField0_ |= 0x00000004;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Variable, boa.types.Ast.Variable.Builder, boa.types.Ast.VariableOrBuilder> parametersBuilder_;

        /**
         * <code>repeated .boa.types.Variable parameters = 3;</code>
         *
         * <pre>
         ** The formal parameters - note, the type may or may not be present 
         * </pre>
         */
        public java.util.List<boa.types.Ast.Variable> getParametersList() {
          if (parametersBuilder_ == null) {
            return java.util.Collections.unmodifiableList(parameters_);
          } else {
            return parametersBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .boa.types.Variable parameters = 3;</code>
         *
         * <pre>
         ** The formal parameters - note, the type may or may not be present 
         * </pre>
         */
        public int getParametersCount() {
          if (parametersBuilder_ == null) {
            return parameters_.size();
          } else {
            return parametersBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .boa.types.Variable parameters = 3;</code>
         *
         * <pre>
         ** The formal parameters - note, the type may or may not be present 
         * </pre>
         */
        public boa.types.Ast.Variable getParameters(int index) {
          if (parametersBuilder_ == null) {
            return parameters_.get(index);
          } else {
            return parametersBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .boa.types.Variable parameters = 3;</code>
         *
         * <pre>
         ** The formal parameters - note, the type may or may not be present 
         * </pre>
         */
        public Builder setParameters(
            int index, boa.types.Ast.Variable value) {
          if (parametersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureParametersIsMutable();
            parameters_.set(index, value);
            onChanged();
          } else {
            parametersBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Variable parameters = 3;</code>
         *
         * <pre>
         ** The formal parameters - note, the type may or may not be present 
         * </pre>
         */
        public Builder setParameters(
            int index, boa.types.Ast.Variable.Builder builderForValue) {
          if (parametersBuilder_ == null) {
            ensureParametersIsMutable();
            parameters_.set(index, builderForValue.build());
            onChanged();
          } else {
            parametersBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Variable parameters = 3;</code>
         *
         * <pre>
         ** The formal parameters - note, the type may or may not be present 
         * </pre>
         */
        public Builder addParameters(boa.types.Ast.Variable value) {
          if (parametersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureParametersIsMutable();
            parameters_.add(value);
            onChanged();
          } else {
            parametersBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Variable parameters = 3;</code>
         *
         * <pre>
         ** The formal parameters - note, the type may or may not be present 
         * </pre>
         */
        public Builder addParameters(
            int index, boa.types.Ast.Variable value) {
          if (parametersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureParametersIsMutable();
            parameters_.add(index, value);
            onChanged();
          } else {
            parametersBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Variable parameters = 3;</code>
         *
         * <pre>
         ** The formal parameters - note, the type may or may not be present 
         * </pre>
         */
        public Builder addParameters(
            boa.types.Ast.Variable.Builder builderForValue) {
          if (parametersBuilder_ == null) {
            ensureParametersIsMutable();
            parameters_.add(builderForValue.build());
            onChanged();
          } else {
            parametersBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Variable parameters = 3;</code>
         *
         * <pre>
         ** The formal parameters - note, the type may or may not be present 
         * </pre>
         */
        public Builder addParameters(
            int index, boa.types.Ast.Variable.Builder builderForValue) {
          if (parametersBuilder_ == null) {
            ensureParametersIsMutable();
            parameters_.add(index, builderForValue.build());
            onChanged();
          } else {
            parametersBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Variable parameters = 3;</code>
         *
         * <pre>
         ** The formal parameters - note, the type may or may not be present 
         * </pre>
         */
        public Builder addAllParameters(
            java.lang.Iterable<? extends boa.types.Ast.Variable> values) {
          if (parametersBuilder_ == null) {
            ensureParametersIsMutable();
            super.addAll(values, parameters_);
            onChanged();
          } else {
            parametersBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Variable parameters = 3;</code>
         *
         * <pre>
         ** The formal parameters - note, the type may or may not be present 
         * </pre>
         */
        public Builder clearParameters() {
          if (parametersBuilder_ == null) {
            parameters_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
          } else {
            parametersBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Variable parameters = 3;</code>
         *
         * <pre>
         ** The formal parameters - note, the type may or may not be present 
         * </pre>
         */
        public Builder removeParameters(int index) {
          if (parametersBuilder_ == null) {
            ensureParametersIsMutable();
            parameters_.remove(index);
            onChanged();
          } else {
            parametersBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Variable parameters = 3;</code>
         *
         * <pre>
         ** The formal parameters - note, the type may or may not be present 
         * </pre>
         */
        public boa.types.Ast.Variable.Builder getParametersBuilder(
            int index) {
          return getParametersFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .boa.types.Variable parameters = 3;</code>
         *
         * <pre>
         ** The formal parameters - note, the type may or may not be present 
         * </pre>
         */
        public boa.types.Ast.VariableOrBuilder getParametersOrBuilder(
            int index) {
          if (parametersBuilder_ == null) {
            return parameters_.get(index);  } else {
            return parametersBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .boa.types.Variable parameters = 3;</code>
         *
         * <pre>
         ** The formal parameters - note, the type may or may not be present 
         * </pre>
         */
        public java.util.List<? extends boa.types.Ast.VariableOrBuilder> 
             getParametersOrBuilderList() {
          if (parametersBuilder_ != null) {
            return parametersBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(parameters_);
          }
        }
        /**
         * <code>repeated .boa.types.Variable parameters = 3;</code>
         *
         * <pre>
         ** The formal parameters - note, the type may or may not be present 
         * </pre>
         */
        public boa.types.Ast.Variable.Builder addParametersBuilder() {
          return getParametersFieldBuilder().addBuilder(
              boa.types.Ast.Variable.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Variable parameters = 3;</code>
         *
         * <pre>
         ** The formal parameters - note, the type may or may not be present 
         * </pre>
         */
        public boa.types.Ast.Variable.Builder addParametersBuilder(
            int index) {
          return getParametersFieldBuilder().addBuilder(
              index, boa.types.Ast.Variable.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Variable parameters = 3;</code>
         *
         * <pre>
         ** The formal parameters - note, the type may or may not be present 
         * </pre>
         */
        public java.util.List<boa.types.Ast.Variable.Builder> 
             getParametersBuilderList() {
          return getParametersFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Variable, boa.types.Ast.Variable.Builder, boa.types.Ast.VariableOrBuilder> 
            getParametersFieldBuilder() {
          if (parametersBuilder_ == null) {
            parametersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                boa.types.Ast.Variable, boa.types.Ast.Variable.Builder, boa.types.Ast.VariableOrBuilder>(
                    parameters_,
                    ((bitField0_ & 0x00000004) == 0x00000004),
                    getParentForChildren(),
                    isClean());
            parameters_ = null;
          }
          return parametersBuilder_;
        }

        // required .boa.types.Statement body = 4;
        private boa.types.Ast.Statement body_ = boa.types.Ast.Statement.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> bodyBuilder_;
        /**
         * <code>required .boa.types.Statement body = 4;</code>
         *
         * <pre>
         ** The body of the lambda 
         * </pre>
         */
        public boolean hasBody() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>required .boa.types.Statement body = 4;</code>
         *
         * <pre>
         ** The body of the lambda 
         * </pre>
         */
        public boa.types.Ast.Statement getBody() {
          if (bodyBuilder_ == null) {
            return body_;
          } else {
            return bodyBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Statement body = 4;</code>
         *
         * <pre>
         ** The body of the lambda 
         * </pre>
         */
        public Builder setBody(boa.types.Ast.Statement value) {
          if (bodyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            body_ = value;
            onChanged();
          } else {
            bodyBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>required .boa.types.Statement body = 4;</code>
         *
         * <pre>
         ** The body of the lambda 
         * </pre>
         */
        public Builder setBody(
            boa.types.Ast.Statement.Builder builderForValue) {
          if (bodyBuilder_ == null) {
            body_ = builderForValue.build();
            onChanged();
          } else {
            bodyBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>required .boa.types.Statement body = 4;</code>
         *
         * <pre>
         ** The body of the lambda 
         * </pre>
         */
        public Builder mergeBody(boa.types.Ast.Statement value) {
          if (bodyBuilder_ == null) {
            if (((bitField0_ & 0x00000008) == 0x00000008) &&
                body_ != boa.types.Ast.Statement.getDefaultInstance()) {
              body_ =
                boa.types.Ast.Statement.newBuilder(body_).mergeFrom(value).buildPartial();
            } else {
              body_ = value;
            }
            onChanged();
          } else {
            bodyBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>required .boa.types.Statement body = 4;</code>
         *
         * <pre>
         ** The body of the lambda 
         * </pre>
         */
        public Builder clearBody() {
          if (bodyBuilder_ == null) {
            body_ = boa.types.Ast.Statement.getDefaultInstance();
            onChanged();
          } else {
            bodyBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }
        /**
         * <code>required .boa.types.Statement body = 4;</code>
         *
         * <pre>
         ** The body of the lambda 
         * </pre>
         */
        public boa.types.Ast.Statement.Builder getBodyBuilder() {
          bitField0_ |= 0x00000008;
          onChanged();
          return getBodyFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Statement body = 4;</code>
         *
         * <pre>
         ** The body of the lambda 
         * </pre>
         */
        public boa.types.Ast.StatementOrBuilder getBodyOrBuilder() {
          if (bodyBuilder_ != null) {
            return bodyBuilder_.getMessageOrBuilder();
          } else {
            return body_;
          }
        }
        /**
         * <code>required .boa.types.Statement body = 4;</code>
         *
         * <pre>
         ** The body of the lambda 
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> 
            getBodyFieldBuilder() {
          if (bodyBuilder_ == null) {
            bodyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder>(
                    body_,
                    getParentForChildren(),
                    isClean());
            body_ = null;
          }
          return bodyBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Expression.LambdaExpression)
      }

      static {
        defaultInstance = new LambdaExpression(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Expression.LambdaExpression)
    }

    public interface MethodInvocationOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHODCALL];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHODCALL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHODCALL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind();

      // optional .boa.types.Expression expression = 2;
      /**
       * <code>optional .boa.types.Expression expression = 2;</code>
       *
       * <pre>
       ** The expression 
       * </pre>
       */
      boolean hasExpression();
      /**
       * <code>optional .boa.types.Expression expression = 2;</code>
       *
       * <pre>
       ** The expression 
       * </pre>
       */
      boa.types.Ast.Expression getExpression();
      /**
       * <code>optional .boa.types.Expression expression = 2;</code>
       *
       * <pre>
       ** The expression 
       * </pre>
       */
      boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder();

      // repeated .boa.types.Type type_arguments = 3;
      /**
       * <code>repeated .boa.types.Type type_arguments = 3;</code>
       *
       * <pre>
       ** The generic type arguments 
       * </pre>
       */
      java.util.List<boa.types.Ast.Type> 
          getTypeArgumentsList();
      /**
       * <code>repeated .boa.types.Type type_arguments = 3;</code>
       *
       * <pre>
       ** The generic type arguments 
       * </pre>
       */
      boa.types.Ast.Type getTypeArguments(int index);
      /**
       * <code>repeated .boa.types.Type type_arguments = 3;</code>
       *
       * <pre>
       ** The generic type arguments 
       * </pre>
       */
      int getTypeArgumentsCount();
      /**
       * <code>repeated .boa.types.Type type_arguments = 3;</code>
       *
       * <pre>
       ** The generic type arguments 
       * </pre>
       */
      java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
          getTypeArgumentsOrBuilderList();
      /**
       * <code>repeated .boa.types.Type type_arguments = 3;</code>
       *
       * <pre>
       ** The generic type arguments 
       * </pre>
       */
      boa.types.Ast.TypeOrBuilder getTypeArgumentsOrBuilder(
          int index);

      // required string name = 4;
      /**
       * <code>required string name = 4;</code>
       *
       * <pre>
       ** The name of the method invoked 
       * </pre>
       */
      boolean hasName();
      /**
       * <code>required string name = 4;</code>
       *
       * <pre>
       ** The name of the method invoked 
       * </pre>
       */
      java.lang.String getName();
      /**
       * <code>required string name = 4;</code>
       *
       * <pre>
       ** The name of the method invoked 
       * </pre>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      // repeated .boa.types.Expression arguments = 5;
      /**
       * <code>repeated .boa.types.Expression arguments = 5;</code>
       *
       * <pre>
       ** The arguments of the method invocation 
       * </pre>
       */
      java.util.List<boa.types.Ast.Expression> 
          getArgumentsList();
      /**
       * <code>repeated .boa.types.Expression arguments = 5;</code>
       *
       * <pre>
       ** The arguments of the method invocation 
       * </pre>
       */
      boa.types.Ast.Expression getArguments(int index);
      /**
       * <code>repeated .boa.types.Expression arguments = 5;</code>
       *
       * <pre>
       ** The arguments of the method invocation 
       * </pre>
       */
      int getArgumentsCount();
      /**
       * <code>repeated .boa.types.Expression arguments = 5;</code>
       *
       * <pre>
       ** The arguments of the method invocation 
       * </pre>
       */
      java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
          getArgumentsOrBuilderList();
      /**
       * <code>repeated .boa.types.Expression arguments = 5;</code>
       *
       * <pre>
       ** The arguments of the method invocation 
       * </pre>
       */
      boa.types.Ast.ExpressionOrBuilder getArgumentsOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code boa.types.Expression.MethodInvocation}
     *
     * <pre>
     ** A method invocation 
     * </pre>
     */
    public static final class MethodInvocation extends
        com.google.protobuf.GeneratedMessage
        implements MethodInvocationOrBuilder {
      // Use MethodInvocation.newBuilder() to construct.
      private MethodInvocation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private MethodInvocation(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final MethodInvocation defaultInstance;
      public static MethodInvocation getDefaultInstance() {
        return defaultInstance;
      }

      public MethodInvocation getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private MethodInvocation(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = expression_.toBuilder();
                }
                expression_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(expression_);
                  expression_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 26: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  typeArguments_ = new java.util.ArrayList<boa.types.Ast.Type>();
                  mutable_bitField0_ |= 0x00000004;
                }
                typeArguments_.add(input.readMessage(boa.types.Ast.Type.PARSER, extensionRegistry));
                break;
              }
              case 34: {
                bitField0_ |= 0x00000004;
                name_ = input.readBytes();
                break;
              }
              case 42: {
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                  arguments_ = new java.util.ArrayList<boa.types.Ast.Expression>();
                  mutable_bitField0_ |= 0x00000010;
                }
                arguments_.add(input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            typeArguments_ = java.util.Collections.unmodifiableList(typeArguments_);
          }
          if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
            arguments_ = java.util.Collections.unmodifiableList(arguments_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Expression_MethodInvocation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Expression_MethodInvocation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Expression.MethodInvocation.class, boa.types.Ast.Expression.MethodInvocation.Builder.class);
      }

      public static com.google.protobuf.Parser<MethodInvocation> PARSER =
          new com.google.protobuf.AbstractParser<MethodInvocation>() {
        public MethodInvocation parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new MethodInvocation(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<MethodInvocation> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHODCALL];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Expression.ExpressionKind shadowKind_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHODCALL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHODCALL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
        return shadowKind_;
      }

      // optional .boa.types.Expression expression = 2;
      public static final int EXPRESSION_FIELD_NUMBER = 2;
      private boa.types.Ast.Expression expression_;
      /**
       * <code>optional .boa.types.Expression expression = 2;</code>
       *
       * <pre>
       ** The expression 
       * </pre>
       */
      public boolean hasExpression() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .boa.types.Expression expression = 2;</code>
       *
       * <pre>
       ** The expression 
       * </pre>
       */
      public boa.types.Ast.Expression getExpression() {
        return expression_;
      }
      /**
       * <code>optional .boa.types.Expression expression = 2;</code>
       *
       * <pre>
       ** The expression 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder() {
        return expression_;
      }

      // repeated .boa.types.Type type_arguments = 3;
      public static final int TYPE_ARGUMENTS_FIELD_NUMBER = 3;
      private java.util.List<boa.types.Ast.Type> typeArguments_;
      /**
       * <code>repeated .boa.types.Type type_arguments = 3;</code>
       *
       * <pre>
       ** The generic type arguments 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Type> getTypeArgumentsList() {
        return typeArguments_;
      }
      /**
       * <code>repeated .boa.types.Type type_arguments = 3;</code>
       *
       * <pre>
       ** The generic type arguments 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
          getTypeArgumentsOrBuilderList() {
        return typeArguments_;
      }
      /**
       * <code>repeated .boa.types.Type type_arguments = 3;</code>
       *
       * <pre>
       ** The generic type arguments 
       * </pre>
       */
      public int getTypeArgumentsCount() {
        return typeArguments_.size();
      }
      /**
       * <code>repeated .boa.types.Type type_arguments = 3;</code>
       *
       * <pre>
       ** The generic type arguments 
       * </pre>
       */
      public boa.types.Ast.Type getTypeArguments(int index) {
        return typeArguments_.get(index);
      }
      /**
       * <code>repeated .boa.types.Type type_arguments = 3;</code>
       *
       * <pre>
       ** The generic type arguments 
       * </pre>
       */
      public boa.types.Ast.TypeOrBuilder getTypeArgumentsOrBuilder(
          int index) {
        return typeArguments_.get(index);
      }

      // required string name = 4;
      public static final int NAME_FIELD_NUMBER = 4;
      private java.lang.Object name_;
      /**
       * <code>required string name = 4;</code>
       *
       * <pre>
       ** The name of the method invoked 
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string name = 4;</code>
       *
       * <pre>
       ** The name of the method invoked 
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string name = 4;</code>
       *
       * <pre>
       ** The name of the method invoked 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // repeated .boa.types.Expression arguments = 5;
      public static final int ARGUMENTS_FIELD_NUMBER = 5;
      private java.util.List<boa.types.Ast.Expression> arguments_;
      /**
       * <code>repeated .boa.types.Expression arguments = 5;</code>
       *
       * <pre>
       ** The arguments of the method invocation 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Expression> getArgumentsList() {
        return arguments_;
      }
      /**
       * <code>repeated .boa.types.Expression arguments = 5;</code>
       *
       * <pre>
       ** The arguments of the method invocation 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
          getArgumentsOrBuilderList() {
        return arguments_;
      }
      /**
       * <code>repeated .boa.types.Expression arguments = 5;</code>
       *
       * <pre>
       ** The arguments of the method invocation 
       * </pre>
       */
      public int getArgumentsCount() {
        return arguments_.size();
      }
      /**
       * <code>repeated .boa.types.Expression arguments = 5;</code>
       *
       * <pre>
       ** The arguments of the method invocation 
       * </pre>
       */
      public boa.types.Ast.Expression getArguments(int index) {
        return arguments_.get(index);
      }
      /**
       * <code>repeated .boa.types.Expression arguments = 5;</code>
       *
       * <pre>
       ** The arguments of the method invocation 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getArgumentsOrBuilder(
          int index) {
        return arguments_.get(index);
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Expression.ExpressionKind.METHODCALL;
        expression_ = boa.types.Ast.Expression.getDefaultInstance();
        typeArguments_ = java.util.Collections.emptyList();
        name_ = "";
        arguments_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (hasExpression()) {
          if (!getExpression().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        for (int i = 0; i < getTypeArgumentsCount(); i++) {
          if (!getTypeArguments(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        for (int i = 0; i < getArgumentsCount(); i++) {
          if (!getArguments(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, expression_);
        }
        for (int i = 0; i < typeArguments_.size(); i++) {
          output.writeMessage(3, typeArguments_.get(i));
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(4, getNameBytes());
        }
        for (int i = 0; i < arguments_.size(); i++) {
          output.writeMessage(5, arguments_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, expression_);
        }
        for (int i = 0; i < typeArguments_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, typeArguments_.get(i));
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(4, getNameBytes());
        }
        for (int i = 0; i < arguments_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, arguments_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Expression.MethodInvocation parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.MethodInvocation parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.MethodInvocation parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.MethodInvocation parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.MethodInvocation parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.MethodInvocation parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.MethodInvocation parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Expression.MethodInvocation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.MethodInvocation parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.MethodInvocation parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Expression.MethodInvocation prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Expression.MethodInvocation}
       *
       * <pre>
       ** A method invocation 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Expression.MethodInvocationOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Expression_MethodInvocation_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Expression_MethodInvocation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Expression.MethodInvocation.class, boa.types.Ast.Expression.MethodInvocation.Builder.class);
        }

        // Construct using boa.types.Ast.Expression.MethodInvocation.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getExpressionFieldBuilder();
            getTypeArgumentsFieldBuilder();
            getArgumentsFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.METHODCALL;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (expressionBuilder_ == null) {
            expression_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            expressionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          if (typeArgumentsBuilder_ == null) {
            typeArguments_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            typeArgumentsBuilder_.clear();
          }
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000008);
          if (argumentsBuilder_ == null) {
            arguments_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            argumentsBuilder_.clear();
          }
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Expression_MethodInvocation_descriptor;
        }

        public boa.types.Ast.Expression.MethodInvocation getDefaultInstanceForType() {
          return boa.types.Ast.Expression.MethodInvocation.getDefaultInstance();
        }

        public boa.types.Ast.Expression.MethodInvocation build() {
          boa.types.Ast.Expression.MethodInvocation result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Expression.MethodInvocation buildPartial() {
          boa.types.Ast.Expression.MethodInvocation result = new boa.types.Ast.Expression.MethodInvocation(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (expressionBuilder_ == null) {
            result.expression_ = expression_;
          } else {
            result.expression_ = expressionBuilder_.build();
          }
          if (typeArgumentsBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              typeArguments_ = java.util.Collections.unmodifiableList(typeArguments_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.typeArguments_ = typeArguments_;
          } else {
            result.typeArguments_ = typeArgumentsBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000004;
          }
          result.name_ = name_;
          if (argumentsBuilder_ == null) {
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
              arguments_ = java.util.Collections.unmodifiableList(arguments_);
              bitField0_ = (bitField0_ & ~0x00000010);
            }
            result.arguments_ = arguments_;
          } else {
            result.arguments_ = argumentsBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Expression.MethodInvocation) {
            return mergeFrom((boa.types.Ast.Expression.MethodInvocation)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Expression.MethodInvocation other) {
          if (other == boa.types.Ast.Expression.MethodInvocation.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasExpression()) {
            mergeExpression(other.getExpression());
          }
          if (typeArgumentsBuilder_ == null) {
            if (!other.typeArguments_.isEmpty()) {
              if (typeArguments_.isEmpty()) {
                typeArguments_ = other.typeArguments_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureTypeArgumentsIsMutable();
                typeArguments_.addAll(other.typeArguments_);
              }
              onChanged();
            }
          } else {
            if (!other.typeArguments_.isEmpty()) {
              if (typeArgumentsBuilder_.isEmpty()) {
                typeArgumentsBuilder_.dispose();
                typeArgumentsBuilder_ = null;
                typeArguments_ = other.typeArguments_;
                bitField0_ = (bitField0_ & ~0x00000004);
                typeArgumentsBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getTypeArgumentsFieldBuilder() : null;
              } else {
                typeArgumentsBuilder_.addAllMessages(other.typeArguments_);
              }
            }
          }
          if (other.hasName()) {
            bitField0_ |= 0x00000008;
            name_ = other.name_;
            onChanged();
          }
          if (argumentsBuilder_ == null) {
            if (!other.arguments_.isEmpty()) {
              if (arguments_.isEmpty()) {
                arguments_ = other.arguments_;
                bitField0_ = (bitField0_ & ~0x00000010);
              } else {
                ensureArgumentsIsMutable();
                arguments_.addAll(other.arguments_);
              }
              onChanged();
            }
          } else {
            if (!other.arguments_.isEmpty()) {
              if (argumentsBuilder_.isEmpty()) {
                argumentsBuilder_.dispose();
                argumentsBuilder_ = null;
                arguments_ = other.arguments_;
                bitField0_ = (bitField0_ & ~0x00000010);
                argumentsBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getArgumentsFieldBuilder() : null;
              } else {
                argumentsBuilder_.addAllMessages(other.arguments_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasName()) {
            
            return false;
          }
          if (hasExpression()) {
            if (!getExpression().isInitialized()) {
              
              return false;
            }
          }
          for (int i = 0; i < getTypeArgumentsCount(); i++) {
            if (!getTypeArguments(i).isInitialized()) {
              
              return false;
            }
          }
          for (int i = 0; i < getArgumentsCount(); i++) {
            if (!getArguments(i).isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Expression.MethodInvocation parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Expression.MethodInvocation) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHODCALL];
        private boa.types.Ast.Expression.ExpressionKind shadowKind_ = boa.types.Ast.Expression.ExpressionKind.METHODCALL;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHODCALL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHODCALL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHODCALL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHODCALL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.METHODCALL;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression expression = 2;
        private boa.types.Ast.Expression expression_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> expressionBuilder_;
        /**
         * <code>optional .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The expression 
         * </pre>
         */
        public boolean hasExpression() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The expression 
         * </pre>
         */
        public boa.types.Ast.Expression getExpression() {
          if (expressionBuilder_ == null) {
            return expression_;
          } else {
            return expressionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The expression 
         * </pre>
         */
        public Builder setExpression(boa.types.Ast.Expression value) {
          if (expressionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            expression_ = value;
            onChanged();
          } else {
            expressionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The expression 
         * </pre>
         */
        public Builder setExpression(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (expressionBuilder_ == null) {
            expression_ = builderForValue.build();
            onChanged();
          } else {
            expressionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The expression 
         * </pre>
         */
        public Builder mergeExpression(boa.types.Ast.Expression value) {
          if (expressionBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                expression_ != boa.types.Ast.Expression.getDefaultInstance()) {
              expression_ =
                boa.types.Ast.Expression.newBuilder(expression_).mergeFrom(value).buildPartial();
            } else {
              expression_ = value;
            }
            onChanged();
          } else {
            expressionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The expression 
         * </pre>
         */
        public Builder clearExpression() {
          if (expressionBuilder_ == null) {
            expression_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            expressionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>optional .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The expression 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder getExpressionBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getExpressionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The expression 
         * </pre>
         */
        public boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder() {
          if (expressionBuilder_ != null) {
            return expressionBuilder_.getMessageOrBuilder();
          } else {
            return expression_;
          }
        }
        /**
         * <code>optional .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The expression 
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getExpressionFieldBuilder() {
          if (expressionBuilder_ == null) {
            expressionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    expression_,
                    getParentForChildren(),
                    isClean());
            expression_ = null;
          }
          return expressionBuilder_;
        }

        // repeated .boa.types.Type type_arguments = 3;
        private java.util.List<boa.types.Ast.Type> typeArguments_ =
          java.util.Collections.emptyList();
        private void ensureTypeArgumentsIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            typeArguments_ = new java.util.ArrayList<boa.types.Ast.Type>(typeArguments_);
            bitField0_ |= 0x00000004;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> typeArgumentsBuilder_;

        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public java.util.List<boa.types.Ast.Type> getTypeArgumentsList() {
          if (typeArgumentsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(typeArguments_);
          } else {
            return typeArgumentsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public int getTypeArgumentsCount() {
          if (typeArgumentsBuilder_ == null) {
            return typeArguments_.size();
          } else {
            return typeArgumentsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public boa.types.Ast.Type getTypeArguments(int index) {
          if (typeArgumentsBuilder_ == null) {
            return typeArguments_.get(index);
          } else {
            return typeArgumentsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public Builder setTypeArguments(
            int index, boa.types.Ast.Type value) {
          if (typeArgumentsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTypeArgumentsIsMutable();
            typeArguments_.set(index, value);
            onChanged();
          } else {
            typeArgumentsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public Builder setTypeArguments(
            int index, boa.types.Ast.Type.Builder builderForValue) {
          if (typeArgumentsBuilder_ == null) {
            ensureTypeArgumentsIsMutable();
            typeArguments_.set(index, builderForValue.build());
            onChanged();
          } else {
            typeArgumentsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public Builder addTypeArguments(boa.types.Ast.Type value) {
          if (typeArgumentsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTypeArgumentsIsMutable();
            typeArguments_.add(value);
            onChanged();
          } else {
            typeArgumentsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public Builder addTypeArguments(
            int index, boa.types.Ast.Type value) {
          if (typeArgumentsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTypeArgumentsIsMutable();
            typeArguments_.add(index, value);
            onChanged();
          } else {
            typeArgumentsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public Builder addTypeArguments(
            boa.types.Ast.Type.Builder builderForValue) {
          if (typeArgumentsBuilder_ == null) {
            ensureTypeArgumentsIsMutable();
            typeArguments_.add(builderForValue.build());
            onChanged();
          } else {
            typeArgumentsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public Builder addTypeArguments(
            int index, boa.types.Ast.Type.Builder builderForValue) {
          if (typeArgumentsBuilder_ == null) {
            ensureTypeArgumentsIsMutable();
            typeArguments_.add(index, builderForValue.build());
            onChanged();
          } else {
            typeArgumentsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public Builder addAllTypeArguments(
            java.lang.Iterable<? extends boa.types.Ast.Type> values) {
          if (typeArgumentsBuilder_ == null) {
            ensureTypeArgumentsIsMutable();
            super.addAll(values, typeArguments_);
            onChanged();
          } else {
            typeArgumentsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public Builder clearTypeArguments() {
          if (typeArgumentsBuilder_ == null) {
            typeArguments_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
          } else {
            typeArgumentsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public Builder removeTypeArguments(int index) {
          if (typeArgumentsBuilder_ == null) {
            ensureTypeArgumentsIsMutable();
            typeArguments_.remove(index);
            onChanged();
          } else {
            typeArgumentsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public boa.types.Ast.Type.Builder getTypeArgumentsBuilder(
            int index) {
          return getTypeArgumentsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public boa.types.Ast.TypeOrBuilder getTypeArgumentsOrBuilder(
            int index) {
          if (typeArgumentsBuilder_ == null) {
            return typeArguments_.get(index);  } else {
            return typeArgumentsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
             getTypeArgumentsOrBuilderList() {
          if (typeArgumentsBuilder_ != null) {
            return typeArgumentsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(typeArguments_);
          }
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public boa.types.Ast.Type.Builder addTypeArgumentsBuilder() {
          return getTypeArgumentsFieldBuilder().addBuilder(
              boa.types.Ast.Type.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public boa.types.Ast.Type.Builder addTypeArgumentsBuilder(
            int index) {
          return getTypeArgumentsFieldBuilder().addBuilder(
              index, boa.types.Ast.Type.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public java.util.List<boa.types.Ast.Type.Builder> 
             getTypeArgumentsBuilderList() {
          return getTypeArgumentsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> 
            getTypeArgumentsFieldBuilder() {
          if (typeArgumentsBuilder_ == null) {
            typeArgumentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder>(
                    typeArguments_,
                    ((bitField0_ & 0x00000004) == 0x00000004),
                    getParentForChildren(),
                    isClean());
            typeArguments_ = null;
          }
          return typeArgumentsBuilder_;
        }

        // required string name = 4;
        private java.lang.Object name_ = "";
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         ** The name of the method invoked 
         * </pre>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         ** The name of the method invoked 
         * </pre>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         ** The name of the method invoked 
         * </pre>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         ** The name of the method invoked 
         * </pre>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         ** The name of the method invoked 
         * </pre>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000008);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         ** The name of the method invoked 
         * </pre>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          name_ = value;
          onChanged();
          return this;
        }

        // repeated .boa.types.Expression arguments = 5;
        private java.util.List<boa.types.Ast.Expression> arguments_ =
          java.util.Collections.emptyList();
        private void ensureArgumentsIsMutable() {
          if (!((bitField0_ & 0x00000010) == 0x00000010)) {
            arguments_ = new java.util.ArrayList<boa.types.Ast.Expression>(arguments_);
            bitField0_ |= 0x00000010;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> argumentsBuilder_;

        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public java.util.List<boa.types.Ast.Expression> getArgumentsList() {
          if (argumentsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(arguments_);
          } else {
            return argumentsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public int getArgumentsCount() {
          if (argumentsBuilder_ == null) {
            return arguments_.size();
          } else {
            return argumentsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public boa.types.Ast.Expression getArguments(int index) {
          if (argumentsBuilder_ == null) {
            return arguments_.get(index);
          } else {
            return argumentsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public Builder setArguments(
            int index, boa.types.Ast.Expression value) {
          if (argumentsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureArgumentsIsMutable();
            arguments_.set(index, value);
            onChanged();
          } else {
            argumentsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public Builder setArguments(
            int index, boa.types.Ast.Expression.Builder builderForValue) {
          if (argumentsBuilder_ == null) {
            ensureArgumentsIsMutable();
            arguments_.set(index, builderForValue.build());
            onChanged();
          } else {
            argumentsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public Builder addArguments(boa.types.Ast.Expression value) {
          if (argumentsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureArgumentsIsMutable();
            arguments_.add(value);
            onChanged();
          } else {
            argumentsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public Builder addArguments(
            int index, boa.types.Ast.Expression value) {
          if (argumentsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureArgumentsIsMutable();
            arguments_.add(index, value);
            onChanged();
          } else {
            argumentsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public Builder addArguments(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (argumentsBuilder_ == null) {
            ensureArgumentsIsMutable();
            arguments_.add(builderForValue.build());
            onChanged();
          } else {
            argumentsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public Builder addArguments(
            int index, boa.types.Ast.Expression.Builder builderForValue) {
          if (argumentsBuilder_ == null) {
            ensureArgumentsIsMutable();
            arguments_.add(index, builderForValue.build());
            onChanged();
          } else {
            argumentsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public Builder addAllArguments(
            java.lang.Iterable<? extends boa.types.Ast.Expression> values) {
          if (argumentsBuilder_ == null) {
            ensureArgumentsIsMutable();
            super.addAll(values, arguments_);
            onChanged();
          } else {
            argumentsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public Builder clearArguments() {
          if (argumentsBuilder_ == null) {
            arguments_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000010);
            onChanged();
          } else {
            argumentsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public Builder removeArguments(int index) {
          if (argumentsBuilder_ == null) {
            ensureArgumentsIsMutable();
            arguments_.remove(index);
            onChanged();
          } else {
            argumentsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder getArgumentsBuilder(
            int index) {
          return getArgumentsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public boa.types.Ast.ExpressionOrBuilder getArgumentsOrBuilder(
            int index) {
          if (argumentsBuilder_ == null) {
            return arguments_.get(index);  } else {
            return argumentsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
             getArgumentsOrBuilderList() {
          if (argumentsBuilder_ != null) {
            return argumentsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(arguments_);
          }
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder addArgumentsBuilder() {
          return getArgumentsFieldBuilder().addBuilder(
              boa.types.Ast.Expression.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder addArgumentsBuilder(
            int index) {
          return getArgumentsFieldBuilder().addBuilder(
              index, boa.types.Ast.Expression.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public java.util.List<boa.types.Ast.Expression.Builder> 
             getArgumentsBuilderList() {
          return getArgumentsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getArgumentsFieldBuilder() {
          if (argumentsBuilder_ == null) {
            argumentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    arguments_,
                    ((bitField0_ & 0x00000010) == 0x00000010),
                    getParentForChildren(),
                    isClean());
            arguments_ = null;
          }
          return argumentsBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Expression.MethodInvocation)
      }

      static {
        defaultInstance = new MethodInvocation(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Expression.MethodInvocation)
    }

    public interface MethodReferenceOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind();

      // repeated .boa.types.Type type_arguments = 2;
      /**
       * <code>repeated .boa.types.Type type_arguments = 2;</code>
       *
       * <pre>
       ** The type arguments of the method reference 
       * </pre>
       */
      java.util.List<boa.types.Ast.Type> 
          getTypeArgumentsList();
      /**
       * <code>repeated .boa.types.Type type_arguments = 2;</code>
       *
       * <pre>
       ** The type arguments of the method reference 
       * </pre>
       */
      boa.types.Ast.Type getTypeArguments(int index);
      /**
       * <code>repeated .boa.types.Type type_arguments = 2;</code>
       *
       * <pre>
       ** The type arguments of the method reference 
       * </pre>
       */
      int getTypeArgumentsCount();
      /**
       * <code>repeated .boa.types.Type type_arguments = 2;</code>
       *
       * <pre>
       ** The type arguments of the method reference 
       * </pre>
       */
      java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
          getTypeArgumentsOrBuilderList();
      /**
       * <code>repeated .boa.types.Type type_arguments = 2;</code>
       *
       * <pre>
       ** The type arguments of the method reference 
       * </pre>
       */
      boa.types.Ast.TypeOrBuilder getTypeArgumentsOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code boa.types.Expression.MethodReference}
     *
     * <pre>
     ** A method reference 
     * </pre>
     */
    public static final class MethodReference extends
        com.google.protobuf.GeneratedMessage
        implements MethodReferenceOrBuilder {
      // Use MethodReference.newBuilder() to construct.
      private MethodReference(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private MethodReference(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final MethodReference defaultInstance;
      public static MethodReference getDefaultInstance() {
        return defaultInstance;
      }

      public MethodReference getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private MethodReference(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  typeArguments_ = new java.util.ArrayList<boa.types.Ast.Type>();
                  mutable_bitField0_ |= 0x00000002;
                }
                typeArguments_.add(input.readMessage(boa.types.Ast.Type.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            typeArguments_ = java.util.Collections.unmodifiableList(typeArguments_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Expression_MethodReference_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Expression_MethodReference_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Expression.MethodReference.class, boa.types.Ast.Expression.MethodReference.Builder.class);
      }

      public static com.google.protobuf.Parser<MethodReference> PARSER =
          new com.google.protobuf.AbstractParser<MethodReference>() {
        public MethodReference parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new MethodReference(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<MethodReference> getParserForType() {
        return PARSER;
      }

      public interface CreationReferenceOrBuilder
          extends com.google.protobuf.MessageOrBuilder {

        // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        boolean hasShadowKind();
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        boa.types.Ast.Expression.ExpressionKind getShadowKind();

        // repeated .boa.types.Type type_arguments = 2;
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        java.util.List<boa.types.Ast.Type> 
            getTypeArgumentsList();
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        boa.types.Ast.Type getTypeArguments(int index);
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        int getTypeArgumentsCount();
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
            getTypeArgumentsOrBuilderList();
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        boa.types.Ast.TypeOrBuilder getTypeArgumentsOrBuilder(
            int index);

        // required .boa.types.Type new_type = 3;
        /**
         * <code>required .boa.types.Type new_type = 3;</code>
         *
         * <pre>
         ** The type referenced 
         * </pre>
         */
        boolean hasNewType();
        /**
         * <code>required .boa.types.Type new_type = 3;</code>
         *
         * <pre>
         ** The type referenced 
         * </pre>
         */
        boa.types.Ast.Type getNewType();
        /**
         * <code>required .boa.types.Type new_type = 3;</code>
         *
         * <pre>
         ** The type referenced 
         * </pre>
         */
        boa.types.Ast.TypeOrBuilder getNewTypeOrBuilder();
      }
      /**
       * Protobuf type {@code boa.types.Expression.MethodReference.CreationReference}
       *
       * <pre>
       ** A creation method reference 
       * </pre>
       */
      public static final class CreationReference extends
          com.google.protobuf.GeneratedMessage
          implements CreationReferenceOrBuilder {
        // Use CreationReference.newBuilder() to construct.
        private CreationReference(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private CreationReference(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final CreationReference defaultInstance;
        public static CreationReference getDefaultInstance() {
          return defaultInstance;
        }

        public CreationReference getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private CreationReference(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    shadowKind_ = value;
                  }
                  break;
                }
                case 18: {
                  if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    typeArguments_ = new java.util.ArrayList<boa.types.Ast.Type>();
                    mutable_bitField0_ |= 0x00000002;
                  }
                  typeArguments_.add(input.readMessage(boa.types.Ast.Type.PARSER, extensionRegistry));
                  break;
                }
                case 26: {
                  boa.types.Ast.Type.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    subBuilder = newType_.toBuilder();
                  }
                  newType_ = input.readMessage(boa.types.Ast.Type.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(newType_);
                    newType_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000002;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              typeArguments_ = java.util.Collections.unmodifiableList(typeArguments_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Expression_MethodReference_CreationReference_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Expression_MethodReference_CreationReference_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Expression.MethodReference.CreationReference.class, boa.types.Ast.Expression.MethodReference.CreationReference.Builder.class);
        }

        public static com.google.protobuf.Parser<CreationReference> PARSER =
            new com.google.protobuf.AbstractParser<CreationReference>() {
          public CreationReference parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new CreationReference(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<CreationReference> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];
        public static final int SHADOW_KIND_FIELD_NUMBER = 1;
        private boa.types.Ast.Expression.ExpressionKind shadowKind_;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
          return shadowKind_;
        }

        // repeated .boa.types.Type type_arguments = 2;
        public static final int TYPE_ARGUMENTS_FIELD_NUMBER = 2;
        private java.util.List<boa.types.Ast.Type> typeArguments_;
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public java.util.List<boa.types.Ast.Type> getTypeArgumentsList() {
          return typeArguments_;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
            getTypeArgumentsOrBuilderList() {
          return typeArguments_;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public int getTypeArgumentsCount() {
          return typeArguments_.size();
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public boa.types.Ast.Type getTypeArguments(int index) {
          return typeArguments_.get(index);
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public boa.types.Ast.TypeOrBuilder getTypeArgumentsOrBuilder(
            int index) {
          return typeArguments_.get(index);
        }

        // required .boa.types.Type new_type = 3;
        public static final int NEW_TYPE_FIELD_NUMBER = 3;
        private boa.types.Ast.Type newType_;
        /**
         * <code>required .boa.types.Type new_type = 3;</code>
         *
         * <pre>
         ** The type referenced 
         * </pre>
         */
        public boolean hasNewType() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required .boa.types.Type new_type = 3;</code>
         *
         * <pre>
         ** The type referenced 
         * </pre>
         */
        public boa.types.Ast.Type getNewType() {
          return newType_;
        }
        /**
         * <code>required .boa.types.Type new_type = 3;</code>
         *
         * <pre>
         ** The type referenced 
         * </pre>
         */
        public boa.types.Ast.TypeOrBuilder getNewTypeOrBuilder() {
          return newType_;
        }

        private void initFields() {
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.METHOD_REFERENCE;
          typeArguments_ = java.util.Collections.emptyList();
          newType_ = boa.types.Ast.Type.getDefaultInstance();
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;

          if (!hasNewType()) {
            memoizedIsInitialized = 0;
            return false;
          }
          for (int i = 0; i < getTypeArgumentsCount(); i++) {
            if (!getTypeArguments(i).isInitialized()) {
              memoizedIsInitialized = 0;
              return false;
            }
          }
          if (!getNewType().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeEnum(1, shadowKind_.getNumber());
          }
          for (int i = 0; i < typeArguments_.size(); i++) {
            output.writeMessage(2, typeArguments_.get(i));
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeMessage(3, newType_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(1, shadowKind_.getNumber());
          }
          for (int i = 0; i < typeArguments_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(2, typeArguments_.get(i));
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(3, newType_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static boa.types.Ast.Expression.MethodReference.CreationReference parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static boa.types.Ast.Expression.MethodReference.CreationReference parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static boa.types.Ast.Expression.MethodReference.CreationReference parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static boa.types.Ast.Expression.MethodReference.CreationReference parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static boa.types.Ast.Expression.MethodReference.CreationReference parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static boa.types.Ast.Expression.MethodReference.CreationReference parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static boa.types.Ast.Expression.MethodReference.CreationReference parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static boa.types.Ast.Expression.MethodReference.CreationReference parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static boa.types.Ast.Expression.MethodReference.CreationReference parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static boa.types.Ast.Expression.MethodReference.CreationReference parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(boa.types.Ast.Expression.MethodReference.CreationReference prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code boa.types.Expression.MethodReference.CreationReference}
         *
         * <pre>
         ** A creation method reference 
         * </pre>
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder>
           implements boa.types.Ast.Expression.MethodReference.CreationReferenceOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return boa.types.Ast.internal_static_boa_types_Expression_MethodReference_CreationReference_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return boa.types.Ast.internal_static_boa_types_Expression_MethodReference_CreationReference_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    boa.types.Ast.Expression.MethodReference.CreationReference.class, boa.types.Ast.Expression.MethodReference.CreationReference.Builder.class);
          }

          // Construct using boa.types.Ast.Expression.MethodReference.CreationReference.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
              getTypeArgumentsFieldBuilder();
              getNewTypeFieldBuilder();
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            shadowKind_ = boa.types.Ast.Expression.ExpressionKind.METHOD_REFERENCE;
            bitField0_ = (bitField0_ & ~0x00000001);
            if (typeArgumentsBuilder_ == null) {
              typeArguments_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              typeArgumentsBuilder_.clear();
            }
            if (newTypeBuilder_ == null) {
              newType_ = boa.types.Ast.Type.getDefaultInstance();
            } else {
              newTypeBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000004);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return boa.types.Ast.internal_static_boa_types_Expression_MethodReference_CreationReference_descriptor;
          }

          public boa.types.Ast.Expression.MethodReference.CreationReference getDefaultInstanceForType() {
            return boa.types.Ast.Expression.MethodReference.CreationReference.getDefaultInstance();
          }

          public boa.types.Ast.Expression.MethodReference.CreationReference build() {
            boa.types.Ast.Expression.MethodReference.CreationReference result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public boa.types.Ast.Expression.MethodReference.CreationReference buildPartial() {
            boa.types.Ast.Expression.MethodReference.CreationReference result = new boa.types.Ast.Expression.MethodReference.CreationReference(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.shadowKind_ = shadowKind_;
            if (typeArgumentsBuilder_ == null) {
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                typeArguments_ = java.util.Collections.unmodifiableList(typeArguments_);
                bitField0_ = (bitField0_ & ~0x00000002);
              }
              result.typeArguments_ = typeArguments_;
            } else {
              result.typeArguments_ = typeArgumentsBuilder_.build();
            }
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000002;
            }
            if (newTypeBuilder_ == null) {
              result.newType_ = newType_;
            } else {
              result.newType_ = newTypeBuilder_.build();
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof boa.types.Ast.Expression.MethodReference.CreationReference) {
              return mergeFrom((boa.types.Ast.Expression.MethodReference.CreationReference)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(boa.types.Ast.Expression.MethodReference.CreationReference other) {
            if (other == boa.types.Ast.Expression.MethodReference.CreationReference.getDefaultInstance()) return this;
            if (other.hasShadowKind()) {
              setShadowKind(other.getShadowKind());
            }
            if (typeArgumentsBuilder_ == null) {
              if (!other.typeArguments_.isEmpty()) {
                if (typeArguments_.isEmpty()) {
                  typeArguments_ = other.typeArguments_;
                  bitField0_ = (bitField0_ & ~0x00000002);
                } else {
                  ensureTypeArgumentsIsMutable();
                  typeArguments_.addAll(other.typeArguments_);
                }
                onChanged();
              }
            } else {
              if (!other.typeArguments_.isEmpty()) {
                if (typeArgumentsBuilder_.isEmpty()) {
                  typeArgumentsBuilder_.dispose();
                  typeArgumentsBuilder_ = null;
                  typeArguments_ = other.typeArguments_;
                  bitField0_ = (bitField0_ & ~0x00000002);
                  typeArgumentsBuilder_ = 
                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                       getTypeArgumentsFieldBuilder() : null;
                } else {
                  typeArgumentsBuilder_.addAllMessages(other.typeArguments_);
                }
              }
            }
            if (other.hasNewType()) {
              mergeNewType(other.getNewType());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            if (!hasNewType()) {
              
              return false;
            }
            for (int i = 0; i < getTypeArgumentsCount(); i++) {
              if (!getTypeArguments(i).isInitialized()) {
                
                return false;
              }
            }
            if (!getNewType().isInitialized()) {
              
              return false;
            }
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            boa.types.Ast.Expression.MethodReference.CreationReference parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (boa.types.Ast.Expression.MethodReference.CreationReference) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];
          private boa.types.Ast.Expression.ExpressionKind shadowKind_ = boa.types.Ast.Expression.ExpressionKind.METHOD_REFERENCE;
          /**
           * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
           *
           * <pre>
           ** @exclude 
           * </pre>
           */
          public boolean hasShadowKind() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
           *
           * <pre>
           ** @exclude 
           * </pre>
           */
          public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
            return shadowKind_;
          }
          /**
           * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
           *
           * <pre>
           ** @exclude 
           * </pre>
           */
          public Builder setShadowKind(boa.types.Ast.Expression.ExpressionKind value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField0_ |= 0x00000001;
            shadowKind_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
           *
           * <pre>
           ** @exclude 
           * </pre>
           */
          public Builder clearShadowKind() {
            bitField0_ = (bitField0_ & ~0x00000001);
            shadowKind_ = boa.types.Ast.Expression.ExpressionKind.METHOD_REFERENCE;
            onChanged();
            return this;
          }

          // repeated .boa.types.Type type_arguments = 2;
          private java.util.List<boa.types.Ast.Type> typeArguments_ =
            java.util.Collections.emptyList();
          private void ensureTypeArgumentsIsMutable() {
            if (!((bitField0_ & 0x00000002) == 0x00000002)) {
              typeArguments_ = new java.util.ArrayList<boa.types.Ast.Type>(typeArguments_);
              bitField0_ |= 0x00000002;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> typeArgumentsBuilder_;

          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public java.util.List<boa.types.Ast.Type> getTypeArgumentsList() {
            if (typeArgumentsBuilder_ == null) {
              return java.util.Collections.unmodifiableList(typeArguments_);
            } else {
              return typeArgumentsBuilder_.getMessageList();
            }
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public int getTypeArgumentsCount() {
            if (typeArgumentsBuilder_ == null) {
              return typeArguments_.size();
            } else {
              return typeArgumentsBuilder_.getCount();
            }
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public boa.types.Ast.Type getTypeArguments(int index) {
            if (typeArgumentsBuilder_ == null) {
              return typeArguments_.get(index);
            } else {
              return typeArgumentsBuilder_.getMessage(index);
            }
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder setTypeArguments(
              int index, boa.types.Ast.Type value) {
            if (typeArgumentsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureTypeArgumentsIsMutable();
              typeArguments_.set(index, value);
              onChanged();
            } else {
              typeArgumentsBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder setTypeArguments(
              int index, boa.types.Ast.Type.Builder builderForValue) {
            if (typeArgumentsBuilder_ == null) {
              ensureTypeArgumentsIsMutable();
              typeArguments_.set(index, builderForValue.build());
              onChanged();
            } else {
              typeArgumentsBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder addTypeArguments(boa.types.Ast.Type value) {
            if (typeArgumentsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureTypeArgumentsIsMutable();
              typeArguments_.add(value);
              onChanged();
            } else {
              typeArgumentsBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder addTypeArguments(
              int index, boa.types.Ast.Type value) {
            if (typeArgumentsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureTypeArgumentsIsMutable();
              typeArguments_.add(index, value);
              onChanged();
            } else {
              typeArgumentsBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder addTypeArguments(
              boa.types.Ast.Type.Builder builderForValue) {
            if (typeArgumentsBuilder_ == null) {
              ensureTypeArgumentsIsMutable();
              typeArguments_.add(builderForValue.build());
              onChanged();
            } else {
              typeArgumentsBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder addTypeArguments(
              int index, boa.types.Ast.Type.Builder builderForValue) {
            if (typeArgumentsBuilder_ == null) {
              ensureTypeArgumentsIsMutable();
              typeArguments_.add(index, builderForValue.build());
              onChanged();
            } else {
              typeArgumentsBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder addAllTypeArguments(
              java.lang.Iterable<? extends boa.types.Ast.Type> values) {
            if (typeArgumentsBuilder_ == null) {
              ensureTypeArgumentsIsMutable();
              super.addAll(values, typeArguments_);
              onChanged();
            } else {
              typeArgumentsBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder clearTypeArguments() {
            if (typeArgumentsBuilder_ == null) {
              typeArguments_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000002);
              onChanged();
            } else {
              typeArgumentsBuilder_.clear();
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder removeTypeArguments(int index) {
            if (typeArgumentsBuilder_ == null) {
              ensureTypeArgumentsIsMutable();
              typeArguments_.remove(index);
              onChanged();
            } else {
              typeArgumentsBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public boa.types.Ast.Type.Builder getTypeArgumentsBuilder(
              int index) {
            return getTypeArgumentsFieldBuilder().getBuilder(index);
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public boa.types.Ast.TypeOrBuilder getTypeArgumentsOrBuilder(
              int index) {
            if (typeArgumentsBuilder_ == null) {
              return typeArguments_.get(index);  } else {
              return typeArgumentsBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
               getTypeArgumentsOrBuilderList() {
            if (typeArgumentsBuilder_ != null) {
              return typeArgumentsBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(typeArguments_);
            }
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public boa.types.Ast.Type.Builder addTypeArgumentsBuilder() {
            return getTypeArgumentsFieldBuilder().addBuilder(
                boa.types.Ast.Type.getDefaultInstance());
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public boa.types.Ast.Type.Builder addTypeArgumentsBuilder(
              int index) {
            return getTypeArgumentsFieldBuilder().addBuilder(
                index, boa.types.Ast.Type.getDefaultInstance());
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public java.util.List<boa.types.Ast.Type.Builder> 
               getTypeArgumentsBuilderList() {
            return getTypeArgumentsFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> 
              getTypeArgumentsFieldBuilder() {
            if (typeArgumentsBuilder_ == null) {
              typeArgumentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                  boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder>(
                      typeArguments_,
                      ((bitField0_ & 0x00000002) == 0x00000002),
                      getParentForChildren(),
                      isClean());
              typeArguments_ = null;
            }
            return typeArgumentsBuilder_;
          }

          // required .boa.types.Type new_type = 3;
          private boa.types.Ast.Type newType_ = boa.types.Ast.Type.getDefaultInstance();
          private com.google.protobuf.SingleFieldBuilder<
              boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> newTypeBuilder_;
          /**
           * <code>required .boa.types.Type new_type = 3;</code>
           *
           * <pre>
           ** The type referenced 
           * </pre>
           */
          public boolean hasNewType() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>required .boa.types.Type new_type = 3;</code>
           *
           * <pre>
           ** The type referenced 
           * </pre>
           */
          public boa.types.Ast.Type getNewType() {
            if (newTypeBuilder_ == null) {
              return newType_;
            } else {
              return newTypeBuilder_.getMessage();
            }
          }
          /**
           * <code>required .boa.types.Type new_type = 3;</code>
           *
           * <pre>
           ** The type referenced 
           * </pre>
           */
          public Builder setNewType(boa.types.Ast.Type value) {
            if (newTypeBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              newType_ = value;
              onChanged();
            } else {
              newTypeBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000004;
            return this;
          }
          /**
           * <code>required .boa.types.Type new_type = 3;</code>
           *
           * <pre>
           ** The type referenced 
           * </pre>
           */
          public Builder setNewType(
              boa.types.Ast.Type.Builder builderForValue) {
            if (newTypeBuilder_ == null) {
              newType_ = builderForValue.build();
              onChanged();
            } else {
              newTypeBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000004;
            return this;
          }
          /**
           * <code>required .boa.types.Type new_type = 3;</code>
           *
           * <pre>
           ** The type referenced 
           * </pre>
           */
          public Builder mergeNewType(boa.types.Ast.Type value) {
            if (newTypeBuilder_ == null) {
              if (((bitField0_ & 0x00000004) == 0x00000004) &&
                  newType_ != boa.types.Ast.Type.getDefaultInstance()) {
                newType_ =
                  boa.types.Ast.Type.newBuilder(newType_).mergeFrom(value).buildPartial();
              } else {
                newType_ = value;
              }
              onChanged();
            } else {
              newTypeBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00000004;
            return this;
          }
          /**
           * <code>required .boa.types.Type new_type = 3;</code>
           *
           * <pre>
           ** The type referenced 
           * </pre>
           */
          public Builder clearNewType() {
            if (newTypeBuilder_ == null) {
              newType_ = boa.types.Ast.Type.getDefaultInstance();
              onChanged();
            } else {
              newTypeBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000004);
            return this;
          }
          /**
           * <code>required .boa.types.Type new_type = 3;</code>
           *
           * <pre>
           ** The type referenced 
           * </pre>
           */
          public boa.types.Ast.Type.Builder getNewTypeBuilder() {
            bitField0_ |= 0x00000004;
            onChanged();
            return getNewTypeFieldBuilder().getBuilder();
          }
          /**
           * <code>required .boa.types.Type new_type = 3;</code>
           *
           * <pre>
           ** The type referenced 
           * </pre>
           */
          public boa.types.Ast.TypeOrBuilder getNewTypeOrBuilder() {
            if (newTypeBuilder_ != null) {
              return newTypeBuilder_.getMessageOrBuilder();
            } else {
              return newType_;
            }
          }
          /**
           * <code>required .boa.types.Type new_type = 3;</code>
           *
           * <pre>
           ** The type referenced 
           * </pre>
           */
          private com.google.protobuf.SingleFieldBuilder<
              boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> 
              getNewTypeFieldBuilder() {
            if (newTypeBuilder_ == null) {
              newTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                  boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder>(
                      newType_,
                      getParentForChildren(),
                      isClean());
              newType_ = null;
            }
            return newTypeBuilder_;
          }

          // @@protoc_insertion_point(builder_scope:boa.types.Expression.MethodReference.CreationReference)
        }

        static {
          defaultInstance = new CreationReference(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:boa.types.Expression.MethodReference.CreationReference)
      }

      public interface ExpressionMethodReferenceOrBuilder
          extends com.google.protobuf.MessageOrBuilder {

        // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        boolean hasShadowKind();
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        boa.types.Ast.Expression.ExpressionKind getShadowKind();

        // repeated .boa.types.Type type_arguments = 2;
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        java.util.List<boa.types.Ast.Type> 
            getTypeArgumentsList();
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        boa.types.Ast.Type getTypeArguments(int index);
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        int getTypeArgumentsCount();
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
            getTypeArgumentsOrBuilderList();
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        boa.types.Ast.TypeOrBuilder getTypeArgumentsOrBuilder(
            int index);

        // required .boa.types.Expression expression = 3;
        /**
         * <code>required .boa.types.Expression expression = 3;</code>
         *
         * <pre>
         ** The expression 
         * </pre>
         */
        boolean hasExpression();
        /**
         * <code>required .boa.types.Expression expression = 3;</code>
         *
         * <pre>
         ** The expression 
         * </pre>
         */
        boa.types.Ast.Expression getExpression();
        /**
         * <code>required .boa.types.Expression expression = 3;</code>
         *
         * <pre>
         ** The expression 
         * </pre>
         */
        boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder();

        // required string name = 4;
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         ** The method name 
         * </pre>
         */
        boolean hasName();
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         ** The method name 
         * </pre>
         */
        java.lang.String getName();
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         ** The method name 
         * </pre>
         */
        com.google.protobuf.ByteString
            getNameBytes();
      }
      /**
       * Protobuf type {@code boa.types.Expression.MethodReference.ExpressionMethodReference}
       *
       * <pre>
       ** An expression method reference 
       * </pre>
       */
      public static final class ExpressionMethodReference extends
          com.google.protobuf.GeneratedMessage
          implements ExpressionMethodReferenceOrBuilder {
        // Use ExpressionMethodReference.newBuilder() to construct.
        private ExpressionMethodReference(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private ExpressionMethodReference(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final ExpressionMethodReference defaultInstance;
        public static ExpressionMethodReference getDefaultInstance() {
          return defaultInstance;
        }

        public ExpressionMethodReference getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private ExpressionMethodReference(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    shadowKind_ = value;
                  }
                  break;
                }
                case 18: {
                  if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    typeArguments_ = new java.util.ArrayList<boa.types.Ast.Type>();
                    mutable_bitField0_ |= 0x00000002;
                  }
                  typeArguments_.add(input.readMessage(boa.types.Ast.Type.PARSER, extensionRegistry));
                  break;
                }
                case 26: {
                  boa.types.Ast.Expression.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    subBuilder = expression_.toBuilder();
                  }
                  expression_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(expression_);
                    expression_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000002;
                  break;
                }
                case 34: {
                  bitField0_ |= 0x00000004;
                  name_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              typeArguments_ = java.util.Collections.unmodifiableList(typeArguments_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Expression_MethodReference_ExpressionMethodReference_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Expression_MethodReference_ExpressionMethodReference_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Expression.MethodReference.ExpressionMethodReference.class, boa.types.Ast.Expression.MethodReference.ExpressionMethodReference.Builder.class);
        }

        public static com.google.protobuf.Parser<ExpressionMethodReference> PARSER =
            new com.google.protobuf.AbstractParser<ExpressionMethodReference>() {
          public ExpressionMethodReference parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new ExpressionMethodReference(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<ExpressionMethodReference> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];
        public static final int SHADOW_KIND_FIELD_NUMBER = 1;
        private boa.types.Ast.Expression.ExpressionKind shadowKind_;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
          return shadowKind_;
        }

        // repeated .boa.types.Type type_arguments = 2;
        public static final int TYPE_ARGUMENTS_FIELD_NUMBER = 2;
        private java.util.List<boa.types.Ast.Type> typeArguments_;
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public java.util.List<boa.types.Ast.Type> getTypeArgumentsList() {
          return typeArguments_;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
            getTypeArgumentsOrBuilderList() {
          return typeArguments_;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public int getTypeArgumentsCount() {
          return typeArguments_.size();
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public boa.types.Ast.Type getTypeArguments(int index) {
          return typeArguments_.get(index);
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public boa.types.Ast.TypeOrBuilder getTypeArgumentsOrBuilder(
            int index) {
          return typeArguments_.get(index);
        }

        // required .boa.types.Expression expression = 3;
        public static final int EXPRESSION_FIELD_NUMBER = 3;
        private boa.types.Ast.Expression expression_;
        /**
         * <code>required .boa.types.Expression expression = 3;</code>
         *
         * <pre>
         ** The expression 
         * </pre>
         */
        public boolean hasExpression() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required .boa.types.Expression expression = 3;</code>
         *
         * <pre>
         ** The expression 
         * </pre>
         */
        public boa.types.Ast.Expression getExpression() {
          return expression_;
        }
        /**
         * <code>required .boa.types.Expression expression = 3;</code>
         *
         * <pre>
         ** The expression 
         * </pre>
         */
        public boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder() {
          return expression_;
        }

        // required string name = 4;
        public static final int NAME_FIELD_NUMBER = 4;
        private java.lang.Object name_;
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         ** The method name 
         * </pre>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         ** The method name 
         * </pre>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          }
        }
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         ** The method name 
         * </pre>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        private void initFields() {
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.METHOD_REFERENCE;
          typeArguments_ = java.util.Collections.emptyList();
          expression_ = boa.types.Ast.Expression.getDefaultInstance();
          name_ = "";
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;

          if (!hasExpression()) {
            memoizedIsInitialized = 0;
            return false;
          }
          if (!hasName()) {
            memoizedIsInitialized = 0;
            return false;
          }
          for (int i = 0; i < getTypeArgumentsCount(); i++) {
            if (!getTypeArguments(i).isInitialized()) {
              memoizedIsInitialized = 0;
              return false;
            }
          }
          if (!getExpression().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeEnum(1, shadowKind_.getNumber());
          }
          for (int i = 0; i < typeArguments_.size(); i++) {
            output.writeMessage(2, typeArguments_.get(i));
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeMessage(3, expression_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeBytes(4, getNameBytes());
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(1, shadowKind_.getNumber());
          }
          for (int i = 0; i < typeArguments_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(2, typeArguments_.get(i));
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(3, expression_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(4, getNameBytes());
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static boa.types.Ast.Expression.MethodReference.ExpressionMethodReference parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static boa.types.Ast.Expression.MethodReference.ExpressionMethodReference parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static boa.types.Ast.Expression.MethodReference.ExpressionMethodReference parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static boa.types.Ast.Expression.MethodReference.ExpressionMethodReference parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static boa.types.Ast.Expression.MethodReference.ExpressionMethodReference parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static boa.types.Ast.Expression.MethodReference.ExpressionMethodReference parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static boa.types.Ast.Expression.MethodReference.ExpressionMethodReference parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static boa.types.Ast.Expression.MethodReference.ExpressionMethodReference parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static boa.types.Ast.Expression.MethodReference.ExpressionMethodReference parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static boa.types.Ast.Expression.MethodReference.ExpressionMethodReference parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(boa.types.Ast.Expression.MethodReference.ExpressionMethodReference prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code boa.types.Expression.MethodReference.ExpressionMethodReference}
         *
         * <pre>
         ** An expression method reference 
         * </pre>
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder>
           implements boa.types.Ast.Expression.MethodReference.ExpressionMethodReferenceOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return boa.types.Ast.internal_static_boa_types_Expression_MethodReference_ExpressionMethodReference_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return boa.types.Ast.internal_static_boa_types_Expression_MethodReference_ExpressionMethodReference_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    boa.types.Ast.Expression.MethodReference.ExpressionMethodReference.class, boa.types.Ast.Expression.MethodReference.ExpressionMethodReference.Builder.class);
          }

          // Construct using boa.types.Ast.Expression.MethodReference.ExpressionMethodReference.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
              getTypeArgumentsFieldBuilder();
              getExpressionFieldBuilder();
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            shadowKind_ = boa.types.Ast.Expression.ExpressionKind.METHOD_REFERENCE;
            bitField0_ = (bitField0_ & ~0x00000001);
            if (typeArgumentsBuilder_ == null) {
              typeArguments_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              typeArgumentsBuilder_.clear();
            }
            if (expressionBuilder_ == null) {
              expression_ = boa.types.Ast.Expression.getDefaultInstance();
            } else {
              expressionBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000004);
            name_ = "";
            bitField0_ = (bitField0_ & ~0x00000008);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return boa.types.Ast.internal_static_boa_types_Expression_MethodReference_ExpressionMethodReference_descriptor;
          }

          public boa.types.Ast.Expression.MethodReference.ExpressionMethodReference getDefaultInstanceForType() {
            return boa.types.Ast.Expression.MethodReference.ExpressionMethodReference.getDefaultInstance();
          }

          public boa.types.Ast.Expression.MethodReference.ExpressionMethodReference build() {
            boa.types.Ast.Expression.MethodReference.ExpressionMethodReference result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public boa.types.Ast.Expression.MethodReference.ExpressionMethodReference buildPartial() {
            boa.types.Ast.Expression.MethodReference.ExpressionMethodReference result = new boa.types.Ast.Expression.MethodReference.ExpressionMethodReference(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.shadowKind_ = shadowKind_;
            if (typeArgumentsBuilder_ == null) {
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                typeArguments_ = java.util.Collections.unmodifiableList(typeArguments_);
                bitField0_ = (bitField0_ & ~0x00000002);
              }
              result.typeArguments_ = typeArguments_;
            } else {
              result.typeArguments_ = typeArgumentsBuilder_.build();
            }
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000002;
            }
            if (expressionBuilder_ == null) {
              result.expression_ = expression_;
            } else {
              result.expression_ = expressionBuilder_.build();
            }
            if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
              to_bitField0_ |= 0x00000004;
            }
            result.name_ = name_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof boa.types.Ast.Expression.MethodReference.ExpressionMethodReference) {
              return mergeFrom((boa.types.Ast.Expression.MethodReference.ExpressionMethodReference)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(boa.types.Ast.Expression.MethodReference.ExpressionMethodReference other) {
            if (other == boa.types.Ast.Expression.MethodReference.ExpressionMethodReference.getDefaultInstance()) return this;
            if (other.hasShadowKind()) {
              setShadowKind(other.getShadowKind());
            }
            if (typeArgumentsBuilder_ == null) {
              if (!other.typeArguments_.isEmpty()) {
                if (typeArguments_.isEmpty()) {
                  typeArguments_ = other.typeArguments_;
                  bitField0_ = (bitField0_ & ~0x00000002);
                } else {
                  ensureTypeArgumentsIsMutable();
                  typeArguments_.addAll(other.typeArguments_);
                }
                onChanged();
              }
            } else {
              if (!other.typeArguments_.isEmpty()) {
                if (typeArgumentsBuilder_.isEmpty()) {
                  typeArgumentsBuilder_.dispose();
                  typeArgumentsBuilder_ = null;
                  typeArguments_ = other.typeArguments_;
                  bitField0_ = (bitField0_ & ~0x00000002);
                  typeArgumentsBuilder_ = 
                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                       getTypeArgumentsFieldBuilder() : null;
                } else {
                  typeArgumentsBuilder_.addAllMessages(other.typeArguments_);
                }
              }
            }
            if (other.hasExpression()) {
              mergeExpression(other.getExpression());
            }
            if (other.hasName()) {
              bitField0_ |= 0x00000008;
              name_ = other.name_;
              onChanged();
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            if (!hasExpression()) {
              
              return false;
            }
            if (!hasName()) {
              
              return false;
            }
            for (int i = 0; i < getTypeArgumentsCount(); i++) {
              if (!getTypeArguments(i).isInitialized()) {
                
                return false;
              }
            }
            if (!getExpression().isInitialized()) {
              
              return false;
            }
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            boa.types.Ast.Expression.MethodReference.ExpressionMethodReference parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (boa.types.Ast.Expression.MethodReference.ExpressionMethodReference) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];
          private boa.types.Ast.Expression.ExpressionKind shadowKind_ = boa.types.Ast.Expression.ExpressionKind.METHOD_REFERENCE;
          /**
           * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
           *
           * <pre>
           ** @exclude 
           * </pre>
           */
          public boolean hasShadowKind() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
           *
           * <pre>
           ** @exclude 
           * </pre>
           */
          public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
            return shadowKind_;
          }
          /**
           * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
           *
           * <pre>
           ** @exclude 
           * </pre>
           */
          public Builder setShadowKind(boa.types.Ast.Expression.ExpressionKind value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField0_ |= 0x00000001;
            shadowKind_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
           *
           * <pre>
           ** @exclude 
           * </pre>
           */
          public Builder clearShadowKind() {
            bitField0_ = (bitField0_ & ~0x00000001);
            shadowKind_ = boa.types.Ast.Expression.ExpressionKind.METHOD_REFERENCE;
            onChanged();
            return this;
          }

          // repeated .boa.types.Type type_arguments = 2;
          private java.util.List<boa.types.Ast.Type> typeArguments_ =
            java.util.Collections.emptyList();
          private void ensureTypeArgumentsIsMutable() {
            if (!((bitField0_ & 0x00000002) == 0x00000002)) {
              typeArguments_ = new java.util.ArrayList<boa.types.Ast.Type>(typeArguments_);
              bitField0_ |= 0x00000002;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> typeArgumentsBuilder_;

          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public java.util.List<boa.types.Ast.Type> getTypeArgumentsList() {
            if (typeArgumentsBuilder_ == null) {
              return java.util.Collections.unmodifiableList(typeArguments_);
            } else {
              return typeArgumentsBuilder_.getMessageList();
            }
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public int getTypeArgumentsCount() {
            if (typeArgumentsBuilder_ == null) {
              return typeArguments_.size();
            } else {
              return typeArgumentsBuilder_.getCount();
            }
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public boa.types.Ast.Type getTypeArguments(int index) {
            if (typeArgumentsBuilder_ == null) {
              return typeArguments_.get(index);
            } else {
              return typeArgumentsBuilder_.getMessage(index);
            }
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder setTypeArguments(
              int index, boa.types.Ast.Type value) {
            if (typeArgumentsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureTypeArgumentsIsMutable();
              typeArguments_.set(index, value);
              onChanged();
            } else {
              typeArgumentsBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder setTypeArguments(
              int index, boa.types.Ast.Type.Builder builderForValue) {
            if (typeArgumentsBuilder_ == null) {
              ensureTypeArgumentsIsMutable();
              typeArguments_.set(index, builderForValue.build());
              onChanged();
            } else {
              typeArgumentsBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder addTypeArguments(boa.types.Ast.Type value) {
            if (typeArgumentsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureTypeArgumentsIsMutable();
              typeArguments_.add(value);
              onChanged();
            } else {
              typeArgumentsBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder addTypeArguments(
              int index, boa.types.Ast.Type value) {
            if (typeArgumentsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureTypeArgumentsIsMutable();
              typeArguments_.add(index, value);
              onChanged();
            } else {
              typeArgumentsBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder addTypeArguments(
              boa.types.Ast.Type.Builder builderForValue) {
            if (typeArgumentsBuilder_ == null) {
              ensureTypeArgumentsIsMutable();
              typeArguments_.add(builderForValue.build());
              onChanged();
            } else {
              typeArgumentsBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder addTypeArguments(
              int index, boa.types.Ast.Type.Builder builderForValue) {
            if (typeArgumentsBuilder_ == null) {
              ensureTypeArgumentsIsMutable();
              typeArguments_.add(index, builderForValue.build());
              onChanged();
            } else {
              typeArgumentsBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder addAllTypeArguments(
              java.lang.Iterable<? extends boa.types.Ast.Type> values) {
            if (typeArgumentsBuilder_ == null) {
              ensureTypeArgumentsIsMutable();
              super.addAll(values, typeArguments_);
              onChanged();
            } else {
              typeArgumentsBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder clearTypeArguments() {
            if (typeArgumentsBuilder_ == null) {
              typeArguments_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000002);
              onChanged();
            } else {
              typeArgumentsBuilder_.clear();
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder removeTypeArguments(int index) {
            if (typeArgumentsBuilder_ == null) {
              ensureTypeArgumentsIsMutable();
              typeArguments_.remove(index);
              onChanged();
            } else {
              typeArgumentsBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public boa.types.Ast.Type.Builder getTypeArgumentsBuilder(
              int index) {
            return getTypeArgumentsFieldBuilder().getBuilder(index);
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public boa.types.Ast.TypeOrBuilder getTypeArgumentsOrBuilder(
              int index) {
            if (typeArgumentsBuilder_ == null) {
              return typeArguments_.get(index);  } else {
              return typeArgumentsBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
               getTypeArgumentsOrBuilderList() {
            if (typeArgumentsBuilder_ != null) {
              return typeArgumentsBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(typeArguments_);
            }
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public boa.types.Ast.Type.Builder addTypeArgumentsBuilder() {
            return getTypeArgumentsFieldBuilder().addBuilder(
                boa.types.Ast.Type.getDefaultInstance());
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public boa.types.Ast.Type.Builder addTypeArgumentsBuilder(
              int index) {
            return getTypeArgumentsFieldBuilder().addBuilder(
                index, boa.types.Ast.Type.getDefaultInstance());
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public java.util.List<boa.types.Ast.Type.Builder> 
               getTypeArgumentsBuilderList() {
            return getTypeArgumentsFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> 
              getTypeArgumentsFieldBuilder() {
            if (typeArgumentsBuilder_ == null) {
              typeArgumentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                  boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder>(
                      typeArguments_,
                      ((bitField0_ & 0x00000002) == 0x00000002),
                      getParentForChildren(),
                      isClean());
              typeArguments_ = null;
            }
            return typeArgumentsBuilder_;
          }

          // required .boa.types.Expression expression = 3;
          private boa.types.Ast.Expression expression_ = boa.types.Ast.Expression.getDefaultInstance();
          private com.google.protobuf.SingleFieldBuilder<
              boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> expressionBuilder_;
          /**
           * <code>required .boa.types.Expression expression = 3;</code>
           *
           * <pre>
           ** The expression 
           * </pre>
           */
          public boolean hasExpression() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>required .boa.types.Expression expression = 3;</code>
           *
           * <pre>
           ** The expression 
           * </pre>
           */
          public boa.types.Ast.Expression getExpression() {
            if (expressionBuilder_ == null) {
              return expression_;
            } else {
              return expressionBuilder_.getMessage();
            }
          }
          /**
           * <code>required .boa.types.Expression expression = 3;</code>
           *
           * <pre>
           ** The expression 
           * </pre>
           */
          public Builder setExpression(boa.types.Ast.Expression value) {
            if (expressionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              expression_ = value;
              onChanged();
            } else {
              expressionBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000004;
            return this;
          }
          /**
           * <code>required .boa.types.Expression expression = 3;</code>
           *
           * <pre>
           ** The expression 
           * </pre>
           */
          public Builder setExpression(
              boa.types.Ast.Expression.Builder builderForValue) {
            if (expressionBuilder_ == null) {
              expression_ = builderForValue.build();
              onChanged();
            } else {
              expressionBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000004;
            return this;
          }
          /**
           * <code>required .boa.types.Expression expression = 3;</code>
           *
           * <pre>
           ** The expression 
           * </pre>
           */
          public Builder mergeExpression(boa.types.Ast.Expression value) {
            if (expressionBuilder_ == null) {
              if (((bitField0_ & 0x00000004) == 0x00000004) &&
                  expression_ != boa.types.Ast.Expression.getDefaultInstance()) {
                expression_ =
                  boa.types.Ast.Expression.newBuilder(expression_).mergeFrom(value).buildPartial();
              } else {
                expression_ = value;
              }
              onChanged();
            } else {
              expressionBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00000004;
            return this;
          }
          /**
           * <code>required .boa.types.Expression expression = 3;</code>
           *
           * <pre>
           ** The expression 
           * </pre>
           */
          public Builder clearExpression() {
            if (expressionBuilder_ == null) {
              expression_ = boa.types.Ast.Expression.getDefaultInstance();
              onChanged();
            } else {
              expressionBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000004);
            return this;
          }
          /**
           * <code>required .boa.types.Expression expression = 3;</code>
           *
           * <pre>
           ** The expression 
           * </pre>
           */
          public boa.types.Ast.Expression.Builder getExpressionBuilder() {
            bitField0_ |= 0x00000004;
            onChanged();
            return getExpressionFieldBuilder().getBuilder();
          }
          /**
           * <code>required .boa.types.Expression expression = 3;</code>
           *
           * <pre>
           ** The expression 
           * </pre>
           */
          public boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder() {
            if (expressionBuilder_ != null) {
              return expressionBuilder_.getMessageOrBuilder();
            } else {
              return expression_;
            }
          }
          /**
           * <code>required .boa.types.Expression expression = 3;</code>
           *
           * <pre>
           ** The expression 
           * </pre>
           */
          private com.google.protobuf.SingleFieldBuilder<
              boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
              getExpressionFieldBuilder() {
            if (expressionBuilder_ == null) {
              expressionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                  boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                      expression_,
                      getParentForChildren(),
                      isClean());
              expression_ = null;
            }
            return expressionBuilder_;
          }

          // required string name = 4;
          private java.lang.Object name_ = "";
          /**
           * <code>required string name = 4;</code>
           *
           * <pre>
           ** The method name 
           * </pre>
           */
          public boolean hasName() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
          }
          /**
           * <code>required string name = 4;</code>
           *
           * <pre>
           ** The method name 
           * </pre>
           */
          public java.lang.String getName() {
            java.lang.Object ref = name_;
            if (!(ref instanceof java.lang.String)) {
              java.lang.String s = ((com.google.protobuf.ByteString) ref)
                  .toStringUtf8();
              name_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>required string name = 4;</code>
           *
           * <pre>
           ** The method name 
           * </pre>
           */
          public com.google.protobuf.ByteString
              getNameBytes() {
            java.lang.Object ref = name_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              name_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>required string name = 4;</code>
           *
           * <pre>
           ** The method name 
           * </pre>
           */
          public Builder setName(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
            name_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>required string name = 4;</code>
           *
           * <pre>
           ** The method name 
           * </pre>
           */
          public Builder clearName() {
            bitField0_ = (bitField0_ & ~0x00000008);
            name_ = getDefaultInstance().getName();
            onChanged();
            return this;
          }
          /**
           * <code>required string name = 4;</code>
           *
           * <pre>
           ** The method name 
           * </pre>
           */
          public Builder setNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
            name_ = value;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:boa.types.Expression.MethodReference.ExpressionMethodReference)
        }

        static {
          defaultInstance = new ExpressionMethodReference(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:boa.types.Expression.MethodReference.ExpressionMethodReference)
      }

      public interface SuperMethodReferenceOrBuilder
          extends com.google.protobuf.MessageOrBuilder {

        // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        boolean hasShadowKind();
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        boa.types.Ast.Expression.ExpressionKind getShadowKind();

        // repeated .boa.types.Type type_arguments = 2;
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        java.util.List<boa.types.Ast.Type> 
            getTypeArgumentsList();
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        boa.types.Ast.Type getTypeArguments(int index);
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        int getTypeArgumentsCount();
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
            getTypeArgumentsOrBuilderList();
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        boa.types.Ast.TypeOrBuilder getTypeArgumentsOrBuilder(
            int index);

        // optional string qualifier = 3;
        /**
         * <code>optional string qualifier = 3;</code>
         *
         * <pre>
         *optional VarAccessExpression qualifier      = 3 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        boolean hasQualifier();
        /**
         * <code>optional string qualifier = 3;</code>
         *
         * <pre>
         *optional VarAccessExpression qualifier      = 3 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        java.lang.String getQualifier();
        /**
         * <code>optional string qualifier = 3;</code>
         *
         * <pre>
         *optional VarAccessExpression qualifier      = 3 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        com.google.protobuf.ByteString
            getQualifierBytes();

        // required string name = 4;
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         ** The method name 
         * </pre>
         */
        boolean hasName();
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         ** The method name 
         * </pre>
         */
        java.lang.String getName();
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         ** The method name 
         * </pre>
         */
        com.google.protobuf.ByteString
            getNameBytes();
      }
      /**
       * Protobuf type {@code boa.types.Expression.MethodReference.SuperMethodReference}
       *
       * <pre>
       ** A super method reference 
       * </pre>
       */
      public static final class SuperMethodReference extends
          com.google.protobuf.GeneratedMessage
          implements SuperMethodReferenceOrBuilder {
        // Use SuperMethodReference.newBuilder() to construct.
        private SuperMethodReference(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private SuperMethodReference(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final SuperMethodReference defaultInstance;
        public static SuperMethodReference getDefaultInstance() {
          return defaultInstance;
        }

        public SuperMethodReference getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private SuperMethodReference(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    shadowKind_ = value;
                  }
                  break;
                }
                case 18: {
                  if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    typeArguments_ = new java.util.ArrayList<boa.types.Ast.Type>();
                    mutable_bitField0_ |= 0x00000002;
                  }
                  typeArguments_.add(input.readMessage(boa.types.Ast.Type.PARSER, extensionRegistry));
                  break;
                }
                case 26: {
                  bitField0_ |= 0x00000002;
                  qualifier_ = input.readBytes();
                  break;
                }
                case 34: {
                  bitField0_ |= 0x00000004;
                  name_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              typeArguments_ = java.util.Collections.unmodifiableList(typeArguments_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Expression_MethodReference_SuperMethodReference_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Expression_MethodReference_SuperMethodReference_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Expression.MethodReference.SuperMethodReference.class, boa.types.Ast.Expression.MethodReference.SuperMethodReference.Builder.class);
        }

        public static com.google.protobuf.Parser<SuperMethodReference> PARSER =
            new com.google.protobuf.AbstractParser<SuperMethodReference>() {
          public SuperMethodReference parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new SuperMethodReference(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<SuperMethodReference> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];
        public static final int SHADOW_KIND_FIELD_NUMBER = 1;
        private boa.types.Ast.Expression.ExpressionKind shadowKind_;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
          return shadowKind_;
        }

        // repeated .boa.types.Type type_arguments = 2;
        public static final int TYPE_ARGUMENTS_FIELD_NUMBER = 2;
        private java.util.List<boa.types.Ast.Type> typeArguments_;
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public java.util.List<boa.types.Ast.Type> getTypeArgumentsList() {
          return typeArguments_;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
            getTypeArgumentsOrBuilderList() {
          return typeArguments_;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public int getTypeArgumentsCount() {
          return typeArguments_.size();
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public boa.types.Ast.Type getTypeArguments(int index) {
          return typeArguments_.get(index);
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public boa.types.Ast.TypeOrBuilder getTypeArgumentsOrBuilder(
            int index) {
          return typeArguments_.get(index);
        }

        // optional string qualifier = 3;
        public static final int QUALIFIER_FIELD_NUMBER = 3;
        private java.lang.Object qualifier_;
        /**
         * <code>optional string qualifier = 3;</code>
         *
         * <pre>
         *optional VarAccessExpression qualifier      = 3 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        public boolean hasQualifier() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string qualifier = 3;</code>
         *
         * <pre>
         *optional VarAccessExpression qualifier      = 3 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        public java.lang.String getQualifier() {
          java.lang.Object ref = qualifier_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              qualifier_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string qualifier = 3;</code>
         *
         * <pre>
         *optional VarAccessExpression qualifier      = 3 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        public com.google.protobuf.ByteString
            getQualifierBytes() {
          java.lang.Object ref = qualifier_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            qualifier_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        // required string name = 4;
        public static final int NAME_FIELD_NUMBER = 4;
        private java.lang.Object name_;
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         ** The method name 
         * </pre>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         ** The method name 
         * </pre>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          }
        }
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         ** The method name 
         * </pre>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        private void initFields() {
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.METHOD_REFERENCE;
          typeArguments_ = java.util.Collections.emptyList();
          qualifier_ = "";
          name_ = "";
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;

          if (!hasName()) {
            memoizedIsInitialized = 0;
            return false;
          }
          for (int i = 0; i < getTypeArgumentsCount(); i++) {
            if (!getTypeArguments(i).isInitialized()) {
              memoizedIsInitialized = 0;
              return false;
            }
          }
          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeEnum(1, shadowKind_.getNumber());
          }
          for (int i = 0; i < typeArguments_.size(); i++) {
            output.writeMessage(2, typeArguments_.get(i));
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeBytes(3, getQualifierBytes());
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeBytes(4, getNameBytes());
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(1, shadowKind_.getNumber());
          }
          for (int i = 0; i < typeArguments_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(2, typeArguments_.get(i));
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(3, getQualifierBytes());
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(4, getNameBytes());
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static boa.types.Ast.Expression.MethodReference.SuperMethodReference parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static boa.types.Ast.Expression.MethodReference.SuperMethodReference parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static boa.types.Ast.Expression.MethodReference.SuperMethodReference parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static boa.types.Ast.Expression.MethodReference.SuperMethodReference parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static boa.types.Ast.Expression.MethodReference.SuperMethodReference parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static boa.types.Ast.Expression.MethodReference.SuperMethodReference parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static boa.types.Ast.Expression.MethodReference.SuperMethodReference parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static boa.types.Ast.Expression.MethodReference.SuperMethodReference parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static boa.types.Ast.Expression.MethodReference.SuperMethodReference parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static boa.types.Ast.Expression.MethodReference.SuperMethodReference parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(boa.types.Ast.Expression.MethodReference.SuperMethodReference prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code boa.types.Expression.MethodReference.SuperMethodReference}
         *
         * <pre>
         ** A super method reference 
         * </pre>
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder>
           implements boa.types.Ast.Expression.MethodReference.SuperMethodReferenceOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return boa.types.Ast.internal_static_boa_types_Expression_MethodReference_SuperMethodReference_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return boa.types.Ast.internal_static_boa_types_Expression_MethodReference_SuperMethodReference_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    boa.types.Ast.Expression.MethodReference.SuperMethodReference.class, boa.types.Ast.Expression.MethodReference.SuperMethodReference.Builder.class);
          }

          // Construct using boa.types.Ast.Expression.MethodReference.SuperMethodReference.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
              getTypeArgumentsFieldBuilder();
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            shadowKind_ = boa.types.Ast.Expression.ExpressionKind.METHOD_REFERENCE;
            bitField0_ = (bitField0_ & ~0x00000001);
            if (typeArgumentsBuilder_ == null) {
              typeArguments_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              typeArgumentsBuilder_.clear();
            }
            qualifier_ = "";
            bitField0_ = (bitField0_ & ~0x00000004);
            name_ = "";
            bitField0_ = (bitField0_ & ~0x00000008);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return boa.types.Ast.internal_static_boa_types_Expression_MethodReference_SuperMethodReference_descriptor;
          }

          public boa.types.Ast.Expression.MethodReference.SuperMethodReference getDefaultInstanceForType() {
            return boa.types.Ast.Expression.MethodReference.SuperMethodReference.getDefaultInstance();
          }

          public boa.types.Ast.Expression.MethodReference.SuperMethodReference build() {
            boa.types.Ast.Expression.MethodReference.SuperMethodReference result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public boa.types.Ast.Expression.MethodReference.SuperMethodReference buildPartial() {
            boa.types.Ast.Expression.MethodReference.SuperMethodReference result = new boa.types.Ast.Expression.MethodReference.SuperMethodReference(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.shadowKind_ = shadowKind_;
            if (typeArgumentsBuilder_ == null) {
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                typeArguments_ = java.util.Collections.unmodifiableList(typeArguments_);
                bitField0_ = (bitField0_ & ~0x00000002);
              }
              result.typeArguments_ = typeArguments_;
            } else {
              result.typeArguments_ = typeArgumentsBuilder_.build();
            }
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000002;
            }
            result.qualifier_ = qualifier_;
            if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
              to_bitField0_ |= 0x00000004;
            }
            result.name_ = name_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof boa.types.Ast.Expression.MethodReference.SuperMethodReference) {
              return mergeFrom((boa.types.Ast.Expression.MethodReference.SuperMethodReference)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(boa.types.Ast.Expression.MethodReference.SuperMethodReference other) {
            if (other == boa.types.Ast.Expression.MethodReference.SuperMethodReference.getDefaultInstance()) return this;
            if (other.hasShadowKind()) {
              setShadowKind(other.getShadowKind());
            }
            if (typeArgumentsBuilder_ == null) {
              if (!other.typeArguments_.isEmpty()) {
                if (typeArguments_.isEmpty()) {
                  typeArguments_ = other.typeArguments_;
                  bitField0_ = (bitField0_ & ~0x00000002);
                } else {
                  ensureTypeArgumentsIsMutable();
                  typeArguments_.addAll(other.typeArguments_);
                }
                onChanged();
              }
            } else {
              if (!other.typeArguments_.isEmpty()) {
                if (typeArgumentsBuilder_.isEmpty()) {
                  typeArgumentsBuilder_.dispose();
                  typeArgumentsBuilder_ = null;
                  typeArguments_ = other.typeArguments_;
                  bitField0_ = (bitField0_ & ~0x00000002);
                  typeArgumentsBuilder_ = 
                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                       getTypeArgumentsFieldBuilder() : null;
                } else {
                  typeArgumentsBuilder_.addAllMessages(other.typeArguments_);
                }
              }
            }
            if (other.hasQualifier()) {
              bitField0_ |= 0x00000004;
              qualifier_ = other.qualifier_;
              onChanged();
            }
            if (other.hasName()) {
              bitField0_ |= 0x00000008;
              name_ = other.name_;
              onChanged();
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            if (!hasName()) {
              
              return false;
            }
            for (int i = 0; i < getTypeArgumentsCount(); i++) {
              if (!getTypeArguments(i).isInitialized()) {
                
                return false;
              }
            }
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            boa.types.Ast.Expression.MethodReference.SuperMethodReference parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (boa.types.Ast.Expression.MethodReference.SuperMethodReference) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];
          private boa.types.Ast.Expression.ExpressionKind shadowKind_ = boa.types.Ast.Expression.ExpressionKind.METHOD_REFERENCE;
          /**
           * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
           *
           * <pre>
           ** @exclude 
           * </pre>
           */
          public boolean hasShadowKind() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
           *
           * <pre>
           ** @exclude 
           * </pre>
           */
          public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
            return shadowKind_;
          }
          /**
           * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
           *
           * <pre>
           ** @exclude 
           * </pre>
           */
          public Builder setShadowKind(boa.types.Ast.Expression.ExpressionKind value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField0_ |= 0x00000001;
            shadowKind_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
           *
           * <pre>
           ** @exclude 
           * </pre>
           */
          public Builder clearShadowKind() {
            bitField0_ = (bitField0_ & ~0x00000001);
            shadowKind_ = boa.types.Ast.Expression.ExpressionKind.METHOD_REFERENCE;
            onChanged();
            return this;
          }

          // repeated .boa.types.Type type_arguments = 2;
          private java.util.List<boa.types.Ast.Type> typeArguments_ =
            java.util.Collections.emptyList();
          private void ensureTypeArgumentsIsMutable() {
            if (!((bitField0_ & 0x00000002) == 0x00000002)) {
              typeArguments_ = new java.util.ArrayList<boa.types.Ast.Type>(typeArguments_);
              bitField0_ |= 0x00000002;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> typeArgumentsBuilder_;

          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public java.util.List<boa.types.Ast.Type> getTypeArgumentsList() {
            if (typeArgumentsBuilder_ == null) {
              return java.util.Collections.unmodifiableList(typeArguments_);
            } else {
              return typeArgumentsBuilder_.getMessageList();
            }
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public int getTypeArgumentsCount() {
            if (typeArgumentsBuilder_ == null) {
              return typeArguments_.size();
            } else {
              return typeArgumentsBuilder_.getCount();
            }
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public boa.types.Ast.Type getTypeArguments(int index) {
            if (typeArgumentsBuilder_ == null) {
              return typeArguments_.get(index);
            } else {
              return typeArgumentsBuilder_.getMessage(index);
            }
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder setTypeArguments(
              int index, boa.types.Ast.Type value) {
            if (typeArgumentsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureTypeArgumentsIsMutable();
              typeArguments_.set(index, value);
              onChanged();
            } else {
              typeArgumentsBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder setTypeArguments(
              int index, boa.types.Ast.Type.Builder builderForValue) {
            if (typeArgumentsBuilder_ == null) {
              ensureTypeArgumentsIsMutable();
              typeArguments_.set(index, builderForValue.build());
              onChanged();
            } else {
              typeArgumentsBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder addTypeArguments(boa.types.Ast.Type value) {
            if (typeArgumentsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureTypeArgumentsIsMutable();
              typeArguments_.add(value);
              onChanged();
            } else {
              typeArgumentsBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder addTypeArguments(
              int index, boa.types.Ast.Type value) {
            if (typeArgumentsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureTypeArgumentsIsMutable();
              typeArguments_.add(index, value);
              onChanged();
            } else {
              typeArgumentsBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder addTypeArguments(
              boa.types.Ast.Type.Builder builderForValue) {
            if (typeArgumentsBuilder_ == null) {
              ensureTypeArgumentsIsMutable();
              typeArguments_.add(builderForValue.build());
              onChanged();
            } else {
              typeArgumentsBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder addTypeArguments(
              int index, boa.types.Ast.Type.Builder builderForValue) {
            if (typeArgumentsBuilder_ == null) {
              ensureTypeArgumentsIsMutable();
              typeArguments_.add(index, builderForValue.build());
              onChanged();
            } else {
              typeArgumentsBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder addAllTypeArguments(
              java.lang.Iterable<? extends boa.types.Ast.Type> values) {
            if (typeArgumentsBuilder_ == null) {
              ensureTypeArgumentsIsMutable();
              super.addAll(values, typeArguments_);
              onChanged();
            } else {
              typeArgumentsBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder clearTypeArguments() {
            if (typeArgumentsBuilder_ == null) {
              typeArguments_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000002);
              onChanged();
            } else {
              typeArgumentsBuilder_.clear();
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder removeTypeArguments(int index) {
            if (typeArgumentsBuilder_ == null) {
              ensureTypeArgumentsIsMutable();
              typeArguments_.remove(index);
              onChanged();
            } else {
              typeArgumentsBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public boa.types.Ast.Type.Builder getTypeArgumentsBuilder(
              int index) {
            return getTypeArgumentsFieldBuilder().getBuilder(index);
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public boa.types.Ast.TypeOrBuilder getTypeArgumentsOrBuilder(
              int index) {
            if (typeArgumentsBuilder_ == null) {
              return typeArguments_.get(index);  } else {
              return typeArgumentsBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
               getTypeArgumentsOrBuilderList() {
            if (typeArgumentsBuilder_ != null) {
              return typeArgumentsBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(typeArguments_);
            }
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public boa.types.Ast.Type.Builder addTypeArgumentsBuilder() {
            return getTypeArgumentsFieldBuilder().addBuilder(
                boa.types.Ast.Type.getDefaultInstance());
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public boa.types.Ast.Type.Builder addTypeArgumentsBuilder(
              int index) {
            return getTypeArgumentsFieldBuilder().addBuilder(
                index, boa.types.Ast.Type.getDefaultInstance());
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public java.util.List<boa.types.Ast.Type.Builder> 
               getTypeArgumentsBuilderList() {
            return getTypeArgumentsFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> 
              getTypeArgumentsFieldBuilder() {
            if (typeArgumentsBuilder_ == null) {
              typeArgumentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                  boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder>(
                      typeArguments_,
                      ((bitField0_ & 0x00000002) == 0x00000002),
                      getParentForChildren(),
                      isClean());
              typeArguments_ = null;
            }
            return typeArgumentsBuilder_;
          }

          // optional string qualifier = 3;
          private java.lang.Object qualifier_ = "";
          /**
           * <code>optional string qualifier = 3;</code>
           *
           * <pre>
           *optional VarAccessExpression qualifier      = 3 [(boa.types.alias) = "expression_1"]; FIXME
           * </pre>
           */
          public boolean hasQualifier() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>optional string qualifier = 3;</code>
           *
           * <pre>
           *optional VarAccessExpression qualifier      = 3 [(boa.types.alias) = "expression_1"]; FIXME
           * </pre>
           */
          public java.lang.String getQualifier() {
            java.lang.Object ref = qualifier_;
            if (!(ref instanceof java.lang.String)) {
              java.lang.String s = ((com.google.protobuf.ByteString) ref)
                  .toStringUtf8();
              qualifier_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string qualifier = 3;</code>
           *
           * <pre>
           *optional VarAccessExpression qualifier      = 3 [(boa.types.alias) = "expression_1"]; FIXME
           * </pre>
           */
          public com.google.protobuf.ByteString
              getQualifierBytes() {
            java.lang.Object ref = qualifier_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              qualifier_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string qualifier = 3;</code>
           *
           * <pre>
           *optional VarAccessExpression qualifier      = 3 [(boa.types.alias) = "expression_1"]; FIXME
           * </pre>
           */
          public Builder setQualifier(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
            qualifier_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string qualifier = 3;</code>
           *
           * <pre>
           *optional VarAccessExpression qualifier      = 3 [(boa.types.alias) = "expression_1"]; FIXME
           * </pre>
           */
          public Builder clearQualifier() {
            bitField0_ = (bitField0_ & ~0x00000004);
            qualifier_ = getDefaultInstance().getQualifier();
            onChanged();
            return this;
          }
          /**
           * <code>optional string qualifier = 3;</code>
           *
           * <pre>
           *optional VarAccessExpression qualifier      = 3 [(boa.types.alias) = "expression_1"]; FIXME
           * </pre>
           */
          public Builder setQualifierBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
            qualifier_ = value;
            onChanged();
            return this;
          }

          // required string name = 4;
          private java.lang.Object name_ = "";
          /**
           * <code>required string name = 4;</code>
           *
           * <pre>
           ** The method name 
           * </pre>
           */
          public boolean hasName() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
          }
          /**
           * <code>required string name = 4;</code>
           *
           * <pre>
           ** The method name 
           * </pre>
           */
          public java.lang.String getName() {
            java.lang.Object ref = name_;
            if (!(ref instanceof java.lang.String)) {
              java.lang.String s = ((com.google.protobuf.ByteString) ref)
                  .toStringUtf8();
              name_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>required string name = 4;</code>
           *
           * <pre>
           ** The method name 
           * </pre>
           */
          public com.google.protobuf.ByteString
              getNameBytes() {
            java.lang.Object ref = name_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              name_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>required string name = 4;</code>
           *
           * <pre>
           ** The method name 
           * </pre>
           */
          public Builder setName(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
            name_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>required string name = 4;</code>
           *
           * <pre>
           ** The method name 
           * </pre>
           */
          public Builder clearName() {
            bitField0_ = (bitField0_ & ~0x00000008);
            name_ = getDefaultInstance().getName();
            onChanged();
            return this;
          }
          /**
           * <code>required string name = 4;</code>
           *
           * <pre>
           ** The method name 
           * </pre>
           */
          public Builder setNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
            name_ = value;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:boa.types.Expression.MethodReference.SuperMethodReference)
        }

        static {
          defaultInstance = new SuperMethodReference(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:boa.types.Expression.MethodReference.SuperMethodReference)
      }

      public interface TypeMethodReferenceOrBuilder
          extends com.google.protobuf.MessageOrBuilder {

        // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        boolean hasShadowKind();
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        boa.types.Ast.Expression.ExpressionKind getShadowKind();

        // repeated .boa.types.Type type_arguments = 2;
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        java.util.List<boa.types.Ast.Type> 
            getTypeArgumentsList();
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        boa.types.Ast.Type getTypeArguments(int index);
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        int getTypeArgumentsCount();
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
            getTypeArgumentsOrBuilderList();
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        boa.types.Ast.TypeOrBuilder getTypeArgumentsOrBuilder(
            int index);

        // required .boa.types.Type new_type = 3;
        /**
         * <code>required .boa.types.Type new_type = 3;</code>
         *
         * <pre>
         ** The type referenced 
         * </pre>
         */
        boolean hasNewType();
        /**
         * <code>required .boa.types.Type new_type = 3;</code>
         *
         * <pre>
         ** The type referenced 
         * </pre>
         */
        boa.types.Ast.Type getNewType();
        /**
         * <code>required .boa.types.Type new_type = 3;</code>
         *
         * <pre>
         ** The type referenced 
         * </pre>
         */
        boa.types.Ast.TypeOrBuilder getNewTypeOrBuilder();

        // required string name = 4;
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         ** The method name 
         * </pre>
         */
        boolean hasName();
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         ** The method name 
         * </pre>
         */
        java.lang.String getName();
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         ** The method name 
         * </pre>
         */
        com.google.protobuf.ByteString
            getNameBytes();
      }
      /**
       * Protobuf type {@code boa.types.Expression.MethodReference.TypeMethodReference}
       *
       * <pre>
       ** A type method reference 
       * </pre>
       */
      public static final class TypeMethodReference extends
          com.google.protobuf.GeneratedMessage
          implements TypeMethodReferenceOrBuilder {
        // Use TypeMethodReference.newBuilder() to construct.
        private TypeMethodReference(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private TypeMethodReference(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final TypeMethodReference defaultInstance;
        public static TypeMethodReference getDefaultInstance() {
          return defaultInstance;
        }

        public TypeMethodReference getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private TypeMethodReference(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    shadowKind_ = value;
                  }
                  break;
                }
                case 18: {
                  if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    typeArguments_ = new java.util.ArrayList<boa.types.Ast.Type>();
                    mutable_bitField0_ |= 0x00000002;
                  }
                  typeArguments_.add(input.readMessage(boa.types.Ast.Type.PARSER, extensionRegistry));
                  break;
                }
                case 26: {
                  boa.types.Ast.Type.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    subBuilder = newType_.toBuilder();
                  }
                  newType_ = input.readMessage(boa.types.Ast.Type.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(newType_);
                    newType_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000002;
                  break;
                }
                case 34: {
                  bitField0_ |= 0x00000004;
                  name_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              typeArguments_ = java.util.Collections.unmodifiableList(typeArguments_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Expression_MethodReference_TypeMethodReference_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Expression_MethodReference_TypeMethodReference_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Expression.MethodReference.TypeMethodReference.class, boa.types.Ast.Expression.MethodReference.TypeMethodReference.Builder.class);
        }

        public static com.google.protobuf.Parser<TypeMethodReference> PARSER =
            new com.google.protobuf.AbstractParser<TypeMethodReference>() {
          public TypeMethodReference parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new TypeMethodReference(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<TypeMethodReference> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];
        public static final int SHADOW_KIND_FIELD_NUMBER = 1;
        private boa.types.Ast.Expression.ExpressionKind shadowKind_;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
          return shadowKind_;
        }

        // repeated .boa.types.Type type_arguments = 2;
        public static final int TYPE_ARGUMENTS_FIELD_NUMBER = 2;
        private java.util.List<boa.types.Ast.Type> typeArguments_;
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public java.util.List<boa.types.Ast.Type> getTypeArgumentsList() {
          return typeArguments_;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
            getTypeArgumentsOrBuilderList() {
          return typeArguments_;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public int getTypeArgumentsCount() {
          return typeArguments_.size();
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public boa.types.Ast.Type getTypeArguments(int index) {
          return typeArguments_.get(index);
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public boa.types.Ast.TypeOrBuilder getTypeArgumentsOrBuilder(
            int index) {
          return typeArguments_.get(index);
        }

        // required .boa.types.Type new_type = 3;
        public static final int NEW_TYPE_FIELD_NUMBER = 3;
        private boa.types.Ast.Type newType_;
        /**
         * <code>required .boa.types.Type new_type = 3;</code>
         *
         * <pre>
         ** The type referenced 
         * </pre>
         */
        public boolean hasNewType() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required .boa.types.Type new_type = 3;</code>
         *
         * <pre>
         ** The type referenced 
         * </pre>
         */
        public boa.types.Ast.Type getNewType() {
          return newType_;
        }
        /**
         * <code>required .boa.types.Type new_type = 3;</code>
         *
         * <pre>
         ** The type referenced 
         * </pre>
         */
        public boa.types.Ast.TypeOrBuilder getNewTypeOrBuilder() {
          return newType_;
        }

        // required string name = 4;
        public static final int NAME_FIELD_NUMBER = 4;
        private java.lang.Object name_;
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         ** The method name 
         * </pre>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         ** The method name 
         * </pre>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          }
        }
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         ** The method name 
         * </pre>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        private void initFields() {
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.METHOD_REFERENCE;
          typeArguments_ = java.util.Collections.emptyList();
          newType_ = boa.types.Ast.Type.getDefaultInstance();
          name_ = "";
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;

          if (!hasNewType()) {
            memoizedIsInitialized = 0;
            return false;
          }
          if (!hasName()) {
            memoizedIsInitialized = 0;
            return false;
          }
          for (int i = 0; i < getTypeArgumentsCount(); i++) {
            if (!getTypeArguments(i).isInitialized()) {
              memoizedIsInitialized = 0;
              return false;
            }
          }
          if (!getNewType().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeEnum(1, shadowKind_.getNumber());
          }
          for (int i = 0; i < typeArguments_.size(); i++) {
            output.writeMessage(2, typeArguments_.get(i));
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeMessage(3, newType_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeBytes(4, getNameBytes());
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(1, shadowKind_.getNumber());
          }
          for (int i = 0; i < typeArguments_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(2, typeArguments_.get(i));
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(3, newType_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(4, getNameBytes());
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static boa.types.Ast.Expression.MethodReference.TypeMethodReference parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static boa.types.Ast.Expression.MethodReference.TypeMethodReference parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static boa.types.Ast.Expression.MethodReference.TypeMethodReference parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static boa.types.Ast.Expression.MethodReference.TypeMethodReference parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static boa.types.Ast.Expression.MethodReference.TypeMethodReference parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static boa.types.Ast.Expression.MethodReference.TypeMethodReference parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static boa.types.Ast.Expression.MethodReference.TypeMethodReference parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static boa.types.Ast.Expression.MethodReference.TypeMethodReference parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static boa.types.Ast.Expression.MethodReference.TypeMethodReference parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static boa.types.Ast.Expression.MethodReference.TypeMethodReference parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(boa.types.Ast.Expression.MethodReference.TypeMethodReference prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code boa.types.Expression.MethodReference.TypeMethodReference}
         *
         * <pre>
         ** A type method reference 
         * </pre>
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder>
           implements boa.types.Ast.Expression.MethodReference.TypeMethodReferenceOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return boa.types.Ast.internal_static_boa_types_Expression_MethodReference_TypeMethodReference_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return boa.types.Ast.internal_static_boa_types_Expression_MethodReference_TypeMethodReference_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    boa.types.Ast.Expression.MethodReference.TypeMethodReference.class, boa.types.Ast.Expression.MethodReference.TypeMethodReference.Builder.class);
          }

          // Construct using boa.types.Ast.Expression.MethodReference.TypeMethodReference.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
              getTypeArgumentsFieldBuilder();
              getNewTypeFieldBuilder();
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            shadowKind_ = boa.types.Ast.Expression.ExpressionKind.METHOD_REFERENCE;
            bitField0_ = (bitField0_ & ~0x00000001);
            if (typeArgumentsBuilder_ == null) {
              typeArguments_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              typeArgumentsBuilder_.clear();
            }
            if (newTypeBuilder_ == null) {
              newType_ = boa.types.Ast.Type.getDefaultInstance();
            } else {
              newTypeBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000004);
            name_ = "";
            bitField0_ = (bitField0_ & ~0x00000008);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return boa.types.Ast.internal_static_boa_types_Expression_MethodReference_TypeMethodReference_descriptor;
          }

          public boa.types.Ast.Expression.MethodReference.TypeMethodReference getDefaultInstanceForType() {
            return boa.types.Ast.Expression.MethodReference.TypeMethodReference.getDefaultInstance();
          }

          public boa.types.Ast.Expression.MethodReference.TypeMethodReference build() {
            boa.types.Ast.Expression.MethodReference.TypeMethodReference result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public boa.types.Ast.Expression.MethodReference.TypeMethodReference buildPartial() {
            boa.types.Ast.Expression.MethodReference.TypeMethodReference result = new boa.types.Ast.Expression.MethodReference.TypeMethodReference(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.shadowKind_ = shadowKind_;
            if (typeArgumentsBuilder_ == null) {
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                typeArguments_ = java.util.Collections.unmodifiableList(typeArguments_);
                bitField0_ = (bitField0_ & ~0x00000002);
              }
              result.typeArguments_ = typeArguments_;
            } else {
              result.typeArguments_ = typeArgumentsBuilder_.build();
            }
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000002;
            }
            if (newTypeBuilder_ == null) {
              result.newType_ = newType_;
            } else {
              result.newType_ = newTypeBuilder_.build();
            }
            if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
              to_bitField0_ |= 0x00000004;
            }
            result.name_ = name_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof boa.types.Ast.Expression.MethodReference.TypeMethodReference) {
              return mergeFrom((boa.types.Ast.Expression.MethodReference.TypeMethodReference)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(boa.types.Ast.Expression.MethodReference.TypeMethodReference other) {
            if (other == boa.types.Ast.Expression.MethodReference.TypeMethodReference.getDefaultInstance()) return this;
            if (other.hasShadowKind()) {
              setShadowKind(other.getShadowKind());
            }
            if (typeArgumentsBuilder_ == null) {
              if (!other.typeArguments_.isEmpty()) {
                if (typeArguments_.isEmpty()) {
                  typeArguments_ = other.typeArguments_;
                  bitField0_ = (bitField0_ & ~0x00000002);
                } else {
                  ensureTypeArgumentsIsMutable();
                  typeArguments_.addAll(other.typeArguments_);
                }
                onChanged();
              }
            } else {
              if (!other.typeArguments_.isEmpty()) {
                if (typeArgumentsBuilder_.isEmpty()) {
                  typeArgumentsBuilder_.dispose();
                  typeArgumentsBuilder_ = null;
                  typeArguments_ = other.typeArguments_;
                  bitField0_ = (bitField0_ & ~0x00000002);
                  typeArgumentsBuilder_ = 
                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                       getTypeArgumentsFieldBuilder() : null;
                } else {
                  typeArgumentsBuilder_.addAllMessages(other.typeArguments_);
                }
              }
            }
            if (other.hasNewType()) {
              mergeNewType(other.getNewType());
            }
            if (other.hasName()) {
              bitField0_ |= 0x00000008;
              name_ = other.name_;
              onChanged();
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            if (!hasNewType()) {
              
              return false;
            }
            if (!hasName()) {
              
              return false;
            }
            for (int i = 0; i < getTypeArgumentsCount(); i++) {
              if (!getTypeArguments(i).isInitialized()) {
                
                return false;
              }
            }
            if (!getNewType().isInitialized()) {
              
              return false;
            }
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            boa.types.Ast.Expression.MethodReference.TypeMethodReference parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (boa.types.Ast.Expression.MethodReference.TypeMethodReference) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];
          private boa.types.Ast.Expression.ExpressionKind shadowKind_ = boa.types.Ast.Expression.ExpressionKind.METHOD_REFERENCE;
          /**
           * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
           *
           * <pre>
           ** @exclude 
           * </pre>
           */
          public boolean hasShadowKind() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
           *
           * <pre>
           ** @exclude 
           * </pre>
           */
          public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
            return shadowKind_;
          }
          /**
           * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
           *
           * <pre>
           ** @exclude 
           * </pre>
           */
          public Builder setShadowKind(boa.types.Ast.Expression.ExpressionKind value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField0_ |= 0x00000001;
            shadowKind_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
           *
           * <pre>
           ** @exclude 
           * </pre>
           */
          public Builder clearShadowKind() {
            bitField0_ = (bitField0_ & ~0x00000001);
            shadowKind_ = boa.types.Ast.Expression.ExpressionKind.METHOD_REFERENCE;
            onChanged();
            return this;
          }

          // repeated .boa.types.Type type_arguments = 2;
          private java.util.List<boa.types.Ast.Type> typeArguments_ =
            java.util.Collections.emptyList();
          private void ensureTypeArgumentsIsMutable() {
            if (!((bitField0_ & 0x00000002) == 0x00000002)) {
              typeArguments_ = new java.util.ArrayList<boa.types.Ast.Type>(typeArguments_);
              bitField0_ |= 0x00000002;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> typeArgumentsBuilder_;

          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public java.util.List<boa.types.Ast.Type> getTypeArgumentsList() {
            if (typeArgumentsBuilder_ == null) {
              return java.util.Collections.unmodifiableList(typeArguments_);
            } else {
              return typeArgumentsBuilder_.getMessageList();
            }
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public int getTypeArgumentsCount() {
            if (typeArgumentsBuilder_ == null) {
              return typeArguments_.size();
            } else {
              return typeArgumentsBuilder_.getCount();
            }
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public boa.types.Ast.Type getTypeArguments(int index) {
            if (typeArgumentsBuilder_ == null) {
              return typeArguments_.get(index);
            } else {
              return typeArgumentsBuilder_.getMessage(index);
            }
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder setTypeArguments(
              int index, boa.types.Ast.Type value) {
            if (typeArgumentsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureTypeArgumentsIsMutable();
              typeArguments_.set(index, value);
              onChanged();
            } else {
              typeArgumentsBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder setTypeArguments(
              int index, boa.types.Ast.Type.Builder builderForValue) {
            if (typeArgumentsBuilder_ == null) {
              ensureTypeArgumentsIsMutable();
              typeArguments_.set(index, builderForValue.build());
              onChanged();
            } else {
              typeArgumentsBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder addTypeArguments(boa.types.Ast.Type value) {
            if (typeArgumentsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureTypeArgumentsIsMutable();
              typeArguments_.add(value);
              onChanged();
            } else {
              typeArgumentsBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder addTypeArguments(
              int index, boa.types.Ast.Type value) {
            if (typeArgumentsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureTypeArgumentsIsMutable();
              typeArguments_.add(index, value);
              onChanged();
            } else {
              typeArgumentsBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder addTypeArguments(
              boa.types.Ast.Type.Builder builderForValue) {
            if (typeArgumentsBuilder_ == null) {
              ensureTypeArgumentsIsMutable();
              typeArguments_.add(builderForValue.build());
              onChanged();
            } else {
              typeArgumentsBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder addTypeArguments(
              int index, boa.types.Ast.Type.Builder builderForValue) {
            if (typeArgumentsBuilder_ == null) {
              ensureTypeArgumentsIsMutable();
              typeArguments_.add(index, builderForValue.build());
              onChanged();
            } else {
              typeArgumentsBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder addAllTypeArguments(
              java.lang.Iterable<? extends boa.types.Ast.Type> values) {
            if (typeArgumentsBuilder_ == null) {
              ensureTypeArgumentsIsMutable();
              super.addAll(values, typeArguments_);
              onChanged();
            } else {
              typeArgumentsBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder clearTypeArguments() {
            if (typeArgumentsBuilder_ == null) {
              typeArguments_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000002);
              onChanged();
            } else {
              typeArgumentsBuilder_.clear();
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public Builder removeTypeArguments(int index) {
            if (typeArgumentsBuilder_ == null) {
              ensureTypeArgumentsIsMutable();
              typeArguments_.remove(index);
              onChanged();
            } else {
              typeArgumentsBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public boa.types.Ast.Type.Builder getTypeArgumentsBuilder(
              int index) {
            return getTypeArgumentsFieldBuilder().getBuilder(index);
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public boa.types.Ast.TypeOrBuilder getTypeArgumentsOrBuilder(
              int index) {
            if (typeArgumentsBuilder_ == null) {
              return typeArguments_.get(index);  } else {
              return typeArgumentsBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
               getTypeArgumentsOrBuilderList() {
            if (typeArgumentsBuilder_ != null) {
              return typeArgumentsBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(typeArguments_);
            }
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public boa.types.Ast.Type.Builder addTypeArgumentsBuilder() {
            return getTypeArgumentsFieldBuilder().addBuilder(
                boa.types.Ast.Type.getDefaultInstance());
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public boa.types.Ast.Type.Builder addTypeArgumentsBuilder(
              int index) {
            return getTypeArgumentsFieldBuilder().addBuilder(
                index, boa.types.Ast.Type.getDefaultInstance());
          }
          /**
           * <code>repeated .boa.types.Type type_arguments = 2;</code>
           *
           * <pre>
           ** The type arguments of the method reference 
           * </pre>
           */
          public java.util.List<boa.types.Ast.Type.Builder> 
               getTypeArgumentsBuilderList() {
            return getTypeArgumentsFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> 
              getTypeArgumentsFieldBuilder() {
            if (typeArgumentsBuilder_ == null) {
              typeArgumentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                  boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder>(
                      typeArguments_,
                      ((bitField0_ & 0x00000002) == 0x00000002),
                      getParentForChildren(),
                      isClean());
              typeArguments_ = null;
            }
            return typeArgumentsBuilder_;
          }

          // required .boa.types.Type new_type = 3;
          private boa.types.Ast.Type newType_ = boa.types.Ast.Type.getDefaultInstance();
          private com.google.protobuf.SingleFieldBuilder<
              boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> newTypeBuilder_;
          /**
           * <code>required .boa.types.Type new_type = 3;</code>
           *
           * <pre>
           ** The type referenced 
           * </pre>
           */
          public boolean hasNewType() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>required .boa.types.Type new_type = 3;</code>
           *
           * <pre>
           ** The type referenced 
           * </pre>
           */
          public boa.types.Ast.Type getNewType() {
            if (newTypeBuilder_ == null) {
              return newType_;
            } else {
              return newTypeBuilder_.getMessage();
            }
          }
          /**
           * <code>required .boa.types.Type new_type = 3;</code>
           *
           * <pre>
           ** The type referenced 
           * </pre>
           */
          public Builder setNewType(boa.types.Ast.Type value) {
            if (newTypeBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              newType_ = value;
              onChanged();
            } else {
              newTypeBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000004;
            return this;
          }
          /**
           * <code>required .boa.types.Type new_type = 3;</code>
           *
           * <pre>
           ** The type referenced 
           * </pre>
           */
          public Builder setNewType(
              boa.types.Ast.Type.Builder builderForValue) {
            if (newTypeBuilder_ == null) {
              newType_ = builderForValue.build();
              onChanged();
            } else {
              newTypeBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000004;
            return this;
          }
          /**
           * <code>required .boa.types.Type new_type = 3;</code>
           *
           * <pre>
           ** The type referenced 
           * </pre>
           */
          public Builder mergeNewType(boa.types.Ast.Type value) {
            if (newTypeBuilder_ == null) {
              if (((bitField0_ & 0x00000004) == 0x00000004) &&
                  newType_ != boa.types.Ast.Type.getDefaultInstance()) {
                newType_ =
                  boa.types.Ast.Type.newBuilder(newType_).mergeFrom(value).buildPartial();
              } else {
                newType_ = value;
              }
              onChanged();
            } else {
              newTypeBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00000004;
            return this;
          }
          /**
           * <code>required .boa.types.Type new_type = 3;</code>
           *
           * <pre>
           ** The type referenced 
           * </pre>
           */
          public Builder clearNewType() {
            if (newTypeBuilder_ == null) {
              newType_ = boa.types.Ast.Type.getDefaultInstance();
              onChanged();
            } else {
              newTypeBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000004);
            return this;
          }
          /**
           * <code>required .boa.types.Type new_type = 3;</code>
           *
           * <pre>
           ** The type referenced 
           * </pre>
           */
          public boa.types.Ast.Type.Builder getNewTypeBuilder() {
            bitField0_ |= 0x00000004;
            onChanged();
            return getNewTypeFieldBuilder().getBuilder();
          }
          /**
           * <code>required .boa.types.Type new_type = 3;</code>
           *
           * <pre>
           ** The type referenced 
           * </pre>
           */
          public boa.types.Ast.TypeOrBuilder getNewTypeOrBuilder() {
            if (newTypeBuilder_ != null) {
              return newTypeBuilder_.getMessageOrBuilder();
            } else {
              return newType_;
            }
          }
          /**
           * <code>required .boa.types.Type new_type = 3;</code>
           *
           * <pre>
           ** The type referenced 
           * </pre>
           */
          private com.google.protobuf.SingleFieldBuilder<
              boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> 
              getNewTypeFieldBuilder() {
            if (newTypeBuilder_ == null) {
              newTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                  boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder>(
                      newType_,
                      getParentForChildren(),
                      isClean());
              newType_ = null;
            }
            return newTypeBuilder_;
          }

          // required string name = 4;
          private java.lang.Object name_ = "";
          /**
           * <code>required string name = 4;</code>
           *
           * <pre>
           ** The method name 
           * </pre>
           */
          public boolean hasName() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
          }
          /**
           * <code>required string name = 4;</code>
           *
           * <pre>
           ** The method name 
           * </pre>
           */
          public java.lang.String getName() {
            java.lang.Object ref = name_;
            if (!(ref instanceof java.lang.String)) {
              java.lang.String s = ((com.google.protobuf.ByteString) ref)
                  .toStringUtf8();
              name_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>required string name = 4;</code>
           *
           * <pre>
           ** The method name 
           * </pre>
           */
          public com.google.protobuf.ByteString
              getNameBytes() {
            java.lang.Object ref = name_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              name_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>required string name = 4;</code>
           *
           * <pre>
           ** The method name 
           * </pre>
           */
          public Builder setName(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
            name_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>required string name = 4;</code>
           *
           * <pre>
           ** The method name 
           * </pre>
           */
          public Builder clearName() {
            bitField0_ = (bitField0_ & ~0x00000008);
            name_ = getDefaultInstance().getName();
            onChanged();
            return this;
          }
          /**
           * <code>required string name = 4;</code>
           *
           * <pre>
           ** The method name 
           * </pre>
           */
          public Builder setNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
            name_ = value;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:boa.types.Expression.MethodReference.TypeMethodReference)
        }

        static {
          defaultInstance = new TypeMethodReference(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:boa.types.Expression.MethodReference.TypeMethodReference)
      }

      private int bitField0_;
      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Expression.ExpressionKind shadowKind_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
        return shadowKind_;
      }

      // repeated .boa.types.Type type_arguments = 2;
      public static final int TYPE_ARGUMENTS_FIELD_NUMBER = 2;
      private java.util.List<boa.types.Ast.Type> typeArguments_;
      /**
       * <code>repeated .boa.types.Type type_arguments = 2;</code>
       *
       * <pre>
       ** The type arguments of the method reference 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Type> getTypeArgumentsList() {
        return typeArguments_;
      }
      /**
       * <code>repeated .boa.types.Type type_arguments = 2;</code>
       *
       * <pre>
       ** The type arguments of the method reference 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
          getTypeArgumentsOrBuilderList() {
        return typeArguments_;
      }
      /**
       * <code>repeated .boa.types.Type type_arguments = 2;</code>
       *
       * <pre>
       ** The type arguments of the method reference 
       * </pre>
       */
      public int getTypeArgumentsCount() {
        return typeArguments_.size();
      }
      /**
       * <code>repeated .boa.types.Type type_arguments = 2;</code>
       *
       * <pre>
       ** The type arguments of the method reference 
       * </pre>
       */
      public boa.types.Ast.Type getTypeArguments(int index) {
        return typeArguments_.get(index);
      }
      /**
       * <code>repeated .boa.types.Type type_arguments = 2;</code>
       *
       * <pre>
       ** The type arguments of the method reference 
       * </pre>
       */
      public boa.types.Ast.TypeOrBuilder getTypeArgumentsOrBuilder(
          int index) {
        return typeArguments_.get(index);
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Expression.ExpressionKind.METHOD_REFERENCE;
        typeArguments_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        for (int i = 0; i < getTypeArgumentsCount(); i++) {
          if (!getTypeArguments(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        for (int i = 0; i < typeArguments_.size(); i++) {
          output.writeMessage(2, typeArguments_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        for (int i = 0; i < typeArguments_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, typeArguments_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Expression.MethodReference parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.MethodReference parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.MethodReference parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.MethodReference parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.MethodReference parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.MethodReference parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.MethodReference parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Expression.MethodReference parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.MethodReference parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.MethodReference parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Expression.MethodReference prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Expression.MethodReference}
       *
       * <pre>
       ** A method reference 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Expression.MethodReferenceOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Expression_MethodReference_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Expression_MethodReference_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Expression.MethodReference.class, boa.types.Ast.Expression.MethodReference.Builder.class);
        }

        // Construct using boa.types.Ast.Expression.MethodReference.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getTypeArgumentsFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.METHOD_REFERENCE;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (typeArgumentsBuilder_ == null) {
            typeArguments_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            typeArgumentsBuilder_.clear();
          }
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Expression_MethodReference_descriptor;
        }

        public boa.types.Ast.Expression.MethodReference getDefaultInstanceForType() {
          return boa.types.Ast.Expression.MethodReference.getDefaultInstance();
        }

        public boa.types.Ast.Expression.MethodReference build() {
          boa.types.Ast.Expression.MethodReference result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Expression.MethodReference buildPartial() {
          boa.types.Ast.Expression.MethodReference result = new boa.types.Ast.Expression.MethodReference(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (typeArgumentsBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              typeArguments_ = java.util.Collections.unmodifiableList(typeArguments_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.typeArguments_ = typeArguments_;
          } else {
            result.typeArguments_ = typeArgumentsBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Expression.MethodReference) {
            return mergeFrom((boa.types.Ast.Expression.MethodReference)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Expression.MethodReference other) {
          if (other == boa.types.Ast.Expression.MethodReference.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (typeArgumentsBuilder_ == null) {
            if (!other.typeArguments_.isEmpty()) {
              if (typeArguments_.isEmpty()) {
                typeArguments_ = other.typeArguments_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureTypeArgumentsIsMutable();
                typeArguments_.addAll(other.typeArguments_);
              }
              onChanged();
            }
          } else {
            if (!other.typeArguments_.isEmpty()) {
              if (typeArgumentsBuilder_.isEmpty()) {
                typeArgumentsBuilder_.dispose();
                typeArgumentsBuilder_ = null;
                typeArguments_ = other.typeArguments_;
                bitField0_ = (bitField0_ & ~0x00000002);
                typeArgumentsBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getTypeArgumentsFieldBuilder() : null;
              } else {
                typeArgumentsBuilder_.addAllMessages(other.typeArguments_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          for (int i = 0; i < getTypeArgumentsCount(); i++) {
            if (!getTypeArguments(i).isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Expression.MethodReference parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Expression.MethodReference) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];
        private boa.types.Ast.Expression.ExpressionKind shadowKind_ = boa.types.Ast.Expression.ExpressionKind.METHOD_REFERENCE;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHOD_REFERENCE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.METHOD_REFERENCE;
          onChanged();
          return this;
        }

        // repeated .boa.types.Type type_arguments = 2;
        private java.util.List<boa.types.Ast.Type> typeArguments_ =
          java.util.Collections.emptyList();
        private void ensureTypeArgumentsIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            typeArguments_ = new java.util.ArrayList<boa.types.Ast.Type>(typeArguments_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> typeArgumentsBuilder_;

        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public java.util.List<boa.types.Ast.Type> getTypeArgumentsList() {
          if (typeArgumentsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(typeArguments_);
          } else {
            return typeArgumentsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public int getTypeArgumentsCount() {
          if (typeArgumentsBuilder_ == null) {
            return typeArguments_.size();
          } else {
            return typeArgumentsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public boa.types.Ast.Type getTypeArguments(int index) {
          if (typeArgumentsBuilder_ == null) {
            return typeArguments_.get(index);
          } else {
            return typeArgumentsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public Builder setTypeArguments(
            int index, boa.types.Ast.Type value) {
          if (typeArgumentsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTypeArgumentsIsMutable();
            typeArguments_.set(index, value);
            onChanged();
          } else {
            typeArgumentsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public Builder setTypeArguments(
            int index, boa.types.Ast.Type.Builder builderForValue) {
          if (typeArgumentsBuilder_ == null) {
            ensureTypeArgumentsIsMutable();
            typeArguments_.set(index, builderForValue.build());
            onChanged();
          } else {
            typeArgumentsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public Builder addTypeArguments(boa.types.Ast.Type value) {
          if (typeArgumentsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTypeArgumentsIsMutable();
            typeArguments_.add(value);
            onChanged();
          } else {
            typeArgumentsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public Builder addTypeArguments(
            int index, boa.types.Ast.Type value) {
          if (typeArgumentsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTypeArgumentsIsMutable();
            typeArguments_.add(index, value);
            onChanged();
          } else {
            typeArgumentsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public Builder addTypeArguments(
            boa.types.Ast.Type.Builder builderForValue) {
          if (typeArgumentsBuilder_ == null) {
            ensureTypeArgumentsIsMutable();
            typeArguments_.add(builderForValue.build());
            onChanged();
          } else {
            typeArgumentsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public Builder addTypeArguments(
            int index, boa.types.Ast.Type.Builder builderForValue) {
          if (typeArgumentsBuilder_ == null) {
            ensureTypeArgumentsIsMutable();
            typeArguments_.add(index, builderForValue.build());
            onChanged();
          } else {
            typeArgumentsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public Builder addAllTypeArguments(
            java.lang.Iterable<? extends boa.types.Ast.Type> values) {
          if (typeArgumentsBuilder_ == null) {
            ensureTypeArgumentsIsMutable();
            super.addAll(values, typeArguments_);
            onChanged();
          } else {
            typeArgumentsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public Builder clearTypeArguments() {
          if (typeArgumentsBuilder_ == null) {
            typeArguments_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            typeArgumentsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public Builder removeTypeArguments(int index) {
          if (typeArgumentsBuilder_ == null) {
            ensureTypeArgumentsIsMutable();
            typeArguments_.remove(index);
            onChanged();
          } else {
            typeArgumentsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public boa.types.Ast.Type.Builder getTypeArgumentsBuilder(
            int index) {
          return getTypeArgumentsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public boa.types.Ast.TypeOrBuilder getTypeArgumentsOrBuilder(
            int index) {
          if (typeArgumentsBuilder_ == null) {
            return typeArguments_.get(index);  } else {
            return typeArgumentsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
             getTypeArgumentsOrBuilderList() {
          if (typeArgumentsBuilder_ != null) {
            return typeArgumentsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(typeArguments_);
          }
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public boa.types.Ast.Type.Builder addTypeArgumentsBuilder() {
          return getTypeArgumentsFieldBuilder().addBuilder(
              boa.types.Ast.Type.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public boa.types.Ast.Type.Builder addTypeArgumentsBuilder(
            int index) {
          return getTypeArgumentsFieldBuilder().addBuilder(
              index, boa.types.Ast.Type.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 2;</code>
         *
         * <pre>
         ** The type arguments of the method reference 
         * </pre>
         */
        public java.util.List<boa.types.Ast.Type.Builder> 
             getTypeArgumentsBuilderList() {
          return getTypeArgumentsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> 
            getTypeArgumentsFieldBuilder() {
          if (typeArgumentsBuilder_ == null) {
            typeArgumentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder>(
                    typeArguments_,
                    ((bitField0_ & 0x00000002) == 0x00000002),
                    getParentForChildren(),
                    isClean());
            typeArguments_ = null;
          }
          return typeArgumentsBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Expression.MethodReference)
      }

      static {
        defaultInstance = new MethodReference(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Expression.MethodReference)
    }

    public interface NullCoalesceExpressionOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NULLCOALESCE];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NULLCOALESCE];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NULLCOALESCE];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind();

      // required .boa.types.Expression lhs = 2;
      /**
       * <code>required .boa.types.Expression lhs = 2;</code>
       *
       * <pre>
       ** The left hand operand 
       * </pre>
       */
      boolean hasLhs();
      /**
       * <code>required .boa.types.Expression lhs = 2;</code>
       *
       * <pre>
       ** The left hand operand 
       * </pre>
       */
      boa.types.Ast.Expression getLhs();
      /**
       * <code>required .boa.types.Expression lhs = 2;</code>
       *
       * <pre>
       ** The left hand operand 
       * </pre>
       */
      boa.types.Ast.ExpressionOrBuilder getLhsOrBuilder();

      // required .boa.types.Expression rhs = 3;
      /**
       * <code>required .boa.types.Expression rhs = 3;</code>
       *
       * <pre>
       ** The right hand operand 
       * </pre>
       */
      boolean hasRhs();
      /**
       * <code>required .boa.types.Expression rhs = 3;</code>
       *
       * <pre>
       ** The right hand operand 
       * </pre>
       */
      boa.types.Ast.Expression getRhs();
      /**
       * <code>required .boa.types.Expression rhs = 3;</code>
       *
       * <pre>
       ** The right hand operand 
       * </pre>
       */
      boa.types.Ast.ExpressionOrBuilder getRhsOrBuilder();
    }
    /**
     * Protobuf type {@code boa.types.Expression.NullCoalesceExpression}
     *
     * <pre>
     ** A null coalescing expression 
     * </pre>
     */
    public static final class NullCoalesceExpression extends
        com.google.protobuf.GeneratedMessage
        implements NullCoalesceExpressionOrBuilder {
      // Use NullCoalesceExpression.newBuilder() to construct.
      private NullCoalesceExpression(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private NullCoalesceExpression(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final NullCoalesceExpression defaultInstance;
      public static NullCoalesceExpression getDefaultInstance() {
        return defaultInstance;
      }

      public NullCoalesceExpression getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private NullCoalesceExpression(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = lhs_.toBuilder();
                }
                lhs_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lhs_);
                  lhs_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 26: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = rhs_.toBuilder();
                }
                rhs_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(rhs_);
                  rhs_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Expression_NullCoalesceExpression_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Expression_NullCoalesceExpression_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Expression.NullCoalesceExpression.class, boa.types.Ast.Expression.NullCoalesceExpression.Builder.class);
      }

      public static com.google.protobuf.Parser<NullCoalesceExpression> PARSER =
          new com.google.protobuf.AbstractParser<NullCoalesceExpression>() {
        public NullCoalesceExpression parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new NullCoalesceExpression(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<NullCoalesceExpression> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NULLCOALESCE];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Expression.ExpressionKind shadowKind_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NULLCOALESCE];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NULLCOALESCE];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
        return shadowKind_;
      }

      // required .boa.types.Expression lhs = 2;
      public static final int LHS_FIELD_NUMBER = 2;
      private boa.types.Ast.Expression lhs_;
      /**
       * <code>required .boa.types.Expression lhs = 2;</code>
       *
       * <pre>
       ** The left hand operand 
       * </pre>
       */
      public boolean hasLhs() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .boa.types.Expression lhs = 2;</code>
       *
       * <pre>
       ** The left hand operand 
       * </pre>
       */
      public boa.types.Ast.Expression getLhs() {
        return lhs_;
      }
      /**
       * <code>required .boa.types.Expression lhs = 2;</code>
       *
       * <pre>
       ** The left hand operand 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getLhsOrBuilder() {
        return lhs_;
      }

      // required .boa.types.Expression rhs = 3;
      public static final int RHS_FIELD_NUMBER = 3;
      private boa.types.Ast.Expression rhs_;
      /**
       * <code>required .boa.types.Expression rhs = 3;</code>
       *
       * <pre>
       ** The right hand operand 
       * </pre>
       */
      public boolean hasRhs() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .boa.types.Expression rhs = 3;</code>
       *
       * <pre>
       ** The right hand operand 
       * </pre>
       */
      public boa.types.Ast.Expression getRhs() {
        return rhs_;
      }
      /**
       * <code>required .boa.types.Expression rhs = 3;</code>
       *
       * <pre>
       ** The right hand operand 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getRhsOrBuilder() {
        return rhs_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Expression.ExpressionKind.NULLCOALESCE;
        lhs_ = boa.types.Ast.Expression.getDefaultInstance();
        rhs_ = boa.types.Ast.Expression.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasLhs()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasRhs()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getLhs().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getRhs().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, lhs_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(3, rhs_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, lhs_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, rhs_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Expression.NullCoalesceExpression parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.NullCoalesceExpression parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.NullCoalesceExpression parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.NullCoalesceExpression parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.NullCoalesceExpression parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.NullCoalesceExpression parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.NullCoalesceExpression parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Expression.NullCoalesceExpression parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.NullCoalesceExpression parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.NullCoalesceExpression parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Expression.NullCoalesceExpression prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Expression.NullCoalesceExpression}
       *
       * <pre>
       ** A null coalescing expression 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Expression.NullCoalesceExpressionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Expression_NullCoalesceExpression_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Expression_NullCoalesceExpression_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Expression.NullCoalesceExpression.class, boa.types.Ast.Expression.NullCoalesceExpression.Builder.class);
        }

        // Construct using boa.types.Ast.Expression.NullCoalesceExpression.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getLhsFieldBuilder();
            getRhsFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.NULLCOALESCE;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (lhsBuilder_ == null) {
            lhs_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            lhsBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          if (rhsBuilder_ == null) {
            rhs_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            rhsBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Expression_NullCoalesceExpression_descriptor;
        }

        public boa.types.Ast.Expression.NullCoalesceExpression getDefaultInstanceForType() {
          return boa.types.Ast.Expression.NullCoalesceExpression.getDefaultInstance();
        }

        public boa.types.Ast.Expression.NullCoalesceExpression build() {
          boa.types.Ast.Expression.NullCoalesceExpression result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Expression.NullCoalesceExpression buildPartial() {
          boa.types.Ast.Expression.NullCoalesceExpression result = new boa.types.Ast.Expression.NullCoalesceExpression(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (lhsBuilder_ == null) {
            result.lhs_ = lhs_;
          } else {
            result.lhs_ = lhsBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          if (rhsBuilder_ == null) {
            result.rhs_ = rhs_;
          } else {
            result.rhs_ = rhsBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Expression.NullCoalesceExpression) {
            return mergeFrom((boa.types.Ast.Expression.NullCoalesceExpression)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Expression.NullCoalesceExpression other) {
          if (other == boa.types.Ast.Expression.NullCoalesceExpression.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasLhs()) {
            mergeLhs(other.getLhs());
          }
          if (other.hasRhs()) {
            mergeRhs(other.getRhs());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasLhs()) {
            
            return false;
          }
          if (!hasRhs()) {
            
            return false;
          }
          if (!getLhs().isInitialized()) {
            
            return false;
          }
          if (!getRhs().isInitialized()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Expression.NullCoalesceExpression parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Expression.NullCoalesceExpression) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NULLCOALESCE];
        private boa.types.Ast.Expression.ExpressionKind shadowKind_ = boa.types.Ast.Expression.ExpressionKind.NULLCOALESCE;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NULLCOALESCE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NULLCOALESCE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NULLCOALESCE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = NULLCOALESCE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.NULLCOALESCE;
          onChanged();
          return this;
        }

        // required .boa.types.Expression lhs = 2;
        private boa.types.Ast.Expression lhs_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> lhsBuilder_;
        /**
         * <code>required .boa.types.Expression lhs = 2;</code>
         *
         * <pre>
         ** The left hand operand 
         * </pre>
         */
        public boolean hasLhs() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required .boa.types.Expression lhs = 2;</code>
         *
         * <pre>
         ** The left hand operand 
         * </pre>
         */
        public boa.types.Ast.Expression getLhs() {
          if (lhsBuilder_ == null) {
            return lhs_;
          } else {
            return lhsBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Expression lhs = 2;</code>
         *
         * <pre>
         ** The left hand operand 
         * </pre>
         */
        public Builder setLhs(boa.types.Ast.Expression value) {
          if (lhsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lhs_ = value;
            onChanged();
          } else {
            lhsBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression lhs = 2;</code>
         *
         * <pre>
         ** The left hand operand 
         * </pre>
         */
        public Builder setLhs(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (lhsBuilder_ == null) {
            lhs_ = builderForValue.build();
            onChanged();
          } else {
            lhsBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression lhs = 2;</code>
         *
         * <pre>
         ** The left hand operand 
         * </pre>
         */
        public Builder mergeLhs(boa.types.Ast.Expression value) {
          if (lhsBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                lhs_ != boa.types.Ast.Expression.getDefaultInstance()) {
              lhs_ =
                boa.types.Ast.Expression.newBuilder(lhs_).mergeFrom(value).buildPartial();
            } else {
              lhs_ = value;
            }
            onChanged();
          } else {
            lhsBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression lhs = 2;</code>
         *
         * <pre>
         ** The left hand operand 
         * </pre>
         */
        public Builder clearLhs() {
          if (lhsBuilder_ == null) {
            lhs_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            lhsBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>required .boa.types.Expression lhs = 2;</code>
         *
         * <pre>
         ** The left hand operand 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder getLhsBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getLhsFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Expression lhs = 2;</code>
         *
         * <pre>
         ** The left hand operand 
         * </pre>
         */
        public boa.types.Ast.ExpressionOrBuilder getLhsOrBuilder() {
          if (lhsBuilder_ != null) {
            return lhsBuilder_.getMessageOrBuilder();
          } else {
            return lhs_;
          }
        }
        /**
         * <code>required .boa.types.Expression lhs = 2;</code>
         *
         * <pre>
         ** The left hand operand 
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getLhsFieldBuilder() {
          if (lhsBuilder_ == null) {
            lhsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    lhs_,
                    getParentForChildren(),
                    isClean());
            lhs_ = null;
          }
          return lhsBuilder_;
        }

        // required .boa.types.Expression rhs = 3;
        private boa.types.Ast.Expression rhs_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> rhsBuilder_;
        /**
         * <code>required .boa.types.Expression rhs = 3;</code>
         *
         * <pre>
         ** The right hand operand 
         * </pre>
         */
        public boolean hasRhs() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required .boa.types.Expression rhs = 3;</code>
         *
         * <pre>
         ** The right hand operand 
         * </pre>
         */
        public boa.types.Ast.Expression getRhs() {
          if (rhsBuilder_ == null) {
            return rhs_;
          } else {
            return rhsBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Expression rhs = 3;</code>
         *
         * <pre>
         ** The right hand operand 
         * </pre>
         */
        public Builder setRhs(boa.types.Ast.Expression value) {
          if (rhsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            rhs_ = value;
            onChanged();
          } else {
            rhsBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Expression rhs = 3;</code>
         *
         * <pre>
         ** The right hand operand 
         * </pre>
         */
        public Builder setRhs(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (rhsBuilder_ == null) {
            rhs_ = builderForValue.build();
            onChanged();
          } else {
            rhsBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Expression rhs = 3;</code>
         *
         * <pre>
         ** The right hand operand 
         * </pre>
         */
        public Builder mergeRhs(boa.types.Ast.Expression value) {
          if (rhsBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                rhs_ != boa.types.Ast.Expression.getDefaultInstance()) {
              rhs_ =
                boa.types.Ast.Expression.newBuilder(rhs_).mergeFrom(value).buildPartial();
            } else {
              rhs_ = value;
            }
            onChanged();
          } else {
            rhsBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Expression rhs = 3;</code>
         *
         * <pre>
         ** The right hand operand 
         * </pre>
         */
        public Builder clearRhs() {
          if (rhsBuilder_ == null) {
            rhs_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            rhsBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <code>required .boa.types.Expression rhs = 3;</code>
         *
         * <pre>
         ** The right hand operand 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder getRhsBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getRhsFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Expression rhs = 3;</code>
         *
         * <pre>
         ** The right hand operand 
         * </pre>
         */
        public boa.types.Ast.ExpressionOrBuilder getRhsOrBuilder() {
          if (rhsBuilder_ != null) {
            return rhsBuilder_.getMessageOrBuilder();
          } else {
            return rhs_;
          }
        }
        /**
         * <code>required .boa.types.Expression rhs = 3;</code>
         *
         * <pre>
         ** The right hand operand 
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getRhsFieldBuilder() {
          if (rhsBuilder_ == null) {
            rhsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    rhs_,
                    getParentForChildren(),
                    isClean());
            rhs_ = null;
          }
          return rhsBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Expression.NullCoalesceExpression)
      }

      static {
        defaultInstance = new NullCoalesceExpression(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Expression.NullCoalesceExpression)
    }

    public interface NullLiteralOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind();
    }
    /**
     * Protobuf type {@code boa.types.Expression.NullLiteral}
     *
     * <pre>
     ** A null literal 
     * </pre>
     */
    public static final class NullLiteral extends
        com.google.protobuf.GeneratedMessage
        implements NullLiteralOrBuilder {
      // Use NullLiteral.newBuilder() to construct.
      private NullLiteral(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private NullLiteral(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final NullLiteral defaultInstance;
      public static NullLiteral getDefaultInstance() {
        return defaultInstance;
      }

      public NullLiteral getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private NullLiteral(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Expression_NullLiteral_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Expression_NullLiteral_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Expression.NullLiteral.class, boa.types.Ast.Expression.NullLiteral.Builder.class);
      }

      public static com.google.protobuf.Parser<NullLiteral> PARSER =
          new com.google.protobuf.AbstractParser<NullLiteral>() {
        public NullLiteral parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new NullLiteral(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<NullLiteral> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Expression.ExpressionKind shadowKind_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
        return shadowKind_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Expression.ExpressionKind.LITERAL;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Expression.NullLiteral parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.NullLiteral parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.NullLiteral parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.NullLiteral parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.NullLiteral parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.NullLiteral parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.NullLiteral parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Expression.NullLiteral parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.NullLiteral parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.NullLiteral parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Expression.NullLiteral prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Expression.NullLiteral}
       *
       * <pre>
       ** A null literal 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Expression.NullLiteralOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Expression_NullLiteral_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Expression_NullLiteral_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Expression.NullLiteral.class, boa.types.Ast.Expression.NullLiteral.Builder.class);
        }

        // Construct using boa.types.Ast.Expression.NullLiteral.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.LITERAL;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Expression_NullLiteral_descriptor;
        }

        public boa.types.Ast.Expression.NullLiteral getDefaultInstanceForType() {
          return boa.types.Ast.Expression.NullLiteral.getDefaultInstance();
        }

        public boa.types.Ast.Expression.NullLiteral build() {
          boa.types.Ast.Expression.NullLiteral result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Expression.NullLiteral buildPartial() {
          boa.types.Ast.Expression.NullLiteral result = new boa.types.Ast.Expression.NullLiteral(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Expression.NullLiteral) {
            return mergeFrom((boa.types.Ast.Expression.NullLiteral)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Expression.NullLiteral other) {
          if (other == boa.types.Ast.Expression.NullLiteral.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Expression.NullLiteral parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Expression.NullLiteral) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];
        private boa.types.Ast.Expression.ExpressionKind shadowKind_ = boa.types.Ast.Expression.ExpressionKind.LITERAL;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.LITERAL;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Expression.NullLiteral)
      }

      static {
        defaultInstance = new NullLiteral(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Expression.NullLiteral)
    }

    public interface NumberLiteralOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind();

      // required string token = 2;
      /**
       * <code>required string token = 2;</code>
       *
       * <pre>
       ** The string token of the literal 
       * </pre>
       */
      boolean hasToken();
      /**
       * <code>required string token = 2;</code>
       *
       * <pre>
       ** The string token of the literal 
       * </pre>
       */
      java.lang.String getToken();
      /**
       * <code>required string token = 2;</code>
       *
       * <pre>
       ** The string token of the literal 
       * </pre>
       */
      com.google.protobuf.ByteString
          getTokenBytes();
    }
    /**
     * Protobuf type {@code boa.types.Expression.NumberLiteral}
     *
     * <pre>
     ** A number literal 
     * </pre>
     */
    public static final class NumberLiteral extends
        com.google.protobuf.GeneratedMessage
        implements NumberLiteralOrBuilder {
      // Use NumberLiteral.newBuilder() to construct.
      private NumberLiteral(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private NumberLiteral(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final NumberLiteral defaultInstance;
      public static NumberLiteral getDefaultInstance() {
        return defaultInstance;
      }

      public NumberLiteral getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private NumberLiteral(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                token_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Expression_NumberLiteral_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Expression_NumberLiteral_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Expression.NumberLiteral.class, boa.types.Ast.Expression.NumberLiteral.Builder.class);
      }

      public static com.google.protobuf.Parser<NumberLiteral> PARSER =
          new com.google.protobuf.AbstractParser<NumberLiteral>() {
        public NumberLiteral parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new NumberLiteral(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<NumberLiteral> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Expression.ExpressionKind shadowKind_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
        return shadowKind_;
      }

      // required string token = 2;
      public static final int TOKEN_FIELD_NUMBER = 2;
      private java.lang.Object token_;
      /**
       * <code>required string token = 2;</code>
       *
       * <pre>
       ** The string token of the literal 
       * </pre>
       */
      public boolean hasToken() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string token = 2;</code>
       *
       * <pre>
       ** The string token of the literal 
       * </pre>
       */
      public java.lang.String getToken() {
        java.lang.Object ref = token_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            token_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string token = 2;</code>
       *
       * <pre>
       ** The string token of the literal 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTokenBytes() {
        java.lang.Object ref = token_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          token_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Expression.ExpressionKind.LITERAL;
        token_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasToken()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getTokenBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getTokenBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Expression.NumberLiteral parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.NumberLiteral parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.NumberLiteral parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.NumberLiteral parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.NumberLiteral parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.NumberLiteral parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.NumberLiteral parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Expression.NumberLiteral parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.NumberLiteral parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.NumberLiteral parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Expression.NumberLiteral prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Expression.NumberLiteral}
       *
       * <pre>
       ** A number literal 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Expression.NumberLiteralOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Expression_NumberLiteral_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Expression_NumberLiteral_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Expression.NumberLiteral.class, boa.types.Ast.Expression.NumberLiteral.Builder.class);
        }

        // Construct using boa.types.Ast.Expression.NumberLiteral.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.LITERAL;
          bitField0_ = (bitField0_ & ~0x00000001);
          token_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Expression_NumberLiteral_descriptor;
        }

        public boa.types.Ast.Expression.NumberLiteral getDefaultInstanceForType() {
          return boa.types.Ast.Expression.NumberLiteral.getDefaultInstance();
        }

        public boa.types.Ast.Expression.NumberLiteral build() {
          boa.types.Ast.Expression.NumberLiteral result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Expression.NumberLiteral buildPartial() {
          boa.types.Ast.Expression.NumberLiteral result = new boa.types.Ast.Expression.NumberLiteral(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.token_ = token_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Expression.NumberLiteral) {
            return mergeFrom((boa.types.Ast.Expression.NumberLiteral)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Expression.NumberLiteral other) {
          if (other == boa.types.Ast.Expression.NumberLiteral.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasToken()) {
            bitField0_ |= 0x00000002;
            token_ = other.token_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasToken()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Expression.NumberLiteral parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Expression.NumberLiteral) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];
        private boa.types.Ast.Expression.ExpressionKind shadowKind_ = boa.types.Ast.Expression.ExpressionKind.LITERAL;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.LITERAL;
          onChanged();
          return this;
        }

        // required string token = 2;
        private java.lang.Object token_ = "";
        /**
         * <code>required string token = 2;</code>
         *
         * <pre>
         ** The string token of the literal 
         * </pre>
         */
        public boolean hasToken() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string token = 2;</code>
         *
         * <pre>
         ** The string token of the literal 
         * </pre>
         */
        public java.lang.String getToken() {
          java.lang.Object ref = token_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            token_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string token = 2;</code>
         *
         * <pre>
         ** The string token of the literal 
         * </pre>
         */
        public com.google.protobuf.ByteString
            getTokenBytes() {
          java.lang.Object ref = token_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            token_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string token = 2;</code>
         *
         * <pre>
         ** The string token of the literal 
         * </pre>
         */
        public Builder setToken(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          token_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string token = 2;</code>
         *
         * <pre>
         ** The string token of the literal 
         * </pre>
         */
        public Builder clearToken() {
          bitField0_ = (bitField0_ & ~0x00000002);
          token_ = getDefaultInstance().getToken();
          onChanged();
          return this;
        }
        /**
         * <code>required string token = 2;</code>
         *
         * <pre>
         ** The string token of the literal 
         * </pre>
         */
        public Builder setTokenBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          token_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Expression.NumberLiteral)
      }

      static {
        defaultInstance = new NumberLiteral(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Expression.NumberLiteral)
    }

    public interface ParenthesizedExpressionOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = PAREN];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = PAREN];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = PAREN];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind();

      // required .boa.types.Expression expression = 2;
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       *
       * <pre>
       ** The sub-expression 
       * </pre>
       */
      boolean hasExpression();
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       *
       * <pre>
       ** The sub-expression 
       * </pre>
       */
      boa.types.Ast.Expression getExpression();
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       *
       * <pre>
       ** The sub-expression 
       * </pre>
       */
      boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder();
    }
    /**
     * Protobuf type {@code boa.types.Expression.ParenthesizedExpression}
     *
     * <pre>
     ** A parenthesized expression 
     * </pre>
     */
    public static final class ParenthesizedExpression extends
        com.google.protobuf.GeneratedMessage
        implements ParenthesizedExpressionOrBuilder {
      // Use ParenthesizedExpression.newBuilder() to construct.
      private ParenthesizedExpression(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private ParenthesizedExpression(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final ParenthesizedExpression defaultInstance;
      public static ParenthesizedExpression getDefaultInstance() {
        return defaultInstance;
      }

      public ParenthesizedExpression getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private ParenthesizedExpression(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = expression_.toBuilder();
                }
                expression_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(expression_);
                  expression_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Expression_ParenthesizedExpression_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Expression_ParenthesizedExpression_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Expression.ParenthesizedExpression.class, boa.types.Ast.Expression.ParenthesizedExpression.Builder.class);
      }

      public static com.google.protobuf.Parser<ParenthesizedExpression> PARSER =
          new com.google.protobuf.AbstractParser<ParenthesizedExpression>() {
        public ParenthesizedExpression parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ParenthesizedExpression(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<ParenthesizedExpression> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = PAREN];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Expression.ExpressionKind shadowKind_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = PAREN];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = PAREN];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
        return shadowKind_;
      }

      // required .boa.types.Expression expression = 2;
      public static final int EXPRESSION_FIELD_NUMBER = 2;
      private boa.types.Ast.Expression expression_;
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       *
       * <pre>
       ** The sub-expression 
       * </pre>
       */
      public boolean hasExpression() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       *
       * <pre>
       ** The sub-expression 
       * </pre>
       */
      public boa.types.Ast.Expression getExpression() {
        return expression_;
      }
      /**
       * <code>required .boa.types.Expression expression = 2;</code>
       *
       * <pre>
       ** The sub-expression 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder() {
        return expression_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Expression.ExpressionKind.PAREN;
        expression_ = boa.types.Ast.Expression.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasExpression()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getExpression().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, expression_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, expression_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Expression.ParenthesizedExpression parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.ParenthesizedExpression parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.ParenthesizedExpression parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.ParenthesizedExpression parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.ParenthesizedExpression parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.ParenthesizedExpression parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.ParenthesizedExpression parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Expression.ParenthesizedExpression parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.ParenthesizedExpression parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.ParenthesizedExpression parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Expression.ParenthesizedExpression prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Expression.ParenthesizedExpression}
       *
       * <pre>
       ** A parenthesized expression 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Expression.ParenthesizedExpressionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Expression_ParenthesizedExpression_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Expression_ParenthesizedExpression_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Expression.ParenthesizedExpression.class, boa.types.Ast.Expression.ParenthesizedExpression.Builder.class);
        }

        // Construct using boa.types.Ast.Expression.ParenthesizedExpression.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getExpressionFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.PAREN;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (expressionBuilder_ == null) {
            expression_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            expressionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Expression_ParenthesizedExpression_descriptor;
        }

        public boa.types.Ast.Expression.ParenthesizedExpression getDefaultInstanceForType() {
          return boa.types.Ast.Expression.ParenthesizedExpression.getDefaultInstance();
        }

        public boa.types.Ast.Expression.ParenthesizedExpression build() {
          boa.types.Ast.Expression.ParenthesizedExpression result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Expression.ParenthesizedExpression buildPartial() {
          boa.types.Ast.Expression.ParenthesizedExpression result = new boa.types.Ast.Expression.ParenthesizedExpression(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (expressionBuilder_ == null) {
            result.expression_ = expression_;
          } else {
            result.expression_ = expressionBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Expression.ParenthesizedExpression) {
            return mergeFrom((boa.types.Ast.Expression.ParenthesizedExpression)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Expression.ParenthesizedExpression other) {
          if (other == boa.types.Ast.Expression.ParenthesizedExpression.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasExpression()) {
            mergeExpression(other.getExpression());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasExpression()) {
            
            return false;
          }
          if (!getExpression().isInitialized()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Expression.ParenthesizedExpression parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Expression.ParenthesizedExpression) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = PAREN];
        private boa.types.Ast.Expression.ExpressionKind shadowKind_ = boa.types.Ast.Expression.ExpressionKind.PAREN;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = PAREN];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = PAREN];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = PAREN];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = PAREN];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.PAREN;
          onChanged();
          return this;
        }

        // required .boa.types.Expression expression = 2;
        private boa.types.Ast.Expression expression_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> expressionBuilder_;
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The sub-expression 
         * </pre>
         */
        public boolean hasExpression() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The sub-expression 
         * </pre>
         */
        public boa.types.Ast.Expression getExpression() {
          if (expressionBuilder_ == null) {
            return expression_;
          } else {
            return expressionBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The sub-expression 
         * </pre>
         */
        public Builder setExpression(boa.types.Ast.Expression value) {
          if (expressionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            expression_ = value;
            onChanged();
          } else {
            expressionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The sub-expression 
         * </pre>
         */
        public Builder setExpression(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (expressionBuilder_ == null) {
            expression_ = builderForValue.build();
            onChanged();
          } else {
            expressionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The sub-expression 
         * </pre>
         */
        public Builder mergeExpression(boa.types.Ast.Expression value) {
          if (expressionBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                expression_ != boa.types.Ast.Expression.getDefaultInstance()) {
              expression_ =
                boa.types.Ast.Expression.newBuilder(expression_).mergeFrom(value).buildPartial();
            } else {
              expression_ = value;
            }
            onChanged();
          } else {
            expressionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The sub-expression 
         * </pre>
         */
        public Builder clearExpression() {
          if (expressionBuilder_ == null) {
            expression_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            expressionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The sub-expression 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder getExpressionBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getExpressionFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The sub-expression 
         * </pre>
         */
        public boa.types.Ast.ExpressionOrBuilder getExpressionOrBuilder() {
          if (expressionBuilder_ != null) {
            return expressionBuilder_.getMessageOrBuilder();
          } else {
            return expression_;
          }
        }
        /**
         * <code>required .boa.types.Expression expression = 2;</code>
         *
         * <pre>
         ** The sub-expression 
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getExpressionFieldBuilder() {
          if (expressionBuilder_ == null) {
            expressionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    expression_,
                    getParentForChildren(),
                    isClean());
            expression_ = null;
          }
          return expressionBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Expression.ParenthesizedExpression)
      }

      static {
        defaultInstance = new ParenthesizedExpression(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Expression.ParenthesizedExpression)
    }

    public interface PostfixExpressionOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_INC];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_INC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind1();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_INC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind1();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = OP_DEC];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = OP_DEC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind2();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = OP_DEC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind2();

      // required .boa.types.Expression operand = 3;
      /**
       * <code>required .boa.types.Expression operand = 3;</code>
       *
       * <pre>
       ** The operand 
       * </pre>
       */
      boolean hasOperand();
      /**
       * <code>required .boa.types.Expression operand = 3;</code>
       *
       * <pre>
       ** The operand 
       * </pre>
       */
      boa.types.Ast.Expression getOperand();
      /**
       * <code>required .boa.types.Expression operand = 3;</code>
       *
       * <pre>
       ** The operand 
       * </pre>
       */
      boa.types.Ast.ExpressionOrBuilder getOperandOrBuilder();

      // required .boa.types.Expression.ExpressionKind operator = 4;
      /**
       * <code>required .boa.types.Expression.ExpressionKind operator = 4;</code>
       *
       * <pre>
       ** The operator 
       * </pre>
       */
      boolean hasOperator();
      /**
       * <code>required .boa.types.Expression.ExpressionKind operator = 4;</code>
       *
       * <pre>
       ** The operator 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getOperator();
    }
    /**
     * Protobuf type {@code boa.types.Expression.PostfixExpression}
     *
     * <pre>
     ** A postfix expression 
     * </pre>
     */
    public static final class PostfixExpression extends
        com.google.protobuf.GeneratedMessage
        implements PostfixExpressionOrBuilder {
      // Use PostfixExpression.newBuilder() to construct.
      private PostfixExpression(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private PostfixExpression(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final PostfixExpression defaultInstance;
      public static PostfixExpression getDefaultInstance() {
        return defaultInstance;
      }

      public PostfixExpression getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private PostfixExpression(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind1_ = value;
                }
                break;
              }
              case 16: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(2, rawValue);
                } else {
                  bitField0_ |= 0x00000002;
                  shadowKind2_ = value;
                }
                break;
              }
              case 26: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = operand_.toBuilder();
                }
                operand_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(operand_);
                  operand_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
              case 32: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(4, rawValue);
                } else {
                  bitField0_ |= 0x00000008;
                  operator_ = value;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Expression_PostfixExpression_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Expression_PostfixExpression_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Expression.PostfixExpression.class, boa.types.Ast.Expression.PostfixExpression.Builder.class);
      }

      public static com.google.protobuf.Parser<PostfixExpression> PARSER =
          new com.google.protobuf.AbstractParser<PostfixExpression>() {
        public PostfixExpression parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PostfixExpression(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<PostfixExpression> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_INC];
      public static final int SHADOW_KIND_1_FIELD_NUMBER = 1;
      private boa.types.Ast.Expression.ExpressionKind shadowKind1_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_INC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind1() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_INC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind1() {
        return shadowKind1_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = OP_DEC];
      public static final int SHADOW_KIND_2_FIELD_NUMBER = 2;
      private boa.types.Ast.Expression.ExpressionKind shadowKind2_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = OP_DEC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind2() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = OP_DEC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind2() {
        return shadowKind2_;
      }

      // required .boa.types.Expression operand = 3;
      public static final int OPERAND_FIELD_NUMBER = 3;
      private boa.types.Ast.Expression operand_;
      /**
       * <code>required .boa.types.Expression operand = 3;</code>
       *
       * <pre>
       ** The operand 
       * </pre>
       */
      public boolean hasOperand() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .boa.types.Expression operand = 3;</code>
       *
       * <pre>
       ** The operand 
       * </pre>
       */
      public boa.types.Ast.Expression getOperand() {
        return operand_;
      }
      /**
       * <code>required .boa.types.Expression operand = 3;</code>
       *
       * <pre>
       ** The operand 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getOperandOrBuilder() {
        return operand_;
      }

      // required .boa.types.Expression.ExpressionKind operator = 4;
      public static final int OPERATOR_FIELD_NUMBER = 4;
      private boa.types.Ast.Expression.ExpressionKind operator_;
      /**
       * <code>required .boa.types.Expression.ExpressionKind operator = 4;</code>
       *
       * <pre>
       ** The operator 
       * </pre>
       */
      public boolean hasOperator() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .boa.types.Expression.ExpressionKind operator = 4;</code>
       *
       * <pre>
       ** The operator 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getOperator() {
        return operator_;
      }

      private void initFields() {
        shadowKind1_ = boa.types.Ast.Expression.ExpressionKind.OP_INC;
        shadowKind2_ = boa.types.Ast.Expression.ExpressionKind.OP_DEC;
        operand_ = boa.types.Ast.Expression.getDefaultInstance();
        operator_ = boa.types.Ast.Expression.ExpressionKind.OTHER;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasOperand()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasOperator()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getOperand().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind1_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeEnum(2, shadowKind2_.getNumber());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(3, operand_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeEnum(4, operator_.getNumber());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind1_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, shadowKind2_.getNumber());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, operand_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(4, operator_.getNumber());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Expression.PostfixExpression parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.PostfixExpression parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.PostfixExpression parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.PostfixExpression parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.PostfixExpression parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.PostfixExpression parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.PostfixExpression parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Expression.PostfixExpression parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.PostfixExpression parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.PostfixExpression parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Expression.PostfixExpression prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Expression.PostfixExpression}
       *
       * <pre>
       ** A postfix expression 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Expression.PostfixExpressionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Expression_PostfixExpression_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Expression_PostfixExpression_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Expression.PostfixExpression.class, boa.types.Ast.Expression.PostfixExpression.Builder.class);
        }

        // Construct using boa.types.Ast.Expression.PostfixExpression.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getOperandFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind1_ = boa.types.Ast.Expression.ExpressionKind.OP_INC;
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind2_ = boa.types.Ast.Expression.ExpressionKind.OP_DEC;
          bitField0_ = (bitField0_ & ~0x00000002);
          if (operandBuilder_ == null) {
            operand_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            operandBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          operator_ = boa.types.Ast.Expression.ExpressionKind.OTHER;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Expression_PostfixExpression_descriptor;
        }

        public boa.types.Ast.Expression.PostfixExpression getDefaultInstanceForType() {
          return boa.types.Ast.Expression.PostfixExpression.getDefaultInstance();
        }

        public boa.types.Ast.Expression.PostfixExpression build() {
          boa.types.Ast.Expression.PostfixExpression result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Expression.PostfixExpression buildPartial() {
          boa.types.Ast.Expression.PostfixExpression result = new boa.types.Ast.Expression.PostfixExpression(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind1_ = shadowKind1_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.shadowKind2_ = shadowKind2_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          if (operandBuilder_ == null) {
            result.operand_ = operand_;
          } else {
            result.operand_ = operandBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.operator_ = operator_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Expression.PostfixExpression) {
            return mergeFrom((boa.types.Ast.Expression.PostfixExpression)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Expression.PostfixExpression other) {
          if (other == boa.types.Ast.Expression.PostfixExpression.getDefaultInstance()) return this;
          if (other.hasShadowKind1()) {
            setShadowKind1(other.getShadowKind1());
          }
          if (other.hasShadowKind2()) {
            setShadowKind2(other.getShadowKind2());
          }
          if (other.hasOperand()) {
            mergeOperand(other.getOperand());
          }
          if (other.hasOperator()) {
            setOperator(other.getOperator());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasOperand()) {
            
            return false;
          }
          if (!hasOperator()) {
            
            return false;
          }
          if (!getOperand().isInitialized()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Expression.PostfixExpression parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Expression.PostfixExpression) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_INC];
        private boa.types.Ast.Expression.ExpressionKind shadowKind1_ = boa.types.Ast.Expression.ExpressionKind.OP_INC;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_INC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind1() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_INC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind1() {
          return shadowKind1_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_INC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind1(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind1_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_INC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind1() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind1_ = boa.types.Ast.Expression.ExpressionKind.OP_INC;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = OP_DEC];
        private boa.types.Ast.Expression.ExpressionKind shadowKind2_ = boa.types.Ast.Expression.ExpressionKind.OP_DEC;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = OP_DEC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind2() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = OP_DEC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind2() {
          return shadowKind2_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = OP_DEC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind2(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          shadowKind2_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = OP_DEC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind2() {
          bitField0_ = (bitField0_ & ~0x00000002);
          shadowKind2_ = boa.types.Ast.Expression.ExpressionKind.OP_DEC;
          onChanged();
          return this;
        }

        // required .boa.types.Expression operand = 3;
        private boa.types.Ast.Expression operand_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> operandBuilder_;
        /**
         * <code>required .boa.types.Expression operand = 3;</code>
         *
         * <pre>
         ** The operand 
         * </pre>
         */
        public boolean hasOperand() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required .boa.types.Expression operand = 3;</code>
         *
         * <pre>
         ** The operand 
         * </pre>
         */
        public boa.types.Ast.Expression getOperand() {
          if (operandBuilder_ == null) {
            return operand_;
          } else {
            return operandBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Expression operand = 3;</code>
         *
         * <pre>
         ** The operand 
         * </pre>
         */
        public Builder setOperand(boa.types.Ast.Expression value) {
          if (operandBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            operand_ = value;
            onChanged();
          } else {
            operandBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Expression operand = 3;</code>
         *
         * <pre>
         ** The operand 
         * </pre>
         */
        public Builder setOperand(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (operandBuilder_ == null) {
            operand_ = builderForValue.build();
            onChanged();
          } else {
            operandBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Expression operand = 3;</code>
         *
         * <pre>
         ** The operand 
         * </pre>
         */
        public Builder mergeOperand(boa.types.Ast.Expression value) {
          if (operandBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                operand_ != boa.types.Ast.Expression.getDefaultInstance()) {
              operand_ =
                boa.types.Ast.Expression.newBuilder(operand_).mergeFrom(value).buildPartial();
            } else {
              operand_ = value;
            }
            onChanged();
          } else {
            operandBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Expression operand = 3;</code>
         *
         * <pre>
         ** The operand 
         * </pre>
         */
        public Builder clearOperand() {
          if (operandBuilder_ == null) {
            operand_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            operandBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <code>required .boa.types.Expression operand = 3;</code>
         *
         * <pre>
         ** The operand 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder getOperandBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getOperandFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Expression operand = 3;</code>
         *
         * <pre>
         ** The operand 
         * </pre>
         */
        public boa.types.Ast.ExpressionOrBuilder getOperandOrBuilder() {
          if (operandBuilder_ != null) {
            return operandBuilder_.getMessageOrBuilder();
          } else {
            return operand_;
          }
        }
        /**
         * <code>required .boa.types.Expression operand = 3;</code>
         *
         * <pre>
         ** The operand 
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getOperandFieldBuilder() {
          if (operandBuilder_ == null) {
            operandBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    operand_,
                    getParentForChildren(),
                    isClean());
            operand_ = null;
          }
          return operandBuilder_;
        }

        // required .boa.types.Expression.ExpressionKind operator = 4;
        private boa.types.Ast.Expression.ExpressionKind operator_ = boa.types.Ast.Expression.ExpressionKind.OTHER;
        /**
         * <code>required .boa.types.Expression.ExpressionKind operator = 4;</code>
         *
         * <pre>
         ** The operator 
         * </pre>
         */
        public boolean hasOperator() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>required .boa.types.Expression.ExpressionKind operator = 4;</code>
         *
         * <pre>
         ** The operator 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getOperator() {
          return operator_;
        }
        /**
         * <code>required .boa.types.Expression.ExpressionKind operator = 4;</code>
         *
         * <pre>
         ** The operator 
         * </pre>
         */
        public Builder setOperator(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000008;
          operator_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required .boa.types.Expression.ExpressionKind operator = 4;</code>
         *
         * <pre>
         ** The operator 
         * </pre>
         */
        public Builder clearOperator() {
          bitField0_ = (bitField0_ & ~0x00000008);
          operator_ = boa.types.Ast.Expression.ExpressionKind.OTHER;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Expression.PostfixExpression)
      }

      static {
        defaultInstance = new PostfixExpression(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Expression.PostfixExpression)
    }

    public interface PrefixExpressionOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_DEC];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_DEC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind1();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_DEC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind1();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = OP_INC];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = OP_INC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind2();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = OP_INC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind2();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = OP_ADD];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = OP_ADD];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind3();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = OP_ADD];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind3();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = OP_SUB];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = OP_SUB];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind4();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = OP_SUB];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind4();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = BIT_NOT];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = BIT_NOT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind5();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = BIT_NOT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind5();

      // optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = LOGICAL_NOT];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = LOGICAL_NOT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind6();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = LOGICAL_NOT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind6();

      // required .boa.types.Expression operand = 7;
      /**
       * <code>required .boa.types.Expression operand = 7;</code>
       *
       * <pre>
       ** The operand 
       * </pre>
       */
      boolean hasOperand();
      /**
       * <code>required .boa.types.Expression operand = 7;</code>
       *
       * <pre>
       ** The operand 
       * </pre>
       */
      boa.types.Ast.Expression getOperand();
      /**
       * <code>required .boa.types.Expression operand = 7;</code>
       *
       * <pre>
       ** The operand 
       * </pre>
       */
      boa.types.Ast.ExpressionOrBuilder getOperandOrBuilder();

      // required .boa.types.Expression.ExpressionKind operator = 8;
      /**
       * <code>required .boa.types.Expression.ExpressionKind operator = 8;</code>
       *
       * <pre>
       ** The operator 
       * </pre>
       */
      boolean hasOperator();
      /**
       * <code>required .boa.types.Expression.ExpressionKind operator = 8;</code>
       *
       * <pre>
       ** The operator 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getOperator();
    }
    /**
     * Protobuf type {@code boa.types.Expression.PrefixExpression}
     *
     * <pre>
     ** A prefix expression 
     * </pre>
     */
    public static final class PrefixExpression extends
        com.google.protobuf.GeneratedMessage
        implements PrefixExpressionOrBuilder {
      // Use PrefixExpression.newBuilder() to construct.
      private PrefixExpression(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private PrefixExpression(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final PrefixExpression defaultInstance;
      public static PrefixExpression getDefaultInstance() {
        return defaultInstance;
      }

      public PrefixExpression getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private PrefixExpression(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind1_ = value;
                }
                break;
              }
              case 16: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(2, rawValue);
                } else {
                  bitField0_ |= 0x00000002;
                  shadowKind2_ = value;
                }
                break;
              }
              case 24: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(3, rawValue);
                } else {
                  bitField0_ |= 0x00000004;
                  shadowKind3_ = value;
                }
                break;
              }
              case 32: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(4, rawValue);
                } else {
                  bitField0_ |= 0x00000008;
                  shadowKind4_ = value;
                }
                break;
              }
              case 40: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(5, rawValue);
                } else {
                  bitField0_ |= 0x00000010;
                  shadowKind5_ = value;
                }
                break;
              }
              case 48: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(6, rawValue);
                } else {
                  bitField0_ |= 0x00000020;
                  shadowKind6_ = value;
                }
                break;
              }
              case 58: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000040) == 0x00000040)) {
                  subBuilder = operand_.toBuilder();
                }
                operand_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(operand_);
                  operand_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000040;
                break;
              }
              case 64: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(8, rawValue);
                } else {
                  bitField0_ |= 0x00000080;
                  operator_ = value;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Expression_PrefixExpression_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Expression_PrefixExpression_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Expression.PrefixExpression.class, boa.types.Ast.Expression.PrefixExpression.Builder.class);
      }

      public static com.google.protobuf.Parser<PrefixExpression> PARSER =
          new com.google.protobuf.AbstractParser<PrefixExpression>() {
        public PrefixExpression parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PrefixExpression(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<PrefixExpression> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_DEC];
      public static final int SHADOW_KIND_1_FIELD_NUMBER = 1;
      private boa.types.Ast.Expression.ExpressionKind shadowKind1_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_DEC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind1() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_DEC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind1() {
        return shadowKind1_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = OP_INC];
      public static final int SHADOW_KIND_2_FIELD_NUMBER = 2;
      private boa.types.Ast.Expression.ExpressionKind shadowKind2_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = OP_INC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind2() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = OP_INC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind2() {
        return shadowKind2_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = OP_ADD];
      public static final int SHADOW_KIND_3_FIELD_NUMBER = 3;
      private boa.types.Ast.Expression.ExpressionKind shadowKind3_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = OP_ADD];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind3() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = OP_ADD];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind3() {
        return shadowKind3_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = OP_SUB];
      public static final int SHADOW_KIND_4_FIELD_NUMBER = 4;
      private boa.types.Ast.Expression.ExpressionKind shadowKind4_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = OP_SUB];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind4() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = OP_SUB];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind4() {
        return shadowKind4_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = BIT_NOT];
      public static final int SHADOW_KIND_5_FIELD_NUMBER = 5;
      private boa.types.Ast.Expression.ExpressionKind shadowKind5_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = BIT_NOT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind5() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = BIT_NOT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind5() {
        return shadowKind5_;
      }

      // optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = LOGICAL_NOT];
      public static final int SHADOW_KIND_6_FIELD_NUMBER = 6;
      private boa.types.Ast.Expression.ExpressionKind shadowKind6_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = LOGICAL_NOT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind6() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = LOGICAL_NOT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind6() {
        return shadowKind6_;
      }

      // required .boa.types.Expression operand = 7;
      public static final int OPERAND_FIELD_NUMBER = 7;
      private boa.types.Ast.Expression operand_;
      /**
       * <code>required .boa.types.Expression operand = 7;</code>
       *
       * <pre>
       ** The operand 
       * </pre>
       */
      public boolean hasOperand() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required .boa.types.Expression operand = 7;</code>
       *
       * <pre>
       ** The operand 
       * </pre>
       */
      public boa.types.Ast.Expression getOperand() {
        return operand_;
      }
      /**
       * <code>required .boa.types.Expression operand = 7;</code>
       *
       * <pre>
       ** The operand 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getOperandOrBuilder() {
        return operand_;
      }

      // required .boa.types.Expression.ExpressionKind operator = 8;
      public static final int OPERATOR_FIELD_NUMBER = 8;
      private boa.types.Ast.Expression.ExpressionKind operator_;
      /**
       * <code>required .boa.types.Expression.ExpressionKind operator = 8;</code>
       *
       * <pre>
       ** The operator 
       * </pre>
       */
      public boolean hasOperator() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required .boa.types.Expression.ExpressionKind operator = 8;</code>
       *
       * <pre>
       ** The operator 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getOperator() {
        return operator_;
      }

      private void initFields() {
        shadowKind1_ = boa.types.Ast.Expression.ExpressionKind.OP_DEC;
        shadowKind2_ = boa.types.Ast.Expression.ExpressionKind.OP_INC;
        shadowKind3_ = boa.types.Ast.Expression.ExpressionKind.OP_ADD;
        shadowKind4_ = boa.types.Ast.Expression.ExpressionKind.OP_SUB;
        shadowKind5_ = boa.types.Ast.Expression.ExpressionKind.BIT_NOT;
        shadowKind6_ = boa.types.Ast.Expression.ExpressionKind.LOGICAL_NOT;
        operand_ = boa.types.Ast.Expression.getDefaultInstance();
        operator_ = boa.types.Ast.Expression.ExpressionKind.OTHER;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasOperand()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasOperator()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getOperand().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind1_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeEnum(2, shadowKind2_.getNumber());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeEnum(3, shadowKind3_.getNumber());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeEnum(4, shadowKind4_.getNumber());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeEnum(5, shadowKind5_.getNumber());
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeEnum(6, shadowKind6_.getNumber());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeMessage(7, operand_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeEnum(8, operator_.getNumber());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind1_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, shadowKind2_.getNumber());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(3, shadowKind3_.getNumber());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(4, shadowKind4_.getNumber());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(5, shadowKind5_.getNumber());
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(6, shadowKind6_.getNumber());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, operand_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(8, operator_.getNumber());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Expression.PrefixExpression parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.PrefixExpression parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.PrefixExpression parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.PrefixExpression parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.PrefixExpression parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.PrefixExpression parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.PrefixExpression parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Expression.PrefixExpression parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.PrefixExpression parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.PrefixExpression parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Expression.PrefixExpression prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Expression.PrefixExpression}
       *
       * <pre>
       ** A prefix expression 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Expression.PrefixExpressionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Expression_PrefixExpression_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Expression_PrefixExpression_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Expression.PrefixExpression.class, boa.types.Ast.Expression.PrefixExpression.Builder.class);
        }

        // Construct using boa.types.Ast.Expression.PrefixExpression.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getOperandFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind1_ = boa.types.Ast.Expression.ExpressionKind.OP_DEC;
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind2_ = boa.types.Ast.Expression.ExpressionKind.OP_INC;
          bitField0_ = (bitField0_ & ~0x00000002);
          shadowKind3_ = boa.types.Ast.Expression.ExpressionKind.OP_ADD;
          bitField0_ = (bitField0_ & ~0x00000004);
          shadowKind4_ = boa.types.Ast.Expression.ExpressionKind.OP_SUB;
          bitField0_ = (bitField0_ & ~0x00000008);
          shadowKind5_ = boa.types.Ast.Expression.ExpressionKind.BIT_NOT;
          bitField0_ = (bitField0_ & ~0x00000010);
          shadowKind6_ = boa.types.Ast.Expression.ExpressionKind.LOGICAL_NOT;
          bitField0_ = (bitField0_ & ~0x00000020);
          if (operandBuilder_ == null) {
            operand_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            operandBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000040);
          operator_ = boa.types.Ast.Expression.ExpressionKind.OTHER;
          bitField0_ = (bitField0_ & ~0x00000080);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Expression_PrefixExpression_descriptor;
        }

        public boa.types.Ast.Expression.PrefixExpression getDefaultInstanceForType() {
          return boa.types.Ast.Expression.PrefixExpression.getDefaultInstance();
        }

        public boa.types.Ast.Expression.PrefixExpression build() {
          boa.types.Ast.Expression.PrefixExpression result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Expression.PrefixExpression buildPartial() {
          boa.types.Ast.Expression.PrefixExpression result = new boa.types.Ast.Expression.PrefixExpression(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind1_ = shadowKind1_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.shadowKind2_ = shadowKind2_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.shadowKind3_ = shadowKind3_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.shadowKind4_ = shadowKind4_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.shadowKind5_ = shadowKind5_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.shadowKind6_ = shadowKind6_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          if (operandBuilder_ == null) {
            result.operand_ = operand_;
          } else {
            result.operand_ = operandBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.operator_ = operator_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Expression.PrefixExpression) {
            return mergeFrom((boa.types.Ast.Expression.PrefixExpression)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Expression.PrefixExpression other) {
          if (other == boa.types.Ast.Expression.PrefixExpression.getDefaultInstance()) return this;
          if (other.hasShadowKind1()) {
            setShadowKind1(other.getShadowKind1());
          }
          if (other.hasShadowKind2()) {
            setShadowKind2(other.getShadowKind2());
          }
          if (other.hasShadowKind3()) {
            setShadowKind3(other.getShadowKind3());
          }
          if (other.hasShadowKind4()) {
            setShadowKind4(other.getShadowKind4());
          }
          if (other.hasShadowKind5()) {
            setShadowKind5(other.getShadowKind5());
          }
          if (other.hasShadowKind6()) {
            setShadowKind6(other.getShadowKind6());
          }
          if (other.hasOperand()) {
            mergeOperand(other.getOperand());
          }
          if (other.hasOperator()) {
            setOperator(other.getOperator());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasOperand()) {
            
            return false;
          }
          if (!hasOperator()) {
            
            return false;
          }
          if (!getOperand().isInitialized()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Expression.PrefixExpression parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Expression.PrefixExpression) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_DEC];
        private boa.types.Ast.Expression.ExpressionKind shadowKind1_ = boa.types.Ast.Expression.ExpressionKind.OP_DEC;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_DEC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind1() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_DEC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind1() {
          return shadowKind1_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_DEC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind1(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind1_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_1 = 1 [default = OP_DEC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind1() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind1_ = boa.types.Ast.Expression.ExpressionKind.OP_DEC;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = OP_INC];
        private boa.types.Ast.Expression.ExpressionKind shadowKind2_ = boa.types.Ast.Expression.ExpressionKind.OP_INC;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = OP_INC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind2() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = OP_INC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind2() {
          return shadowKind2_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = OP_INC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind2(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          shadowKind2_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_2 = 2 [default = OP_INC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind2() {
          bitField0_ = (bitField0_ & ~0x00000002);
          shadowKind2_ = boa.types.Ast.Expression.ExpressionKind.OP_INC;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = OP_ADD];
        private boa.types.Ast.Expression.ExpressionKind shadowKind3_ = boa.types.Ast.Expression.ExpressionKind.OP_ADD;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = OP_ADD];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind3() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = OP_ADD];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind3() {
          return shadowKind3_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = OP_ADD];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind3(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000004;
          shadowKind3_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_3 = 3 [default = OP_ADD];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind3() {
          bitField0_ = (bitField0_ & ~0x00000004);
          shadowKind3_ = boa.types.Ast.Expression.ExpressionKind.OP_ADD;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = OP_SUB];
        private boa.types.Ast.Expression.ExpressionKind shadowKind4_ = boa.types.Ast.Expression.ExpressionKind.OP_SUB;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = OP_SUB];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind4() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = OP_SUB];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind4() {
          return shadowKind4_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = OP_SUB];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind4(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000008;
          shadowKind4_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_4 = 4 [default = OP_SUB];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind4() {
          bitField0_ = (bitField0_ & ~0x00000008);
          shadowKind4_ = boa.types.Ast.Expression.ExpressionKind.OP_SUB;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = BIT_NOT];
        private boa.types.Ast.Expression.ExpressionKind shadowKind5_ = boa.types.Ast.Expression.ExpressionKind.BIT_NOT;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = BIT_NOT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind5() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = BIT_NOT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind5() {
          return shadowKind5_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = BIT_NOT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind5(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000010;
          shadowKind5_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_5 = 5 [default = BIT_NOT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind5() {
          bitField0_ = (bitField0_ & ~0x00000010);
          shadowKind5_ = boa.types.Ast.Expression.ExpressionKind.BIT_NOT;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = LOGICAL_NOT];
        private boa.types.Ast.Expression.ExpressionKind shadowKind6_ = boa.types.Ast.Expression.ExpressionKind.LOGICAL_NOT;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = LOGICAL_NOT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind6() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = LOGICAL_NOT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind6() {
          return shadowKind6_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = LOGICAL_NOT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind6(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000020;
          shadowKind6_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind_6 = 6 [default = LOGICAL_NOT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind6() {
          bitField0_ = (bitField0_ & ~0x00000020);
          shadowKind6_ = boa.types.Ast.Expression.ExpressionKind.LOGICAL_NOT;
          onChanged();
          return this;
        }

        // required .boa.types.Expression operand = 7;
        private boa.types.Ast.Expression operand_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> operandBuilder_;
        /**
         * <code>required .boa.types.Expression operand = 7;</code>
         *
         * <pre>
         ** The operand 
         * </pre>
         */
        public boolean hasOperand() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>required .boa.types.Expression operand = 7;</code>
         *
         * <pre>
         ** The operand 
         * </pre>
         */
        public boa.types.Ast.Expression getOperand() {
          if (operandBuilder_ == null) {
            return operand_;
          } else {
            return operandBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Expression operand = 7;</code>
         *
         * <pre>
         ** The operand 
         * </pre>
         */
        public Builder setOperand(boa.types.Ast.Expression value) {
          if (operandBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            operand_ = value;
            onChanged();
          } else {
            operandBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000040;
          return this;
        }
        /**
         * <code>required .boa.types.Expression operand = 7;</code>
         *
         * <pre>
         ** The operand 
         * </pre>
         */
        public Builder setOperand(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (operandBuilder_ == null) {
            operand_ = builderForValue.build();
            onChanged();
          } else {
            operandBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000040;
          return this;
        }
        /**
         * <code>required .boa.types.Expression operand = 7;</code>
         *
         * <pre>
         ** The operand 
         * </pre>
         */
        public Builder mergeOperand(boa.types.Ast.Expression value) {
          if (operandBuilder_ == null) {
            if (((bitField0_ & 0x00000040) == 0x00000040) &&
                operand_ != boa.types.Ast.Expression.getDefaultInstance()) {
              operand_ =
                boa.types.Ast.Expression.newBuilder(operand_).mergeFrom(value).buildPartial();
            } else {
              operand_ = value;
            }
            onChanged();
          } else {
            operandBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000040;
          return this;
        }
        /**
         * <code>required .boa.types.Expression operand = 7;</code>
         *
         * <pre>
         ** The operand 
         * </pre>
         */
        public Builder clearOperand() {
          if (operandBuilder_ == null) {
            operand_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            operandBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000040);
          return this;
        }
        /**
         * <code>required .boa.types.Expression operand = 7;</code>
         *
         * <pre>
         ** The operand 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder getOperandBuilder() {
          bitField0_ |= 0x00000040;
          onChanged();
          return getOperandFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Expression operand = 7;</code>
         *
         * <pre>
         ** The operand 
         * </pre>
         */
        public boa.types.Ast.ExpressionOrBuilder getOperandOrBuilder() {
          if (operandBuilder_ != null) {
            return operandBuilder_.getMessageOrBuilder();
          } else {
            return operand_;
          }
        }
        /**
         * <code>required .boa.types.Expression operand = 7;</code>
         *
         * <pre>
         ** The operand 
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getOperandFieldBuilder() {
          if (operandBuilder_ == null) {
            operandBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    operand_,
                    getParentForChildren(),
                    isClean());
            operand_ = null;
          }
          return operandBuilder_;
        }

        // required .boa.types.Expression.ExpressionKind operator = 8;
        private boa.types.Ast.Expression.ExpressionKind operator_ = boa.types.Ast.Expression.ExpressionKind.OTHER;
        /**
         * <code>required .boa.types.Expression.ExpressionKind operator = 8;</code>
         *
         * <pre>
         ** The operator 
         * </pre>
         */
        public boolean hasOperator() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>required .boa.types.Expression.ExpressionKind operator = 8;</code>
         *
         * <pre>
         ** The operator 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getOperator() {
          return operator_;
        }
        /**
         * <code>required .boa.types.Expression.ExpressionKind operator = 8;</code>
         *
         * <pre>
         ** The operator 
         * </pre>
         */
        public Builder setOperator(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000080;
          operator_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required .boa.types.Expression.ExpressionKind operator = 8;</code>
         *
         * <pre>
         ** The operator 
         * </pre>
         */
        public Builder clearOperator() {
          bitField0_ = (bitField0_ & ~0x00000080);
          operator_ = boa.types.Ast.Expression.ExpressionKind.OTHER;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Expression.PrefixExpression)
      }

      static {
        defaultInstance = new PrefixExpression(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Expression.PrefixExpression)
    }

    public interface StringLiteralOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind();

      // required string escaped_value = 2;
      /**
       * <code>required string escaped_value = 2;</code>
       *
       * <pre>
       ** The token value 
       * </pre>
       */
      boolean hasEscapedValue();
      /**
       * <code>required string escaped_value = 2;</code>
       *
       * <pre>
       ** The token value 
       * </pre>
       */
      java.lang.String getEscapedValue();
      /**
       * <code>required string escaped_value = 2;</code>
       *
       * <pre>
       ** The token value 
       * </pre>
       */
      com.google.protobuf.ByteString
          getEscapedValueBytes();

      // required string literal_value = 3;
      /**
       * <code>required string literal_value = 3;</code>
       *
       * <pre>
       ** The string literal value 
       * </pre>
       */
      boolean hasLiteralValue();
      /**
       * <code>required string literal_value = 3;</code>
       *
       * <pre>
       ** The string literal value 
       * </pre>
       */
      java.lang.String getLiteralValue();
      /**
       * <code>required string literal_value = 3;</code>
       *
       * <pre>
       ** The string literal value 
       * </pre>
       */
      com.google.protobuf.ByteString
          getLiteralValueBytes();
    }
    /**
     * Protobuf type {@code boa.types.Expression.StringLiteral}
     *
     * <pre>
     ** A string literal 
     * </pre>
     */
    public static final class StringLiteral extends
        com.google.protobuf.GeneratedMessage
        implements StringLiteralOrBuilder {
      // Use StringLiteral.newBuilder() to construct.
      private StringLiteral(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private StringLiteral(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final StringLiteral defaultInstance;
      public static StringLiteral getDefaultInstance() {
        return defaultInstance;
      }

      public StringLiteral getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private StringLiteral(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                escapedValue_ = input.readBytes();
                break;
              }
              case 26: {
                bitField0_ |= 0x00000004;
                literalValue_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Expression_StringLiteral_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Expression_StringLiteral_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Expression.StringLiteral.class, boa.types.Ast.Expression.StringLiteral.Builder.class);
      }

      public static com.google.protobuf.Parser<StringLiteral> PARSER =
          new com.google.protobuf.AbstractParser<StringLiteral>() {
        public StringLiteral parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new StringLiteral(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<StringLiteral> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Expression.ExpressionKind shadowKind_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
        return shadowKind_;
      }

      // required string escaped_value = 2;
      public static final int ESCAPED_VALUE_FIELD_NUMBER = 2;
      private java.lang.Object escapedValue_;
      /**
       * <code>required string escaped_value = 2;</code>
       *
       * <pre>
       ** The token value 
       * </pre>
       */
      public boolean hasEscapedValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string escaped_value = 2;</code>
       *
       * <pre>
       ** The token value 
       * </pre>
       */
      public java.lang.String getEscapedValue() {
        java.lang.Object ref = escapedValue_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            escapedValue_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string escaped_value = 2;</code>
       *
       * <pre>
       ** The token value 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getEscapedValueBytes() {
        java.lang.Object ref = escapedValue_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          escapedValue_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // required string literal_value = 3;
      public static final int LITERAL_VALUE_FIELD_NUMBER = 3;
      private java.lang.Object literalValue_;
      /**
       * <code>required string literal_value = 3;</code>
       *
       * <pre>
       ** The string literal value 
       * </pre>
       */
      public boolean hasLiteralValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string literal_value = 3;</code>
       *
       * <pre>
       ** The string literal value 
       * </pre>
       */
      public java.lang.String getLiteralValue() {
        java.lang.Object ref = literalValue_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            literalValue_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string literal_value = 3;</code>
       *
       * <pre>
       ** The string literal value 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getLiteralValueBytes() {
        java.lang.Object ref = literalValue_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          literalValue_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Expression.ExpressionKind.LITERAL;
        escapedValue_ = "";
        literalValue_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasEscapedValue()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasLiteralValue()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getEscapedValueBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, getLiteralValueBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getEscapedValueBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getLiteralValueBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Expression.StringLiteral parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.StringLiteral parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.StringLiteral parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.StringLiteral parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.StringLiteral parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.StringLiteral parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.StringLiteral parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Expression.StringLiteral parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.StringLiteral parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.StringLiteral parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Expression.StringLiteral prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Expression.StringLiteral}
       *
       * <pre>
       ** A string literal 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Expression.StringLiteralOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Expression_StringLiteral_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Expression_StringLiteral_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Expression.StringLiteral.class, boa.types.Ast.Expression.StringLiteral.Builder.class);
        }

        // Construct using boa.types.Ast.Expression.StringLiteral.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.LITERAL;
          bitField0_ = (bitField0_ & ~0x00000001);
          escapedValue_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          literalValue_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Expression_StringLiteral_descriptor;
        }

        public boa.types.Ast.Expression.StringLiteral getDefaultInstanceForType() {
          return boa.types.Ast.Expression.StringLiteral.getDefaultInstance();
        }

        public boa.types.Ast.Expression.StringLiteral build() {
          boa.types.Ast.Expression.StringLiteral result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Expression.StringLiteral buildPartial() {
          boa.types.Ast.Expression.StringLiteral result = new boa.types.Ast.Expression.StringLiteral(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.escapedValue_ = escapedValue_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.literalValue_ = literalValue_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Expression.StringLiteral) {
            return mergeFrom((boa.types.Ast.Expression.StringLiteral)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Expression.StringLiteral other) {
          if (other == boa.types.Ast.Expression.StringLiteral.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasEscapedValue()) {
            bitField0_ |= 0x00000002;
            escapedValue_ = other.escapedValue_;
            onChanged();
          }
          if (other.hasLiteralValue()) {
            bitField0_ |= 0x00000004;
            literalValue_ = other.literalValue_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasEscapedValue()) {
            
            return false;
          }
          if (!hasLiteralValue()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Expression.StringLiteral parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Expression.StringLiteral) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];
        private boa.types.Ast.Expression.ExpressionKind shadowKind_ = boa.types.Ast.Expression.ExpressionKind.LITERAL;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.LITERAL;
          onChanged();
          return this;
        }

        // required string escaped_value = 2;
        private java.lang.Object escapedValue_ = "";
        /**
         * <code>required string escaped_value = 2;</code>
         *
         * <pre>
         ** The token value 
         * </pre>
         */
        public boolean hasEscapedValue() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string escaped_value = 2;</code>
         *
         * <pre>
         ** The token value 
         * </pre>
         */
        public java.lang.String getEscapedValue() {
          java.lang.Object ref = escapedValue_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            escapedValue_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string escaped_value = 2;</code>
         *
         * <pre>
         ** The token value 
         * </pre>
         */
        public com.google.protobuf.ByteString
            getEscapedValueBytes() {
          java.lang.Object ref = escapedValue_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            escapedValue_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string escaped_value = 2;</code>
         *
         * <pre>
         ** The token value 
         * </pre>
         */
        public Builder setEscapedValue(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          escapedValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string escaped_value = 2;</code>
         *
         * <pre>
         ** The token value 
         * </pre>
         */
        public Builder clearEscapedValue() {
          bitField0_ = (bitField0_ & ~0x00000002);
          escapedValue_ = getDefaultInstance().getEscapedValue();
          onChanged();
          return this;
        }
        /**
         * <code>required string escaped_value = 2;</code>
         *
         * <pre>
         ** The token value 
         * </pre>
         */
        public Builder setEscapedValueBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          escapedValue_ = value;
          onChanged();
          return this;
        }

        // required string literal_value = 3;
        private java.lang.Object literalValue_ = "";
        /**
         * <code>required string literal_value = 3;</code>
         *
         * <pre>
         ** The string literal value 
         * </pre>
         */
        public boolean hasLiteralValue() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required string literal_value = 3;</code>
         *
         * <pre>
         ** The string literal value 
         * </pre>
         */
        public java.lang.String getLiteralValue() {
          java.lang.Object ref = literalValue_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            literalValue_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string literal_value = 3;</code>
         *
         * <pre>
         ** The string literal value 
         * </pre>
         */
        public com.google.protobuf.ByteString
            getLiteralValueBytes() {
          java.lang.Object ref = literalValue_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            literalValue_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string literal_value = 3;</code>
         *
         * <pre>
         ** The string literal value 
         * </pre>
         */
        public Builder setLiteralValue(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          literalValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string literal_value = 3;</code>
         *
         * <pre>
         ** The string literal value 
         * </pre>
         */
        public Builder clearLiteralValue() {
          bitField0_ = (bitField0_ & ~0x00000004);
          literalValue_ = getDefaultInstance().getLiteralValue();
          onChanged();
          return this;
        }
        /**
         * <code>required string literal_value = 3;</code>
         *
         * <pre>
         ** The string literal value 
         * </pre>
         */
        public Builder setLiteralValueBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          literalValue_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Expression.StringLiteral)
      }

      static {
        defaultInstance = new StringLiteral(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Expression.StringLiteral)
    }

    public interface SuperMethodInvocationOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHODCALL];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHODCALL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHODCALL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind();

      // optional .boa.types.Expression qualifier = 2;
      /**
       * <code>optional .boa.types.Expression qualifier = 2;</code>
       *
       * <pre>
       *optional VarAccessExpression qualifier      = 2 [(boa.types.alias) = "expression_1"]; FIXME
       * </pre>
       */
      boolean hasQualifier();
      /**
       * <code>optional .boa.types.Expression qualifier = 2;</code>
       *
       * <pre>
       *optional VarAccessExpression qualifier      = 2 [(boa.types.alias) = "expression_1"]; FIXME
       * </pre>
       */
      boa.types.Ast.Expression getQualifier();
      /**
       * <code>optional .boa.types.Expression qualifier = 2;</code>
       *
       * <pre>
       *optional VarAccessExpression qualifier      = 2 [(boa.types.alias) = "expression_1"]; FIXME
       * </pre>
       */
      boa.types.Ast.ExpressionOrBuilder getQualifierOrBuilder();

      // repeated .boa.types.Type type_arguments = 3;
      /**
       * <code>repeated .boa.types.Type type_arguments = 3;</code>
       *
       * <pre>
       ** The generic type arguments 
       * </pre>
       */
      java.util.List<boa.types.Ast.Type> 
          getTypeArgumentsList();
      /**
       * <code>repeated .boa.types.Type type_arguments = 3;</code>
       *
       * <pre>
       ** The generic type arguments 
       * </pre>
       */
      boa.types.Ast.Type getTypeArguments(int index);
      /**
       * <code>repeated .boa.types.Type type_arguments = 3;</code>
       *
       * <pre>
       ** The generic type arguments 
       * </pre>
       */
      int getTypeArgumentsCount();
      /**
       * <code>repeated .boa.types.Type type_arguments = 3;</code>
       *
       * <pre>
       ** The generic type arguments 
       * </pre>
       */
      java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
          getTypeArgumentsOrBuilderList();
      /**
       * <code>repeated .boa.types.Type type_arguments = 3;</code>
       *
       * <pre>
       ** The generic type arguments 
       * </pre>
       */
      boa.types.Ast.TypeOrBuilder getTypeArgumentsOrBuilder(
          int index);

      // required string name = 4;
      /**
       * <code>required string name = 4;</code>
       *
       * <pre>
       ** The name of the method invoked 
       * </pre>
       */
      boolean hasName();
      /**
       * <code>required string name = 4;</code>
       *
       * <pre>
       ** The name of the method invoked 
       * </pre>
       */
      java.lang.String getName();
      /**
       * <code>required string name = 4;</code>
       *
       * <pre>
       ** The name of the method invoked 
       * </pre>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      // repeated .boa.types.Expression arguments = 5;
      /**
       * <code>repeated .boa.types.Expression arguments = 5;</code>
       *
       * <pre>
       ** The arguments of the method invocation 
       * </pre>
       */
      java.util.List<boa.types.Ast.Expression> 
          getArgumentsList();
      /**
       * <code>repeated .boa.types.Expression arguments = 5;</code>
       *
       * <pre>
       ** The arguments of the method invocation 
       * </pre>
       */
      boa.types.Ast.Expression getArguments(int index);
      /**
       * <code>repeated .boa.types.Expression arguments = 5;</code>
       *
       * <pre>
       ** The arguments of the method invocation 
       * </pre>
       */
      int getArgumentsCount();
      /**
       * <code>repeated .boa.types.Expression arguments = 5;</code>
       *
       * <pre>
       ** The arguments of the method invocation 
       * </pre>
       */
      java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
          getArgumentsOrBuilderList();
      /**
       * <code>repeated .boa.types.Expression arguments = 5;</code>
       *
       * <pre>
       ** The arguments of the method invocation 
       * </pre>
       */
      boa.types.Ast.ExpressionOrBuilder getArgumentsOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code boa.types.Expression.SuperMethodInvocation}
     *
     * <pre>
     ** A "super" method invocation 
     * </pre>
     */
    public static final class SuperMethodInvocation extends
        com.google.protobuf.GeneratedMessage
        implements SuperMethodInvocationOrBuilder {
      // Use SuperMethodInvocation.newBuilder() to construct.
      private SuperMethodInvocation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private SuperMethodInvocation(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final SuperMethodInvocation defaultInstance;
      public static SuperMethodInvocation getDefaultInstance() {
        return defaultInstance;
      }

      public SuperMethodInvocation getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private SuperMethodInvocation(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = qualifier_.toBuilder();
                }
                qualifier_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(qualifier_);
                  qualifier_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 26: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  typeArguments_ = new java.util.ArrayList<boa.types.Ast.Type>();
                  mutable_bitField0_ |= 0x00000004;
                }
                typeArguments_.add(input.readMessage(boa.types.Ast.Type.PARSER, extensionRegistry));
                break;
              }
              case 34: {
                bitField0_ |= 0x00000004;
                name_ = input.readBytes();
                break;
              }
              case 42: {
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                  arguments_ = new java.util.ArrayList<boa.types.Ast.Expression>();
                  mutable_bitField0_ |= 0x00000010;
                }
                arguments_.add(input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            typeArguments_ = java.util.Collections.unmodifiableList(typeArguments_);
          }
          if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
            arguments_ = java.util.Collections.unmodifiableList(arguments_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Expression_SuperMethodInvocation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Expression_SuperMethodInvocation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Expression.SuperMethodInvocation.class, boa.types.Ast.Expression.SuperMethodInvocation.Builder.class);
      }

      public static com.google.protobuf.Parser<SuperMethodInvocation> PARSER =
          new com.google.protobuf.AbstractParser<SuperMethodInvocation>() {
        public SuperMethodInvocation parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SuperMethodInvocation(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<SuperMethodInvocation> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHODCALL];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Expression.ExpressionKind shadowKind_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHODCALL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHODCALL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
        return shadowKind_;
      }

      // optional .boa.types.Expression qualifier = 2;
      public static final int QUALIFIER_FIELD_NUMBER = 2;
      private boa.types.Ast.Expression qualifier_;
      /**
       * <code>optional .boa.types.Expression qualifier = 2;</code>
       *
       * <pre>
       *optional VarAccessExpression qualifier      = 2 [(boa.types.alias) = "expression_1"]; FIXME
       * </pre>
       */
      public boolean hasQualifier() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .boa.types.Expression qualifier = 2;</code>
       *
       * <pre>
       *optional VarAccessExpression qualifier      = 2 [(boa.types.alias) = "expression_1"]; FIXME
       * </pre>
       */
      public boa.types.Ast.Expression getQualifier() {
        return qualifier_;
      }
      /**
       * <code>optional .boa.types.Expression qualifier = 2;</code>
       *
       * <pre>
       *optional VarAccessExpression qualifier      = 2 [(boa.types.alias) = "expression_1"]; FIXME
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getQualifierOrBuilder() {
        return qualifier_;
      }

      // repeated .boa.types.Type type_arguments = 3;
      public static final int TYPE_ARGUMENTS_FIELD_NUMBER = 3;
      private java.util.List<boa.types.Ast.Type> typeArguments_;
      /**
       * <code>repeated .boa.types.Type type_arguments = 3;</code>
       *
       * <pre>
       ** The generic type arguments 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Type> getTypeArgumentsList() {
        return typeArguments_;
      }
      /**
       * <code>repeated .boa.types.Type type_arguments = 3;</code>
       *
       * <pre>
       ** The generic type arguments 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
          getTypeArgumentsOrBuilderList() {
        return typeArguments_;
      }
      /**
       * <code>repeated .boa.types.Type type_arguments = 3;</code>
       *
       * <pre>
       ** The generic type arguments 
       * </pre>
       */
      public int getTypeArgumentsCount() {
        return typeArguments_.size();
      }
      /**
       * <code>repeated .boa.types.Type type_arguments = 3;</code>
       *
       * <pre>
       ** The generic type arguments 
       * </pre>
       */
      public boa.types.Ast.Type getTypeArguments(int index) {
        return typeArguments_.get(index);
      }
      /**
       * <code>repeated .boa.types.Type type_arguments = 3;</code>
       *
       * <pre>
       ** The generic type arguments 
       * </pre>
       */
      public boa.types.Ast.TypeOrBuilder getTypeArgumentsOrBuilder(
          int index) {
        return typeArguments_.get(index);
      }

      // required string name = 4;
      public static final int NAME_FIELD_NUMBER = 4;
      private java.lang.Object name_;
      /**
       * <code>required string name = 4;</code>
       *
       * <pre>
       ** The name of the method invoked 
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string name = 4;</code>
       *
       * <pre>
       ** The name of the method invoked 
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string name = 4;</code>
       *
       * <pre>
       ** The name of the method invoked 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // repeated .boa.types.Expression arguments = 5;
      public static final int ARGUMENTS_FIELD_NUMBER = 5;
      private java.util.List<boa.types.Ast.Expression> arguments_;
      /**
       * <code>repeated .boa.types.Expression arguments = 5;</code>
       *
       * <pre>
       ** The arguments of the method invocation 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Expression> getArgumentsList() {
        return arguments_;
      }
      /**
       * <code>repeated .boa.types.Expression arguments = 5;</code>
       *
       * <pre>
       ** The arguments of the method invocation 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
          getArgumentsOrBuilderList() {
        return arguments_;
      }
      /**
       * <code>repeated .boa.types.Expression arguments = 5;</code>
       *
       * <pre>
       ** The arguments of the method invocation 
       * </pre>
       */
      public int getArgumentsCount() {
        return arguments_.size();
      }
      /**
       * <code>repeated .boa.types.Expression arguments = 5;</code>
       *
       * <pre>
       ** The arguments of the method invocation 
       * </pre>
       */
      public boa.types.Ast.Expression getArguments(int index) {
        return arguments_.get(index);
      }
      /**
       * <code>repeated .boa.types.Expression arguments = 5;</code>
       *
       * <pre>
       ** The arguments of the method invocation 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getArgumentsOrBuilder(
          int index) {
        return arguments_.get(index);
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Expression.ExpressionKind.METHODCALL;
        qualifier_ = boa.types.Ast.Expression.getDefaultInstance();
        typeArguments_ = java.util.Collections.emptyList();
        name_ = "";
        arguments_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (hasQualifier()) {
          if (!getQualifier().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        for (int i = 0; i < getTypeArgumentsCount(); i++) {
          if (!getTypeArguments(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        for (int i = 0; i < getArgumentsCount(); i++) {
          if (!getArguments(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, qualifier_);
        }
        for (int i = 0; i < typeArguments_.size(); i++) {
          output.writeMessage(3, typeArguments_.get(i));
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(4, getNameBytes());
        }
        for (int i = 0; i < arguments_.size(); i++) {
          output.writeMessage(5, arguments_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, qualifier_);
        }
        for (int i = 0; i < typeArguments_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, typeArguments_.get(i));
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(4, getNameBytes());
        }
        for (int i = 0; i < arguments_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, arguments_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Expression.SuperMethodInvocation parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.SuperMethodInvocation parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.SuperMethodInvocation parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.SuperMethodInvocation parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.SuperMethodInvocation parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.SuperMethodInvocation parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.SuperMethodInvocation parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Expression.SuperMethodInvocation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.SuperMethodInvocation parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.SuperMethodInvocation parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Expression.SuperMethodInvocation prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Expression.SuperMethodInvocation}
       *
       * <pre>
       ** A "super" method invocation 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Expression.SuperMethodInvocationOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Expression_SuperMethodInvocation_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Expression_SuperMethodInvocation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Expression.SuperMethodInvocation.class, boa.types.Ast.Expression.SuperMethodInvocation.Builder.class);
        }

        // Construct using boa.types.Ast.Expression.SuperMethodInvocation.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getQualifierFieldBuilder();
            getTypeArgumentsFieldBuilder();
            getArgumentsFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.METHODCALL;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (qualifierBuilder_ == null) {
            qualifier_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            qualifierBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          if (typeArgumentsBuilder_ == null) {
            typeArguments_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            typeArgumentsBuilder_.clear();
          }
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000008);
          if (argumentsBuilder_ == null) {
            arguments_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            argumentsBuilder_.clear();
          }
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Expression_SuperMethodInvocation_descriptor;
        }

        public boa.types.Ast.Expression.SuperMethodInvocation getDefaultInstanceForType() {
          return boa.types.Ast.Expression.SuperMethodInvocation.getDefaultInstance();
        }

        public boa.types.Ast.Expression.SuperMethodInvocation build() {
          boa.types.Ast.Expression.SuperMethodInvocation result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Expression.SuperMethodInvocation buildPartial() {
          boa.types.Ast.Expression.SuperMethodInvocation result = new boa.types.Ast.Expression.SuperMethodInvocation(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (qualifierBuilder_ == null) {
            result.qualifier_ = qualifier_;
          } else {
            result.qualifier_ = qualifierBuilder_.build();
          }
          if (typeArgumentsBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              typeArguments_ = java.util.Collections.unmodifiableList(typeArguments_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.typeArguments_ = typeArguments_;
          } else {
            result.typeArguments_ = typeArgumentsBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000004;
          }
          result.name_ = name_;
          if (argumentsBuilder_ == null) {
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
              arguments_ = java.util.Collections.unmodifiableList(arguments_);
              bitField0_ = (bitField0_ & ~0x00000010);
            }
            result.arguments_ = arguments_;
          } else {
            result.arguments_ = argumentsBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Expression.SuperMethodInvocation) {
            return mergeFrom((boa.types.Ast.Expression.SuperMethodInvocation)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Expression.SuperMethodInvocation other) {
          if (other == boa.types.Ast.Expression.SuperMethodInvocation.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasQualifier()) {
            mergeQualifier(other.getQualifier());
          }
          if (typeArgumentsBuilder_ == null) {
            if (!other.typeArguments_.isEmpty()) {
              if (typeArguments_.isEmpty()) {
                typeArguments_ = other.typeArguments_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureTypeArgumentsIsMutable();
                typeArguments_.addAll(other.typeArguments_);
              }
              onChanged();
            }
          } else {
            if (!other.typeArguments_.isEmpty()) {
              if (typeArgumentsBuilder_.isEmpty()) {
                typeArgumentsBuilder_.dispose();
                typeArgumentsBuilder_ = null;
                typeArguments_ = other.typeArguments_;
                bitField0_ = (bitField0_ & ~0x00000004);
                typeArgumentsBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getTypeArgumentsFieldBuilder() : null;
              } else {
                typeArgumentsBuilder_.addAllMessages(other.typeArguments_);
              }
            }
          }
          if (other.hasName()) {
            bitField0_ |= 0x00000008;
            name_ = other.name_;
            onChanged();
          }
          if (argumentsBuilder_ == null) {
            if (!other.arguments_.isEmpty()) {
              if (arguments_.isEmpty()) {
                arguments_ = other.arguments_;
                bitField0_ = (bitField0_ & ~0x00000010);
              } else {
                ensureArgumentsIsMutable();
                arguments_.addAll(other.arguments_);
              }
              onChanged();
            }
          } else {
            if (!other.arguments_.isEmpty()) {
              if (argumentsBuilder_.isEmpty()) {
                argumentsBuilder_.dispose();
                argumentsBuilder_ = null;
                arguments_ = other.arguments_;
                bitField0_ = (bitField0_ & ~0x00000010);
                argumentsBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getArgumentsFieldBuilder() : null;
              } else {
                argumentsBuilder_.addAllMessages(other.arguments_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasName()) {
            
            return false;
          }
          if (hasQualifier()) {
            if (!getQualifier().isInitialized()) {
              
              return false;
            }
          }
          for (int i = 0; i < getTypeArgumentsCount(); i++) {
            if (!getTypeArguments(i).isInitialized()) {
              
              return false;
            }
          }
          for (int i = 0; i < getArgumentsCount(); i++) {
            if (!getArguments(i).isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Expression.SuperMethodInvocation parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Expression.SuperMethodInvocation) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHODCALL];
        private boa.types.Ast.Expression.ExpressionKind shadowKind_ = boa.types.Ast.Expression.ExpressionKind.METHODCALL;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHODCALL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHODCALL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHODCALL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = METHODCALL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.METHODCALL;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression qualifier = 2;
        private boa.types.Ast.Expression qualifier_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> qualifierBuilder_;
        /**
         * <code>optional .boa.types.Expression qualifier = 2;</code>
         *
         * <pre>
         *optional VarAccessExpression qualifier      = 2 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        public boolean hasQualifier() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .boa.types.Expression qualifier = 2;</code>
         *
         * <pre>
         *optional VarAccessExpression qualifier      = 2 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        public boa.types.Ast.Expression getQualifier() {
          if (qualifierBuilder_ == null) {
            return qualifier_;
          } else {
            return qualifierBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .boa.types.Expression qualifier = 2;</code>
         *
         * <pre>
         *optional VarAccessExpression qualifier      = 2 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        public Builder setQualifier(boa.types.Ast.Expression value) {
          if (qualifierBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            qualifier_ = value;
            onChanged();
          } else {
            qualifierBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .boa.types.Expression qualifier = 2;</code>
         *
         * <pre>
         *optional VarAccessExpression qualifier      = 2 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        public Builder setQualifier(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (qualifierBuilder_ == null) {
            qualifier_ = builderForValue.build();
            onChanged();
          } else {
            qualifierBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .boa.types.Expression qualifier = 2;</code>
         *
         * <pre>
         *optional VarAccessExpression qualifier      = 2 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        public Builder mergeQualifier(boa.types.Ast.Expression value) {
          if (qualifierBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                qualifier_ != boa.types.Ast.Expression.getDefaultInstance()) {
              qualifier_ =
                boa.types.Ast.Expression.newBuilder(qualifier_).mergeFrom(value).buildPartial();
            } else {
              qualifier_ = value;
            }
            onChanged();
          } else {
            qualifierBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .boa.types.Expression qualifier = 2;</code>
         *
         * <pre>
         *optional VarAccessExpression qualifier      = 2 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        public Builder clearQualifier() {
          if (qualifierBuilder_ == null) {
            qualifier_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            qualifierBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>optional .boa.types.Expression qualifier = 2;</code>
         *
         * <pre>
         *optional VarAccessExpression qualifier      = 2 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        public boa.types.Ast.Expression.Builder getQualifierBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getQualifierFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .boa.types.Expression qualifier = 2;</code>
         *
         * <pre>
         *optional VarAccessExpression qualifier      = 2 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        public boa.types.Ast.ExpressionOrBuilder getQualifierOrBuilder() {
          if (qualifierBuilder_ != null) {
            return qualifierBuilder_.getMessageOrBuilder();
          } else {
            return qualifier_;
          }
        }
        /**
         * <code>optional .boa.types.Expression qualifier = 2;</code>
         *
         * <pre>
         *optional VarAccessExpression qualifier      = 2 [(boa.types.alias) = "expression_1"]; FIXME
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getQualifierFieldBuilder() {
          if (qualifierBuilder_ == null) {
            qualifierBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    qualifier_,
                    getParentForChildren(),
                    isClean());
            qualifier_ = null;
          }
          return qualifierBuilder_;
        }

        // repeated .boa.types.Type type_arguments = 3;
        private java.util.List<boa.types.Ast.Type> typeArguments_ =
          java.util.Collections.emptyList();
        private void ensureTypeArgumentsIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            typeArguments_ = new java.util.ArrayList<boa.types.Ast.Type>(typeArguments_);
            bitField0_ |= 0x00000004;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> typeArgumentsBuilder_;

        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public java.util.List<boa.types.Ast.Type> getTypeArgumentsList() {
          if (typeArgumentsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(typeArguments_);
          } else {
            return typeArgumentsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public int getTypeArgumentsCount() {
          if (typeArgumentsBuilder_ == null) {
            return typeArguments_.size();
          } else {
            return typeArgumentsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public boa.types.Ast.Type getTypeArguments(int index) {
          if (typeArgumentsBuilder_ == null) {
            return typeArguments_.get(index);
          } else {
            return typeArgumentsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public Builder setTypeArguments(
            int index, boa.types.Ast.Type value) {
          if (typeArgumentsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTypeArgumentsIsMutable();
            typeArguments_.set(index, value);
            onChanged();
          } else {
            typeArgumentsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public Builder setTypeArguments(
            int index, boa.types.Ast.Type.Builder builderForValue) {
          if (typeArgumentsBuilder_ == null) {
            ensureTypeArgumentsIsMutable();
            typeArguments_.set(index, builderForValue.build());
            onChanged();
          } else {
            typeArgumentsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public Builder addTypeArguments(boa.types.Ast.Type value) {
          if (typeArgumentsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTypeArgumentsIsMutable();
            typeArguments_.add(value);
            onChanged();
          } else {
            typeArgumentsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public Builder addTypeArguments(
            int index, boa.types.Ast.Type value) {
          if (typeArgumentsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTypeArgumentsIsMutable();
            typeArguments_.add(index, value);
            onChanged();
          } else {
            typeArgumentsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public Builder addTypeArguments(
            boa.types.Ast.Type.Builder builderForValue) {
          if (typeArgumentsBuilder_ == null) {
            ensureTypeArgumentsIsMutable();
            typeArguments_.add(builderForValue.build());
            onChanged();
          } else {
            typeArgumentsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public Builder addTypeArguments(
            int index, boa.types.Ast.Type.Builder builderForValue) {
          if (typeArgumentsBuilder_ == null) {
            ensureTypeArgumentsIsMutable();
            typeArguments_.add(index, builderForValue.build());
            onChanged();
          } else {
            typeArgumentsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public Builder addAllTypeArguments(
            java.lang.Iterable<? extends boa.types.Ast.Type> values) {
          if (typeArgumentsBuilder_ == null) {
            ensureTypeArgumentsIsMutable();
            super.addAll(values, typeArguments_);
            onChanged();
          } else {
            typeArgumentsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public Builder clearTypeArguments() {
          if (typeArgumentsBuilder_ == null) {
            typeArguments_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
          } else {
            typeArgumentsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public Builder removeTypeArguments(int index) {
          if (typeArgumentsBuilder_ == null) {
            ensureTypeArgumentsIsMutable();
            typeArguments_.remove(index);
            onChanged();
          } else {
            typeArgumentsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public boa.types.Ast.Type.Builder getTypeArgumentsBuilder(
            int index) {
          return getTypeArgumentsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public boa.types.Ast.TypeOrBuilder getTypeArgumentsOrBuilder(
            int index) {
          if (typeArgumentsBuilder_ == null) {
            return typeArguments_.get(index);  } else {
            return typeArgumentsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
             getTypeArgumentsOrBuilderList() {
          if (typeArgumentsBuilder_ != null) {
            return typeArgumentsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(typeArguments_);
          }
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public boa.types.Ast.Type.Builder addTypeArgumentsBuilder() {
          return getTypeArgumentsFieldBuilder().addBuilder(
              boa.types.Ast.Type.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public boa.types.Ast.Type.Builder addTypeArgumentsBuilder(
            int index) {
          return getTypeArgumentsFieldBuilder().addBuilder(
              index, boa.types.Ast.Type.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Type type_arguments = 3;</code>
         *
         * <pre>
         ** The generic type arguments 
         * </pre>
         */
        public java.util.List<boa.types.Ast.Type.Builder> 
             getTypeArgumentsBuilderList() {
          return getTypeArgumentsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> 
            getTypeArgumentsFieldBuilder() {
          if (typeArgumentsBuilder_ == null) {
            typeArgumentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder>(
                    typeArguments_,
                    ((bitField0_ & 0x00000004) == 0x00000004),
                    getParentForChildren(),
                    isClean());
            typeArguments_ = null;
          }
          return typeArgumentsBuilder_;
        }

        // required string name = 4;
        private java.lang.Object name_ = "";
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         ** The name of the method invoked 
         * </pre>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         ** The name of the method invoked 
         * </pre>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         ** The name of the method invoked 
         * </pre>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         ** The name of the method invoked 
         * </pre>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         ** The name of the method invoked 
         * </pre>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000008);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         ** The name of the method invoked 
         * </pre>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          name_ = value;
          onChanged();
          return this;
        }

        // repeated .boa.types.Expression arguments = 5;
        private java.util.List<boa.types.Ast.Expression> arguments_ =
          java.util.Collections.emptyList();
        private void ensureArgumentsIsMutable() {
          if (!((bitField0_ & 0x00000010) == 0x00000010)) {
            arguments_ = new java.util.ArrayList<boa.types.Ast.Expression>(arguments_);
            bitField0_ |= 0x00000010;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> argumentsBuilder_;

        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public java.util.List<boa.types.Ast.Expression> getArgumentsList() {
          if (argumentsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(arguments_);
          } else {
            return argumentsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public int getArgumentsCount() {
          if (argumentsBuilder_ == null) {
            return arguments_.size();
          } else {
            return argumentsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public boa.types.Ast.Expression getArguments(int index) {
          if (argumentsBuilder_ == null) {
            return arguments_.get(index);
          } else {
            return argumentsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public Builder setArguments(
            int index, boa.types.Ast.Expression value) {
          if (argumentsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureArgumentsIsMutable();
            arguments_.set(index, value);
            onChanged();
          } else {
            argumentsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public Builder setArguments(
            int index, boa.types.Ast.Expression.Builder builderForValue) {
          if (argumentsBuilder_ == null) {
            ensureArgumentsIsMutable();
            arguments_.set(index, builderForValue.build());
            onChanged();
          } else {
            argumentsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public Builder addArguments(boa.types.Ast.Expression value) {
          if (argumentsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureArgumentsIsMutable();
            arguments_.add(value);
            onChanged();
          } else {
            argumentsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public Builder addArguments(
            int index, boa.types.Ast.Expression value) {
          if (argumentsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureArgumentsIsMutable();
            arguments_.add(index, value);
            onChanged();
          } else {
            argumentsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public Builder addArguments(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (argumentsBuilder_ == null) {
            ensureArgumentsIsMutable();
            arguments_.add(builderForValue.build());
            onChanged();
          } else {
            argumentsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public Builder addArguments(
            int index, boa.types.Ast.Expression.Builder builderForValue) {
          if (argumentsBuilder_ == null) {
            ensureArgumentsIsMutable();
            arguments_.add(index, builderForValue.build());
            onChanged();
          } else {
            argumentsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public Builder addAllArguments(
            java.lang.Iterable<? extends boa.types.Ast.Expression> values) {
          if (argumentsBuilder_ == null) {
            ensureArgumentsIsMutable();
            super.addAll(values, arguments_);
            onChanged();
          } else {
            argumentsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public Builder clearArguments() {
          if (argumentsBuilder_ == null) {
            arguments_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000010);
            onChanged();
          } else {
            argumentsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public Builder removeArguments(int index) {
          if (argumentsBuilder_ == null) {
            ensureArgumentsIsMutable();
            arguments_.remove(index);
            onChanged();
          } else {
            argumentsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder getArgumentsBuilder(
            int index) {
          return getArgumentsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public boa.types.Ast.ExpressionOrBuilder getArgumentsOrBuilder(
            int index) {
          if (argumentsBuilder_ == null) {
            return arguments_.get(index);  } else {
            return argumentsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
             getArgumentsOrBuilderList() {
          if (argumentsBuilder_ != null) {
            return argumentsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(arguments_);
          }
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder addArgumentsBuilder() {
          return getArgumentsFieldBuilder().addBuilder(
              boa.types.Ast.Expression.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder addArgumentsBuilder(
            int index) {
          return getArgumentsFieldBuilder().addBuilder(
              index, boa.types.Ast.Expression.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Expression arguments = 5;</code>
         *
         * <pre>
         ** The arguments of the method invocation 
         * </pre>
         */
        public java.util.List<boa.types.Ast.Expression.Builder> 
             getArgumentsBuilderList() {
          return getArgumentsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getArgumentsFieldBuilder() {
          if (argumentsBuilder_ == null) {
            argumentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    arguments_,
                    ((bitField0_ & 0x00000010) == 0x00000010),
                    getParentForChildren(),
                    isClean());
            arguments_ = null;
          }
          return argumentsBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Expression.SuperMethodInvocation)
      }

      static {
        defaultInstance = new SuperMethodInvocation(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Expression.SuperMethodInvocation)
    }

    public interface ThisExpressionOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind();

      // optional string qualifier = 2;
      /**
       * <code>optional string qualifier = 2;</code>
       *
       * <pre>
       ** The class name qualifier, if any 
       * </pre>
       */
      boolean hasQualifier();
      /**
       * <code>optional string qualifier = 2;</code>
       *
       * <pre>
       ** The class name qualifier, if any 
       * </pre>
       */
      java.lang.String getQualifier();
      /**
       * <code>optional string qualifier = 2;</code>
       *
       * <pre>
       ** The class name qualifier, if any 
       * </pre>
       */
      com.google.protobuf.ByteString
          getQualifierBytes();
    }
    /**
     * Protobuf type {@code boa.types.Expression.ThisExpression}
     *
     * <pre>
     ** A this literal expression 
     * </pre>
     */
    public static final class ThisExpression extends
        com.google.protobuf.GeneratedMessage
        implements ThisExpressionOrBuilder {
      // Use ThisExpression.newBuilder() to construct.
      private ThisExpression(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private ThisExpression(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final ThisExpression defaultInstance;
      public static ThisExpression getDefaultInstance() {
        return defaultInstance;
      }

      public ThisExpression getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private ThisExpression(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                qualifier_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Expression_ThisExpression_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Expression_ThisExpression_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Expression.ThisExpression.class, boa.types.Ast.Expression.ThisExpression.Builder.class);
      }

      public static com.google.protobuf.Parser<ThisExpression> PARSER =
          new com.google.protobuf.AbstractParser<ThisExpression>() {
        public ThisExpression parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ThisExpression(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<ThisExpression> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Expression.ExpressionKind shadowKind_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
        return shadowKind_;
      }

      // optional string qualifier = 2;
      public static final int QUALIFIER_FIELD_NUMBER = 2;
      private java.lang.Object qualifier_;
      /**
       * <code>optional string qualifier = 2;</code>
       *
       * <pre>
       ** The class name qualifier, if any 
       * </pre>
       */
      public boolean hasQualifier() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string qualifier = 2;</code>
       *
       * <pre>
       ** The class name qualifier, if any 
       * </pre>
       */
      public java.lang.String getQualifier() {
        java.lang.Object ref = qualifier_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            qualifier_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string qualifier = 2;</code>
       *
       * <pre>
       ** The class name qualifier, if any 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getQualifierBytes() {
        java.lang.Object ref = qualifier_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          qualifier_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Expression.ExpressionKind.LITERAL;
        qualifier_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getQualifierBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getQualifierBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Expression.ThisExpression parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.ThisExpression parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.ThisExpression parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.ThisExpression parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.ThisExpression parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.ThisExpression parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.ThisExpression parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Expression.ThisExpression parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.ThisExpression parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.ThisExpression parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Expression.ThisExpression prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Expression.ThisExpression}
       *
       * <pre>
       ** A this literal expression 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Expression.ThisExpressionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Expression_ThisExpression_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Expression_ThisExpression_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Expression.ThisExpression.class, boa.types.Ast.Expression.ThisExpression.Builder.class);
        }

        // Construct using boa.types.Ast.Expression.ThisExpression.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.LITERAL;
          bitField0_ = (bitField0_ & ~0x00000001);
          qualifier_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Expression_ThisExpression_descriptor;
        }

        public boa.types.Ast.Expression.ThisExpression getDefaultInstanceForType() {
          return boa.types.Ast.Expression.ThisExpression.getDefaultInstance();
        }

        public boa.types.Ast.Expression.ThisExpression build() {
          boa.types.Ast.Expression.ThisExpression result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Expression.ThisExpression buildPartial() {
          boa.types.Ast.Expression.ThisExpression result = new boa.types.Ast.Expression.ThisExpression(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.qualifier_ = qualifier_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Expression.ThisExpression) {
            return mergeFrom((boa.types.Ast.Expression.ThisExpression)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Expression.ThisExpression other) {
          if (other == boa.types.Ast.Expression.ThisExpression.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasQualifier()) {
            bitField0_ |= 0x00000002;
            qualifier_ = other.qualifier_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Expression.ThisExpression parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Expression.ThisExpression) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];
        private boa.types.Ast.Expression.ExpressionKind shadowKind_ = boa.types.Ast.Expression.ExpressionKind.LITERAL;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.LITERAL;
          onChanged();
          return this;
        }

        // optional string qualifier = 2;
        private java.lang.Object qualifier_ = "";
        /**
         * <code>optional string qualifier = 2;</code>
         *
         * <pre>
         ** The class name qualifier, if any 
         * </pre>
         */
        public boolean hasQualifier() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string qualifier = 2;</code>
         *
         * <pre>
         ** The class name qualifier, if any 
         * </pre>
         */
        public java.lang.String getQualifier() {
          java.lang.Object ref = qualifier_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            qualifier_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string qualifier = 2;</code>
         *
         * <pre>
         ** The class name qualifier, if any 
         * </pre>
         */
        public com.google.protobuf.ByteString
            getQualifierBytes() {
          java.lang.Object ref = qualifier_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            qualifier_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string qualifier = 2;</code>
         *
         * <pre>
         ** The class name qualifier, if any 
         * </pre>
         */
        public Builder setQualifier(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          qualifier_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string qualifier = 2;</code>
         *
         * <pre>
         ** The class name qualifier, if any 
         * </pre>
         */
        public Builder clearQualifier() {
          bitField0_ = (bitField0_ & ~0x00000002);
          qualifier_ = getDefaultInstance().getQualifier();
          onChanged();
          return this;
        }
        /**
         * <code>optional string qualifier = 2;</code>
         *
         * <pre>
         ** The class name qualifier, if any 
         * </pre>
         */
        public Builder setQualifierBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          qualifier_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Expression.ThisExpression)
      }

      static {
        defaultInstance = new ThisExpression(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Expression.ThisExpression)
    }

    public interface TypeLiteralOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind();

      // required string type_lit = 2;
      /**
       * <code>required string type_lit = 2;</code>
       *
       * <pre>
       ** The literal token value 
       * </pre>
       */
      boolean hasTypeLit();
      /**
       * <code>required string type_lit = 2;</code>
       *
       * <pre>
       ** The literal token value 
       * </pre>
       */
      java.lang.String getTypeLit();
      /**
       * <code>required string type_lit = 2;</code>
       *
       * <pre>
       ** The literal token value 
       * </pre>
       */
      com.google.protobuf.ByteString
          getTypeLitBytes();
    }
    /**
     * Protobuf type {@code boa.types.Expression.TypeLiteral}
     *
     * <pre>
     ** A type literal 
     * </pre>
     */
    public static final class TypeLiteral extends
        com.google.protobuf.GeneratedMessage
        implements TypeLiteralOrBuilder {
      // Use TypeLiteral.newBuilder() to construct.
      private TypeLiteral(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private TypeLiteral(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final TypeLiteral defaultInstance;
      public static TypeLiteral getDefaultInstance() {
        return defaultInstance;
      }

      public TypeLiteral getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private TypeLiteral(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                typeLit_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Expression_TypeLiteral_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Expression_TypeLiteral_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Expression.TypeLiteral.class, boa.types.Ast.Expression.TypeLiteral.Builder.class);
      }

      public static com.google.protobuf.Parser<TypeLiteral> PARSER =
          new com.google.protobuf.AbstractParser<TypeLiteral>() {
        public TypeLiteral parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new TypeLiteral(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<TypeLiteral> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Expression.ExpressionKind shadowKind_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
        return shadowKind_;
      }

      // required string type_lit = 2;
      public static final int TYPE_LIT_FIELD_NUMBER = 2;
      private java.lang.Object typeLit_;
      /**
       * <code>required string type_lit = 2;</code>
       *
       * <pre>
       ** The literal token value 
       * </pre>
       */
      public boolean hasTypeLit() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string type_lit = 2;</code>
       *
       * <pre>
       ** The literal token value 
       * </pre>
       */
      public java.lang.String getTypeLit() {
        java.lang.Object ref = typeLit_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            typeLit_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string type_lit = 2;</code>
       *
       * <pre>
       ** The literal token value 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTypeLitBytes() {
        java.lang.Object ref = typeLit_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          typeLit_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Expression.ExpressionKind.LITERAL;
        typeLit_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasTypeLit()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getTypeLitBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getTypeLitBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Expression.TypeLiteral parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.TypeLiteral parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.TypeLiteral parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.TypeLiteral parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.TypeLiteral parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.TypeLiteral parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.TypeLiteral parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Expression.TypeLiteral parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.TypeLiteral parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.TypeLiteral parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Expression.TypeLiteral prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Expression.TypeLiteral}
       *
       * <pre>
       ** A type literal 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Expression.TypeLiteralOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Expression_TypeLiteral_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Expression_TypeLiteral_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Expression.TypeLiteral.class, boa.types.Ast.Expression.TypeLiteral.Builder.class);
        }

        // Construct using boa.types.Ast.Expression.TypeLiteral.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.LITERAL;
          bitField0_ = (bitField0_ & ~0x00000001);
          typeLit_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Expression_TypeLiteral_descriptor;
        }

        public boa.types.Ast.Expression.TypeLiteral getDefaultInstanceForType() {
          return boa.types.Ast.Expression.TypeLiteral.getDefaultInstance();
        }

        public boa.types.Ast.Expression.TypeLiteral build() {
          boa.types.Ast.Expression.TypeLiteral result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Expression.TypeLiteral buildPartial() {
          boa.types.Ast.Expression.TypeLiteral result = new boa.types.Ast.Expression.TypeLiteral(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.typeLit_ = typeLit_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Expression.TypeLiteral) {
            return mergeFrom((boa.types.Ast.Expression.TypeLiteral)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Expression.TypeLiteral other) {
          if (other == boa.types.Ast.Expression.TypeLiteral.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasTypeLit()) {
            bitField0_ |= 0x00000002;
            typeLit_ = other.typeLit_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasTypeLit()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Expression.TypeLiteral parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Expression.TypeLiteral) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];
        private boa.types.Ast.Expression.ExpressionKind shadowKind_ = boa.types.Ast.Expression.ExpressionKind.LITERAL;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = LITERAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.LITERAL;
          onChanged();
          return this;
        }

        // required string type_lit = 2;
        private java.lang.Object typeLit_ = "";
        /**
         * <code>required string type_lit = 2;</code>
         *
         * <pre>
         ** The literal token value 
         * </pre>
         */
        public boolean hasTypeLit() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string type_lit = 2;</code>
         *
         * <pre>
         ** The literal token value 
         * </pre>
         */
        public java.lang.String getTypeLit() {
          java.lang.Object ref = typeLit_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            typeLit_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string type_lit = 2;</code>
         *
         * <pre>
         ** The literal token value 
         * </pre>
         */
        public com.google.protobuf.ByteString
            getTypeLitBytes() {
          java.lang.Object ref = typeLit_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            typeLit_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string type_lit = 2;</code>
         *
         * <pre>
         ** The literal token value 
         * </pre>
         */
        public Builder setTypeLit(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          typeLit_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string type_lit = 2;</code>
         *
         * <pre>
         ** The literal token value 
         * </pre>
         */
        public Builder clearTypeLit() {
          bitField0_ = (bitField0_ & ~0x00000002);
          typeLit_ = getDefaultInstance().getTypeLit();
          onChanged();
          return this;
        }
        /**
         * <code>required string type_lit = 2;</code>
         *
         * <pre>
         ** The literal token value 
         * </pre>
         */
        public Builder setTypeLitBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          typeLit_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Expression.TypeLiteral)
      }

      static {
        defaultInstance = new TypeLiteral(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Expression.TypeLiteral)
    }

    public interface VariableDeclarationExpressionOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = VARDECL];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = VARDECL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = VARDECL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind();

      // repeated .boa.types.Modifier modifiers = 2;
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** The base modifiers declared 
       * </pre>
       */
      java.util.List<boa.types.Ast.Modifier> 
          getModifiersList();
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** The base modifiers declared 
       * </pre>
       */
      boa.types.Ast.Modifier getModifiers(int index);
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** The base modifiers declared 
       * </pre>
       */
      int getModifiersCount();
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** The base modifiers declared 
       * </pre>
       */
      java.util.List<? extends boa.types.Ast.ModifierOrBuilder> 
          getModifiersOrBuilderList();
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** The base modifiers declared 
       * </pre>
       */
      boa.types.Ast.ModifierOrBuilder getModifiersOrBuilder(
          int index);

      // required .boa.types.Type new_type = 3;
      /**
       * <code>required .boa.types.Type new_type = 3;</code>
       *
       * <pre>
       ** The base type declared 
       * </pre>
       */
      boolean hasNewType();
      /**
       * <code>required .boa.types.Type new_type = 3;</code>
       *
       * <pre>
       ** The base type declared 
       * </pre>
       */
      boa.types.Ast.Type getNewType();
      /**
       * <code>required .boa.types.Type new_type = 3;</code>
       *
       * <pre>
       ** The base type declared 
       * </pre>
       */
      boa.types.Ast.TypeOrBuilder getNewTypeOrBuilder();

      // repeated .boa.types.Variable fragments = 4;
      /**
       * <code>repeated .boa.types.Variable fragments = 4;</code>
       *
       * <pre>
       ** The list of variable fragments 
       * </pre>
       */
      java.util.List<boa.types.Ast.Variable> 
          getFragmentsList();
      /**
       * <code>repeated .boa.types.Variable fragments = 4;</code>
       *
       * <pre>
       ** The list of variable fragments 
       * </pre>
       */
      boa.types.Ast.Variable getFragments(int index);
      /**
       * <code>repeated .boa.types.Variable fragments = 4;</code>
       *
       * <pre>
       ** The list of variable fragments 
       * </pre>
       */
      int getFragmentsCount();
      /**
       * <code>repeated .boa.types.Variable fragments = 4;</code>
       *
       * <pre>
       ** The list of variable fragments 
       * </pre>
       */
      java.util.List<? extends boa.types.Ast.VariableOrBuilder> 
          getFragmentsOrBuilderList();
      /**
       * <code>repeated .boa.types.Variable fragments = 4;</code>
       *
       * <pre>
       ** The list of variable fragments 
       * </pre>
       */
      boa.types.Ast.VariableOrBuilder getFragmentsOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code boa.types.Expression.VariableDeclarationExpression}
     *
     * <pre>
     ** A variable declaration expression 
     * </pre>
     */
    public static final class VariableDeclarationExpression extends
        com.google.protobuf.GeneratedMessage
        implements VariableDeclarationExpressionOrBuilder {
      // Use VariableDeclarationExpression.newBuilder() to construct.
      private VariableDeclarationExpression(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private VariableDeclarationExpression(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final VariableDeclarationExpression defaultInstance;
      public static VariableDeclarationExpression getDefaultInstance() {
        return defaultInstance;
      }

      public VariableDeclarationExpression getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private VariableDeclarationExpression(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  modifiers_ = new java.util.ArrayList<boa.types.Ast.Modifier>();
                  mutable_bitField0_ |= 0x00000002;
                }
                modifiers_.add(input.readMessage(boa.types.Ast.Modifier.PARSER, extensionRegistry));
                break;
              }
              case 26: {
                boa.types.Ast.Type.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = newType_.toBuilder();
                }
                newType_ = input.readMessage(boa.types.Ast.Type.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(newType_);
                  newType_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 34: {
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                  fragments_ = new java.util.ArrayList<boa.types.Ast.Variable>();
                  mutable_bitField0_ |= 0x00000008;
                }
                fragments_.add(input.readMessage(boa.types.Ast.Variable.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            modifiers_ = java.util.Collections.unmodifiableList(modifiers_);
          }
          if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
            fragments_ = java.util.Collections.unmodifiableList(fragments_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Expression_VariableDeclarationExpression_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Expression_VariableDeclarationExpression_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Expression.VariableDeclarationExpression.class, boa.types.Ast.Expression.VariableDeclarationExpression.Builder.class);
      }

      public static com.google.protobuf.Parser<VariableDeclarationExpression> PARSER =
          new com.google.protobuf.AbstractParser<VariableDeclarationExpression>() {
        public VariableDeclarationExpression parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new VariableDeclarationExpression(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<VariableDeclarationExpression> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = VARDECL];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Expression.ExpressionKind shadowKind_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = VARDECL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = VARDECL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
        return shadowKind_;
      }

      // repeated .boa.types.Modifier modifiers = 2;
      public static final int MODIFIERS_FIELD_NUMBER = 2;
      private java.util.List<boa.types.Ast.Modifier> modifiers_;
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** The base modifiers declared 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Modifier> getModifiersList() {
        return modifiers_;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** The base modifiers declared 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.ModifierOrBuilder> 
          getModifiersOrBuilderList() {
        return modifiers_;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** The base modifiers declared 
       * </pre>
       */
      public int getModifiersCount() {
        return modifiers_.size();
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** The base modifiers declared 
       * </pre>
       */
      public boa.types.Ast.Modifier getModifiers(int index) {
        return modifiers_.get(index);
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers = 2;</code>
       *
       * <pre>
       ** The base modifiers declared 
       * </pre>
       */
      public boa.types.Ast.ModifierOrBuilder getModifiersOrBuilder(
          int index) {
        return modifiers_.get(index);
      }

      // required .boa.types.Type new_type = 3;
      public static final int NEW_TYPE_FIELD_NUMBER = 3;
      private boa.types.Ast.Type newType_;
      /**
       * <code>required .boa.types.Type new_type = 3;</code>
       *
       * <pre>
       ** The base type declared 
       * </pre>
       */
      public boolean hasNewType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .boa.types.Type new_type = 3;</code>
       *
       * <pre>
       ** The base type declared 
       * </pre>
       */
      public boa.types.Ast.Type getNewType() {
        return newType_;
      }
      /**
       * <code>required .boa.types.Type new_type = 3;</code>
       *
       * <pre>
       ** The base type declared 
       * </pre>
       */
      public boa.types.Ast.TypeOrBuilder getNewTypeOrBuilder() {
        return newType_;
      }

      // repeated .boa.types.Variable fragments = 4;
      public static final int FRAGMENTS_FIELD_NUMBER = 4;
      private java.util.List<boa.types.Ast.Variable> fragments_;
      /**
       * <code>repeated .boa.types.Variable fragments = 4;</code>
       *
       * <pre>
       ** The list of variable fragments 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Variable> getFragmentsList() {
        return fragments_;
      }
      /**
       * <code>repeated .boa.types.Variable fragments = 4;</code>
       *
       * <pre>
       ** The list of variable fragments 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.VariableOrBuilder> 
          getFragmentsOrBuilderList() {
        return fragments_;
      }
      /**
       * <code>repeated .boa.types.Variable fragments = 4;</code>
       *
       * <pre>
       ** The list of variable fragments 
       * </pre>
       */
      public int getFragmentsCount() {
        return fragments_.size();
      }
      /**
       * <code>repeated .boa.types.Variable fragments = 4;</code>
       *
       * <pre>
       ** The list of variable fragments 
       * </pre>
       */
      public boa.types.Ast.Variable getFragments(int index) {
        return fragments_.get(index);
      }
      /**
       * <code>repeated .boa.types.Variable fragments = 4;</code>
       *
       * <pre>
       ** The list of variable fragments 
       * </pre>
       */
      public boa.types.Ast.VariableOrBuilder getFragmentsOrBuilder(
          int index) {
        return fragments_.get(index);
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Expression.ExpressionKind.VARDECL;
        modifiers_ = java.util.Collections.emptyList();
        newType_ = boa.types.Ast.Type.getDefaultInstance();
        fragments_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasNewType()) {
          memoizedIsInitialized = 0;
          return false;
        }
        for (int i = 0; i < getModifiersCount(); i++) {
          if (!getModifiers(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        if (!getNewType().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        for (int i = 0; i < getFragmentsCount(); i++) {
          if (!getFragments(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        for (int i = 0; i < modifiers_.size(); i++) {
          output.writeMessage(2, modifiers_.get(i));
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(3, newType_);
        }
        for (int i = 0; i < fragments_.size(); i++) {
          output.writeMessage(4, fragments_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        for (int i = 0; i < modifiers_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, modifiers_.get(i));
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, newType_);
        }
        for (int i = 0; i < fragments_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, fragments_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Expression.VariableDeclarationExpression parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.VariableDeclarationExpression parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.VariableDeclarationExpression parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.VariableDeclarationExpression parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.VariableDeclarationExpression parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.VariableDeclarationExpression parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.VariableDeclarationExpression parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Expression.VariableDeclarationExpression parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.VariableDeclarationExpression parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.VariableDeclarationExpression parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Expression.VariableDeclarationExpression prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Expression.VariableDeclarationExpression}
       *
       * <pre>
       ** A variable declaration expression 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Expression.VariableDeclarationExpressionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Expression_VariableDeclarationExpression_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Expression_VariableDeclarationExpression_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Expression.VariableDeclarationExpression.class, boa.types.Ast.Expression.VariableDeclarationExpression.Builder.class);
        }

        // Construct using boa.types.Ast.Expression.VariableDeclarationExpression.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getModifiersFieldBuilder();
            getNewTypeFieldBuilder();
            getFragmentsFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.VARDECL;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (modifiersBuilder_ == null) {
            modifiers_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            modifiersBuilder_.clear();
          }
          if (newTypeBuilder_ == null) {
            newType_ = boa.types.Ast.Type.getDefaultInstance();
          } else {
            newTypeBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          if (fragmentsBuilder_ == null) {
            fragments_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            fragmentsBuilder_.clear();
          }
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Expression_VariableDeclarationExpression_descriptor;
        }

        public boa.types.Ast.Expression.VariableDeclarationExpression getDefaultInstanceForType() {
          return boa.types.Ast.Expression.VariableDeclarationExpression.getDefaultInstance();
        }

        public boa.types.Ast.Expression.VariableDeclarationExpression build() {
          boa.types.Ast.Expression.VariableDeclarationExpression result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Expression.VariableDeclarationExpression buildPartial() {
          boa.types.Ast.Expression.VariableDeclarationExpression result = new boa.types.Ast.Expression.VariableDeclarationExpression(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (modifiersBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              modifiers_ = java.util.Collections.unmodifiableList(modifiers_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.modifiers_ = modifiers_;
          } else {
            result.modifiers_ = modifiersBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000002;
          }
          if (newTypeBuilder_ == null) {
            result.newType_ = newType_;
          } else {
            result.newType_ = newTypeBuilder_.build();
          }
          if (fragmentsBuilder_ == null) {
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
              fragments_ = java.util.Collections.unmodifiableList(fragments_);
              bitField0_ = (bitField0_ & ~0x00000008);
            }
            result.fragments_ = fragments_;
          } else {
            result.fragments_ = fragmentsBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Expression.VariableDeclarationExpression) {
            return mergeFrom((boa.types.Ast.Expression.VariableDeclarationExpression)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Expression.VariableDeclarationExpression other) {
          if (other == boa.types.Ast.Expression.VariableDeclarationExpression.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (modifiersBuilder_ == null) {
            if (!other.modifiers_.isEmpty()) {
              if (modifiers_.isEmpty()) {
                modifiers_ = other.modifiers_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureModifiersIsMutable();
                modifiers_.addAll(other.modifiers_);
              }
              onChanged();
            }
          } else {
            if (!other.modifiers_.isEmpty()) {
              if (modifiersBuilder_.isEmpty()) {
                modifiersBuilder_.dispose();
                modifiersBuilder_ = null;
                modifiers_ = other.modifiers_;
                bitField0_ = (bitField0_ & ~0x00000002);
                modifiersBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getModifiersFieldBuilder() : null;
              } else {
                modifiersBuilder_.addAllMessages(other.modifiers_);
              }
            }
          }
          if (other.hasNewType()) {
            mergeNewType(other.getNewType());
          }
          if (fragmentsBuilder_ == null) {
            if (!other.fragments_.isEmpty()) {
              if (fragments_.isEmpty()) {
                fragments_ = other.fragments_;
                bitField0_ = (bitField0_ & ~0x00000008);
              } else {
                ensureFragmentsIsMutable();
                fragments_.addAll(other.fragments_);
              }
              onChanged();
            }
          } else {
            if (!other.fragments_.isEmpty()) {
              if (fragmentsBuilder_.isEmpty()) {
                fragmentsBuilder_.dispose();
                fragmentsBuilder_ = null;
                fragments_ = other.fragments_;
                bitField0_ = (bitField0_ & ~0x00000008);
                fragmentsBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getFragmentsFieldBuilder() : null;
              } else {
                fragmentsBuilder_.addAllMessages(other.fragments_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasNewType()) {
            
            return false;
          }
          for (int i = 0; i < getModifiersCount(); i++) {
            if (!getModifiers(i).isInitialized()) {
              
              return false;
            }
          }
          if (!getNewType().isInitialized()) {
            
            return false;
          }
          for (int i = 0; i < getFragmentsCount(); i++) {
            if (!getFragments(i).isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Expression.VariableDeclarationExpression parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Expression.VariableDeclarationExpression) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = VARDECL];
        private boa.types.Ast.Expression.ExpressionKind shadowKind_ = boa.types.Ast.Expression.ExpressionKind.VARDECL;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = VARDECL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = VARDECL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = VARDECL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = VARDECL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.VARDECL;
          onChanged();
          return this;
        }

        // repeated .boa.types.Modifier modifiers = 2;
        private java.util.List<boa.types.Ast.Modifier> modifiers_ =
          java.util.Collections.emptyList();
        private void ensureModifiersIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            modifiers_ = new java.util.ArrayList<boa.types.Ast.Modifier>(modifiers_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Modifier, boa.types.Ast.Modifier.Builder, boa.types.Ast.ModifierOrBuilder> modifiersBuilder_;

        /**
         * <code>repeated .boa.types.Modifier modifiers = 2;</code>
         *
         * <pre>
         ** The base modifiers declared 
         * </pre>
         */
        public java.util.List<boa.types.Ast.Modifier> getModifiersList() {
          if (modifiersBuilder_ == null) {
            return java.util.Collections.unmodifiableList(modifiers_);
          } else {
            return modifiersBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .boa.types.Modifier modifiers = 2;</code>
         *
         * <pre>
         ** The base modifiers declared 
         * </pre>
         */
        public int getModifiersCount() {
          if (modifiersBuilder_ == null) {
            return modifiers_.size();
          } else {
            return modifiersBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .boa.types.Modifier modifiers = 2;</code>
         *
         * <pre>
         ** The base modifiers declared 
         * </pre>
         */
        public boa.types.Ast.Modifier getModifiers(int index) {
          if (modifiersBuilder_ == null) {
            return modifiers_.get(index);
          } else {
            return modifiersBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .boa.types.Modifier modifiers = 2;</code>
         *
         * <pre>
         ** The base modifiers declared 
         * </pre>
         */
        public Builder setModifiers(
            int index, boa.types.Ast.Modifier value) {
          if (modifiersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureModifiersIsMutable();
            modifiers_.set(index, value);
            onChanged();
          } else {
            modifiersBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Modifier modifiers = 2;</code>
         *
         * <pre>
         ** The base modifiers declared 
         * </pre>
         */
        public Builder setModifiers(
            int index, boa.types.Ast.Modifier.Builder builderForValue) {
          if (modifiersBuilder_ == null) {
            ensureModifiersIsMutable();
            modifiers_.set(index, builderForValue.build());
            onChanged();
          } else {
            modifiersBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Modifier modifiers = 2;</code>
         *
         * <pre>
         ** The base modifiers declared 
         * </pre>
         */
        public Builder addModifiers(boa.types.Ast.Modifier value) {
          if (modifiersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureModifiersIsMutable();
            modifiers_.add(value);
            onChanged();
          } else {
            modifiersBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Modifier modifiers = 2;</code>
         *
         * <pre>
         ** The base modifiers declared 
         * </pre>
         */
        public Builder addModifiers(
            int index, boa.types.Ast.Modifier value) {
          if (modifiersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureModifiersIsMutable();
            modifiers_.add(index, value);
            onChanged();
          } else {
            modifiersBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Modifier modifiers = 2;</code>
         *
         * <pre>
         ** The base modifiers declared 
         * </pre>
         */
        public Builder addModifiers(
            boa.types.Ast.Modifier.Builder builderForValue) {
          if (modifiersBuilder_ == null) {
            ensureModifiersIsMutable();
            modifiers_.add(builderForValue.build());
            onChanged();
          } else {
            modifiersBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Modifier modifiers = 2;</code>
         *
         * <pre>
         ** The base modifiers declared 
         * </pre>
         */
        public Builder addModifiers(
            int index, boa.types.Ast.Modifier.Builder builderForValue) {
          if (modifiersBuilder_ == null) {
            ensureModifiersIsMutable();
            modifiers_.add(index, builderForValue.build());
            onChanged();
          } else {
            modifiersBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Modifier modifiers = 2;</code>
         *
         * <pre>
         ** The base modifiers declared 
         * </pre>
         */
        public Builder addAllModifiers(
            java.lang.Iterable<? extends boa.types.Ast.Modifier> values) {
          if (modifiersBuilder_ == null) {
            ensureModifiersIsMutable();
            super.addAll(values, modifiers_);
            onChanged();
          } else {
            modifiersBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Modifier modifiers = 2;</code>
         *
         * <pre>
         ** The base modifiers declared 
         * </pre>
         */
        public Builder clearModifiers() {
          if (modifiersBuilder_ == null) {
            modifiers_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            modifiersBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Modifier modifiers = 2;</code>
         *
         * <pre>
         ** The base modifiers declared 
         * </pre>
         */
        public Builder removeModifiers(int index) {
          if (modifiersBuilder_ == null) {
            ensureModifiersIsMutable();
            modifiers_.remove(index);
            onChanged();
          } else {
            modifiersBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Modifier modifiers = 2;</code>
         *
         * <pre>
         ** The base modifiers declared 
         * </pre>
         */
        public boa.types.Ast.Modifier.Builder getModifiersBuilder(
            int index) {
          return getModifiersFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .boa.types.Modifier modifiers = 2;</code>
         *
         * <pre>
         ** The base modifiers declared 
         * </pre>
         */
        public boa.types.Ast.ModifierOrBuilder getModifiersOrBuilder(
            int index) {
          if (modifiersBuilder_ == null) {
            return modifiers_.get(index);  } else {
            return modifiersBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .boa.types.Modifier modifiers = 2;</code>
         *
         * <pre>
         ** The base modifiers declared 
         * </pre>
         */
        public java.util.List<? extends boa.types.Ast.ModifierOrBuilder> 
             getModifiersOrBuilderList() {
          if (modifiersBuilder_ != null) {
            return modifiersBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(modifiers_);
          }
        }
        /**
         * <code>repeated .boa.types.Modifier modifiers = 2;</code>
         *
         * <pre>
         ** The base modifiers declared 
         * </pre>
         */
        public boa.types.Ast.Modifier.Builder addModifiersBuilder() {
          return getModifiersFieldBuilder().addBuilder(
              boa.types.Ast.Modifier.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Modifier modifiers = 2;</code>
         *
         * <pre>
         ** The base modifiers declared 
         * </pre>
         */
        public boa.types.Ast.Modifier.Builder addModifiersBuilder(
            int index) {
          return getModifiersFieldBuilder().addBuilder(
              index, boa.types.Ast.Modifier.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Modifier modifiers = 2;</code>
         *
         * <pre>
         ** The base modifiers declared 
         * </pre>
         */
        public java.util.List<boa.types.Ast.Modifier.Builder> 
             getModifiersBuilderList() {
          return getModifiersFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Modifier, boa.types.Ast.Modifier.Builder, boa.types.Ast.ModifierOrBuilder> 
            getModifiersFieldBuilder() {
          if (modifiersBuilder_ == null) {
            modifiersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                boa.types.Ast.Modifier, boa.types.Ast.Modifier.Builder, boa.types.Ast.ModifierOrBuilder>(
                    modifiers_,
                    ((bitField0_ & 0x00000002) == 0x00000002),
                    getParentForChildren(),
                    isClean());
            modifiers_ = null;
          }
          return modifiersBuilder_;
        }

        // required .boa.types.Type new_type = 3;
        private boa.types.Ast.Type newType_ = boa.types.Ast.Type.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> newTypeBuilder_;
        /**
         * <code>required .boa.types.Type new_type = 3;</code>
         *
         * <pre>
         ** The base type declared 
         * </pre>
         */
        public boolean hasNewType() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required .boa.types.Type new_type = 3;</code>
         *
         * <pre>
         ** The base type declared 
         * </pre>
         */
        public boa.types.Ast.Type getNewType() {
          if (newTypeBuilder_ == null) {
            return newType_;
          } else {
            return newTypeBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Type new_type = 3;</code>
         *
         * <pre>
         ** The base type declared 
         * </pre>
         */
        public Builder setNewType(boa.types.Ast.Type value) {
          if (newTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            newType_ = value;
            onChanged();
          } else {
            newTypeBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Type new_type = 3;</code>
         *
         * <pre>
         ** The base type declared 
         * </pre>
         */
        public Builder setNewType(
            boa.types.Ast.Type.Builder builderForValue) {
          if (newTypeBuilder_ == null) {
            newType_ = builderForValue.build();
            onChanged();
          } else {
            newTypeBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Type new_type = 3;</code>
         *
         * <pre>
         ** The base type declared 
         * </pre>
         */
        public Builder mergeNewType(boa.types.Ast.Type value) {
          if (newTypeBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                newType_ != boa.types.Ast.Type.getDefaultInstance()) {
              newType_ =
                boa.types.Ast.Type.newBuilder(newType_).mergeFrom(value).buildPartial();
            } else {
              newType_ = value;
            }
            onChanged();
          } else {
            newTypeBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Type new_type = 3;</code>
         *
         * <pre>
         ** The base type declared 
         * </pre>
         */
        public Builder clearNewType() {
          if (newTypeBuilder_ == null) {
            newType_ = boa.types.Ast.Type.getDefaultInstance();
            onChanged();
          } else {
            newTypeBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <code>required .boa.types.Type new_type = 3;</code>
         *
         * <pre>
         ** The base type declared 
         * </pre>
         */
        public boa.types.Ast.Type.Builder getNewTypeBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getNewTypeFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Type new_type = 3;</code>
         *
         * <pre>
         ** The base type declared 
         * </pre>
         */
        public boa.types.Ast.TypeOrBuilder getNewTypeOrBuilder() {
          if (newTypeBuilder_ != null) {
            return newTypeBuilder_.getMessageOrBuilder();
          } else {
            return newType_;
          }
        }
        /**
         * <code>required .boa.types.Type new_type = 3;</code>
         *
         * <pre>
         ** The base type declared 
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> 
            getNewTypeFieldBuilder() {
          if (newTypeBuilder_ == null) {
            newTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder>(
                    newType_,
                    getParentForChildren(),
                    isClean());
            newType_ = null;
          }
          return newTypeBuilder_;
        }

        // repeated .boa.types.Variable fragments = 4;
        private java.util.List<boa.types.Ast.Variable> fragments_ =
          java.util.Collections.emptyList();
        private void ensureFragmentsIsMutable() {
          if (!((bitField0_ & 0x00000008) == 0x00000008)) {
            fragments_ = new java.util.ArrayList<boa.types.Ast.Variable>(fragments_);
            bitField0_ |= 0x00000008;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Variable, boa.types.Ast.Variable.Builder, boa.types.Ast.VariableOrBuilder> fragmentsBuilder_;

        /**
         * <code>repeated .boa.types.Variable fragments = 4;</code>
         *
         * <pre>
         ** The list of variable fragments 
         * </pre>
         */
        public java.util.List<boa.types.Ast.Variable> getFragmentsList() {
          if (fragmentsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(fragments_);
          } else {
            return fragmentsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .boa.types.Variable fragments = 4;</code>
         *
         * <pre>
         ** The list of variable fragments 
         * </pre>
         */
        public int getFragmentsCount() {
          if (fragmentsBuilder_ == null) {
            return fragments_.size();
          } else {
            return fragmentsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .boa.types.Variable fragments = 4;</code>
         *
         * <pre>
         ** The list of variable fragments 
         * </pre>
         */
        public boa.types.Ast.Variable getFragments(int index) {
          if (fragmentsBuilder_ == null) {
            return fragments_.get(index);
          } else {
            return fragmentsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .boa.types.Variable fragments = 4;</code>
         *
         * <pre>
         ** The list of variable fragments 
         * </pre>
         */
        public Builder setFragments(
            int index, boa.types.Ast.Variable value) {
          if (fragmentsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureFragmentsIsMutable();
            fragments_.set(index, value);
            onChanged();
          } else {
            fragmentsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Variable fragments = 4;</code>
         *
         * <pre>
         ** The list of variable fragments 
         * </pre>
         */
        public Builder setFragments(
            int index, boa.types.Ast.Variable.Builder builderForValue) {
          if (fragmentsBuilder_ == null) {
            ensureFragmentsIsMutable();
            fragments_.set(index, builderForValue.build());
            onChanged();
          } else {
            fragmentsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Variable fragments = 4;</code>
         *
         * <pre>
         ** The list of variable fragments 
         * </pre>
         */
        public Builder addFragments(boa.types.Ast.Variable value) {
          if (fragmentsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureFragmentsIsMutable();
            fragments_.add(value);
            onChanged();
          } else {
            fragmentsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Variable fragments = 4;</code>
         *
         * <pre>
         ** The list of variable fragments 
         * </pre>
         */
        public Builder addFragments(
            int index, boa.types.Ast.Variable value) {
          if (fragmentsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureFragmentsIsMutable();
            fragments_.add(index, value);
            onChanged();
          } else {
            fragmentsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Variable fragments = 4;</code>
         *
         * <pre>
         ** The list of variable fragments 
         * </pre>
         */
        public Builder addFragments(
            boa.types.Ast.Variable.Builder builderForValue) {
          if (fragmentsBuilder_ == null) {
            ensureFragmentsIsMutable();
            fragments_.add(builderForValue.build());
            onChanged();
          } else {
            fragmentsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Variable fragments = 4;</code>
         *
         * <pre>
         ** The list of variable fragments 
         * </pre>
         */
        public Builder addFragments(
            int index, boa.types.Ast.Variable.Builder builderForValue) {
          if (fragmentsBuilder_ == null) {
            ensureFragmentsIsMutable();
            fragments_.add(index, builderForValue.build());
            onChanged();
          } else {
            fragmentsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Variable fragments = 4;</code>
         *
         * <pre>
         ** The list of variable fragments 
         * </pre>
         */
        public Builder addAllFragments(
            java.lang.Iterable<? extends boa.types.Ast.Variable> values) {
          if (fragmentsBuilder_ == null) {
            ensureFragmentsIsMutable();
            super.addAll(values, fragments_);
            onChanged();
          } else {
            fragmentsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Variable fragments = 4;</code>
         *
         * <pre>
         ** The list of variable fragments 
         * </pre>
         */
        public Builder clearFragments() {
          if (fragmentsBuilder_ == null) {
            fragments_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
            onChanged();
          } else {
            fragmentsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Variable fragments = 4;</code>
         *
         * <pre>
         ** The list of variable fragments 
         * </pre>
         */
        public Builder removeFragments(int index) {
          if (fragmentsBuilder_ == null) {
            ensureFragmentsIsMutable();
            fragments_.remove(index);
            onChanged();
          } else {
            fragmentsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .boa.types.Variable fragments = 4;</code>
         *
         * <pre>
         ** The list of variable fragments 
         * </pre>
         */
        public boa.types.Ast.Variable.Builder getFragmentsBuilder(
            int index) {
          return getFragmentsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .boa.types.Variable fragments = 4;</code>
         *
         * <pre>
         ** The list of variable fragments 
         * </pre>
         */
        public boa.types.Ast.VariableOrBuilder getFragmentsOrBuilder(
            int index) {
          if (fragmentsBuilder_ == null) {
            return fragments_.get(index);  } else {
            return fragmentsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .boa.types.Variable fragments = 4;</code>
         *
         * <pre>
         ** The list of variable fragments 
         * </pre>
         */
        public java.util.List<? extends boa.types.Ast.VariableOrBuilder> 
             getFragmentsOrBuilderList() {
          if (fragmentsBuilder_ != null) {
            return fragmentsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(fragments_);
          }
        }
        /**
         * <code>repeated .boa.types.Variable fragments = 4;</code>
         *
         * <pre>
         ** The list of variable fragments 
         * </pre>
         */
        public boa.types.Ast.Variable.Builder addFragmentsBuilder() {
          return getFragmentsFieldBuilder().addBuilder(
              boa.types.Ast.Variable.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Variable fragments = 4;</code>
         *
         * <pre>
         ** The list of variable fragments 
         * </pre>
         */
        public boa.types.Ast.Variable.Builder addFragmentsBuilder(
            int index) {
          return getFragmentsFieldBuilder().addBuilder(
              index, boa.types.Ast.Variable.getDefaultInstance());
        }
        /**
         * <code>repeated .boa.types.Variable fragments = 4;</code>
         *
         * <pre>
         ** The list of variable fragments 
         * </pre>
         */
        public java.util.List<boa.types.Ast.Variable.Builder> 
             getFragmentsBuilderList() {
          return getFragmentsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            boa.types.Ast.Variable, boa.types.Ast.Variable.Builder, boa.types.Ast.VariableOrBuilder> 
            getFragmentsFieldBuilder() {
          if (fragmentsBuilder_ == null) {
            fragmentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                boa.types.Ast.Variable, boa.types.Ast.Variable.Builder, boa.types.Ast.VariableOrBuilder>(
                    fragments_,
                    ((bitField0_ & 0x00000008) == 0x00000008),
                    getParentForChildren(),
                    isClean());
            fragments_ = null;
          }
          return fragmentsBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Expression.VariableDeclarationExpression)
      }

      static {
        defaultInstance = new VariableDeclarationExpression(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Expression.VariableDeclarationExpression)
    }

    public interface VarAccessExpressionOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = VARACCESS];
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = VARACCESS];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = VARACCESS];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Expression.ExpressionKind getShadowKind();

      // required string identifier = 2;
      /**
       * <code>required string identifier = 2;</code>
       *
       * <pre>
       ** The identifier of what is being accessed 
       * </pre>
       */
      boolean hasIdentifier();
      /**
       * <code>required string identifier = 2;</code>
       *
       * <pre>
       ** The identifier of what is being accessed 
       * </pre>
       */
      java.lang.String getIdentifier();
      /**
       * <code>required string identifier = 2;</code>
       *
       * <pre>
       ** The identifier of what is being accessed 
       * </pre>
       */
      com.google.protobuf.ByteString
          getIdentifierBytes();

      // optional .boa.types.Expression qualifier = 3;
      /**
       * <code>optional .boa.types.Expression qualifier = 3;</code>
       *
       * <pre>
       ** For fields, the qualifier 
       * </pre>
       */
      boolean hasQualifier();
      /**
       * <code>optional .boa.types.Expression qualifier = 3;</code>
       *
       * <pre>
       ** For fields, the qualifier 
       * </pre>
       */
      boa.types.Ast.Expression getQualifier();
      /**
       * <code>optional .boa.types.Expression qualifier = 3;</code>
       *
       * <pre>
       ** For fields, the qualifier 
       * </pre>
       */
      boa.types.Ast.ExpressionOrBuilder getQualifierOrBuilder();
    }
    /**
     * Protobuf type {@code boa.types.Expression.VarAccessExpression}
     *
     * <pre>
     ** A variable access expression 
     * </pre>
     */
    public static final class VarAccessExpression extends
        com.google.protobuf.GeneratedMessage
        implements VarAccessExpressionOrBuilder {
      // Use VarAccessExpression.newBuilder() to construct.
      private VarAccessExpression(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private VarAccessExpression(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final VarAccessExpression defaultInstance;
      public static VarAccessExpression getDefaultInstance() {
        return defaultInstance;
      }

      public VarAccessExpression getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private VarAccessExpression(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Expression.ExpressionKind value = boa.types.Ast.Expression.ExpressionKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                identifier_ = input.readBytes();
                break;
              }
              case 26: {
                boa.types.Ast.Expression.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = qualifier_.toBuilder();
                }
                qualifier_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(qualifier_);
                  qualifier_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Expression_VarAccessExpression_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Expression_VarAccessExpression_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Expression.VarAccessExpression.class, boa.types.Ast.Expression.VarAccessExpression.Builder.class);
      }

      public static com.google.protobuf.Parser<VarAccessExpression> PARSER =
          new com.google.protobuf.AbstractParser<VarAccessExpression>() {
        public VarAccessExpression parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new VarAccessExpression(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<VarAccessExpression> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = VARACCESS];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Expression.ExpressionKind shadowKind_;
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = VARACCESS];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = VARACCESS];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
        return shadowKind_;
      }

      // required string identifier = 2;
      public static final int IDENTIFIER_FIELD_NUMBER = 2;
      private java.lang.Object identifier_;
      /**
       * <code>required string identifier = 2;</code>
       *
       * <pre>
       ** The identifier of what is being accessed 
       * </pre>
       */
      public boolean hasIdentifier() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string identifier = 2;</code>
       *
       * <pre>
       ** The identifier of what is being accessed 
       * </pre>
       */
      public java.lang.String getIdentifier() {
        java.lang.Object ref = identifier_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            identifier_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string identifier = 2;</code>
       *
       * <pre>
       ** The identifier of what is being accessed 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIdentifierBytes() {
        java.lang.Object ref = identifier_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          identifier_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional .boa.types.Expression qualifier = 3;
      public static final int QUALIFIER_FIELD_NUMBER = 3;
      private boa.types.Ast.Expression qualifier_;
      /**
       * <code>optional .boa.types.Expression qualifier = 3;</code>
       *
       * <pre>
       ** For fields, the qualifier 
       * </pre>
       */
      public boolean hasQualifier() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .boa.types.Expression qualifier = 3;</code>
       *
       * <pre>
       ** For fields, the qualifier 
       * </pre>
       */
      public boa.types.Ast.Expression getQualifier() {
        return qualifier_;
      }
      /**
       * <code>optional .boa.types.Expression qualifier = 3;</code>
       *
       * <pre>
       ** For fields, the qualifier 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getQualifierOrBuilder() {
        return qualifier_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Expression.ExpressionKind.VARACCESS;
        identifier_ = "";
        qualifier_ = boa.types.Ast.Expression.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasIdentifier()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (hasQualifier()) {
          if (!getQualifier().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getIdentifierBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(3, qualifier_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getIdentifierBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, qualifier_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Expression.VarAccessExpression parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.VarAccessExpression parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.VarAccessExpression parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Expression.VarAccessExpression parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Expression.VarAccessExpression parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.VarAccessExpression parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.VarAccessExpression parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Expression.VarAccessExpression parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Expression.VarAccessExpression parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Expression.VarAccessExpression parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Expression.VarAccessExpression prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Expression.VarAccessExpression}
       *
       * <pre>
       ** A variable access expression 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Expression.VarAccessExpressionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Expression_VarAccessExpression_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Expression_VarAccessExpression_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Expression.VarAccessExpression.class, boa.types.Ast.Expression.VarAccessExpression.Builder.class);
        }

        // Construct using boa.types.Ast.Expression.VarAccessExpression.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getQualifierFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.VARACCESS;
          bitField0_ = (bitField0_ & ~0x00000001);
          identifier_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          if (qualifierBuilder_ == null) {
            qualifier_ = boa.types.Ast.Expression.getDefaultInstance();
          } else {
            qualifierBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Expression_VarAccessExpression_descriptor;
        }

        public boa.types.Ast.Expression.VarAccessExpression getDefaultInstanceForType() {
          return boa.types.Ast.Expression.VarAccessExpression.getDefaultInstance();
        }

        public boa.types.Ast.Expression.VarAccessExpression build() {
          boa.types.Ast.Expression.VarAccessExpression result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Expression.VarAccessExpression buildPartial() {
          boa.types.Ast.Expression.VarAccessExpression result = new boa.types.Ast.Expression.VarAccessExpression(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.identifier_ = identifier_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          if (qualifierBuilder_ == null) {
            result.qualifier_ = qualifier_;
          } else {
            result.qualifier_ = qualifierBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Expression.VarAccessExpression) {
            return mergeFrom((boa.types.Ast.Expression.VarAccessExpression)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Expression.VarAccessExpression other) {
          if (other == boa.types.Ast.Expression.VarAccessExpression.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasIdentifier()) {
            bitField0_ |= 0x00000002;
            identifier_ = other.identifier_;
            onChanged();
          }
          if (other.hasQualifier()) {
            mergeQualifier(other.getQualifier());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasIdentifier()) {
            
            return false;
          }
          if (hasQualifier()) {
            if (!getQualifier().isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Expression.VarAccessExpression parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Expression.VarAccessExpression) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = VARACCESS];
        private boa.types.Ast.Expression.ExpressionKind shadowKind_ = boa.types.Ast.Expression.ExpressionKind.VARACCESS;
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = VARACCESS];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = VARACCESS];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Expression.ExpressionKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = VARACCESS];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Expression.ExpressionKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Expression.ExpressionKind shadow_kind = 1 [default = VARACCESS];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Expression.ExpressionKind.VARACCESS;
          onChanged();
          return this;
        }

        // required string identifier = 2;
        private java.lang.Object identifier_ = "";
        /**
         * <code>required string identifier = 2;</code>
         *
         * <pre>
         ** The identifier of what is being accessed 
         * </pre>
         */
        public boolean hasIdentifier() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string identifier = 2;</code>
         *
         * <pre>
         ** The identifier of what is being accessed 
         * </pre>
         */
        public java.lang.String getIdentifier() {
          java.lang.Object ref = identifier_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            identifier_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string identifier = 2;</code>
         *
         * <pre>
         ** The identifier of what is being accessed 
         * </pre>
         */
        public com.google.protobuf.ByteString
            getIdentifierBytes() {
          java.lang.Object ref = identifier_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            identifier_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string identifier = 2;</code>
         *
         * <pre>
         ** The identifier of what is being accessed 
         * </pre>
         */
        public Builder setIdentifier(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          identifier_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string identifier = 2;</code>
         *
         * <pre>
         ** The identifier of what is being accessed 
         * </pre>
         */
        public Builder clearIdentifier() {
          bitField0_ = (bitField0_ & ~0x00000002);
          identifier_ = getDefaultInstance().getIdentifier();
          onChanged();
          return this;
        }
        /**
         * <code>required string identifier = 2;</code>
         *
         * <pre>
         ** The identifier of what is being accessed 
         * </pre>
         */
        public Builder setIdentifierBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          identifier_ = value;
          onChanged();
          return this;
        }

        // optional .boa.types.Expression qualifier = 3;
        private boa.types.Ast.Expression qualifier_ = boa.types.Ast.Expression.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> qualifierBuilder_;
        /**
         * <code>optional .boa.types.Expression qualifier = 3;</code>
         *
         * <pre>
         ** For fields, the qualifier 
         * </pre>
         */
        public boolean hasQualifier() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional .boa.types.Expression qualifier = 3;</code>
         *
         * <pre>
         ** For fields, the qualifier 
         * </pre>
         */
        public boa.types.Ast.Expression getQualifier() {
          if (qualifierBuilder_ == null) {
            return qualifier_;
          } else {
            return qualifierBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .boa.types.Expression qualifier = 3;</code>
         *
         * <pre>
         ** For fields, the qualifier 
         * </pre>
         */
        public Builder setQualifier(boa.types.Ast.Expression value) {
          if (qualifierBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            qualifier_ = value;
            onChanged();
          } else {
            qualifierBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .boa.types.Expression qualifier = 3;</code>
         *
         * <pre>
         ** For fields, the qualifier 
         * </pre>
         */
        public Builder setQualifier(
            boa.types.Ast.Expression.Builder builderForValue) {
          if (qualifierBuilder_ == null) {
            qualifier_ = builderForValue.build();
            onChanged();
          } else {
            qualifierBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .boa.types.Expression qualifier = 3;</code>
         *
         * <pre>
         ** For fields, the qualifier 
         * </pre>
         */
        public Builder mergeQualifier(boa.types.Ast.Expression value) {
          if (qualifierBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                qualifier_ != boa.types.Ast.Expression.getDefaultInstance()) {
              qualifier_ =
                boa.types.Ast.Expression.newBuilder(qualifier_).mergeFrom(value).buildPartial();
            } else {
              qualifier_ = value;
            }
            onChanged();
          } else {
            qualifierBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .boa.types.Expression qualifier = 3;</code>
         *
         * <pre>
         ** For fields, the qualifier 
         * </pre>
         */
        public Builder clearQualifier() {
          if (qualifierBuilder_ == null) {
            qualifier_ = boa.types.Ast.Expression.getDefaultInstance();
            onChanged();
          } else {
            qualifierBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <code>optional .boa.types.Expression qualifier = 3;</code>
         *
         * <pre>
         ** For fields, the qualifier 
         * </pre>
         */
        public boa.types.Ast.Expression.Builder getQualifierBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getQualifierFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .boa.types.Expression qualifier = 3;</code>
         *
         * <pre>
         ** For fields, the qualifier 
         * </pre>
         */
        public boa.types.Ast.ExpressionOrBuilder getQualifierOrBuilder() {
          if (qualifierBuilder_ != null) {
            return qualifierBuilder_.getMessageOrBuilder();
          } else {
            return qualifier_;
          }
        }
        /**
         * <code>optional .boa.types.Expression qualifier = 3;</code>
         *
         * <pre>
         ** For fields, the qualifier 
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
            getQualifierFieldBuilder() {
          if (qualifierBuilder_ == null) {
            qualifierBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                    qualifier_,
                    getParentForChildren(),
                    isClean());
            qualifier_ = null;
          }
          return qualifierBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Expression.VarAccessExpression)
      }

      static {
        defaultInstance = new VarAccessExpression(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Expression.VarAccessExpression)
    }

    private int bitField0_;
    // required .boa.types.Expression.ExpressionKind kind = 1;
    public static final int KIND_FIELD_NUMBER = 1;
    private boa.types.Ast.Expression.ExpressionKind kind_;
    /**
     * <code>required .boa.types.Expression.ExpressionKind kind = 1;</code>
     *
     * <pre>
     ** The kind of expression 
     * </pre>
     */
    public boolean hasKind() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .boa.types.Expression.ExpressionKind kind = 1;</code>
     *
     * <pre>
     ** The kind of expression 
     * </pre>
     */
    public boa.types.Ast.Expression.ExpressionKind getKind() {
      return kind_;
    }

    // optional string string_1 = 2;
    public static final int STRING_1_FIELD_NUMBER = 2;
    private java.lang.Object string1_;
    /**
     * <code>optional string string_1 = 2;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boolean hasString1() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string string_1 = 2;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public java.lang.String getString1() {
      java.lang.Object ref = string1_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          string1_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string string_1 = 2;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getString1Bytes() {
      java.lang.Object ref = string1_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        string1_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string string_2 = 3;
    public static final int STRING_2_FIELD_NUMBER = 3;
    private java.lang.Object string2_;
    /**
     * <code>optional string string_2 = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boolean hasString2() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string string_2 = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public java.lang.String getString2() {
      java.lang.Object ref = string2_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          string2_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string string_2 = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getString2Bytes() {
      java.lang.Object ref = string2_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        string2_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .boa.types.Expression expression_1 = 4;
    public static final int EXPRESSION_1_FIELD_NUMBER = 4;
    private boa.types.Ast.Expression expression1_;
    /**
     * <code>optional .boa.types.Expression expression_1 = 4;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boolean hasExpression1() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .boa.types.Expression expression_1 = 4;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.Expression getExpression1() {
      return expression1_;
    }
    /**
     * <code>optional .boa.types.Expression expression_1 = 4;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.ExpressionOrBuilder getExpression1OrBuilder() {
      return expression1_;
    }

    // optional .boa.types.Expression expression_2 = 5;
    public static final int EXPRESSION_2_FIELD_NUMBER = 5;
    private boa.types.Ast.Expression expression2_;
    /**
     * <code>optional .boa.types.Expression expression_2 = 5;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boolean hasExpression2() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .boa.types.Expression expression_2 = 5;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.Expression getExpression2() {
      return expression2_;
    }
    /**
     * <code>optional .boa.types.Expression expression_2 = 5;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.ExpressionOrBuilder getExpression2OrBuilder() {
      return expression2_;
    }

    // optional .boa.types.Expression expression_3 = 6;
    public static final int EXPRESSION_3_FIELD_NUMBER = 6;
    private boa.types.Ast.Expression expression3_;
    /**
     * <code>optional .boa.types.Expression expression_3 = 6;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boolean hasExpression3() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .boa.types.Expression expression_3 = 6;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.Expression getExpression3() {
      return expression3_;
    }
    /**
     * <code>optional .boa.types.Expression expression_3 = 6;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.ExpressionOrBuilder getExpression3OrBuilder() {
      return expression3_;
    }

    // repeated .boa.types.Expression expressions_1 = 7;
    public static final int EXPRESSIONS_1_FIELD_NUMBER = 7;
    private java.util.List<boa.types.Ast.Expression> expressions1_;
    /**
     * <code>repeated .boa.types.Expression expressions_1 = 7;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public java.util.List<boa.types.Ast.Expression> getExpressions1List() {
      return expressions1_;
    }
    /**
     * <code>repeated .boa.types.Expression expressions_1 = 7;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
        getExpressions1OrBuilderList() {
      return expressions1_;
    }
    /**
     * <code>repeated .boa.types.Expression expressions_1 = 7;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public int getExpressions1Count() {
      return expressions1_.size();
    }
    /**
     * <code>repeated .boa.types.Expression expressions_1 = 7;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.Expression getExpressions1(int index) {
      return expressions1_.get(index);
    }
    /**
     * <code>repeated .boa.types.Expression expressions_1 = 7;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.ExpressionOrBuilder getExpressions1OrBuilder(
        int index) {
      return expressions1_.get(index);
    }

    // optional .boa.types.Type type_1 = 8;
    public static final int TYPE_1_FIELD_NUMBER = 8;
    private boa.types.Ast.Type type1_;
    /**
     * <code>optional .boa.types.Type type_1 = 8;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boolean hasType1() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .boa.types.Type type_1 = 8;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.Type getType1() {
      return type1_;
    }
    /**
     * <code>optional .boa.types.Type type_1 = 8;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.TypeOrBuilder getType1OrBuilder() {
      return type1_;
    }

    // repeated .boa.types.Type types_1 = 9;
    public static final int TYPES_1_FIELD_NUMBER = 9;
    private java.util.List<boa.types.Ast.Type> types1_;
    /**
     * <code>repeated .boa.types.Type types_1 = 9;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public java.util.List<boa.types.Ast.Type> getTypes1List() {
      return types1_;
    }
    /**
     * <code>repeated .boa.types.Type types_1 = 9;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
        getTypes1OrBuilderList() {
      return types1_;
    }
    /**
     * <code>repeated .boa.types.Type types_1 = 9;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public int getTypes1Count() {
      return types1_.size();
    }
    /**
     * <code>repeated .boa.types.Type types_1 = 9;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.Type getTypes1(int index) {
      return types1_.get(index);
    }
    /**
     * <code>repeated .boa.types.Type types_1 = 9;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.TypeOrBuilder getTypes1OrBuilder(
        int index) {
      return types1_.get(index);
    }

    // optional .boa.types.Declaration declaration_1 = 10;
    public static final int DECLARATION_1_FIELD_NUMBER = 10;
    private boa.types.Ast.Declaration declaration1_;
    /**
     * <code>optional .boa.types.Declaration declaration_1 = 10;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boolean hasDeclaration1() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .boa.types.Declaration declaration_1 = 10;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.Declaration getDeclaration1() {
      return declaration1_;
    }
    /**
     * <code>optional .boa.types.Declaration declaration_1 = 10;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.DeclarationOrBuilder getDeclaration1OrBuilder() {
      return declaration1_;
    }

    // optional bool bool_1 = 11;
    public static final int BOOL_1_FIELD_NUMBER = 11;
    private boolean bool1_;
    /**
     * <code>optional bool bool_1 = 11;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boolean hasBool1() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional bool bool_1 = 11;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boolean getBool1() {
      return bool1_;
    }

    // optional int32 int32_1 = 12;
    public static final int INT32_1_FIELD_NUMBER = 12;
    private int int321_;
    /**
     * <code>optional int32 int32_1 = 12;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boolean hasInt321() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 int32_1 = 12;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public int getInt321() {
      return int321_;
    }

    // repeated .boa.types.Variable variables_1 = 13;
    public static final int VARIABLES_1_FIELD_NUMBER = 13;
    private java.util.List<boa.types.Ast.Variable> variables1_;
    /**
     * <code>repeated .boa.types.Variable variables_1 = 13;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public java.util.List<boa.types.Ast.Variable> getVariables1List() {
      return variables1_;
    }
    /**
     * <code>repeated .boa.types.Variable variables_1 = 13;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public java.util.List<? extends boa.types.Ast.VariableOrBuilder> 
        getVariables1OrBuilderList() {
      return variables1_;
    }
    /**
     * <code>repeated .boa.types.Variable variables_1 = 13;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public int getVariables1Count() {
      return variables1_.size();
    }
    /**
     * <code>repeated .boa.types.Variable variables_1 = 13;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.Variable getVariables1(int index) {
      return variables1_.get(index);
    }
    /**
     * <code>repeated .boa.types.Variable variables_1 = 13;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.VariableOrBuilder getVariables1OrBuilder(
        int index) {
      return variables1_.get(index);
    }

    // optional .boa.types.Statement statement_1 = 14;
    public static final int STATEMENT_1_FIELD_NUMBER = 14;
    private boa.types.Ast.Statement statement1_;
    /**
     * <code>optional .boa.types.Statement statement_1 = 14;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boolean hasStatement1() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .boa.types.Statement statement_1 = 14;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.Statement getStatement1() {
      return statement1_;
    }
    /**
     * <code>optional .boa.types.Statement statement_1 = 14;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.StatementOrBuilder getStatement1OrBuilder() {
      return statement1_;
    }

    // repeated .boa.types.Modifier modifiers_1 = 15;
    public static final int MODIFIERS_1_FIELD_NUMBER = 15;
    private java.util.List<boa.types.Ast.Modifier> modifiers1_;
    /**
     * <code>repeated .boa.types.Modifier modifiers_1 = 15;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public java.util.List<boa.types.Ast.Modifier> getModifiers1List() {
      return modifiers1_;
    }
    /**
     * <code>repeated .boa.types.Modifier modifiers_1 = 15;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public java.util.List<? extends boa.types.Ast.ModifierOrBuilder> 
        getModifiers1OrBuilderList() {
      return modifiers1_;
    }
    /**
     * <code>repeated .boa.types.Modifier modifiers_1 = 15;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public int getModifiers1Count() {
      return modifiers1_.size();
    }
    /**
     * <code>repeated .boa.types.Modifier modifiers_1 = 15;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.Modifier getModifiers1(int index) {
      return modifiers1_.get(index);
    }
    /**
     * <code>repeated .boa.types.Modifier modifiers_1 = 15;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.ModifierOrBuilder getModifiers1OrBuilder(
        int index) {
      return modifiers1_.get(index);
    }

    // repeated string strings_1 = 16;
    public static final int STRINGS_1_FIELD_NUMBER = 16;
    private com.google.protobuf.LazyStringList strings1_;
    /**
     * <code>repeated string strings_1 = 16;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public java.util.List<java.lang.String>
        getStrings1List() {
      return strings1_;
    }
    /**
     * <code>repeated string strings_1 = 16;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public int getStrings1Count() {
      return strings1_.size();
    }
    /**
     * <code>repeated string strings_1 = 16;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public java.lang.String getStrings1(int index) {
      return strings1_.get(index);
    }
    /**
     * <code>repeated string strings_1 = 16;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getStrings1Bytes(int index) {
      return strings1_.getByteString(index);
    }

    // optional .boa.types.Modifier modifier_1 = 17;
    public static final int MODIFIER_1_FIELD_NUMBER = 17;
    private boa.types.Ast.Modifier modifier1_;
    /**
     * <code>optional .boa.types.Modifier modifier_1 = 17;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boolean hasModifier1() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .boa.types.Modifier modifier_1 = 17;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.Modifier getModifier1() {
      return modifier1_;
    }
    /**
     * <code>optional .boa.types.Modifier modifier_1 = 17;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.ModifierOrBuilder getModifier1OrBuilder() {
      return modifier1_;
    }

    // optional .boa.types.ChangeKind structural_change_kind = 18;
    public static final int STRUCTURAL_CHANGE_KIND_FIELD_NUMBER = 18;
    private boa.types.Shared.ChangeKind structuralChangeKind_;
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 18;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    public boolean hasStructuralChangeKind() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 18;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    public boa.types.Shared.ChangeKind getStructuralChangeKind() {
      return structuralChangeKind_;
    }

    // optional .boa.types.ChangeKind label_change_kind = 19;
    public static final int LABEL_CHANGE_KIND_FIELD_NUMBER = 19;
    private boa.types.Shared.ChangeKind labelChangeKind_;
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 19;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    public boolean hasLabelChangeKind() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 19;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    public boa.types.Shared.ChangeKind getLabelChangeKind() {
      return labelChangeKind_;
    }

    private void initFields() {
      kind_ = boa.types.Ast.Expression.ExpressionKind.OTHER;
      string1_ = "";
      string2_ = "";
      expression1_ = boa.types.Ast.Expression.getDefaultInstance();
      expression2_ = boa.types.Ast.Expression.getDefaultInstance();
      expression3_ = boa.types.Ast.Expression.getDefaultInstance();
      expressions1_ = java.util.Collections.emptyList();
      type1_ = boa.types.Ast.Type.getDefaultInstance();
      types1_ = java.util.Collections.emptyList();
      declaration1_ = boa.types.Ast.Declaration.getDefaultInstance();
      bool1_ = false;
      int321_ = 0;
      variables1_ = java.util.Collections.emptyList();
      statement1_ = boa.types.Ast.Statement.getDefaultInstance();
      modifiers1_ = java.util.Collections.emptyList();
      strings1_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      modifier1_ = boa.types.Ast.Modifier.getDefaultInstance();
      structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
      labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKind()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasExpression1()) {
        if (!getExpression1().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasExpression2()) {
        if (!getExpression2().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasExpression3()) {
        if (!getExpression3().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getExpressions1Count(); i++) {
        if (!getExpressions1(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasType1()) {
        if (!getType1().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getTypes1Count(); i++) {
        if (!getTypes1(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasDeclaration1()) {
        if (!getDeclaration1().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getVariables1Count(); i++) {
        if (!getVariables1(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasStatement1()) {
        if (!getStatement1().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getModifiers1Count(); i++) {
        if (!getModifiers1(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasModifier1()) {
        if (!getModifier1().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, kind_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getString1Bytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getString2Bytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, expression1_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, expression2_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, expression3_);
      }
      for (int i = 0; i < expressions1_.size(); i++) {
        output.writeMessage(7, expressions1_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(8, type1_);
      }
      for (int i = 0; i < types1_.size(); i++) {
        output.writeMessage(9, types1_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(10, declaration1_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(11, bool1_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(12, int321_);
      }
      for (int i = 0; i < variables1_.size(); i++) {
        output.writeMessage(13, variables1_.get(i));
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(14, statement1_);
      }
      for (int i = 0; i < modifiers1_.size(); i++) {
        output.writeMessage(15, modifiers1_.get(i));
      }
      for (int i = 0; i < strings1_.size(); i++) {
        output.writeBytes(16, strings1_.getByteString(i));
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(17, modifier1_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeEnum(18, structuralChangeKind_.getNumber());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeEnum(19, labelChangeKind_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, kind_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getString1Bytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getString2Bytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, expression1_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, expression2_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, expression3_);
      }
      for (int i = 0; i < expressions1_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, expressions1_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, type1_);
      }
      for (int i = 0; i < types1_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, types1_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, declaration1_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, bool1_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, int321_);
      }
      for (int i = 0; i < variables1_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, variables1_.get(i));
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, statement1_);
      }
      for (int i = 0; i < modifiers1_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, modifiers1_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < strings1_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(strings1_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getStrings1List().size();
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, modifier1_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(18, structuralChangeKind_.getNumber());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(19, labelChangeKind_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static boa.types.Ast.Expression parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static boa.types.Ast.Expression parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static boa.types.Ast.Expression parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static boa.types.Ast.Expression parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static boa.types.Ast.Expression parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static boa.types.Ast.Expression parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static boa.types.Ast.Expression parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static boa.types.Ast.Expression parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static boa.types.Ast.Expression parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static boa.types.Ast.Expression parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(boa.types.Ast.Expression prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code boa.types.Expression}
     *
     * <pre>
     ** A single expression 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements boa.types.Ast.ExpressionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Expression_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Expression_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Expression.class, boa.types.Ast.Expression.Builder.class);
      }

      // Construct using boa.types.Ast.Expression.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getExpression1FieldBuilder();
          getExpression2FieldBuilder();
          getExpression3FieldBuilder();
          getExpressions1FieldBuilder();
          getType1FieldBuilder();
          getTypes1FieldBuilder();
          getDeclaration1FieldBuilder();
          getVariables1FieldBuilder();
          getStatement1FieldBuilder();
          getModifiers1FieldBuilder();
          getModifier1FieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        kind_ = boa.types.Ast.Expression.ExpressionKind.OTHER;
        bitField0_ = (bitField0_ & ~0x00000001);
        string1_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        string2_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        if (expression1Builder_ == null) {
          expression1_ = boa.types.Ast.Expression.getDefaultInstance();
        } else {
          expression1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (expression2Builder_ == null) {
          expression2_ = boa.types.Ast.Expression.getDefaultInstance();
        } else {
          expression2Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (expression3Builder_ == null) {
          expression3_ = boa.types.Ast.Expression.getDefaultInstance();
        } else {
          expression3Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (expressions1Builder_ == null) {
          expressions1_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          expressions1Builder_.clear();
        }
        if (type1Builder_ == null) {
          type1_ = boa.types.Ast.Type.getDefaultInstance();
        } else {
          type1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (types1Builder_ == null) {
          types1_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          types1Builder_.clear();
        }
        if (declaration1Builder_ == null) {
          declaration1_ = boa.types.Ast.Declaration.getDefaultInstance();
        } else {
          declaration1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        bool1_ = false;
        bitField0_ = (bitField0_ & ~0x00000400);
        int321_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        if (variables1Builder_ == null) {
          variables1_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
        } else {
          variables1Builder_.clear();
        }
        if (statement1Builder_ == null) {
          statement1_ = boa.types.Ast.Statement.getDefaultInstance();
        } else {
          statement1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        if (modifiers1Builder_ == null) {
          modifiers1_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
        } else {
          modifiers1Builder_.clear();
        }
        strings1_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00008000);
        if (modifier1Builder_ == null) {
          modifier1_ = boa.types.Ast.Modifier.getDefaultInstance();
        } else {
          modifier1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        bitField0_ = (bitField0_ & ~0x00020000);
        labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return boa.types.Ast.internal_static_boa_types_Expression_descriptor;
      }

      public boa.types.Ast.Expression getDefaultInstanceForType() {
        return boa.types.Ast.Expression.getDefaultInstance();
      }

      public boa.types.Ast.Expression build() {
        boa.types.Ast.Expression result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public boa.types.Ast.Expression buildPartial() {
        boa.types.Ast.Expression result = new boa.types.Ast.Expression(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.kind_ = kind_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.string1_ = string1_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.string2_ = string2_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (expression1Builder_ == null) {
          result.expression1_ = expression1_;
        } else {
          result.expression1_ = expression1Builder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (expression2Builder_ == null) {
          result.expression2_ = expression2_;
        } else {
          result.expression2_ = expression2Builder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (expression3Builder_ == null) {
          result.expression3_ = expression3_;
        } else {
          result.expression3_ = expression3Builder_.build();
        }
        if (expressions1Builder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            expressions1_ = java.util.Collections.unmodifiableList(expressions1_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.expressions1_ = expressions1_;
        } else {
          result.expressions1_ = expressions1Builder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        if (type1Builder_ == null) {
          result.type1_ = type1_;
        } else {
          result.type1_ = type1Builder_.build();
        }
        if (types1Builder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            types1_ = java.util.Collections.unmodifiableList(types1_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.types1_ = types1_;
        } else {
          result.types1_ = types1Builder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000080;
        }
        if (declaration1Builder_ == null) {
          result.declaration1_ = declaration1_;
        } else {
          result.declaration1_ = declaration1Builder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000100;
        }
        result.bool1_ = bool1_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000200;
        }
        result.int321_ = int321_;
        if (variables1Builder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000)) {
            variables1_ = java.util.Collections.unmodifiableList(variables1_);
            bitField0_ = (bitField0_ & ~0x00001000);
          }
          result.variables1_ = variables1_;
        } else {
          result.variables1_ = variables1Builder_.build();
        }
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000400;
        }
        if (statement1Builder_ == null) {
          result.statement1_ = statement1_;
        } else {
          result.statement1_ = statement1Builder_.build();
        }
        if (modifiers1Builder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000)) {
            modifiers1_ = java.util.Collections.unmodifiableList(modifiers1_);
            bitField0_ = (bitField0_ & ~0x00004000);
          }
          result.modifiers1_ = modifiers1_;
        } else {
          result.modifiers1_ = modifiers1Builder_.build();
        }
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          strings1_ = new com.google.protobuf.UnmodifiableLazyStringList(
              strings1_);
          bitField0_ = (bitField0_ & ~0x00008000);
        }
        result.strings1_ = strings1_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00000800;
        }
        if (modifier1Builder_ == null) {
          result.modifier1_ = modifier1_;
        } else {
          result.modifier1_ = modifier1Builder_.build();
        }
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.structuralChangeKind_ = structuralChangeKind_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.labelChangeKind_ = labelChangeKind_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof boa.types.Ast.Expression) {
          return mergeFrom((boa.types.Ast.Expression)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(boa.types.Ast.Expression other) {
        if (other == boa.types.Ast.Expression.getDefaultInstance()) return this;
        if (other.hasKind()) {
          setKind(other.getKind());
        }
        if (other.hasString1()) {
          bitField0_ |= 0x00000002;
          string1_ = other.string1_;
          onChanged();
        }
        if (other.hasString2()) {
          bitField0_ |= 0x00000004;
          string2_ = other.string2_;
          onChanged();
        }
        if (other.hasExpression1()) {
          mergeExpression1(other.getExpression1());
        }
        if (other.hasExpression2()) {
          mergeExpression2(other.getExpression2());
        }
        if (other.hasExpression3()) {
          mergeExpression3(other.getExpression3());
        }
        if (expressions1Builder_ == null) {
          if (!other.expressions1_.isEmpty()) {
            if (expressions1_.isEmpty()) {
              expressions1_ = other.expressions1_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureExpressions1IsMutable();
              expressions1_.addAll(other.expressions1_);
            }
            onChanged();
          }
        } else {
          if (!other.expressions1_.isEmpty()) {
            if (expressions1Builder_.isEmpty()) {
              expressions1Builder_.dispose();
              expressions1Builder_ = null;
              expressions1_ = other.expressions1_;
              bitField0_ = (bitField0_ & ~0x00000040);
              expressions1Builder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getExpressions1FieldBuilder() : null;
            } else {
              expressions1Builder_.addAllMessages(other.expressions1_);
            }
          }
        }
        if (other.hasType1()) {
          mergeType1(other.getType1());
        }
        if (types1Builder_ == null) {
          if (!other.types1_.isEmpty()) {
            if (types1_.isEmpty()) {
              types1_ = other.types1_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureTypes1IsMutable();
              types1_.addAll(other.types1_);
            }
            onChanged();
          }
        } else {
          if (!other.types1_.isEmpty()) {
            if (types1Builder_.isEmpty()) {
              types1Builder_.dispose();
              types1Builder_ = null;
              types1_ = other.types1_;
              bitField0_ = (bitField0_ & ~0x00000100);
              types1Builder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTypes1FieldBuilder() : null;
            } else {
              types1Builder_.addAllMessages(other.types1_);
            }
          }
        }
        if (other.hasDeclaration1()) {
          mergeDeclaration1(other.getDeclaration1());
        }
        if (other.hasBool1()) {
          setBool1(other.getBool1());
        }
        if (other.hasInt321()) {
          setInt321(other.getInt321());
        }
        if (variables1Builder_ == null) {
          if (!other.variables1_.isEmpty()) {
            if (variables1_.isEmpty()) {
              variables1_ = other.variables1_;
              bitField0_ = (bitField0_ & ~0x00001000);
            } else {
              ensureVariables1IsMutable();
              variables1_.addAll(other.variables1_);
            }
            onChanged();
          }
        } else {
          if (!other.variables1_.isEmpty()) {
            if (variables1Builder_.isEmpty()) {
              variables1Builder_.dispose();
              variables1Builder_ = null;
              variables1_ = other.variables1_;
              bitField0_ = (bitField0_ & ~0x00001000);
              variables1Builder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getVariables1FieldBuilder() : null;
            } else {
              variables1Builder_.addAllMessages(other.variables1_);
            }
          }
        }
        if (other.hasStatement1()) {
          mergeStatement1(other.getStatement1());
        }
        if (modifiers1Builder_ == null) {
          if (!other.modifiers1_.isEmpty()) {
            if (modifiers1_.isEmpty()) {
              modifiers1_ = other.modifiers1_;
              bitField0_ = (bitField0_ & ~0x00004000);
            } else {
              ensureModifiers1IsMutable();
              modifiers1_.addAll(other.modifiers1_);
            }
            onChanged();
          }
        } else {
          if (!other.modifiers1_.isEmpty()) {
            if (modifiers1Builder_.isEmpty()) {
              modifiers1Builder_.dispose();
              modifiers1Builder_ = null;
              modifiers1_ = other.modifiers1_;
              bitField0_ = (bitField0_ & ~0x00004000);
              modifiers1Builder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getModifiers1FieldBuilder() : null;
            } else {
              modifiers1Builder_.addAllMessages(other.modifiers1_);
            }
          }
        }
        if (!other.strings1_.isEmpty()) {
          if (strings1_.isEmpty()) {
            strings1_ = other.strings1_;
            bitField0_ = (bitField0_ & ~0x00008000);
          } else {
            ensureStrings1IsMutable();
            strings1_.addAll(other.strings1_);
          }
          onChanged();
        }
        if (other.hasModifier1()) {
          mergeModifier1(other.getModifier1());
        }
        if (other.hasStructuralChangeKind()) {
          setStructuralChangeKind(other.getStructuralChangeKind());
        }
        if (other.hasLabelChangeKind()) {
          setLabelChangeKind(other.getLabelChangeKind());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKind()) {
          
          return false;
        }
        if (hasExpression1()) {
          if (!getExpression1().isInitialized()) {
            
            return false;
          }
        }
        if (hasExpression2()) {
          if (!getExpression2().isInitialized()) {
            
            return false;
          }
        }
        if (hasExpression3()) {
          if (!getExpression3().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getExpressions1Count(); i++) {
          if (!getExpressions1(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasType1()) {
          if (!getType1().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getTypes1Count(); i++) {
          if (!getTypes1(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasDeclaration1()) {
          if (!getDeclaration1().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getVariables1Count(); i++) {
          if (!getVariables1(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasStatement1()) {
          if (!getStatement1().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getModifiers1Count(); i++) {
          if (!getModifiers1(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasModifier1()) {
          if (!getModifier1().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        boa.types.Ast.Expression parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (boa.types.Ast.Expression) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .boa.types.Expression.ExpressionKind kind = 1;
      private boa.types.Ast.Expression.ExpressionKind kind_ = boa.types.Ast.Expression.ExpressionKind.OTHER;
      /**
       * <code>required .boa.types.Expression.ExpressionKind kind = 1;</code>
       *
       * <pre>
       ** The kind of expression 
       * </pre>
       */
      public boolean hasKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .boa.types.Expression.ExpressionKind kind = 1;</code>
       *
       * <pre>
       ** The kind of expression 
       * </pre>
       */
      public boa.types.Ast.Expression.ExpressionKind getKind() {
        return kind_;
      }
      /**
       * <code>required .boa.types.Expression.ExpressionKind kind = 1;</code>
       *
       * <pre>
       ** The kind of expression 
       * </pre>
       */
      public Builder setKind(boa.types.Ast.Expression.ExpressionKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        kind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .boa.types.Expression.ExpressionKind kind = 1;</code>
       *
       * <pre>
       ** The kind of expression 
       * </pre>
       */
      public Builder clearKind() {
        bitField0_ = (bitField0_ & ~0x00000001);
        kind_ = boa.types.Ast.Expression.ExpressionKind.OTHER;
        onChanged();
        return this;
      }

      // optional string string_1 = 2;
      private java.lang.Object string1_ = "";
      /**
       * <code>optional string string_1 = 2;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasString1() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string string_1 = 2;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.lang.String getString1() {
        java.lang.Object ref = string1_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          string1_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string string_1 = 2;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getString1Bytes() {
        java.lang.Object ref = string1_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          string1_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string string_1 = 2;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setString1(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        string1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string string_1 = 2;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearString1() {
        bitField0_ = (bitField0_ & ~0x00000002);
        string1_ = getDefaultInstance().getString1();
        onChanged();
        return this;
      }
      /**
       * <code>optional string string_1 = 2;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setString1Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        string1_ = value;
        onChanged();
        return this;
      }

      // optional string string_2 = 3;
      private java.lang.Object string2_ = "";
      /**
       * <code>optional string string_2 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasString2() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string string_2 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.lang.String getString2() {
        java.lang.Object ref = string2_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          string2_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string string_2 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getString2Bytes() {
        java.lang.Object ref = string2_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          string2_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string string_2 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setString2(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        string2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string string_2 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearString2() {
        bitField0_ = (bitField0_ & ~0x00000004);
        string2_ = getDefaultInstance().getString2();
        onChanged();
        return this;
      }
      /**
       * <code>optional string string_2 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setString2Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        string2_ = value;
        onChanged();
        return this;
      }

      // optional .boa.types.Expression expression_1 = 4;
      private boa.types.Ast.Expression expression1_ = boa.types.Ast.Expression.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> expression1Builder_;
      /**
       * <code>optional .boa.types.Expression expression_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasExpression1() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .boa.types.Expression expression_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression getExpression1() {
        if (expression1Builder_ == null) {
          return expression1_;
        } else {
          return expression1Builder_.getMessage();
        }
      }
      /**
       * <code>optional .boa.types.Expression expression_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setExpression1(boa.types.Ast.Expression value) {
        if (expression1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          expression1_ = value;
          onChanged();
        } else {
          expression1Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .boa.types.Expression expression_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setExpression1(
          boa.types.Ast.Expression.Builder builderForValue) {
        if (expression1Builder_ == null) {
          expression1_ = builderForValue.build();
          onChanged();
        } else {
          expression1Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .boa.types.Expression expression_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder mergeExpression1(boa.types.Ast.Expression value) {
        if (expression1Builder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              expression1_ != boa.types.Ast.Expression.getDefaultInstance()) {
            expression1_ =
              boa.types.Ast.Expression.newBuilder(expression1_).mergeFrom(value).buildPartial();
          } else {
            expression1_ = value;
          }
          onChanged();
        } else {
          expression1Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .boa.types.Expression expression_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearExpression1() {
        if (expression1Builder_ == null) {
          expression1_ = boa.types.Ast.Expression.getDefaultInstance();
          onChanged();
        } else {
          expression1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .boa.types.Expression expression_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.Builder getExpression1Builder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getExpression1FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .boa.types.Expression expression_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getExpression1OrBuilder() {
        if (expression1Builder_ != null) {
          return expression1Builder_.getMessageOrBuilder();
        } else {
          return expression1_;
        }
      }
      /**
       * <code>optional .boa.types.Expression expression_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
          getExpression1FieldBuilder() {
        if (expression1Builder_ == null) {
          expression1Builder_ = new com.google.protobuf.SingleFieldBuilder<
              boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                  expression1_,
                  getParentForChildren(),
                  isClean());
          expression1_ = null;
        }
        return expression1Builder_;
      }

      // optional .boa.types.Expression expression_2 = 5;
      private boa.types.Ast.Expression expression2_ = boa.types.Ast.Expression.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> expression2Builder_;
      /**
       * <code>optional .boa.types.Expression expression_2 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasExpression2() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .boa.types.Expression expression_2 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression getExpression2() {
        if (expression2Builder_ == null) {
          return expression2_;
        } else {
          return expression2Builder_.getMessage();
        }
      }
      /**
       * <code>optional .boa.types.Expression expression_2 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setExpression2(boa.types.Ast.Expression value) {
        if (expression2Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          expression2_ = value;
          onChanged();
        } else {
          expression2Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .boa.types.Expression expression_2 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setExpression2(
          boa.types.Ast.Expression.Builder builderForValue) {
        if (expression2Builder_ == null) {
          expression2_ = builderForValue.build();
          onChanged();
        } else {
          expression2Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .boa.types.Expression expression_2 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder mergeExpression2(boa.types.Ast.Expression value) {
        if (expression2Builder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              expression2_ != boa.types.Ast.Expression.getDefaultInstance()) {
            expression2_ =
              boa.types.Ast.Expression.newBuilder(expression2_).mergeFrom(value).buildPartial();
          } else {
            expression2_ = value;
          }
          onChanged();
        } else {
          expression2Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .boa.types.Expression expression_2 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearExpression2() {
        if (expression2Builder_ == null) {
          expression2_ = boa.types.Ast.Expression.getDefaultInstance();
          onChanged();
        } else {
          expression2Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .boa.types.Expression expression_2 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.Builder getExpression2Builder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getExpression2FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .boa.types.Expression expression_2 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getExpression2OrBuilder() {
        if (expression2Builder_ != null) {
          return expression2Builder_.getMessageOrBuilder();
        } else {
          return expression2_;
        }
      }
      /**
       * <code>optional .boa.types.Expression expression_2 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
          getExpression2FieldBuilder() {
        if (expression2Builder_ == null) {
          expression2Builder_ = new com.google.protobuf.SingleFieldBuilder<
              boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                  expression2_,
                  getParentForChildren(),
                  isClean());
          expression2_ = null;
        }
        return expression2Builder_;
      }

      // optional .boa.types.Expression expression_3 = 6;
      private boa.types.Ast.Expression expression3_ = boa.types.Ast.Expression.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> expression3Builder_;
      /**
       * <code>optional .boa.types.Expression expression_3 = 6;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasExpression3() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .boa.types.Expression expression_3 = 6;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression getExpression3() {
        if (expression3Builder_ == null) {
          return expression3_;
        } else {
          return expression3Builder_.getMessage();
        }
      }
      /**
       * <code>optional .boa.types.Expression expression_3 = 6;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setExpression3(boa.types.Ast.Expression value) {
        if (expression3Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          expression3_ = value;
          onChanged();
        } else {
          expression3Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .boa.types.Expression expression_3 = 6;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setExpression3(
          boa.types.Ast.Expression.Builder builderForValue) {
        if (expression3Builder_ == null) {
          expression3_ = builderForValue.build();
          onChanged();
        } else {
          expression3Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .boa.types.Expression expression_3 = 6;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder mergeExpression3(boa.types.Ast.Expression value) {
        if (expression3Builder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              expression3_ != boa.types.Ast.Expression.getDefaultInstance()) {
            expression3_ =
              boa.types.Ast.Expression.newBuilder(expression3_).mergeFrom(value).buildPartial();
          } else {
            expression3_ = value;
          }
          onChanged();
        } else {
          expression3Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .boa.types.Expression expression_3 = 6;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearExpression3() {
        if (expression3Builder_ == null) {
          expression3_ = boa.types.Ast.Expression.getDefaultInstance();
          onChanged();
        } else {
          expression3Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .boa.types.Expression expression_3 = 6;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.Builder getExpression3Builder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getExpression3FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .boa.types.Expression expression_3 = 6;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getExpression3OrBuilder() {
        if (expression3Builder_ != null) {
          return expression3Builder_.getMessageOrBuilder();
        } else {
          return expression3_;
        }
      }
      /**
       * <code>optional .boa.types.Expression expression_3 = 6;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
          getExpression3FieldBuilder() {
        if (expression3Builder_ == null) {
          expression3Builder_ = new com.google.protobuf.SingleFieldBuilder<
              boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                  expression3_,
                  getParentForChildren(),
                  isClean());
          expression3_ = null;
        }
        return expression3Builder_;
      }

      // repeated .boa.types.Expression expressions_1 = 7;
      private java.util.List<boa.types.Ast.Expression> expressions1_ =
        java.util.Collections.emptyList();
      private void ensureExpressions1IsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          expressions1_ = new java.util.ArrayList<boa.types.Ast.Expression>(expressions1_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> expressions1Builder_;

      /**
       * <code>repeated .boa.types.Expression expressions_1 = 7;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Expression> getExpressions1List() {
        if (expressions1Builder_ == null) {
          return java.util.Collections.unmodifiableList(expressions1_);
        } else {
          return expressions1Builder_.getMessageList();
        }
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 7;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public int getExpressions1Count() {
        if (expressions1Builder_ == null) {
          return expressions1_.size();
        } else {
          return expressions1Builder_.getCount();
        }
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 7;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression getExpressions1(int index) {
        if (expressions1Builder_ == null) {
          return expressions1_.get(index);
        } else {
          return expressions1Builder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 7;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setExpressions1(
          int index, boa.types.Ast.Expression value) {
        if (expressions1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExpressions1IsMutable();
          expressions1_.set(index, value);
          onChanged();
        } else {
          expressions1Builder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 7;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setExpressions1(
          int index, boa.types.Ast.Expression.Builder builderForValue) {
        if (expressions1Builder_ == null) {
          ensureExpressions1IsMutable();
          expressions1_.set(index, builderForValue.build());
          onChanged();
        } else {
          expressions1Builder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 7;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addExpressions1(boa.types.Ast.Expression value) {
        if (expressions1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExpressions1IsMutable();
          expressions1_.add(value);
          onChanged();
        } else {
          expressions1Builder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 7;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addExpressions1(
          int index, boa.types.Ast.Expression value) {
        if (expressions1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExpressions1IsMutable();
          expressions1_.add(index, value);
          onChanged();
        } else {
          expressions1Builder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 7;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addExpressions1(
          boa.types.Ast.Expression.Builder builderForValue) {
        if (expressions1Builder_ == null) {
          ensureExpressions1IsMutable();
          expressions1_.add(builderForValue.build());
          onChanged();
        } else {
          expressions1Builder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 7;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addExpressions1(
          int index, boa.types.Ast.Expression.Builder builderForValue) {
        if (expressions1Builder_ == null) {
          ensureExpressions1IsMutable();
          expressions1_.add(index, builderForValue.build());
          onChanged();
        } else {
          expressions1Builder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 7;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addAllExpressions1(
          java.lang.Iterable<? extends boa.types.Ast.Expression> values) {
        if (expressions1Builder_ == null) {
          ensureExpressions1IsMutable();
          super.addAll(values, expressions1_);
          onChanged();
        } else {
          expressions1Builder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 7;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearExpressions1() {
        if (expressions1Builder_ == null) {
          expressions1_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          expressions1Builder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 7;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder removeExpressions1(int index) {
        if (expressions1Builder_ == null) {
          ensureExpressions1IsMutable();
          expressions1_.remove(index);
          onChanged();
        } else {
          expressions1Builder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 7;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.Builder getExpressions1Builder(
          int index) {
        return getExpressions1FieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 7;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getExpressions1OrBuilder(
          int index) {
        if (expressions1Builder_ == null) {
          return expressions1_.get(index);  } else {
          return expressions1Builder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 7;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
           getExpressions1OrBuilderList() {
        if (expressions1Builder_ != null) {
          return expressions1Builder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(expressions1_);
        }
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 7;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.Builder addExpressions1Builder() {
        return getExpressions1FieldBuilder().addBuilder(
            boa.types.Ast.Expression.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 7;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.Builder addExpressions1Builder(
          int index) {
        return getExpressions1FieldBuilder().addBuilder(
            index, boa.types.Ast.Expression.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 7;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Expression.Builder> 
           getExpressions1BuilderList() {
        return getExpressions1FieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
          getExpressions1FieldBuilder() {
        if (expressions1Builder_ == null) {
          expressions1Builder_ = new com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                  expressions1_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          expressions1_ = null;
        }
        return expressions1Builder_;
      }

      // optional .boa.types.Type type_1 = 8;
      private boa.types.Ast.Type type1_ = boa.types.Ast.Type.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> type1Builder_;
      /**
       * <code>optional .boa.types.Type type_1 = 8;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasType1() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .boa.types.Type type_1 = 8;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Type getType1() {
        if (type1Builder_ == null) {
          return type1_;
        } else {
          return type1Builder_.getMessage();
        }
      }
      /**
       * <code>optional .boa.types.Type type_1 = 8;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setType1(boa.types.Ast.Type value) {
        if (type1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type1_ = value;
          onChanged();
        } else {
          type1Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .boa.types.Type type_1 = 8;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setType1(
          boa.types.Ast.Type.Builder builderForValue) {
        if (type1Builder_ == null) {
          type1_ = builderForValue.build();
          onChanged();
        } else {
          type1Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .boa.types.Type type_1 = 8;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder mergeType1(boa.types.Ast.Type value) {
        if (type1Builder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              type1_ != boa.types.Ast.Type.getDefaultInstance()) {
            type1_ =
              boa.types.Ast.Type.newBuilder(type1_).mergeFrom(value).buildPartial();
          } else {
            type1_ = value;
          }
          onChanged();
        } else {
          type1Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .boa.types.Type type_1 = 8;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearType1() {
        if (type1Builder_ == null) {
          type1_ = boa.types.Ast.Type.getDefaultInstance();
          onChanged();
        } else {
          type1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .boa.types.Type type_1 = 8;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Type.Builder getType1Builder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getType1FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .boa.types.Type type_1 = 8;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.TypeOrBuilder getType1OrBuilder() {
        if (type1Builder_ != null) {
          return type1Builder_.getMessageOrBuilder();
        } else {
          return type1_;
        }
      }
      /**
       * <code>optional .boa.types.Type type_1 = 8;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> 
          getType1FieldBuilder() {
        if (type1Builder_ == null) {
          type1Builder_ = new com.google.protobuf.SingleFieldBuilder<
              boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder>(
                  type1_,
                  getParentForChildren(),
                  isClean());
          type1_ = null;
        }
        return type1Builder_;
      }

      // repeated .boa.types.Type types_1 = 9;
      private java.util.List<boa.types.Ast.Type> types1_ =
        java.util.Collections.emptyList();
      private void ensureTypes1IsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          types1_ = new java.util.ArrayList<boa.types.Ast.Type>(types1_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> types1Builder_;

      /**
       * <code>repeated .boa.types.Type types_1 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Type> getTypes1List() {
        if (types1Builder_ == null) {
          return java.util.Collections.unmodifiableList(types1_);
        } else {
          return types1Builder_.getMessageList();
        }
      }
      /**
       * <code>repeated .boa.types.Type types_1 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public int getTypes1Count() {
        if (types1Builder_ == null) {
          return types1_.size();
        } else {
          return types1Builder_.getCount();
        }
      }
      /**
       * <code>repeated .boa.types.Type types_1 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Type getTypes1(int index) {
        if (types1Builder_ == null) {
          return types1_.get(index);
        } else {
          return types1Builder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .boa.types.Type types_1 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setTypes1(
          int index, boa.types.Ast.Type value) {
        if (types1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypes1IsMutable();
          types1_.set(index, value);
          onChanged();
        } else {
          types1Builder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type types_1 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setTypes1(
          int index, boa.types.Ast.Type.Builder builderForValue) {
        if (types1Builder_ == null) {
          ensureTypes1IsMutable();
          types1_.set(index, builderForValue.build());
          onChanged();
        } else {
          types1Builder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type types_1 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addTypes1(boa.types.Ast.Type value) {
        if (types1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypes1IsMutable();
          types1_.add(value);
          onChanged();
        } else {
          types1Builder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type types_1 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addTypes1(
          int index, boa.types.Ast.Type value) {
        if (types1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypes1IsMutable();
          types1_.add(index, value);
          onChanged();
        } else {
          types1Builder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type types_1 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addTypes1(
          boa.types.Ast.Type.Builder builderForValue) {
        if (types1Builder_ == null) {
          ensureTypes1IsMutable();
          types1_.add(builderForValue.build());
          onChanged();
        } else {
          types1Builder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type types_1 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addTypes1(
          int index, boa.types.Ast.Type.Builder builderForValue) {
        if (types1Builder_ == null) {
          ensureTypes1IsMutable();
          types1_.add(index, builderForValue.build());
          onChanged();
        } else {
          types1Builder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type types_1 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addAllTypes1(
          java.lang.Iterable<? extends boa.types.Ast.Type> values) {
        if (types1Builder_ == null) {
          ensureTypes1IsMutable();
          super.addAll(values, types1_);
          onChanged();
        } else {
          types1Builder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type types_1 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearTypes1() {
        if (types1Builder_ == null) {
          types1_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          types1Builder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type types_1 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder removeTypes1(int index) {
        if (types1Builder_ == null) {
          ensureTypes1IsMutable();
          types1_.remove(index);
          onChanged();
        } else {
          types1Builder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Type types_1 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Type.Builder getTypes1Builder(
          int index) {
        return getTypes1FieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .boa.types.Type types_1 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.TypeOrBuilder getTypes1OrBuilder(
          int index) {
        if (types1Builder_ == null) {
          return types1_.get(index);  } else {
          return types1Builder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .boa.types.Type types_1 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.TypeOrBuilder> 
           getTypes1OrBuilderList() {
        if (types1Builder_ != null) {
          return types1Builder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(types1_);
        }
      }
      /**
       * <code>repeated .boa.types.Type types_1 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Type.Builder addTypes1Builder() {
        return getTypes1FieldBuilder().addBuilder(
            boa.types.Ast.Type.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Type types_1 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Type.Builder addTypes1Builder(
          int index) {
        return getTypes1FieldBuilder().addBuilder(
            index, boa.types.Ast.Type.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Type types_1 = 9;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Type.Builder> 
           getTypes1BuilderList() {
        return getTypes1FieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder> 
          getTypes1FieldBuilder() {
        if (types1Builder_ == null) {
          types1Builder_ = new com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Type, boa.types.Ast.Type.Builder, boa.types.Ast.TypeOrBuilder>(
                  types1_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          types1_ = null;
        }
        return types1Builder_;
      }

      // optional .boa.types.Declaration declaration_1 = 10;
      private boa.types.Ast.Declaration declaration1_ = boa.types.Ast.Declaration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Declaration, boa.types.Ast.Declaration.Builder, boa.types.Ast.DeclarationOrBuilder> declaration1Builder_;
      /**
       * <code>optional .boa.types.Declaration declaration_1 = 10;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasDeclaration1() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .boa.types.Declaration declaration_1 = 10;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Declaration getDeclaration1() {
        if (declaration1Builder_ == null) {
          return declaration1_;
        } else {
          return declaration1Builder_.getMessage();
        }
      }
      /**
       * <code>optional .boa.types.Declaration declaration_1 = 10;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setDeclaration1(boa.types.Ast.Declaration value) {
        if (declaration1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          declaration1_ = value;
          onChanged();
        } else {
          declaration1Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .boa.types.Declaration declaration_1 = 10;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setDeclaration1(
          boa.types.Ast.Declaration.Builder builderForValue) {
        if (declaration1Builder_ == null) {
          declaration1_ = builderForValue.build();
          onChanged();
        } else {
          declaration1Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .boa.types.Declaration declaration_1 = 10;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder mergeDeclaration1(boa.types.Ast.Declaration value) {
        if (declaration1Builder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              declaration1_ != boa.types.Ast.Declaration.getDefaultInstance()) {
            declaration1_ =
              boa.types.Ast.Declaration.newBuilder(declaration1_).mergeFrom(value).buildPartial();
          } else {
            declaration1_ = value;
          }
          onChanged();
        } else {
          declaration1Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .boa.types.Declaration declaration_1 = 10;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearDeclaration1() {
        if (declaration1Builder_ == null) {
          declaration1_ = boa.types.Ast.Declaration.getDefaultInstance();
          onChanged();
        } else {
          declaration1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .boa.types.Declaration declaration_1 = 10;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Declaration.Builder getDeclaration1Builder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getDeclaration1FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .boa.types.Declaration declaration_1 = 10;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.DeclarationOrBuilder getDeclaration1OrBuilder() {
        if (declaration1Builder_ != null) {
          return declaration1Builder_.getMessageOrBuilder();
        } else {
          return declaration1_;
        }
      }
      /**
       * <code>optional .boa.types.Declaration declaration_1 = 10;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Declaration, boa.types.Ast.Declaration.Builder, boa.types.Ast.DeclarationOrBuilder> 
          getDeclaration1FieldBuilder() {
        if (declaration1Builder_ == null) {
          declaration1Builder_ = new com.google.protobuf.SingleFieldBuilder<
              boa.types.Ast.Declaration, boa.types.Ast.Declaration.Builder, boa.types.Ast.DeclarationOrBuilder>(
                  declaration1_,
                  getParentForChildren(),
                  isClean());
          declaration1_ = null;
        }
        return declaration1Builder_;
      }

      // optional bool bool_1 = 11;
      private boolean bool1_ ;
      /**
       * <code>optional bool bool_1 = 11;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasBool1() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bool bool_1 = 11;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean getBool1() {
        return bool1_;
      }
      /**
       * <code>optional bool bool_1 = 11;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setBool1(boolean value) {
        bitField0_ |= 0x00000400;
        bool1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool bool_1 = 11;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearBool1() {
        bitField0_ = (bitField0_ & ~0x00000400);
        bool1_ = false;
        onChanged();
        return this;
      }

      // optional int32 int32_1 = 12;
      private int int321_ ;
      /**
       * <code>optional int32 int32_1 = 12;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasInt321() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 int32_1 = 12;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public int getInt321() {
        return int321_;
      }
      /**
       * <code>optional int32 int32_1 = 12;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setInt321(int value) {
        bitField0_ |= 0x00000800;
        int321_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 int32_1 = 12;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearInt321() {
        bitField0_ = (bitField0_ & ~0x00000800);
        int321_ = 0;
        onChanged();
        return this;
      }

      // repeated .boa.types.Variable variables_1 = 13;
      private java.util.List<boa.types.Ast.Variable> variables1_ =
        java.util.Collections.emptyList();
      private void ensureVariables1IsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          variables1_ = new java.util.ArrayList<boa.types.Ast.Variable>(variables1_);
          bitField0_ |= 0x00001000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Variable, boa.types.Ast.Variable.Builder, boa.types.Ast.VariableOrBuilder> variables1Builder_;

      /**
       * <code>repeated .boa.types.Variable variables_1 = 13;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Variable> getVariables1List() {
        if (variables1Builder_ == null) {
          return java.util.Collections.unmodifiableList(variables1_);
        } else {
          return variables1Builder_.getMessageList();
        }
      }
      /**
       * <code>repeated .boa.types.Variable variables_1 = 13;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public int getVariables1Count() {
        if (variables1Builder_ == null) {
          return variables1_.size();
        } else {
          return variables1Builder_.getCount();
        }
      }
      /**
       * <code>repeated .boa.types.Variable variables_1 = 13;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Variable getVariables1(int index) {
        if (variables1Builder_ == null) {
          return variables1_.get(index);
        } else {
          return variables1Builder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .boa.types.Variable variables_1 = 13;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setVariables1(
          int index, boa.types.Ast.Variable value) {
        if (variables1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVariables1IsMutable();
          variables1_.set(index, value);
          onChanged();
        } else {
          variables1Builder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Variable variables_1 = 13;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setVariables1(
          int index, boa.types.Ast.Variable.Builder builderForValue) {
        if (variables1Builder_ == null) {
          ensureVariables1IsMutable();
          variables1_.set(index, builderForValue.build());
          onChanged();
        } else {
          variables1Builder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Variable variables_1 = 13;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addVariables1(boa.types.Ast.Variable value) {
        if (variables1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVariables1IsMutable();
          variables1_.add(value);
          onChanged();
        } else {
          variables1Builder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Variable variables_1 = 13;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addVariables1(
          int index, boa.types.Ast.Variable value) {
        if (variables1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVariables1IsMutable();
          variables1_.add(index, value);
          onChanged();
        } else {
          variables1Builder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Variable variables_1 = 13;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addVariables1(
          boa.types.Ast.Variable.Builder builderForValue) {
        if (variables1Builder_ == null) {
          ensureVariables1IsMutable();
          variables1_.add(builderForValue.build());
          onChanged();
        } else {
          variables1Builder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Variable variables_1 = 13;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addVariables1(
          int index, boa.types.Ast.Variable.Builder builderForValue) {
        if (variables1Builder_ == null) {
          ensureVariables1IsMutable();
          variables1_.add(index, builderForValue.build());
          onChanged();
        } else {
          variables1Builder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Variable variables_1 = 13;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addAllVariables1(
          java.lang.Iterable<? extends boa.types.Ast.Variable> values) {
        if (variables1Builder_ == null) {
          ensureVariables1IsMutable();
          super.addAll(values, variables1_);
          onChanged();
        } else {
          variables1Builder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Variable variables_1 = 13;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearVariables1() {
        if (variables1Builder_ == null) {
          variables1_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
          onChanged();
        } else {
          variables1Builder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Variable variables_1 = 13;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder removeVariables1(int index) {
        if (variables1Builder_ == null) {
          ensureVariables1IsMutable();
          variables1_.remove(index);
          onChanged();
        } else {
          variables1Builder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Variable variables_1 = 13;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Variable.Builder getVariables1Builder(
          int index) {
        return getVariables1FieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .boa.types.Variable variables_1 = 13;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.VariableOrBuilder getVariables1OrBuilder(
          int index) {
        if (variables1Builder_ == null) {
          return variables1_.get(index);  } else {
          return variables1Builder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .boa.types.Variable variables_1 = 13;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.VariableOrBuilder> 
           getVariables1OrBuilderList() {
        if (variables1Builder_ != null) {
          return variables1Builder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(variables1_);
        }
      }
      /**
       * <code>repeated .boa.types.Variable variables_1 = 13;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Variable.Builder addVariables1Builder() {
        return getVariables1FieldBuilder().addBuilder(
            boa.types.Ast.Variable.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Variable variables_1 = 13;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Variable.Builder addVariables1Builder(
          int index) {
        return getVariables1FieldBuilder().addBuilder(
            index, boa.types.Ast.Variable.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Variable variables_1 = 13;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Variable.Builder> 
           getVariables1BuilderList() {
        return getVariables1FieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Variable, boa.types.Ast.Variable.Builder, boa.types.Ast.VariableOrBuilder> 
          getVariables1FieldBuilder() {
        if (variables1Builder_ == null) {
          variables1Builder_ = new com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Variable, boa.types.Ast.Variable.Builder, boa.types.Ast.VariableOrBuilder>(
                  variables1_,
                  ((bitField0_ & 0x00001000) == 0x00001000),
                  getParentForChildren(),
                  isClean());
          variables1_ = null;
        }
        return variables1Builder_;
      }

      // optional .boa.types.Statement statement_1 = 14;
      private boa.types.Ast.Statement statement1_ = boa.types.Ast.Statement.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> statement1Builder_;
      /**
       * <code>optional .boa.types.Statement statement_1 = 14;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasStatement1() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .boa.types.Statement statement_1 = 14;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement getStatement1() {
        if (statement1Builder_ == null) {
          return statement1_;
        } else {
          return statement1Builder_.getMessage();
        }
      }
      /**
       * <code>optional .boa.types.Statement statement_1 = 14;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setStatement1(boa.types.Ast.Statement value) {
        if (statement1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          statement1_ = value;
          onChanged();
        } else {
          statement1Builder_.setMessage(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .boa.types.Statement statement_1 = 14;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setStatement1(
          boa.types.Ast.Statement.Builder builderForValue) {
        if (statement1Builder_ == null) {
          statement1_ = builderForValue.build();
          onChanged();
        } else {
          statement1Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .boa.types.Statement statement_1 = 14;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder mergeStatement1(boa.types.Ast.Statement value) {
        if (statement1Builder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000) &&
              statement1_ != boa.types.Ast.Statement.getDefaultInstance()) {
            statement1_ =
              boa.types.Ast.Statement.newBuilder(statement1_).mergeFrom(value).buildPartial();
          } else {
            statement1_ = value;
          }
          onChanged();
        } else {
          statement1Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .boa.types.Statement statement_1 = 14;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearStatement1() {
        if (statement1Builder_ == null) {
          statement1_ = boa.types.Ast.Statement.getDefaultInstance();
          onChanged();
        } else {
          statement1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      /**
       * <code>optional .boa.types.Statement statement_1 = 14;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Statement.Builder getStatement1Builder() {
        bitField0_ |= 0x00002000;
        onChanged();
        return getStatement1FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .boa.types.Statement statement_1 = 14;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.StatementOrBuilder getStatement1OrBuilder() {
        if (statement1Builder_ != null) {
          return statement1Builder_.getMessageOrBuilder();
        } else {
          return statement1_;
        }
      }
      /**
       * <code>optional .boa.types.Statement statement_1 = 14;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder> 
          getStatement1FieldBuilder() {
        if (statement1Builder_ == null) {
          statement1Builder_ = new com.google.protobuf.SingleFieldBuilder<
              boa.types.Ast.Statement, boa.types.Ast.Statement.Builder, boa.types.Ast.StatementOrBuilder>(
                  statement1_,
                  getParentForChildren(),
                  isClean());
          statement1_ = null;
        }
        return statement1Builder_;
      }

      // repeated .boa.types.Modifier modifiers_1 = 15;
      private java.util.List<boa.types.Ast.Modifier> modifiers1_ =
        java.util.Collections.emptyList();
      private void ensureModifiers1IsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          modifiers1_ = new java.util.ArrayList<boa.types.Ast.Modifier>(modifiers1_);
          bitField0_ |= 0x00004000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Modifier, boa.types.Ast.Modifier.Builder, boa.types.Ast.ModifierOrBuilder> modifiers1Builder_;

      /**
       * <code>repeated .boa.types.Modifier modifiers_1 = 15;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Modifier> getModifiers1List() {
        if (modifiers1Builder_ == null) {
          return java.util.Collections.unmodifiableList(modifiers1_);
        } else {
          return modifiers1Builder_.getMessageList();
        }
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers_1 = 15;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public int getModifiers1Count() {
        if (modifiers1Builder_ == null) {
          return modifiers1_.size();
        } else {
          return modifiers1Builder_.getCount();
        }
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers_1 = 15;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Modifier getModifiers1(int index) {
        if (modifiers1Builder_ == null) {
          return modifiers1_.get(index);
        } else {
          return modifiers1Builder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers_1 = 15;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setModifiers1(
          int index, boa.types.Ast.Modifier value) {
        if (modifiers1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModifiers1IsMutable();
          modifiers1_.set(index, value);
          onChanged();
        } else {
          modifiers1Builder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers_1 = 15;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setModifiers1(
          int index, boa.types.Ast.Modifier.Builder builderForValue) {
        if (modifiers1Builder_ == null) {
          ensureModifiers1IsMutable();
          modifiers1_.set(index, builderForValue.build());
          onChanged();
        } else {
          modifiers1Builder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers_1 = 15;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addModifiers1(boa.types.Ast.Modifier value) {
        if (modifiers1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModifiers1IsMutable();
          modifiers1_.add(value);
          onChanged();
        } else {
          modifiers1Builder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers_1 = 15;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addModifiers1(
          int index, boa.types.Ast.Modifier value) {
        if (modifiers1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModifiers1IsMutable();
          modifiers1_.add(index, value);
          onChanged();
        } else {
          modifiers1Builder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers_1 = 15;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addModifiers1(
          boa.types.Ast.Modifier.Builder builderForValue) {
        if (modifiers1Builder_ == null) {
          ensureModifiers1IsMutable();
          modifiers1_.add(builderForValue.build());
          onChanged();
        } else {
          modifiers1Builder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers_1 = 15;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addModifiers1(
          int index, boa.types.Ast.Modifier.Builder builderForValue) {
        if (modifiers1Builder_ == null) {
          ensureModifiers1IsMutable();
          modifiers1_.add(index, builderForValue.build());
          onChanged();
        } else {
          modifiers1Builder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers_1 = 15;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addAllModifiers1(
          java.lang.Iterable<? extends boa.types.Ast.Modifier> values) {
        if (modifiers1Builder_ == null) {
          ensureModifiers1IsMutable();
          super.addAll(values, modifiers1_);
          onChanged();
        } else {
          modifiers1Builder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers_1 = 15;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearModifiers1() {
        if (modifiers1Builder_ == null) {
          modifiers1_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
          onChanged();
        } else {
          modifiers1Builder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers_1 = 15;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder removeModifiers1(int index) {
        if (modifiers1Builder_ == null) {
          ensureModifiers1IsMutable();
          modifiers1_.remove(index);
          onChanged();
        } else {
          modifiers1Builder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers_1 = 15;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Modifier.Builder getModifiers1Builder(
          int index) {
        return getModifiers1FieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers_1 = 15;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.ModifierOrBuilder getModifiers1OrBuilder(
          int index) {
        if (modifiers1Builder_ == null) {
          return modifiers1_.get(index);  } else {
          return modifiers1Builder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers_1 = 15;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.ModifierOrBuilder> 
           getModifiers1OrBuilderList() {
        if (modifiers1Builder_ != null) {
          return modifiers1Builder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(modifiers1_);
        }
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers_1 = 15;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Modifier.Builder addModifiers1Builder() {
        return getModifiers1FieldBuilder().addBuilder(
            boa.types.Ast.Modifier.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers_1 = 15;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Modifier.Builder addModifiers1Builder(
          int index) {
        return getModifiers1FieldBuilder().addBuilder(
            index, boa.types.Ast.Modifier.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Modifier modifiers_1 = 15;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Modifier.Builder> 
           getModifiers1BuilderList() {
        return getModifiers1FieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Modifier, boa.types.Ast.Modifier.Builder, boa.types.Ast.ModifierOrBuilder> 
          getModifiers1FieldBuilder() {
        if (modifiers1Builder_ == null) {
          modifiers1Builder_ = new com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Modifier, boa.types.Ast.Modifier.Builder, boa.types.Ast.ModifierOrBuilder>(
                  modifiers1_,
                  ((bitField0_ & 0x00004000) == 0x00004000),
                  getParentForChildren(),
                  isClean());
          modifiers1_ = null;
        }
        return modifiers1Builder_;
      }

      // repeated string strings_1 = 16;
      private com.google.protobuf.LazyStringList strings1_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureStrings1IsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          strings1_ = new com.google.protobuf.LazyStringArrayList(strings1_);
          bitField0_ |= 0x00008000;
         }
      }
      /**
       * <code>repeated string strings_1 = 16;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.util.List<java.lang.String>
          getStrings1List() {
        return java.util.Collections.unmodifiableList(strings1_);
      }
      /**
       * <code>repeated string strings_1 = 16;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public int getStrings1Count() {
        return strings1_.size();
      }
      /**
       * <code>repeated string strings_1 = 16;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.lang.String getStrings1(int index) {
        return strings1_.get(index);
      }
      /**
       * <code>repeated string strings_1 = 16;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getStrings1Bytes(int index) {
        return strings1_.getByteString(index);
      }
      /**
       * <code>repeated string strings_1 = 16;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setStrings1(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrings1IsMutable();
        strings1_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strings_1 = 16;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addStrings1(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrings1IsMutable();
        strings1_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strings_1 = 16;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addAllStrings1(
          java.lang.Iterable<java.lang.String> values) {
        ensureStrings1IsMutable();
        super.addAll(values, strings1_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strings_1 = 16;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearStrings1() {
        strings1_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strings_1 = 16;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addStrings1Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrings1IsMutable();
        strings1_.add(value);
        onChanged();
        return this;
      }

      // optional .boa.types.Modifier modifier_1 = 17;
      private boa.types.Ast.Modifier modifier1_ = boa.types.Ast.Modifier.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Modifier, boa.types.Ast.Modifier.Builder, boa.types.Ast.ModifierOrBuilder> modifier1Builder_;
      /**
       * <code>optional .boa.types.Modifier modifier_1 = 17;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasModifier1() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional .boa.types.Modifier modifier_1 = 17;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Modifier getModifier1() {
        if (modifier1Builder_ == null) {
          return modifier1_;
        } else {
          return modifier1Builder_.getMessage();
        }
      }
      /**
       * <code>optional .boa.types.Modifier modifier_1 = 17;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setModifier1(boa.types.Ast.Modifier value) {
        if (modifier1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          modifier1_ = value;
          onChanged();
        } else {
          modifier1Builder_.setMessage(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .boa.types.Modifier modifier_1 = 17;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setModifier1(
          boa.types.Ast.Modifier.Builder builderForValue) {
        if (modifier1Builder_ == null) {
          modifier1_ = builderForValue.build();
          onChanged();
        } else {
          modifier1Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .boa.types.Modifier modifier_1 = 17;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder mergeModifier1(boa.types.Ast.Modifier value) {
        if (modifier1Builder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000) &&
              modifier1_ != boa.types.Ast.Modifier.getDefaultInstance()) {
            modifier1_ =
              boa.types.Ast.Modifier.newBuilder(modifier1_).mergeFrom(value).buildPartial();
          } else {
            modifier1_ = value;
          }
          onChanged();
        } else {
          modifier1Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .boa.types.Modifier modifier_1 = 17;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearModifier1() {
        if (modifier1Builder_ == null) {
          modifier1_ = boa.types.Ast.Modifier.getDefaultInstance();
          onChanged();
        } else {
          modifier1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }
      /**
       * <code>optional .boa.types.Modifier modifier_1 = 17;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Modifier.Builder getModifier1Builder() {
        bitField0_ |= 0x00010000;
        onChanged();
        return getModifier1FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .boa.types.Modifier modifier_1 = 17;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.ModifierOrBuilder getModifier1OrBuilder() {
        if (modifier1Builder_ != null) {
          return modifier1Builder_.getMessageOrBuilder();
        } else {
          return modifier1_;
        }
      }
      /**
       * <code>optional .boa.types.Modifier modifier_1 = 17;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Modifier, boa.types.Ast.Modifier.Builder, boa.types.Ast.ModifierOrBuilder> 
          getModifier1FieldBuilder() {
        if (modifier1Builder_ == null) {
          modifier1Builder_ = new com.google.protobuf.SingleFieldBuilder<
              boa.types.Ast.Modifier, boa.types.Ast.Modifier.Builder, boa.types.Ast.ModifierOrBuilder>(
                  modifier1_,
                  getParentForChildren(),
                  isClean());
          modifier1_ = null;
        }
        return modifier1Builder_;
      }

      // optional .boa.types.ChangeKind structural_change_kind = 18;
      private boa.types.Shared.ChangeKind structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 18;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public boolean hasStructuralChangeKind() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 18;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public boa.types.Shared.ChangeKind getStructuralChangeKind() {
        return structuralChangeKind_;
      }
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 18;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public Builder setStructuralChangeKind(boa.types.Shared.ChangeKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00020000;
        structuralChangeKind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 18;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public Builder clearStructuralChangeKind() {
        bitField0_ = (bitField0_ & ~0x00020000);
        structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        onChanged();
        return this;
      }

      // optional .boa.types.ChangeKind label_change_kind = 19;
      private boa.types.Shared.ChangeKind labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 19;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public boolean hasLabelChangeKind() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 19;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public boa.types.Shared.ChangeKind getLabelChangeKind() {
        return labelChangeKind_;
      }
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 19;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public Builder setLabelChangeKind(boa.types.Shared.ChangeKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00040000;
        labelChangeKind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 19;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public Builder clearLabelChangeKind() {
        bitField0_ = (bitField0_ & ~0x00040000);
        labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:boa.types.Expression)
    }

    static {
      defaultInstance = new Expression(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:boa.types.Expression)
  }

  public interface ModifierOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .boa.types.Modifier.ModifierKind kind = 1;
    /**
     * <code>required .boa.types.Modifier.ModifierKind kind = 1;</code>
     *
     * <pre>
     ** The kind of modifier 
     * </pre>
     */
    boolean hasKind();
    /**
     * <code>required .boa.types.Modifier.ModifierKind kind = 1;</code>
     *
     * <pre>
     ** The kind of modifier 
     * </pre>
     */
    boa.types.Ast.Modifier.ModifierKind getKind();

    // optional string string_1 = 2;
    /**
     * <code>optional string string_1 = 2;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boolean hasString1();
    /**
     * <code>optional string string_1 = 2;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    java.lang.String getString1();
    /**
     * <code>optional string string_1 = 2;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    com.google.protobuf.ByteString
        getString1Bytes();

    // repeated string strings_1 = 3;
    /**
     * <code>repeated string strings_1 = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    java.util.List<java.lang.String>
    getStrings1List();
    /**
     * <code>repeated string strings_1 = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    int getStrings1Count();
    /**
     * <code>repeated string strings_1 = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    java.lang.String getStrings1(int index);
    /**
     * <code>repeated string strings_1 = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    com.google.protobuf.ByteString
        getStrings1Bytes(int index);

    // repeated .boa.types.Expression expressions_1 = 4;
    /**
     * <code>repeated .boa.types.Expression expressions_1 = 4;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    java.util.List<boa.types.Ast.Expression> 
        getExpressions1List();
    /**
     * <code>repeated .boa.types.Expression expressions_1 = 4;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.Expression getExpressions1(int index);
    /**
     * <code>repeated .boa.types.Expression expressions_1 = 4;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    int getExpressions1Count();
    /**
     * <code>repeated .boa.types.Expression expressions_1 = 4;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
        getExpressions1OrBuilderList();
    /**
     * <code>repeated .boa.types.Expression expressions_1 = 4;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.ExpressionOrBuilder getExpressions1OrBuilder(
        int index);

    // optional .boa.types.Expression expression_1 = 5;
    /**
     * <code>optional .boa.types.Expression expression_1 = 5;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boolean hasExpression1();
    /**
     * <code>optional .boa.types.Expression expression_1 = 5;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.Expression getExpression1();
    /**
     * <code>optional .boa.types.Expression expression_1 = 5;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.ExpressionOrBuilder getExpression1OrBuilder();

    // optional .boa.types.ChangeKind structural_change_kind = 6;
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 6;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    boolean hasStructuralChangeKind();
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 6;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    boa.types.Shared.ChangeKind getStructuralChangeKind();

    // optional .boa.types.ChangeKind label_change_kind = 7;
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 7;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    boolean hasLabelChangeKind();
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 7;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    boa.types.Shared.ChangeKind getLabelChangeKind();
  }
  /**
   * Protobuf type {@code boa.types.Modifier}
   *
   * <pre>
   ** A single modifier 
   * </pre>
   */
  public static final class Modifier extends
      com.google.protobuf.GeneratedMessage
      implements ModifierOrBuilder {
    // Use Modifier.newBuilder() to construct.
    private Modifier(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Modifier(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Modifier defaultInstance;
    public static Modifier getDefaultInstance() {
      return defaultInstance;
    }

    public Modifier getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Modifier(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              boa.types.Ast.Modifier.ModifierKind value = boa.types.Ast.Modifier.ModifierKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                kind_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              string1_ = input.readBytes();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                strings1_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              strings1_.add(input.readBytes());
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                expressions1_ = new java.util.ArrayList<boa.types.Ast.Expression>();
                mutable_bitField0_ |= 0x00000008;
              }
              expressions1_.add(input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              boa.types.Ast.Expression.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = expression1_.toBuilder();
              }
              expression1_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(expression1_);
                expression1_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              boa.types.Shared.ChangeKind value = boa.types.Shared.ChangeKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                structuralChangeKind_ = value;
              }
              break;
            }
            case 56: {
              int rawValue = input.readEnum();
              boa.types.Shared.ChangeKind value = boa.types.Shared.ChangeKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(7, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                labelChangeKind_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          strings1_ = new com.google.protobuf.UnmodifiableLazyStringList(strings1_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          expressions1_ = java.util.Collections.unmodifiableList(expressions1_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return boa.types.Ast.internal_static_boa_types_Modifier_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return boa.types.Ast.internal_static_boa_types_Modifier_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              boa.types.Ast.Modifier.class, boa.types.Ast.Modifier.Builder.class);
    }

    public static com.google.protobuf.Parser<Modifier> PARSER =
        new com.google.protobuf.AbstractParser<Modifier>() {
      public Modifier parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Modifier(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Modifier> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code boa.types.Modifier.ModifierKind}
     *
     * <pre>
     ** The kind of modifier 
     * </pre>
     */
    public enum ModifierKind
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>OTHER = 0;</code>
       *
       * <pre>
       ** Any other modifier - the value is in the &lt;a href="#Modifier"&gt;Modifier&lt;/a&gt;'s &lt;code&gt;other&lt;/code&gt; attribute 
       * </pre>
       */
      OTHER(0, 0),
      /**
       * <code>ANNOTATION = 1;</code>
       *
       * <pre>
       ** An annotation modifier 
       * </pre>
       */
      ANNOTATION(1, 1),
      /**
       * <code>FINAL = 2;</code>
       *
       * <pre>
       ** A final modifier 
       * </pre>
       */
      FINAL(2, 2),
      /**
       * <code>STATIC = 3;</code>
       *
       * <pre>
       ** A static modifier 
       * </pre>
       */
      STATIC(3, 3),
      /**
       * <code>SYNCHRONIZED = 4;</code>
       *
       * <pre>
       ** A synchronized modifier 
       * </pre>
       */
      SYNCHRONIZED(4, 4),
      /**
       * <code>ABSTRACT = 5;</code>
       *
       * <pre>
       ** An abstract modifier 
       * </pre>
       */
      ABSTRACT(6, 5),
      /**
       * <code>PUBLIC = 6;</code>
       *
       * <pre>
       ** A public modifier 
       * </pre>
       */
      PUBLIC(7, 6),
      /**
       * <code>PRIVATE = 7;</code>
       *
       * <pre>
       ** A private modifier 
       * </pre>
       */
      PRIVATE(8, 7),
      /**
       * <code>PROTECTED = 8;</code>
       *
       * <pre>
       ** A protected modifier 
       * </pre>
       */
      PROTECTED(9, 8),
      /**
       * <code>INTERNAL = 9;</code>
       *
       * <pre>
       ** An internal modifier 
       * </pre>
       */
      INTERNAL(10, 9),
      ;

      /**
       * <code>SYNC = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public static final ModifierKind SYNC = SYNCHRONIZED;
      /**
       * <code>OTHER = 0;</code>
       *
       * <pre>
       ** Any other modifier - the value is in the &lt;a href="#Modifier"&gt;Modifier&lt;/a&gt;'s &lt;code&gt;other&lt;/code&gt; attribute 
       * </pre>
       */
      public static final int OTHER_VALUE = 0;
      /**
       * <code>ANNOTATION = 1;</code>
       *
       * <pre>
       ** An annotation modifier 
       * </pre>
       */
      public static final int ANNOTATION_VALUE = 1;
      /**
       * <code>FINAL = 2;</code>
       *
       * <pre>
       ** A final modifier 
       * </pre>
       */
      public static final int FINAL_VALUE = 2;
      /**
       * <code>STATIC = 3;</code>
       *
       * <pre>
       ** A static modifier 
       * </pre>
       */
      public static final int STATIC_VALUE = 3;
      /**
       * <code>SYNCHRONIZED = 4;</code>
       *
       * <pre>
       ** A synchronized modifier 
       * </pre>
       */
      public static final int SYNCHRONIZED_VALUE = 4;
      /**
       * <code>SYNC = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public static final int SYNC_VALUE = 4;
      /**
       * <code>ABSTRACT = 5;</code>
       *
       * <pre>
       ** An abstract modifier 
       * </pre>
       */
      public static final int ABSTRACT_VALUE = 5;
      /**
       * <code>PUBLIC = 6;</code>
       *
       * <pre>
       ** A public modifier 
       * </pre>
       */
      public static final int PUBLIC_VALUE = 6;
      /**
       * <code>PRIVATE = 7;</code>
       *
       * <pre>
       ** A private modifier 
       * </pre>
       */
      public static final int PRIVATE_VALUE = 7;
      /**
       * <code>PROTECTED = 8;</code>
       *
       * <pre>
       ** A protected modifier 
       * </pre>
       */
      public static final int PROTECTED_VALUE = 8;
      /**
       * <code>INTERNAL = 9;</code>
       *
       * <pre>
       ** An internal modifier 
       * </pre>
       */
      public static final int INTERNAL_VALUE = 9;


      public final int getNumber() { return value; }

      public static ModifierKind valueOf(int value) {
        switch (value) {
          case 0: return OTHER;
          case 1: return ANNOTATION;
          case 2: return FINAL;
          case 3: return STATIC;
          case 4: return SYNCHRONIZED;
          case 5: return ABSTRACT;
          case 6: return PUBLIC;
          case 7: return PRIVATE;
          case 8: return PROTECTED;
          case 9: return INTERNAL;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ModifierKind>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<ModifierKind>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ModifierKind>() {
              public ModifierKind findValueByNumber(int number) {
                return ModifierKind.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return boa.types.Ast.Modifier.getDescriptor().getEnumTypes().get(0);
      }

      private static final ModifierKind[] VALUES = {
        OTHER, ANNOTATION, FINAL, STATIC, SYNCHRONIZED, SYNC, ABSTRACT, PUBLIC, PRIVATE, PROTECTED, INTERNAL, 
      };

      public static ModifierKind valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private ModifierKind(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:boa.types.Modifier.ModifierKind)
    }

    public interface NormalModifierOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Modifier.ModifierKind shadow_kind_1 = 1 [default = OTHER];
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_1 = 1 [default = OTHER];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind1();
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_1 = 1 [default = OTHER];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Modifier.ModifierKind getShadowKind1();

      // optional .boa.types.Modifier.ModifierKind shadow_kind_2 = 2 [default = FINAL];
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_2 = 2 [default = FINAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind2();
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_2 = 2 [default = FINAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Modifier.ModifierKind getShadowKind2();

      // optional .boa.types.Modifier.ModifierKind shadow_kind_3 = 3 [default = STATIC];
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_3 = 3 [default = STATIC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind3();
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_3 = 3 [default = STATIC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Modifier.ModifierKind getShadowKind3();

      // optional .boa.types.Modifier.ModifierKind shadow_kind_4 = 4 [default = SYNCHRONIZED];
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_4 = 4 [default = SYNCHRONIZED];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind4();
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_4 = 4 [default = SYNCHRONIZED];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Modifier.ModifierKind getShadowKind4();

      // optional .boa.types.Modifier.ModifierKind shadow_kind_5 = 5 [default = ABSTRACT];
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_5 = 5 [default = ABSTRACT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind5();
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_5 = 5 [default = ABSTRACT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Modifier.ModifierKind getShadowKind5();

      // required .boa.types.Modifier.ModifierKind kind = 6;
      /**
       * <code>required .boa.types.Modifier.ModifierKind kind = 6;</code>
       *
       * <pre>
       * The kind of modifier 
       * </pre>
       */
      boolean hasKind();
      /**
       * <code>required .boa.types.Modifier.ModifierKind kind = 6;</code>
       *
       * <pre>
       * The kind of modifier 
       * </pre>
       */
      boa.types.Ast.Modifier.ModifierKind getKind();

      // optional string other = 7;
      /**
       * <code>optional string other = 7;</code>
       *
       * <pre>
       ** If kind is OTHER, the modifier 
       * </pre>
       */
      boolean hasOther();
      /**
       * <code>optional string other = 7;</code>
       *
       * <pre>
       ** If kind is OTHER, the modifier 
       * </pre>
       */
      java.lang.String getOther();
      /**
       * <code>optional string other = 7;</code>
       *
       * <pre>
       ** If kind is OTHER, the modifier 
       * </pre>
       */
      com.google.protobuf.ByteString
          getOtherBytes();
    }
    /**
     * Protobuf type {@code boa.types.Modifier.NormalModifier}
     *
     * <pre>
     ** A normal modifier 
     * </pre>
     */
    public static final class NormalModifier extends
        com.google.protobuf.GeneratedMessage
        implements NormalModifierOrBuilder {
      // Use NormalModifier.newBuilder() to construct.
      private NormalModifier(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private NormalModifier(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final NormalModifier defaultInstance;
      public static NormalModifier getDefaultInstance() {
        return defaultInstance;
      }

      public NormalModifier getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private NormalModifier(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Modifier.ModifierKind value = boa.types.Ast.Modifier.ModifierKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind1_ = value;
                }
                break;
              }
              case 16: {
                int rawValue = input.readEnum();
                boa.types.Ast.Modifier.ModifierKind value = boa.types.Ast.Modifier.ModifierKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(2, rawValue);
                } else {
                  bitField0_ |= 0x00000002;
                  shadowKind2_ = value;
                }
                break;
              }
              case 24: {
                int rawValue = input.readEnum();
                boa.types.Ast.Modifier.ModifierKind value = boa.types.Ast.Modifier.ModifierKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(3, rawValue);
                } else {
                  bitField0_ |= 0x00000004;
                  shadowKind3_ = value;
                }
                break;
              }
              case 32: {
                int rawValue = input.readEnum();
                boa.types.Ast.Modifier.ModifierKind value = boa.types.Ast.Modifier.ModifierKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(4, rawValue);
                } else {
                  bitField0_ |= 0x00000008;
                  shadowKind4_ = value;
                }
                break;
              }
              case 40: {
                int rawValue = input.readEnum();
                boa.types.Ast.Modifier.ModifierKind value = boa.types.Ast.Modifier.ModifierKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(5, rawValue);
                } else {
                  bitField0_ |= 0x00000010;
                  shadowKind5_ = value;
                }
                break;
              }
              case 48: {
                int rawValue = input.readEnum();
                boa.types.Ast.Modifier.ModifierKind value = boa.types.Ast.Modifier.ModifierKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(6, rawValue);
                } else {
                  bitField0_ |= 0x00000020;
                  kind_ = value;
                }
                break;
              }
              case 58: {
                bitField0_ |= 0x00000040;
                other_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Modifier_NormalModifier_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Modifier_NormalModifier_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Modifier.NormalModifier.class, boa.types.Ast.Modifier.NormalModifier.Builder.class);
      }

      public static com.google.protobuf.Parser<NormalModifier> PARSER =
          new com.google.protobuf.AbstractParser<NormalModifier>() {
        public NormalModifier parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new NormalModifier(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<NormalModifier> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Modifier.ModifierKind shadow_kind_1 = 1 [default = OTHER];
      public static final int SHADOW_KIND_1_FIELD_NUMBER = 1;
      private boa.types.Ast.Modifier.ModifierKind shadowKind1_;
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_1 = 1 [default = OTHER];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind1() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_1 = 1 [default = OTHER];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Modifier.ModifierKind getShadowKind1() {
        return shadowKind1_;
      }

      // optional .boa.types.Modifier.ModifierKind shadow_kind_2 = 2 [default = FINAL];
      public static final int SHADOW_KIND_2_FIELD_NUMBER = 2;
      private boa.types.Ast.Modifier.ModifierKind shadowKind2_;
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_2 = 2 [default = FINAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind2() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_2 = 2 [default = FINAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Modifier.ModifierKind getShadowKind2() {
        return shadowKind2_;
      }

      // optional .boa.types.Modifier.ModifierKind shadow_kind_3 = 3 [default = STATIC];
      public static final int SHADOW_KIND_3_FIELD_NUMBER = 3;
      private boa.types.Ast.Modifier.ModifierKind shadowKind3_;
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_3 = 3 [default = STATIC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind3() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_3 = 3 [default = STATIC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Modifier.ModifierKind getShadowKind3() {
        return shadowKind3_;
      }

      // optional .boa.types.Modifier.ModifierKind shadow_kind_4 = 4 [default = SYNCHRONIZED];
      public static final int SHADOW_KIND_4_FIELD_NUMBER = 4;
      private boa.types.Ast.Modifier.ModifierKind shadowKind4_;
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_4 = 4 [default = SYNCHRONIZED];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind4() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_4 = 4 [default = SYNCHRONIZED];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Modifier.ModifierKind getShadowKind4() {
        return shadowKind4_;
      }

      // optional .boa.types.Modifier.ModifierKind shadow_kind_5 = 5 [default = ABSTRACT];
      public static final int SHADOW_KIND_5_FIELD_NUMBER = 5;
      private boa.types.Ast.Modifier.ModifierKind shadowKind5_;
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_5 = 5 [default = ABSTRACT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind5() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_5 = 5 [default = ABSTRACT];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Modifier.ModifierKind getShadowKind5() {
        return shadowKind5_;
      }

      // required .boa.types.Modifier.ModifierKind kind = 6;
      public static final int KIND_FIELD_NUMBER = 6;
      private boa.types.Ast.Modifier.ModifierKind kind_;
      /**
       * <code>required .boa.types.Modifier.ModifierKind kind = 6;</code>
       *
       * <pre>
       * The kind of modifier 
       * </pre>
       */
      public boolean hasKind() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required .boa.types.Modifier.ModifierKind kind = 6;</code>
       *
       * <pre>
       * The kind of modifier 
       * </pre>
       */
      public boa.types.Ast.Modifier.ModifierKind getKind() {
        return kind_;
      }

      // optional string other = 7;
      public static final int OTHER_FIELD_NUMBER = 7;
      private java.lang.Object other_;
      /**
       * <code>optional string other = 7;</code>
       *
       * <pre>
       ** If kind is OTHER, the modifier 
       * </pre>
       */
      public boolean hasOther() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string other = 7;</code>
       *
       * <pre>
       ** If kind is OTHER, the modifier 
       * </pre>
       */
      public java.lang.String getOther() {
        java.lang.Object ref = other_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            other_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string other = 7;</code>
       *
       * <pre>
       ** If kind is OTHER, the modifier 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getOtherBytes() {
        java.lang.Object ref = other_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          other_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        shadowKind1_ = boa.types.Ast.Modifier.ModifierKind.OTHER;
        shadowKind2_ = boa.types.Ast.Modifier.ModifierKind.FINAL;
        shadowKind3_ = boa.types.Ast.Modifier.ModifierKind.STATIC;
        shadowKind4_ = boa.types.Ast.Modifier.ModifierKind.SYNCHRONIZED;
        shadowKind5_ = boa.types.Ast.Modifier.ModifierKind.ABSTRACT;
        kind_ = boa.types.Ast.Modifier.ModifierKind.OTHER;
        other_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasKind()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind1_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeEnum(2, shadowKind2_.getNumber());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeEnum(3, shadowKind3_.getNumber());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeEnum(4, shadowKind4_.getNumber());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeEnum(5, shadowKind5_.getNumber());
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeEnum(6, kind_.getNumber());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeBytes(7, getOtherBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind1_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, shadowKind2_.getNumber());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(3, shadowKind3_.getNumber());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(4, shadowKind4_.getNumber());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(5, shadowKind5_.getNumber());
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(6, kind_.getNumber());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(7, getOtherBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Modifier.NormalModifier parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Modifier.NormalModifier parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Modifier.NormalModifier parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Modifier.NormalModifier parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Modifier.NormalModifier parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Modifier.NormalModifier parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Modifier.NormalModifier parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Modifier.NormalModifier parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Modifier.NormalModifier parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Modifier.NormalModifier parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Modifier.NormalModifier prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Modifier.NormalModifier}
       *
       * <pre>
       ** A normal modifier 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Modifier.NormalModifierOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Modifier_NormalModifier_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Modifier_NormalModifier_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Modifier.NormalModifier.class, boa.types.Ast.Modifier.NormalModifier.Builder.class);
        }

        // Construct using boa.types.Ast.Modifier.NormalModifier.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind1_ = boa.types.Ast.Modifier.ModifierKind.OTHER;
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind2_ = boa.types.Ast.Modifier.ModifierKind.FINAL;
          bitField0_ = (bitField0_ & ~0x00000002);
          shadowKind3_ = boa.types.Ast.Modifier.ModifierKind.STATIC;
          bitField0_ = (bitField0_ & ~0x00000004);
          shadowKind4_ = boa.types.Ast.Modifier.ModifierKind.SYNCHRONIZED;
          bitField0_ = (bitField0_ & ~0x00000008);
          shadowKind5_ = boa.types.Ast.Modifier.ModifierKind.ABSTRACT;
          bitField0_ = (bitField0_ & ~0x00000010);
          kind_ = boa.types.Ast.Modifier.ModifierKind.OTHER;
          bitField0_ = (bitField0_ & ~0x00000020);
          other_ = "";
          bitField0_ = (bitField0_ & ~0x00000040);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Modifier_NormalModifier_descriptor;
        }

        public boa.types.Ast.Modifier.NormalModifier getDefaultInstanceForType() {
          return boa.types.Ast.Modifier.NormalModifier.getDefaultInstance();
        }

        public boa.types.Ast.Modifier.NormalModifier build() {
          boa.types.Ast.Modifier.NormalModifier result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Modifier.NormalModifier buildPartial() {
          boa.types.Ast.Modifier.NormalModifier result = new boa.types.Ast.Modifier.NormalModifier(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind1_ = shadowKind1_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.shadowKind2_ = shadowKind2_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.shadowKind3_ = shadowKind3_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.shadowKind4_ = shadowKind4_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.shadowKind5_ = shadowKind5_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.kind_ = kind_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.other_ = other_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Modifier.NormalModifier) {
            return mergeFrom((boa.types.Ast.Modifier.NormalModifier)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Modifier.NormalModifier other) {
          if (other == boa.types.Ast.Modifier.NormalModifier.getDefaultInstance()) return this;
          if (other.hasShadowKind1()) {
            setShadowKind1(other.getShadowKind1());
          }
          if (other.hasShadowKind2()) {
            setShadowKind2(other.getShadowKind2());
          }
          if (other.hasShadowKind3()) {
            setShadowKind3(other.getShadowKind3());
          }
          if (other.hasShadowKind4()) {
            setShadowKind4(other.getShadowKind4());
          }
          if (other.hasShadowKind5()) {
            setShadowKind5(other.getShadowKind5());
          }
          if (other.hasKind()) {
            setKind(other.getKind());
          }
          if (other.hasOther()) {
            bitField0_ |= 0x00000040;
            other_ = other.other_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasKind()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Modifier.NormalModifier parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Modifier.NormalModifier) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Modifier.ModifierKind shadow_kind_1 = 1 [default = OTHER];
        private boa.types.Ast.Modifier.ModifierKind shadowKind1_ = boa.types.Ast.Modifier.ModifierKind.OTHER;
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_1 = 1 [default = OTHER];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind1() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_1 = 1 [default = OTHER];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Modifier.ModifierKind getShadowKind1() {
          return shadowKind1_;
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_1 = 1 [default = OTHER];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind1(boa.types.Ast.Modifier.ModifierKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind1_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_1 = 1 [default = OTHER];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind1() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind1_ = boa.types.Ast.Modifier.ModifierKind.OTHER;
          onChanged();
          return this;
        }

        // optional .boa.types.Modifier.ModifierKind shadow_kind_2 = 2 [default = FINAL];
        private boa.types.Ast.Modifier.ModifierKind shadowKind2_ = boa.types.Ast.Modifier.ModifierKind.FINAL;
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_2 = 2 [default = FINAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind2() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_2 = 2 [default = FINAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Modifier.ModifierKind getShadowKind2() {
          return shadowKind2_;
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_2 = 2 [default = FINAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind2(boa.types.Ast.Modifier.ModifierKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          shadowKind2_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_2 = 2 [default = FINAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind2() {
          bitField0_ = (bitField0_ & ~0x00000002);
          shadowKind2_ = boa.types.Ast.Modifier.ModifierKind.FINAL;
          onChanged();
          return this;
        }

        // optional .boa.types.Modifier.ModifierKind shadow_kind_3 = 3 [default = STATIC];
        private boa.types.Ast.Modifier.ModifierKind shadowKind3_ = boa.types.Ast.Modifier.ModifierKind.STATIC;
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_3 = 3 [default = STATIC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind3() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_3 = 3 [default = STATIC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Modifier.ModifierKind getShadowKind3() {
          return shadowKind3_;
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_3 = 3 [default = STATIC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind3(boa.types.Ast.Modifier.ModifierKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000004;
          shadowKind3_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_3 = 3 [default = STATIC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind3() {
          bitField0_ = (bitField0_ & ~0x00000004);
          shadowKind3_ = boa.types.Ast.Modifier.ModifierKind.STATIC;
          onChanged();
          return this;
        }

        // optional .boa.types.Modifier.ModifierKind shadow_kind_4 = 4 [default = SYNCHRONIZED];
        private boa.types.Ast.Modifier.ModifierKind shadowKind4_ = boa.types.Ast.Modifier.ModifierKind.SYNCHRONIZED;
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_4 = 4 [default = SYNCHRONIZED];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind4() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_4 = 4 [default = SYNCHRONIZED];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Modifier.ModifierKind getShadowKind4() {
          return shadowKind4_;
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_4 = 4 [default = SYNCHRONIZED];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind4(boa.types.Ast.Modifier.ModifierKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000008;
          shadowKind4_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_4 = 4 [default = SYNCHRONIZED];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind4() {
          bitField0_ = (bitField0_ & ~0x00000008);
          shadowKind4_ = boa.types.Ast.Modifier.ModifierKind.SYNCHRONIZED;
          onChanged();
          return this;
        }

        // optional .boa.types.Modifier.ModifierKind shadow_kind_5 = 5 [default = ABSTRACT];
        private boa.types.Ast.Modifier.ModifierKind shadowKind5_ = boa.types.Ast.Modifier.ModifierKind.ABSTRACT;
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_5 = 5 [default = ABSTRACT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind5() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_5 = 5 [default = ABSTRACT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Modifier.ModifierKind getShadowKind5() {
          return shadowKind5_;
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_5 = 5 [default = ABSTRACT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind5(boa.types.Ast.Modifier.ModifierKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000010;
          shadowKind5_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_5 = 5 [default = ABSTRACT];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind5() {
          bitField0_ = (bitField0_ & ~0x00000010);
          shadowKind5_ = boa.types.Ast.Modifier.ModifierKind.ABSTRACT;
          onChanged();
          return this;
        }

        // required .boa.types.Modifier.ModifierKind kind = 6;
        private boa.types.Ast.Modifier.ModifierKind kind_ = boa.types.Ast.Modifier.ModifierKind.OTHER;
        /**
         * <code>required .boa.types.Modifier.ModifierKind kind = 6;</code>
         *
         * <pre>
         * The kind of modifier 
         * </pre>
         */
        public boolean hasKind() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>required .boa.types.Modifier.ModifierKind kind = 6;</code>
         *
         * <pre>
         * The kind of modifier 
         * </pre>
         */
        public boa.types.Ast.Modifier.ModifierKind getKind() {
          return kind_;
        }
        /**
         * <code>required .boa.types.Modifier.ModifierKind kind = 6;</code>
         *
         * <pre>
         * The kind of modifier 
         * </pre>
         */
        public Builder setKind(boa.types.Ast.Modifier.ModifierKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000020;
          kind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required .boa.types.Modifier.ModifierKind kind = 6;</code>
         *
         * <pre>
         * The kind of modifier 
         * </pre>
         */
        public Builder clearKind() {
          bitField0_ = (bitField0_ & ~0x00000020);
          kind_ = boa.types.Ast.Modifier.ModifierKind.OTHER;
          onChanged();
          return this;
        }

        // optional string other = 7;
        private java.lang.Object other_ = "";
        /**
         * <code>optional string other = 7;</code>
         *
         * <pre>
         ** If kind is OTHER, the modifier 
         * </pre>
         */
        public boolean hasOther() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional string other = 7;</code>
         *
         * <pre>
         ** If kind is OTHER, the modifier 
         * </pre>
         */
        public java.lang.String getOther() {
          java.lang.Object ref = other_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            other_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string other = 7;</code>
         *
         * <pre>
         ** If kind is OTHER, the modifier 
         * </pre>
         */
        public com.google.protobuf.ByteString
            getOtherBytes() {
          java.lang.Object ref = other_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            other_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string other = 7;</code>
         *
         * <pre>
         ** If kind is OTHER, the modifier 
         * </pre>
         */
        public Builder setOther(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
          other_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string other = 7;</code>
         *
         * <pre>
         ** If kind is OTHER, the modifier 
         * </pre>
         */
        public Builder clearOther() {
          bitField0_ = (bitField0_ & ~0x00000040);
          other_ = getDefaultInstance().getOther();
          onChanged();
          return this;
        }
        /**
         * <code>optional string other = 7;</code>
         *
         * <pre>
         ** If kind is OTHER, the modifier 
         * </pre>
         */
        public Builder setOtherBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
          other_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Modifier.NormalModifier)
      }

      static {
        defaultInstance = new NormalModifier(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Modifier.NormalModifier)
    }

    public interface VisibilityModifierOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Modifier.ModifierKind shadow_kind_1 = 1 [default = PUBLIC];
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_1 = 1 [default = PUBLIC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind1();
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_1 = 1 [default = PUBLIC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Modifier.ModifierKind getShadowKind1();

      // optional .boa.types.Modifier.ModifierKind shadow_kind_2 = 2 [default = PRIVATE];
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_2 = 2 [default = PRIVATE];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind2();
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_2 = 2 [default = PRIVATE];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Modifier.ModifierKind getShadowKind2();

      // optional .boa.types.Modifier.ModifierKind shadow_kind_3 = 3 [default = PROTECTED];
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_3 = 3 [default = PROTECTED];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind3();
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_3 = 3 [default = PROTECTED];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Modifier.ModifierKind getShadowKind3();

      // optional .boa.types.Modifier.ModifierKind shadow_kind_4 = 4 [default = INTERNAL];
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_4 = 4 [default = INTERNAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind4();
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_4 = 4 [default = INTERNAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Modifier.ModifierKind getShadowKind4();

      // required .boa.types.Modifier.ModifierKind kind = 6;
      /**
       * <code>required .boa.types.Modifier.ModifierKind kind = 6;</code>
       *
       * <pre>
       * The kind of visibility modifier 
       * </pre>
       */
      boolean hasKind();
      /**
       * <code>required .boa.types.Modifier.ModifierKind kind = 6;</code>
       *
       * <pre>
       * The kind of visibility modifier 
       * </pre>
       */
      boa.types.Ast.Modifier.ModifierKind getKind();
    }
    /**
     * Protobuf type {@code boa.types.Modifier.VisibilityModifier}
     *
     * <pre>
     ** A visibility modifier 
     * </pre>
     */
    public static final class VisibilityModifier extends
        com.google.protobuf.GeneratedMessage
        implements VisibilityModifierOrBuilder {
      // Use VisibilityModifier.newBuilder() to construct.
      private VisibilityModifier(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private VisibilityModifier(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final VisibilityModifier defaultInstance;
      public static VisibilityModifier getDefaultInstance() {
        return defaultInstance;
      }

      public VisibilityModifier getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private VisibilityModifier(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Modifier.ModifierKind value = boa.types.Ast.Modifier.ModifierKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind1_ = value;
                }
                break;
              }
              case 16: {
                int rawValue = input.readEnum();
                boa.types.Ast.Modifier.ModifierKind value = boa.types.Ast.Modifier.ModifierKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(2, rawValue);
                } else {
                  bitField0_ |= 0x00000002;
                  shadowKind2_ = value;
                }
                break;
              }
              case 24: {
                int rawValue = input.readEnum();
                boa.types.Ast.Modifier.ModifierKind value = boa.types.Ast.Modifier.ModifierKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(3, rawValue);
                } else {
                  bitField0_ |= 0x00000004;
                  shadowKind3_ = value;
                }
                break;
              }
              case 32: {
                int rawValue = input.readEnum();
                boa.types.Ast.Modifier.ModifierKind value = boa.types.Ast.Modifier.ModifierKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(4, rawValue);
                } else {
                  bitField0_ |= 0x00000008;
                  shadowKind4_ = value;
                }
                break;
              }
              case 48: {
                int rawValue = input.readEnum();
                boa.types.Ast.Modifier.ModifierKind value = boa.types.Ast.Modifier.ModifierKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(6, rawValue);
                } else {
                  bitField0_ |= 0x00000010;
                  kind_ = value;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Modifier_VisibilityModifier_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Modifier_VisibilityModifier_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Modifier.VisibilityModifier.class, boa.types.Ast.Modifier.VisibilityModifier.Builder.class);
      }

      public static com.google.protobuf.Parser<VisibilityModifier> PARSER =
          new com.google.protobuf.AbstractParser<VisibilityModifier>() {
        public VisibilityModifier parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new VisibilityModifier(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<VisibilityModifier> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Modifier.ModifierKind shadow_kind_1 = 1 [default = PUBLIC];
      public static final int SHADOW_KIND_1_FIELD_NUMBER = 1;
      private boa.types.Ast.Modifier.ModifierKind shadowKind1_;
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_1 = 1 [default = PUBLIC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind1() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_1 = 1 [default = PUBLIC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Modifier.ModifierKind getShadowKind1() {
        return shadowKind1_;
      }

      // optional .boa.types.Modifier.ModifierKind shadow_kind_2 = 2 [default = PRIVATE];
      public static final int SHADOW_KIND_2_FIELD_NUMBER = 2;
      private boa.types.Ast.Modifier.ModifierKind shadowKind2_;
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_2 = 2 [default = PRIVATE];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind2() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_2 = 2 [default = PRIVATE];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Modifier.ModifierKind getShadowKind2() {
        return shadowKind2_;
      }

      // optional .boa.types.Modifier.ModifierKind shadow_kind_3 = 3 [default = PROTECTED];
      public static final int SHADOW_KIND_3_FIELD_NUMBER = 3;
      private boa.types.Ast.Modifier.ModifierKind shadowKind3_;
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_3 = 3 [default = PROTECTED];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind3() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_3 = 3 [default = PROTECTED];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Modifier.ModifierKind getShadowKind3() {
        return shadowKind3_;
      }

      // optional .boa.types.Modifier.ModifierKind shadow_kind_4 = 4 [default = INTERNAL];
      public static final int SHADOW_KIND_4_FIELD_NUMBER = 4;
      private boa.types.Ast.Modifier.ModifierKind shadowKind4_;
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_4 = 4 [default = INTERNAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind4() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_4 = 4 [default = INTERNAL];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Modifier.ModifierKind getShadowKind4() {
        return shadowKind4_;
      }

      // required .boa.types.Modifier.ModifierKind kind = 6;
      public static final int KIND_FIELD_NUMBER = 6;
      private boa.types.Ast.Modifier.ModifierKind kind_;
      /**
       * <code>required .boa.types.Modifier.ModifierKind kind = 6;</code>
       *
       * <pre>
       * The kind of visibility modifier 
       * </pre>
       */
      public boolean hasKind() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required .boa.types.Modifier.ModifierKind kind = 6;</code>
       *
       * <pre>
       * The kind of visibility modifier 
       * </pre>
       */
      public boa.types.Ast.Modifier.ModifierKind getKind() {
        return kind_;
      }

      private void initFields() {
        shadowKind1_ = boa.types.Ast.Modifier.ModifierKind.PUBLIC;
        shadowKind2_ = boa.types.Ast.Modifier.ModifierKind.PRIVATE;
        shadowKind3_ = boa.types.Ast.Modifier.ModifierKind.PROTECTED;
        shadowKind4_ = boa.types.Ast.Modifier.ModifierKind.INTERNAL;
        kind_ = boa.types.Ast.Modifier.ModifierKind.OTHER;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasKind()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind1_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeEnum(2, shadowKind2_.getNumber());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeEnum(3, shadowKind3_.getNumber());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeEnum(4, shadowKind4_.getNumber());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeEnum(6, kind_.getNumber());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind1_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, shadowKind2_.getNumber());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(3, shadowKind3_.getNumber());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(4, shadowKind4_.getNumber());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(6, kind_.getNumber());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Modifier.VisibilityModifier parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Modifier.VisibilityModifier parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Modifier.VisibilityModifier parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Modifier.VisibilityModifier parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Modifier.VisibilityModifier parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Modifier.VisibilityModifier parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Modifier.VisibilityModifier parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Modifier.VisibilityModifier parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Modifier.VisibilityModifier parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Modifier.VisibilityModifier parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Modifier.VisibilityModifier prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Modifier.VisibilityModifier}
       *
       * <pre>
       ** A visibility modifier 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Modifier.VisibilityModifierOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Modifier_VisibilityModifier_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Modifier_VisibilityModifier_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Modifier.VisibilityModifier.class, boa.types.Ast.Modifier.VisibilityModifier.Builder.class);
        }

        // Construct using boa.types.Ast.Modifier.VisibilityModifier.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind1_ = boa.types.Ast.Modifier.ModifierKind.PUBLIC;
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind2_ = boa.types.Ast.Modifier.ModifierKind.PRIVATE;
          bitField0_ = (bitField0_ & ~0x00000002);
          shadowKind3_ = boa.types.Ast.Modifier.ModifierKind.PROTECTED;
          bitField0_ = (bitField0_ & ~0x00000004);
          shadowKind4_ = boa.types.Ast.Modifier.ModifierKind.INTERNAL;
          bitField0_ = (bitField0_ & ~0x00000008);
          kind_ = boa.types.Ast.Modifier.ModifierKind.OTHER;
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Modifier_VisibilityModifier_descriptor;
        }

        public boa.types.Ast.Modifier.VisibilityModifier getDefaultInstanceForType() {
          return boa.types.Ast.Modifier.VisibilityModifier.getDefaultInstance();
        }

        public boa.types.Ast.Modifier.VisibilityModifier build() {
          boa.types.Ast.Modifier.VisibilityModifier result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Modifier.VisibilityModifier buildPartial() {
          boa.types.Ast.Modifier.VisibilityModifier result = new boa.types.Ast.Modifier.VisibilityModifier(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind1_ = shadowKind1_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.shadowKind2_ = shadowKind2_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.shadowKind3_ = shadowKind3_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.shadowKind4_ = shadowKind4_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.kind_ = kind_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Modifier.VisibilityModifier) {
            return mergeFrom((boa.types.Ast.Modifier.VisibilityModifier)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Modifier.VisibilityModifier other) {
          if (other == boa.types.Ast.Modifier.VisibilityModifier.getDefaultInstance()) return this;
          if (other.hasShadowKind1()) {
            setShadowKind1(other.getShadowKind1());
          }
          if (other.hasShadowKind2()) {
            setShadowKind2(other.getShadowKind2());
          }
          if (other.hasShadowKind3()) {
            setShadowKind3(other.getShadowKind3());
          }
          if (other.hasShadowKind4()) {
            setShadowKind4(other.getShadowKind4());
          }
          if (other.hasKind()) {
            setKind(other.getKind());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasKind()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Modifier.VisibilityModifier parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Modifier.VisibilityModifier) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Modifier.ModifierKind shadow_kind_1 = 1 [default = PUBLIC];
        private boa.types.Ast.Modifier.ModifierKind shadowKind1_ = boa.types.Ast.Modifier.ModifierKind.PUBLIC;
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_1 = 1 [default = PUBLIC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind1() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_1 = 1 [default = PUBLIC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Modifier.ModifierKind getShadowKind1() {
          return shadowKind1_;
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_1 = 1 [default = PUBLIC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind1(boa.types.Ast.Modifier.ModifierKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind1_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_1 = 1 [default = PUBLIC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind1() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind1_ = boa.types.Ast.Modifier.ModifierKind.PUBLIC;
          onChanged();
          return this;
        }

        // optional .boa.types.Modifier.ModifierKind shadow_kind_2 = 2 [default = PRIVATE];
        private boa.types.Ast.Modifier.ModifierKind shadowKind2_ = boa.types.Ast.Modifier.ModifierKind.PRIVATE;
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_2 = 2 [default = PRIVATE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind2() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_2 = 2 [default = PRIVATE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Modifier.ModifierKind getShadowKind2() {
          return shadowKind2_;
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_2 = 2 [default = PRIVATE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind2(boa.types.Ast.Modifier.ModifierKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          shadowKind2_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_2 = 2 [default = PRIVATE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind2() {
          bitField0_ = (bitField0_ & ~0x00000002);
          shadowKind2_ = boa.types.Ast.Modifier.ModifierKind.PRIVATE;
          onChanged();
          return this;
        }

        // optional .boa.types.Modifier.ModifierKind shadow_kind_3 = 3 [default = PROTECTED];
        private boa.types.Ast.Modifier.ModifierKind shadowKind3_ = boa.types.Ast.Modifier.ModifierKind.PROTECTED;
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_3 = 3 [default = PROTECTED];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind3() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_3 = 3 [default = PROTECTED];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Modifier.ModifierKind getShadowKind3() {
          return shadowKind3_;
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_3 = 3 [default = PROTECTED];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind3(boa.types.Ast.Modifier.ModifierKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000004;
          shadowKind3_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_3 = 3 [default = PROTECTED];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind3() {
          bitField0_ = (bitField0_ & ~0x00000004);
          shadowKind3_ = boa.types.Ast.Modifier.ModifierKind.PROTECTED;
          onChanged();
          return this;
        }

        // optional .boa.types.Modifier.ModifierKind shadow_kind_4 = 4 [default = INTERNAL];
        private boa.types.Ast.Modifier.ModifierKind shadowKind4_ = boa.types.Ast.Modifier.ModifierKind.INTERNAL;
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_4 = 4 [default = INTERNAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind4() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_4 = 4 [default = INTERNAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Modifier.ModifierKind getShadowKind4() {
          return shadowKind4_;
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_4 = 4 [default = INTERNAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind4(boa.types.Ast.Modifier.ModifierKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000008;
          shadowKind4_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind_4 = 4 [default = INTERNAL];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind4() {
          bitField0_ = (bitField0_ & ~0x00000008);
          shadowKind4_ = boa.types.Ast.Modifier.ModifierKind.INTERNAL;
          onChanged();
          return this;
        }

        // required .boa.types.Modifier.ModifierKind kind = 6;
        private boa.types.Ast.Modifier.ModifierKind kind_ = boa.types.Ast.Modifier.ModifierKind.OTHER;
        /**
         * <code>required .boa.types.Modifier.ModifierKind kind = 6;</code>
         *
         * <pre>
         * The kind of visibility modifier 
         * </pre>
         */
        public boolean hasKind() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>required .boa.types.Modifier.ModifierKind kind = 6;</code>
         *
         * <pre>
         * The kind of visibility modifier 
         * </pre>
         */
        public boa.types.Ast.Modifier.ModifierKind getKind() {
          return kind_;
        }
        /**
         * <code>required .boa.types.Modifier.ModifierKind kind = 6;</code>
         *
         * <pre>
         * The kind of visibility modifier 
         * </pre>
         */
        public Builder setKind(boa.types.Ast.Modifier.ModifierKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000010;
          kind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required .boa.types.Modifier.ModifierKind kind = 6;</code>
         *
         * <pre>
         * The kind of visibility modifier 
         * </pre>
         */
        public Builder clearKind() {
          bitField0_ = (bitField0_ & ~0x00000010);
          kind_ = boa.types.Ast.Modifier.ModifierKind.OTHER;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Modifier.VisibilityModifier)
      }

      static {
        defaultInstance = new VisibilityModifier(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Modifier.VisibilityModifier)
    }

    public interface AnnotationOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Modifier.ModifierKind getShadowKind();

      // required string type_name = 2;
      /**
       * <code>required string type_name = 2;</code>
       *
       * <pre>
       ** The name of the annotation type 
       * </pre>
       */
      boolean hasTypeName();
      /**
       * <code>required string type_name = 2;</code>
       *
       * <pre>
       ** The name of the annotation type 
       * </pre>
       */
      java.lang.String getTypeName();
      /**
       * <code>required string type_name = 2;</code>
       *
       * <pre>
       ** The name of the annotation type 
       * </pre>
       */
      com.google.protobuf.ByteString
          getTypeNameBytes();
    }
    /**
     * Protobuf type {@code boa.types.Modifier.Annotation}
     *
     * <pre>
     ** An annotation 
     * </pre>
     */
    public static final class Annotation extends
        com.google.protobuf.GeneratedMessage
        implements AnnotationOrBuilder {
      // Use Annotation.newBuilder() to construct.
      private Annotation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Annotation(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Annotation defaultInstance;
      public static Annotation getDefaultInstance() {
        return defaultInstance;
      }

      public Annotation getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Annotation(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Modifier.ModifierKind value = boa.types.Ast.Modifier.ModifierKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                typeName_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Modifier_Annotation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Modifier_Annotation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Modifier.Annotation.class, boa.types.Ast.Modifier.Annotation.Builder.class);
      }

      public static com.google.protobuf.Parser<Annotation> PARSER =
          new com.google.protobuf.AbstractParser<Annotation>() {
        public Annotation parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Annotation(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Annotation> getParserForType() {
        return PARSER;
      }

      public interface MarkerAnnotationOrBuilder
          extends com.google.protobuf.MessageOrBuilder {

        // optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        boolean hasShadowKind();
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        boa.types.Ast.Modifier.ModifierKind getShadowKind();

        // required string type_name = 2;
        /**
         * <code>required string type_name = 2;</code>
         *
         * <pre>
         ** The name of the annotation type 
         * </pre>
         */
        boolean hasTypeName();
        /**
         * <code>required string type_name = 2;</code>
         *
         * <pre>
         ** The name of the annotation type 
         * </pre>
         */
        java.lang.String getTypeName();
        /**
         * <code>required string type_name = 2;</code>
         *
         * <pre>
         ** The name of the annotation type 
         * </pre>
         */
        com.google.protobuf.ByteString
            getTypeNameBytes();
      }
      /**
       * Protobuf type {@code boa.types.Modifier.Annotation.MarkerAnnotation}
       *
       * <pre>
       ** A marker annotation with no values 
       * </pre>
       */
      public static final class MarkerAnnotation extends
          com.google.protobuf.GeneratedMessage
          implements MarkerAnnotationOrBuilder {
        // Use MarkerAnnotation.newBuilder() to construct.
        private MarkerAnnotation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private MarkerAnnotation(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final MarkerAnnotation defaultInstance;
        public static MarkerAnnotation getDefaultInstance() {
          return defaultInstance;
        }

        public MarkerAnnotation getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private MarkerAnnotation(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  boa.types.Ast.Modifier.ModifierKind value = boa.types.Ast.Modifier.ModifierKind.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    shadowKind_ = value;
                  }
                  break;
                }
                case 18: {
                  bitField0_ |= 0x00000002;
                  typeName_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Modifier_Annotation_MarkerAnnotation_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Modifier_Annotation_MarkerAnnotation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Modifier.Annotation.MarkerAnnotation.class, boa.types.Ast.Modifier.Annotation.MarkerAnnotation.Builder.class);
        }

        public static com.google.protobuf.Parser<MarkerAnnotation> PARSER =
            new com.google.protobuf.AbstractParser<MarkerAnnotation>() {
          public MarkerAnnotation parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new MarkerAnnotation(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<MarkerAnnotation> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        // optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];
        public static final int SHADOW_KIND_FIELD_NUMBER = 1;
        private boa.types.Ast.Modifier.ModifierKind shadowKind_;
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Modifier.ModifierKind getShadowKind() {
          return shadowKind_;
        }

        // required string type_name = 2;
        public static final int TYPE_NAME_FIELD_NUMBER = 2;
        private java.lang.Object typeName_;
        /**
         * <code>required string type_name = 2;</code>
         *
         * <pre>
         ** The name of the annotation type 
         * </pre>
         */
        public boolean hasTypeName() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string type_name = 2;</code>
         *
         * <pre>
         ** The name of the annotation type 
         * </pre>
         */
        public java.lang.String getTypeName() {
          java.lang.Object ref = typeName_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              typeName_ = s;
            }
            return s;
          }
        }
        /**
         * <code>required string type_name = 2;</code>
         *
         * <pre>
         ** The name of the annotation type 
         * </pre>
         */
        public com.google.protobuf.ByteString
            getTypeNameBytes() {
          java.lang.Object ref = typeName_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            typeName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        private void initFields() {
          shadowKind_ = boa.types.Ast.Modifier.ModifierKind.ANNOTATION;
          typeName_ = "";
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;

          if (!hasTypeName()) {
            memoizedIsInitialized = 0;
            return false;
          }
          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeEnum(1, shadowKind_.getNumber());
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeBytes(2, getTypeNameBytes());
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(1, shadowKind_.getNumber());
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(2, getTypeNameBytes());
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static boa.types.Ast.Modifier.Annotation.MarkerAnnotation parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static boa.types.Ast.Modifier.Annotation.MarkerAnnotation parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static boa.types.Ast.Modifier.Annotation.MarkerAnnotation parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static boa.types.Ast.Modifier.Annotation.MarkerAnnotation parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static boa.types.Ast.Modifier.Annotation.MarkerAnnotation parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static boa.types.Ast.Modifier.Annotation.MarkerAnnotation parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static boa.types.Ast.Modifier.Annotation.MarkerAnnotation parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static boa.types.Ast.Modifier.Annotation.MarkerAnnotation parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static boa.types.Ast.Modifier.Annotation.MarkerAnnotation parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static boa.types.Ast.Modifier.Annotation.MarkerAnnotation parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(boa.types.Ast.Modifier.Annotation.MarkerAnnotation prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code boa.types.Modifier.Annotation.MarkerAnnotation}
         *
         * <pre>
         ** A marker annotation with no values 
         * </pre>
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder>
           implements boa.types.Ast.Modifier.Annotation.MarkerAnnotationOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return boa.types.Ast.internal_static_boa_types_Modifier_Annotation_MarkerAnnotation_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return boa.types.Ast.internal_static_boa_types_Modifier_Annotation_MarkerAnnotation_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    boa.types.Ast.Modifier.Annotation.MarkerAnnotation.class, boa.types.Ast.Modifier.Annotation.MarkerAnnotation.Builder.class);
          }

          // Construct using boa.types.Ast.Modifier.Annotation.MarkerAnnotation.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            shadowKind_ = boa.types.Ast.Modifier.ModifierKind.ANNOTATION;
            bitField0_ = (bitField0_ & ~0x00000001);
            typeName_ = "";
            bitField0_ = (bitField0_ & ~0x00000002);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return boa.types.Ast.internal_static_boa_types_Modifier_Annotation_MarkerAnnotation_descriptor;
          }

          public boa.types.Ast.Modifier.Annotation.MarkerAnnotation getDefaultInstanceForType() {
            return boa.types.Ast.Modifier.Annotation.MarkerAnnotation.getDefaultInstance();
          }

          public boa.types.Ast.Modifier.Annotation.MarkerAnnotation build() {
            boa.types.Ast.Modifier.Annotation.MarkerAnnotation result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public boa.types.Ast.Modifier.Annotation.MarkerAnnotation buildPartial() {
            boa.types.Ast.Modifier.Annotation.MarkerAnnotation result = new boa.types.Ast.Modifier.Annotation.MarkerAnnotation(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.shadowKind_ = shadowKind_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.typeName_ = typeName_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof boa.types.Ast.Modifier.Annotation.MarkerAnnotation) {
              return mergeFrom((boa.types.Ast.Modifier.Annotation.MarkerAnnotation)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(boa.types.Ast.Modifier.Annotation.MarkerAnnotation other) {
            if (other == boa.types.Ast.Modifier.Annotation.MarkerAnnotation.getDefaultInstance()) return this;
            if (other.hasShadowKind()) {
              setShadowKind(other.getShadowKind());
            }
            if (other.hasTypeName()) {
              bitField0_ |= 0x00000002;
              typeName_ = other.typeName_;
              onChanged();
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            if (!hasTypeName()) {
              
              return false;
            }
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            boa.types.Ast.Modifier.Annotation.MarkerAnnotation parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (boa.types.Ast.Modifier.Annotation.MarkerAnnotation) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          // optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];
          private boa.types.Ast.Modifier.ModifierKind shadowKind_ = boa.types.Ast.Modifier.ModifierKind.ANNOTATION;
          /**
           * <code>optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];</code>
           *
           * <pre>
           ** @exclude 
           * </pre>
           */
          public boolean hasShadowKind() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];</code>
           *
           * <pre>
           ** @exclude 
           * </pre>
           */
          public boa.types.Ast.Modifier.ModifierKind getShadowKind() {
            return shadowKind_;
          }
          /**
           * <code>optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];</code>
           *
           * <pre>
           ** @exclude 
           * </pre>
           */
          public Builder setShadowKind(boa.types.Ast.Modifier.ModifierKind value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField0_ |= 0x00000001;
            shadowKind_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];</code>
           *
           * <pre>
           ** @exclude 
           * </pre>
           */
          public Builder clearShadowKind() {
            bitField0_ = (bitField0_ & ~0x00000001);
            shadowKind_ = boa.types.Ast.Modifier.ModifierKind.ANNOTATION;
            onChanged();
            return this;
          }

          // required string type_name = 2;
          private java.lang.Object typeName_ = "";
          /**
           * <code>required string type_name = 2;</code>
           *
           * <pre>
           ** The name of the annotation type 
           * </pre>
           */
          public boolean hasTypeName() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>required string type_name = 2;</code>
           *
           * <pre>
           ** The name of the annotation type 
           * </pre>
           */
          public java.lang.String getTypeName() {
            java.lang.Object ref = typeName_;
            if (!(ref instanceof java.lang.String)) {
              java.lang.String s = ((com.google.protobuf.ByteString) ref)
                  .toStringUtf8();
              typeName_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>required string type_name = 2;</code>
           *
           * <pre>
           ** The name of the annotation type 
           * </pre>
           */
          public com.google.protobuf.ByteString
              getTypeNameBytes() {
            java.lang.Object ref = typeName_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              typeName_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>required string type_name = 2;</code>
           *
           * <pre>
           ** The name of the annotation type 
           * </pre>
           */
          public Builder setTypeName(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            typeName_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>required string type_name = 2;</code>
           *
           * <pre>
           ** The name of the annotation type 
           * </pre>
           */
          public Builder clearTypeName() {
            bitField0_ = (bitField0_ & ~0x00000002);
            typeName_ = getDefaultInstance().getTypeName();
            onChanged();
            return this;
          }
          /**
           * <code>required string type_name = 2;</code>
           *
           * <pre>
           ** The name of the annotation type 
           * </pre>
           */
          public Builder setTypeNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            typeName_ = value;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:boa.types.Modifier.Annotation.MarkerAnnotation)
        }

        static {
          defaultInstance = new MarkerAnnotation(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:boa.types.Modifier.Annotation.MarkerAnnotation)
      }

      public interface NormalAnnotationOrBuilder
          extends com.google.protobuf.MessageOrBuilder {

        // optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        boolean hasShadowKind();
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        boa.types.Ast.Modifier.ModifierKind getShadowKind();

        // required string type_name = 2;
        /**
         * <code>required string type_name = 2;</code>
         *
         * <pre>
         ** The name of the annotation type 
         * </pre>
         */
        boolean hasTypeName();
        /**
         * <code>required string type_name = 2;</code>
         *
         * <pre>
         ** The name of the annotation type 
         * </pre>
         */
        java.lang.String getTypeName();
        /**
         * <code>required string type_name = 2;</code>
         *
         * <pre>
         ** The name of the annotation type 
         * </pre>
         */
        com.google.protobuf.ByteString
            getTypeNameBytes();

        // repeated string names = 3;
        /**
         * <code>repeated string names = 3;</code>
         *
         * <pre>
         ** The names of members 
         * </pre>
         */
        java.util.List<java.lang.String>
        getNamesList();
        /**
         * <code>repeated string names = 3;</code>
         *
         * <pre>
         ** The names of members 
         * </pre>
         */
        int getNamesCount();
        /**
         * <code>repeated string names = 3;</code>
         *
         * <pre>
         ** The names of members 
         * </pre>
         */
        java.lang.String getNames(int index);
        /**
         * <code>repeated string names = 3;</code>
         *
         * <pre>
         ** The names of members 
         * </pre>
         */
        com.google.protobuf.ByteString
            getNamesBytes(int index);

        // repeated .boa.types.Expression values = 4;
        /**
         * <code>repeated .boa.types.Expression values = 4;</code>
         *
         * <pre>
         ** The values of members 
         * </pre>
         */
        java.util.List<boa.types.Ast.Expression> 
            getValuesList();
        /**
         * <code>repeated .boa.types.Expression values = 4;</code>
         *
         * <pre>
         ** The values of members 
         * </pre>
         */
        boa.types.Ast.Expression getValues(int index);
        /**
         * <code>repeated .boa.types.Expression values = 4;</code>
         *
         * <pre>
         ** The values of members 
         * </pre>
         */
        int getValuesCount();
        /**
         * <code>repeated .boa.types.Expression values = 4;</code>
         *
         * <pre>
         ** The values of members 
         * </pre>
         */
        java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
            getValuesOrBuilderList();
        /**
         * <code>repeated .boa.types.Expression values = 4;</code>
         *
         * <pre>
         ** The values of members 
         * </pre>
         */
        boa.types.Ast.ExpressionOrBuilder getValuesOrBuilder(
            int index);
      }
      /**
       * Protobuf type {@code boa.types.Modifier.Annotation.NormalAnnotation}
       *
       * <pre>
       ** A normal annotation 
       * </pre>
       */
      public static final class NormalAnnotation extends
          com.google.protobuf.GeneratedMessage
          implements NormalAnnotationOrBuilder {
        // Use NormalAnnotation.newBuilder() to construct.
        private NormalAnnotation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private NormalAnnotation(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final NormalAnnotation defaultInstance;
        public static NormalAnnotation getDefaultInstance() {
          return defaultInstance;
        }

        public NormalAnnotation getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private NormalAnnotation(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  boa.types.Ast.Modifier.ModifierKind value = boa.types.Ast.Modifier.ModifierKind.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    shadowKind_ = value;
                  }
                  break;
                }
                case 18: {
                  bitField0_ |= 0x00000002;
                  typeName_ = input.readBytes();
                  break;
                }
                case 26: {
                  if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                    names_ = new com.google.protobuf.LazyStringArrayList();
                    mutable_bitField0_ |= 0x00000004;
                  }
                  names_.add(input.readBytes());
                  break;
                }
                case 34: {
                  if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                    values_ = new java.util.ArrayList<boa.types.Ast.Expression>();
                    mutable_bitField0_ |= 0x00000008;
                  }
                  values_.add(input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              names_ = new com.google.protobuf.UnmodifiableLazyStringList(names_);
            }
            if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              values_ = java.util.Collections.unmodifiableList(values_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Modifier_Annotation_NormalAnnotation_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Modifier_Annotation_NormalAnnotation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Modifier.Annotation.NormalAnnotation.class, boa.types.Ast.Modifier.Annotation.NormalAnnotation.Builder.class);
        }

        public static com.google.protobuf.Parser<NormalAnnotation> PARSER =
            new com.google.protobuf.AbstractParser<NormalAnnotation>() {
          public NormalAnnotation parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new NormalAnnotation(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<NormalAnnotation> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        // optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];
        public static final int SHADOW_KIND_FIELD_NUMBER = 1;
        private boa.types.Ast.Modifier.ModifierKind shadowKind_;
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Modifier.ModifierKind getShadowKind() {
          return shadowKind_;
        }

        // required string type_name = 2;
        public static final int TYPE_NAME_FIELD_NUMBER = 2;
        private java.lang.Object typeName_;
        /**
         * <code>required string type_name = 2;</code>
         *
         * <pre>
         ** The name of the annotation type 
         * </pre>
         */
        public boolean hasTypeName() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string type_name = 2;</code>
         *
         * <pre>
         ** The name of the annotation type 
         * </pre>
         */
        public java.lang.String getTypeName() {
          java.lang.Object ref = typeName_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              typeName_ = s;
            }
            return s;
          }
        }
        /**
         * <code>required string type_name = 2;</code>
         *
         * <pre>
         ** The name of the annotation type 
         * </pre>
         */
        public com.google.protobuf.ByteString
            getTypeNameBytes() {
          java.lang.Object ref = typeName_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            typeName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        // repeated string names = 3;
        public static final int NAMES_FIELD_NUMBER = 3;
        private com.google.protobuf.LazyStringList names_;
        /**
         * <code>repeated string names = 3;</code>
         *
         * <pre>
         ** The names of members 
         * </pre>
         */
        public java.util.List<java.lang.String>
            getNamesList() {
          return names_;
        }
        /**
         * <code>repeated string names = 3;</code>
         *
         * <pre>
         ** The names of members 
         * </pre>
         */
        public int getNamesCount() {
          return names_.size();
        }
        /**
         * <code>repeated string names = 3;</code>
         *
         * <pre>
         ** The names of members 
         * </pre>
         */
        public java.lang.String getNames(int index) {
          return names_.get(index);
        }
        /**
         * <code>repeated string names = 3;</code>
         *
         * <pre>
         ** The names of members 
         * </pre>
         */
        public com.google.protobuf.ByteString
            getNamesBytes(int index) {
          return names_.getByteString(index);
        }

        // repeated .boa.types.Expression values = 4;
        public static final int VALUES_FIELD_NUMBER = 4;
        private java.util.List<boa.types.Ast.Expression> values_;
        /**
         * <code>repeated .boa.types.Expression values = 4;</code>
         *
         * <pre>
         ** The values of members 
         * </pre>
         */
        public java.util.List<boa.types.Ast.Expression> getValuesList() {
          return values_;
        }
        /**
         * <code>repeated .boa.types.Expression values = 4;</code>
         *
         * <pre>
         ** The values of members 
         * </pre>
         */
        public java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
            getValuesOrBuilderList() {
          return values_;
        }
        /**
         * <code>repeated .boa.types.Expression values = 4;</code>
         *
         * <pre>
         ** The values of members 
         * </pre>
         */
        public int getValuesCount() {
          return values_.size();
        }
        /**
         * <code>repeated .boa.types.Expression values = 4;</code>
         *
         * <pre>
         ** The values of members 
         * </pre>
         */
        public boa.types.Ast.Expression getValues(int index) {
          return values_.get(index);
        }
        /**
         * <code>repeated .boa.types.Expression values = 4;</code>
         *
         * <pre>
         ** The values of members 
         * </pre>
         */
        public boa.types.Ast.ExpressionOrBuilder getValuesOrBuilder(
            int index) {
          return values_.get(index);
        }

        private void initFields() {
          shadowKind_ = boa.types.Ast.Modifier.ModifierKind.ANNOTATION;
          typeName_ = "";
          names_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          values_ = java.util.Collections.emptyList();
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;

          if (!hasTypeName()) {
            memoizedIsInitialized = 0;
            return false;
          }
          for (int i = 0; i < getValuesCount(); i++) {
            if (!getValues(i).isInitialized()) {
              memoizedIsInitialized = 0;
              return false;
            }
          }
          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeEnum(1, shadowKind_.getNumber());
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeBytes(2, getTypeNameBytes());
          }
          for (int i = 0; i < names_.size(); i++) {
            output.writeBytes(3, names_.getByteString(i));
          }
          for (int i = 0; i < values_.size(); i++) {
            output.writeMessage(4, values_.get(i));
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(1, shadowKind_.getNumber());
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(2, getTypeNameBytes());
          }
          {
            int dataSize = 0;
            for (int i = 0; i < names_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeBytesSizeNoTag(names_.getByteString(i));
            }
            size += dataSize;
            size += 1 * getNamesList().size();
          }
          for (int i = 0; i < values_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(4, values_.get(i));
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static boa.types.Ast.Modifier.Annotation.NormalAnnotation parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static boa.types.Ast.Modifier.Annotation.NormalAnnotation parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static boa.types.Ast.Modifier.Annotation.NormalAnnotation parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static boa.types.Ast.Modifier.Annotation.NormalAnnotation parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static boa.types.Ast.Modifier.Annotation.NormalAnnotation parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static boa.types.Ast.Modifier.Annotation.NormalAnnotation parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static boa.types.Ast.Modifier.Annotation.NormalAnnotation parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static boa.types.Ast.Modifier.Annotation.NormalAnnotation parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static boa.types.Ast.Modifier.Annotation.NormalAnnotation parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static boa.types.Ast.Modifier.Annotation.NormalAnnotation parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(boa.types.Ast.Modifier.Annotation.NormalAnnotation prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code boa.types.Modifier.Annotation.NormalAnnotation}
         *
         * <pre>
         ** A normal annotation 
         * </pre>
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder>
           implements boa.types.Ast.Modifier.Annotation.NormalAnnotationOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return boa.types.Ast.internal_static_boa_types_Modifier_Annotation_NormalAnnotation_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return boa.types.Ast.internal_static_boa_types_Modifier_Annotation_NormalAnnotation_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    boa.types.Ast.Modifier.Annotation.NormalAnnotation.class, boa.types.Ast.Modifier.Annotation.NormalAnnotation.Builder.class);
          }

          // Construct using boa.types.Ast.Modifier.Annotation.NormalAnnotation.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
              getValuesFieldBuilder();
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            shadowKind_ = boa.types.Ast.Modifier.ModifierKind.ANNOTATION;
            bitField0_ = (bitField0_ & ~0x00000001);
            typeName_ = "";
            bitField0_ = (bitField0_ & ~0x00000002);
            names_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            bitField0_ = (bitField0_ & ~0x00000004);
            if (valuesBuilder_ == null) {
              values_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              valuesBuilder_.clear();
            }
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return boa.types.Ast.internal_static_boa_types_Modifier_Annotation_NormalAnnotation_descriptor;
          }

          public boa.types.Ast.Modifier.Annotation.NormalAnnotation getDefaultInstanceForType() {
            return boa.types.Ast.Modifier.Annotation.NormalAnnotation.getDefaultInstance();
          }

          public boa.types.Ast.Modifier.Annotation.NormalAnnotation build() {
            boa.types.Ast.Modifier.Annotation.NormalAnnotation result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public boa.types.Ast.Modifier.Annotation.NormalAnnotation buildPartial() {
            boa.types.Ast.Modifier.Annotation.NormalAnnotation result = new boa.types.Ast.Modifier.Annotation.NormalAnnotation(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.shadowKind_ = shadowKind_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.typeName_ = typeName_;
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              names_ = new com.google.protobuf.UnmodifiableLazyStringList(
                  names_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.names_ = names_;
            if (valuesBuilder_ == null) {
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                values_ = java.util.Collections.unmodifiableList(values_);
                bitField0_ = (bitField0_ & ~0x00000008);
              }
              result.values_ = values_;
            } else {
              result.values_ = valuesBuilder_.build();
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof boa.types.Ast.Modifier.Annotation.NormalAnnotation) {
              return mergeFrom((boa.types.Ast.Modifier.Annotation.NormalAnnotation)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(boa.types.Ast.Modifier.Annotation.NormalAnnotation other) {
            if (other == boa.types.Ast.Modifier.Annotation.NormalAnnotation.getDefaultInstance()) return this;
            if (other.hasShadowKind()) {
              setShadowKind(other.getShadowKind());
            }
            if (other.hasTypeName()) {
              bitField0_ |= 0x00000002;
              typeName_ = other.typeName_;
              onChanged();
            }
            if (!other.names_.isEmpty()) {
              if (names_.isEmpty()) {
                names_ = other.names_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureNamesIsMutable();
                names_.addAll(other.names_);
              }
              onChanged();
            }
            if (valuesBuilder_ == null) {
              if (!other.values_.isEmpty()) {
                if (values_.isEmpty()) {
                  values_ = other.values_;
                  bitField0_ = (bitField0_ & ~0x00000008);
                } else {
                  ensureValuesIsMutable();
                  values_.addAll(other.values_);
                }
                onChanged();
              }
            } else {
              if (!other.values_.isEmpty()) {
                if (valuesBuilder_.isEmpty()) {
                  valuesBuilder_.dispose();
                  valuesBuilder_ = null;
                  values_ = other.values_;
                  bitField0_ = (bitField0_ & ~0x00000008);
                  valuesBuilder_ = 
                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                       getValuesFieldBuilder() : null;
                } else {
                  valuesBuilder_.addAllMessages(other.values_);
                }
              }
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            if (!hasTypeName()) {
              
              return false;
            }
            for (int i = 0; i < getValuesCount(); i++) {
              if (!getValues(i).isInitialized()) {
                
                return false;
              }
            }
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            boa.types.Ast.Modifier.Annotation.NormalAnnotation parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (boa.types.Ast.Modifier.Annotation.NormalAnnotation) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          // optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];
          private boa.types.Ast.Modifier.ModifierKind shadowKind_ = boa.types.Ast.Modifier.ModifierKind.ANNOTATION;
          /**
           * <code>optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];</code>
           *
           * <pre>
           ** @exclude 
           * </pre>
           */
          public boolean hasShadowKind() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];</code>
           *
           * <pre>
           ** @exclude 
           * </pre>
           */
          public boa.types.Ast.Modifier.ModifierKind getShadowKind() {
            return shadowKind_;
          }
          /**
           * <code>optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];</code>
           *
           * <pre>
           ** @exclude 
           * </pre>
           */
          public Builder setShadowKind(boa.types.Ast.Modifier.ModifierKind value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField0_ |= 0x00000001;
            shadowKind_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];</code>
           *
           * <pre>
           ** @exclude 
           * </pre>
           */
          public Builder clearShadowKind() {
            bitField0_ = (bitField0_ & ~0x00000001);
            shadowKind_ = boa.types.Ast.Modifier.ModifierKind.ANNOTATION;
            onChanged();
            return this;
          }

          // required string type_name = 2;
          private java.lang.Object typeName_ = "";
          /**
           * <code>required string type_name = 2;</code>
           *
           * <pre>
           ** The name of the annotation type 
           * </pre>
           */
          public boolean hasTypeName() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>required string type_name = 2;</code>
           *
           * <pre>
           ** The name of the annotation type 
           * </pre>
           */
          public java.lang.String getTypeName() {
            java.lang.Object ref = typeName_;
            if (!(ref instanceof java.lang.String)) {
              java.lang.String s = ((com.google.protobuf.ByteString) ref)
                  .toStringUtf8();
              typeName_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>required string type_name = 2;</code>
           *
           * <pre>
           ** The name of the annotation type 
           * </pre>
           */
          public com.google.protobuf.ByteString
              getTypeNameBytes() {
            java.lang.Object ref = typeName_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              typeName_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>required string type_name = 2;</code>
           *
           * <pre>
           ** The name of the annotation type 
           * </pre>
           */
          public Builder setTypeName(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            typeName_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>required string type_name = 2;</code>
           *
           * <pre>
           ** The name of the annotation type 
           * </pre>
           */
          public Builder clearTypeName() {
            bitField0_ = (bitField0_ & ~0x00000002);
            typeName_ = getDefaultInstance().getTypeName();
            onChanged();
            return this;
          }
          /**
           * <code>required string type_name = 2;</code>
           *
           * <pre>
           ** The name of the annotation type 
           * </pre>
           */
          public Builder setTypeNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            typeName_ = value;
            onChanged();
            return this;
          }

          // repeated string names = 3;
          private com.google.protobuf.LazyStringList names_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          private void ensureNamesIsMutable() {
            if (!((bitField0_ & 0x00000004) == 0x00000004)) {
              names_ = new com.google.protobuf.LazyStringArrayList(names_);
              bitField0_ |= 0x00000004;
             }
          }
          /**
           * <code>repeated string names = 3;</code>
           *
           * <pre>
           ** The names of members 
           * </pre>
           */
          public java.util.List<java.lang.String>
              getNamesList() {
            return java.util.Collections.unmodifiableList(names_);
          }
          /**
           * <code>repeated string names = 3;</code>
           *
           * <pre>
           ** The names of members 
           * </pre>
           */
          public int getNamesCount() {
            return names_.size();
          }
          /**
           * <code>repeated string names = 3;</code>
           *
           * <pre>
           ** The names of members 
           * </pre>
           */
          public java.lang.String getNames(int index) {
            return names_.get(index);
          }
          /**
           * <code>repeated string names = 3;</code>
           *
           * <pre>
           ** The names of members 
           * </pre>
           */
          public com.google.protobuf.ByteString
              getNamesBytes(int index) {
            return names_.getByteString(index);
          }
          /**
           * <code>repeated string names = 3;</code>
           *
           * <pre>
           ** The names of members 
           * </pre>
           */
          public Builder setNames(
              int index, java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureNamesIsMutable();
            names_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string names = 3;</code>
           *
           * <pre>
           ** The names of members 
           * </pre>
           */
          public Builder addNames(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureNamesIsMutable();
            names_.add(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string names = 3;</code>
           *
           * <pre>
           ** The names of members 
           * </pre>
           */
          public Builder addAllNames(
              java.lang.Iterable<java.lang.String> values) {
            ensureNamesIsMutable();
            super.addAll(values, names_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string names = 3;</code>
           *
           * <pre>
           ** The names of members 
           * </pre>
           */
          public Builder clearNames() {
            names_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string names = 3;</code>
           *
           * <pre>
           ** The names of members 
           * </pre>
           */
          public Builder addNamesBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureNamesIsMutable();
            names_.add(value);
            onChanged();
            return this;
          }

          // repeated .boa.types.Expression values = 4;
          private java.util.List<boa.types.Ast.Expression> values_ =
            java.util.Collections.emptyList();
          private void ensureValuesIsMutable() {
            if (!((bitField0_ & 0x00000008) == 0x00000008)) {
              values_ = new java.util.ArrayList<boa.types.Ast.Expression>(values_);
              bitField0_ |= 0x00000008;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> valuesBuilder_;

          /**
           * <code>repeated .boa.types.Expression values = 4;</code>
           *
           * <pre>
           ** The values of members 
           * </pre>
           */
          public java.util.List<boa.types.Ast.Expression> getValuesList() {
            if (valuesBuilder_ == null) {
              return java.util.Collections.unmodifiableList(values_);
            } else {
              return valuesBuilder_.getMessageList();
            }
          }
          /**
           * <code>repeated .boa.types.Expression values = 4;</code>
           *
           * <pre>
           ** The values of members 
           * </pre>
           */
          public int getValuesCount() {
            if (valuesBuilder_ == null) {
              return values_.size();
            } else {
              return valuesBuilder_.getCount();
            }
          }
          /**
           * <code>repeated .boa.types.Expression values = 4;</code>
           *
           * <pre>
           ** The values of members 
           * </pre>
           */
          public boa.types.Ast.Expression getValues(int index) {
            if (valuesBuilder_ == null) {
              return values_.get(index);
            } else {
              return valuesBuilder_.getMessage(index);
            }
          }
          /**
           * <code>repeated .boa.types.Expression values = 4;</code>
           *
           * <pre>
           ** The values of members 
           * </pre>
           */
          public Builder setValues(
              int index, boa.types.Ast.Expression value) {
            if (valuesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureValuesIsMutable();
              values_.set(index, value);
              onChanged();
            } else {
              valuesBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Expression values = 4;</code>
           *
           * <pre>
           ** The values of members 
           * </pre>
           */
          public Builder setValues(
              int index, boa.types.Ast.Expression.Builder builderForValue) {
            if (valuesBuilder_ == null) {
              ensureValuesIsMutable();
              values_.set(index, builderForValue.build());
              onChanged();
            } else {
              valuesBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Expression values = 4;</code>
           *
           * <pre>
           ** The values of members 
           * </pre>
           */
          public Builder addValues(boa.types.Ast.Expression value) {
            if (valuesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureValuesIsMutable();
              values_.add(value);
              onChanged();
            } else {
              valuesBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Expression values = 4;</code>
           *
           * <pre>
           ** The values of members 
           * </pre>
           */
          public Builder addValues(
              int index, boa.types.Ast.Expression value) {
            if (valuesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureValuesIsMutable();
              values_.add(index, value);
              onChanged();
            } else {
              valuesBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Expression values = 4;</code>
           *
           * <pre>
           ** The values of members 
           * </pre>
           */
          public Builder addValues(
              boa.types.Ast.Expression.Builder builderForValue) {
            if (valuesBuilder_ == null) {
              ensureValuesIsMutable();
              values_.add(builderForValue.build());
              onChanged();
            } else {
              valuesBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Expression values = 4;</code>
           *
           * <pre>
           ** The values of members 
           * </pre>
           */
          public Builder addValues(
              int index, boa.types.Ast.Expression.Builder builderForValue) {
            if (valuesBuilder_ == null) {
              ensureValuesIsMutable();
              values_.add(index, builderForValue.build());
              onChanged();
            } else {
              valuesBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Expression values = 4;</code>
           *
           * <pre>
           ** The values of members 
           * </pre>
           */
          public Builder addAllValues(
              java.lang.Iterable<? extends boa.types.Ast.Expression> values) {
            if (valuesBuilder_ == null) {
              ensureValuesIsMutable();
              super.addAll(values, values_);
              onChanged();
            } else {
              valuesBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Expression values = 4;</code>
           *
           * <pre>
           ** The values of members 
           * </pre>
           */
          public Builder clearValues() {
            if (valuesBuilder_ == null) {
              values_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000008);
              onChanged();
            } else {
              valuesBuilder_.clear();
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Expression values = 4;</code>
           *
           * <pre>
           ** The values of members 
           * </pre>
           */
          public Builder removeValues(int index) {
            if (valuesBuilder_ == null) {
              ensureValuesIsMutable();
              values_.remove(index);
              onChanged();
            } else {
              valuesBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <code>repeated .boa.types.Expression values = 4;</code>
           *
           * <pre>
           ** The values of members 
           * </pre>
           */
          public boa.types.Ast.Expression.Builder getValuesBuilder(
              int index) {
            return getValuesFieldBuilder().getBuilder(index);
          }
          /**
           * <code>repeated .boa.types.Expression values = 4;</code>
           *
           * <pre>
           ** The values of members 
           * </pre>
           */
          public boa.types.Ast.ExpressionOrBuilder getValuesOrBuilder(
              int index) {
            if (valuesBuilder_ == null) {
              return values_.get(index);  } else {
              return valuesBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <code>repeated .boa.types.Expression values = 4;</code>
           *
           * <pre>
           ** The values of members 
           * </pre>
           */
          public java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
               getValuesOrBuilderList() {
            if (valuesBuilder_ != null) {
              return valuesBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(values_);
            }
          }
          /**
           * <code>repeated .boa.types.Expression values = 4;</code>
           *
           * <pre>
           ** The values of members 
           * </pre>
           */
          public boa.types.Ast.Expression.Builder addValuesBuilder() {
            return getValuesFieldBuilder().addBuilder(
                boa.types.Ast.Expression.getDefaultInstance());
          }
          /**
           * <code>repeated .boa.types.Expression values = 4;</code>
           *
           * <pre>
           ** The values of members 
           * </pre>
           */
          public boa.types.Ast.Expression.Builder addValuesBuilder(
              int index) {
            return getValuesFieldBuilder().addBuilder(
                index, boa.types.Ast.Expression.getDefaultInstance());
          }
          /**
           * <code>repeated .boa.types.Expression values = 4;</code>
           *
           * <pre>
           ** The values of members 
           * </pre>
           */
          public java.util.List<boa.types.Ast.Expression.Builder> 
               getValuesBuilderList() {
            return getValuesFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
              getValuesFieldBuilder() {
            if (valuesBuilder_ == null) {
              valuesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                  boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                      values_,
                      ((bitField0_ & 0x00000008) == 0x00000008),
                      getParentForChildren(),
                      isClean());
              values_ = null;
            }
            return valuesBuilder_;
          }

          // @@protoc_insertion_point(builder_scope:boa.types.Modifier.Annotation.NormalAnnotation)
        }

        static {
          defaultInstance = new NormalAnnotation(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:boa.types.Modifier.Annotation.NormalAnnotation)
      }

      public interface SingleMemberAnnotationOrBuilder
          extends com.google.protobuf.MessageOrBuilder {

        // optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        boolean hasShadowKind();
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        boa.types.Ast.Modifier.ModifierKind getShadowKind();

        // required string type_name = 2;
        /**
         * <code>required string type_name = 2;</code>
         *
         * <pre>
         ** The name of the annotation type 
         * </pre>
         */
        boolean hasTypeName();
        /**
         * <code>required string type_name = 2;</code>
         *
         * <pre>
         ** The name of the annotation type 
         * </pre>
         */
        java.lang.String getTypeName();
        /**
         * <code>required string type_name = 2;</code>
         *
         * <pre>
         ** The name of the annotation type 
         * </pre>
         */
        com.google.protobuf.ByteString
            getTypeNameBytes();

        // required .boa.types.Expression value = 3;
        /**
         * <code>required .boa.types.Expression value = 3;</code>
         *
         * <pre>
         ** The annotation value 
         * </pre>
         */
        boolean hasValue();
        /**
         * <code>required .boa.types.Expression value = 3;</code>
         *
         * <pre>
         ** The annotation value 
         * </pre>
         */
        boa.types.Ast.Expression getValue();
        /**
         * <code>required .boa.types.Expression value = 3;</code>
         *
         * <pre>
         ** The annotation value 
         * </pre>
         */
        boa.types.Ast.ExpressionOrBuilder getValueOrBuilder();
      }
      /**
       * Protobuf type {@code boa.types.Modifier.Annotation.SingleMemberAnnotation}
       *
       * <pre>
       ** An annotation with a single member value 
       * </pre>
       */
      public static final class SingleMemberAnnotation extends
          com.google.protobuf.GeneratedMessage
          implements SingleMemberAnnotationOrBuilder {
        // Use SingleMemberAnnotation.newBuilder() to construct.
        private SingleMemberAnnotation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private SingleMemberAnnotation(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final SingleMemberAnnotation defaultInstance;
        public static SingleMemberAnnotation getDefaultInstance() {
          return defaultInstance;
        }

        public SingleMemberAnnotation getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private SingleMemberAnnotation(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  boa.types.Ast.Modifier.ModifierKind value = boa.types.Ast.Modifier.ModifierKind.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    shadowKind_ = value;
                  }
                  break;
                }
                case 18: {
                  bitField0_ |= 0x00000002;
                  typeName_ = input.readBytes();
                  break;
                }
                case 26: {
                  boa.types.Ast.Expression.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000004) == 0x00000004)) {
                    subBuilder = value_.toBuilder();
                  }
                  value_ = input.readMessage(boa.types.Ast.Expression.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(value_);
                    value_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000004;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Modifier_Annotation_SingleMemberAnnotation_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Modifier_Annotation_SingleMemberAnnotation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Modifier.Annotation.SingleMemberAnnotation.class, boa.types.Ast.Modifier.Annotation.SingleMemberAnnotation.Builder.class);
        }

        public static com.google.protobuf.Parser<SingleMemberAnnotation> PARSER =
            new com.google.protobuf.AbstractParser<SingleMemberAnnotation>() {
          public SingleMemberAnnotation parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new SingleMemberAnnotation(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<SingleMemberAnnotation> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        // optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];
        public static final int SHADOW_KIND_FIELD_NUMBER = 1;
        private boa.types.Ast.Modifier.ModifierKind shadowKind_;
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Modifier.ModifierKind getShadowKind() {
          return shadowKind_;
        }

        // required string type_name = 2;
        public static final int TYPE_NAME_FIELD_NUMBER = 2;
        private java.lang.Object typeName_;
        /**
         * <code>required string type_name = 2;</code>
         *
         * <pre>
         ** The name of the annotation type 
         * </pre>
         */
        public boolean hasTypeName() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string type_name = 2;</code>
         *
         * <pre>
         ** The name of the annotation type 
         * </pre>
         */
        public java.lang.String getTypeName() {
          java.lang.Object ref = typeName_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              typeName_ = s;
            }
            return s;
          }
        }
        /**
         * <code>required string type_name = 2;</code>
         *
         * <pre>
         ** The name of the annotation type 
         * </pre>
         */
        public com.google.protobuf.ByteString
            getTypeNameBytes() {
          java.lang.Object ref = typeName_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            typeName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        // required .boa.types.Expression value = 3;
        public static final int VALUE_FIELD_NUMBER = 3;
        private boa.types.Ast.Expression value_;
        /**
         * <code>required .boa.types.Expression value = 3;</code>
         *
         * <pre>
         ** The annotation value 
         * </pre>
         */
        public boolean hasValue() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required .boa.types.Expression value = 3;</code>
         *
         * <pre>
         ** The annotation value 
         * </pre>
         */
        public boa.types.Ast.Expression getValue() {
          return value_;
        }
        /**
         * <code>required .boa.types.Expression value = 3;</code>
         *
         * <pre>
         ** The annotation value 
         * </pre>
         */
        public boa.types.Ast.ExpressionOrBuilder getValueOrBuilder() {
          return value_;
        }

        private void initFields() {
          shadowKind_ = boa.types.Ast.Modifier.ModifierKind.ANNOTATION;
          typeName_ = "";
          value_ = boa.types.Ast.Expression.getDefaultInstance();
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;

          if (!hasTypeName()) {
            memoizedIsInitialized = 0;
            return false;
          }
          if (!hasValue()) {
            memoizedIsInitialized = 0;
            return false;
          }
          if (!getValue().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeEnum(1, shadowKind_.getNumber());
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeBytes(2, getTypeNameBytes());
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeMessage(3, value_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(1, shadowKind_.getNumber());
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(2, getTypeNameBytes());
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(3, value_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static boa.types.Ast.Modifier.Annotation.SingleMemberAnnotation parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static boa.types.Ast.Modifier.Annotation.SingleMemberAnnotation parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static boa.types.Ast.Modifier.Annotation.SingleMemberAnnotation parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static boa.types.Ast.Modifier.Annotation.SingleMemberAnnotation parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static boa.types.Ast.Modifier.Annotation.SingleMemberAnnotation parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static boa.types.Ast.Modifier.Annotation.SingleMemberAnnotation parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static boa.types.Ast.Modifier.Annotation.SingleMemberAnnotation parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static boa.types.Ast.Modifier.Annotation.SingleMemberAnnotation parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static boa.types.Ast.Modifier.Annotation.SingleMemberAnnotation parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static boa.types.Ast.Modifier.Annotation.SingleMemberAnnotation parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(boa.types.Ast.Modifier.Annotation.SingleMemberAnnotation prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code boa.types.Modifier.Annotation.SingleMemberAnnotation}
         *
         * <pre>
         ** An annotation with a single member value 
         * </pre>
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder>
           implements boa.types.Ast.Modifier.Annotation.SingleMemberAnnotationOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return boa.types.Ast.internal_static_boa_types_Modifier_Annotation_SingleMemberAnnotation_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return boa.types.Ast.internal_static_boa_types_Modifier_Annotation_SingleMemberAnnotation_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    boa.types.Ast.Modifier.Annotation.SingleMemberAnnotation.class, boa.types.Ast.Modifier.Annotation.SingleMemberAnnotation.Builder.class);
          }

          // Construct using boa.types.Ast.Modifier.Annotation.SingleMemberAnnotation.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
              getValueFieldBuilder();
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            shadowKind_ = boa.types.Ast.Modifier.ModifierKind.ANNOTATION;
            bitField0_ = (bitField0_ & ~0x00000001);
            typeName_ = "";
            bitField0_ = (bitField0_ & ~0x00000002);
            if (valueBuilder_ == null) {
              value_ = boa.types.Ast.Expression.getDefaultInstance();
            } else {
              valueBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000004);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return boa.types.Ast.internal_static_boa_types_Modifier_Annotation_SingleMemberAnnotation_descriptor;
          }

          public boa.types.Ast.Modifier.Annotation.SingleMemberAnnotation getDefaultInstanceForType() {
            return boa.types.Ast.Modifier.Annotation.SingleMemberAnnotation.getDefaultInstance();
          }

          public boa.types.Ast.Modifier.Annotation.SingleMemberAnnotation build() {
            boa.types.Ast.Modifier.Annotation.SingleMemberAnnotation result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public boa.types.Ast.Modifier.Annotation.SingleMemberAnnotation buildPartial() {
            boa.types.Ast.Modifier.Annotation.SingleMemberAnnotation result = new boa.types.Ast.Modifier.Annotation.SingleMemberAnnotation(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.shadowKind_ = shadowKind_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.typeName_ = typeName_;
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000004;
            }
            if (valueBuilder_ == null) {
              result.value_ = value_;
            } else {
              result.value_ = valueBuilder_.build();
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof boa.types.Ast.Modifier.Annotation.SingleMemberAnnotation) {
              return mergeFrom((boa.types.Ast.Modifier.Annotation.SingleMemberAnnotation)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(boa.types.Ast.Modifier.Annotation.SingleMemberAnnotation other) {
            if (other == boa.types.Ast.Modifier.Annotation.SingleMemberAnnotation.getDefaultInstance()) return this;
            if (other.hasShadowKind()) {
              setShadowKind(other.getShadowKind());
            }
            if (other.hasTypeName()) {
              bitField0_ |= 0x00000002;
              typeName_ = other.typeName_;
              onChanged();
            }
            if (other.hasValue()) {
              mergeValue(other.getValue());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            if (!hasTypeName()) {
              
              return false;
            }
            if (!hasValue()) {
              
              return false;
            }
            if (!getValue().isInitialized()) {
              
              return false;
            }
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            boa.types.Ast.Modifier.Annotation.SingleMemberAnnotation parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (boa.types.Ast.Modifier.Annotation.SingleMemberAnnotation) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          // optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];
          private boa.types.Ast.Modifier.ModifierKind shadowKind_ = boa.types.Ast.Modifier.ModifierKind.ANNOTATION;
          /**
           * <code>optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];</code>
           *
           * <pre>
           ** @exclude 
           * </pre>
           */
          public boolean hasShadowKind() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];</code>
           *
           * <pre>
           ** @exclude 
           * </pre>
           */
          public boa.types.Ast.Modifier.ModifierKind getShadowKind() {
            return shadowKind_;
          }
          /**
           * <code>optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];</code>
           *
           * <pre>
           ** @exclude 
           * </pre>
           */
          public Builder setShadowKind(boa.types.Ast.Modifier.ModifierKind value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField0_ |= 0x00000001;
            shadowKind_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];</code>
           *
           * <pre>
           ** @exclude 
           * </pre>
           */
          public Builder clearShadowKind() {
            bitField0_ = (bitField0_ & ~0x00000001);
            shadowKind_ = boa.types.Ast.Modifier.ModifierKind.ANNOTATION;
            onChanged();
            return this;
          }

          // required string type_name = 2;
          private java.lang.Object typeName_ = "";
          /**
           * <code>required string type_name = 2;</code>
           *
           * <pre>
           ** The name of the annotation type 
           * </pre>
           */
          public boolean hasTypeName() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>required string type_name = 2;</code>
           *
           * <pre>
           ** The name of the annotation type 
           * </pre>
           */
          public java.lang.String getTypeName() {
            java.lang.Object ref = typeName_;
            if (!(ref instanceof java.lang.String)) {
              java.lang.String s = ((com.google.protobuf.ByteString) ref)
                  .toStringUtf8();
              typeName_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>required string type_name = 2;</code>
           *
           * <pre>
           ** The name of the annotation type 
           * </pre>
           */
          public com.google.protobuf.ByteString
              getTypeNameBytes() {
            java.lang.Object ref = typeName_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              typeName_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>required string type_name = 2;</code>
           *
           * <pre>
           ** The name of the annotation type 
           * </pre>
           */
          public Builder setTypeName(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            typeName_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>required string type_name = 2;</code>
           *
           * <pre>
           ** The name of the annotation type 
           * </pre>
           */
          public Builder clearTypeName() {
            bitField0_ = (bitField0_ & ~0x00000002);
            typeName_ = getDefaultInstance().getTypeName();
            onChanged();
            return this;
          }
          /**
           * <code>required string type_name = 2;</code>
           *
           * <pre>
           ** The name of the annotation type 
           * </pre>
           */
          public Builder setTypeNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            typeName_ = value;
            onChanged();
            return this;
          }

          // required .boa.types.Expression value = 3;
          private boa.types.Ast.Expression value_ = boa.types.Ast.Expression.getDefaultInstance();
          private com.google.protobuf.SingleFieldBuilder<
              boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> valueBuilder_;
          /**
           * <code>required .boa.types.Expression value = 3;</code>
           *
           * <pre>
           ** The annotation value 
           * </pre>
           */
          public boolean hasValue() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>required .boa.types.Expression value = 3;</code>
           *
           * <pre>
           ** The annotation value 
           * </pre>
           */
          public boa.types.Ast.Expression getValue() {
            if (valueBuilder_ == null) {
              return value_;
            } else {
              return valueBuilder_.getMessage();
            }
          }
          /**
           * <code>required .boa.types.Expression value = 3;</code>
           *
           * <pre>
           ** The annotation value 
           * </pre>
           */
          public Builder setValue(boa.types.Ast.Expression value) {
            if (valueBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              value_ = value;
              onChanged();
            } else {
              valueBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000004;
            return this;
          }
          /**
           * <code>required .boa.types.Expression value = 3;</code>
           *
           * <pre>
           ** The annotation value 
           * </pre>
           */
          public Builder setValue(
              boa.types.Ast.Expression.Builder builderForValue) {
            if (valueBuilder_ == null) {
              value_ = builderForValue.build();
              onChanged();
            } else {
              valueBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000004;
            return this;
          }
          /**
           * <code>required .boa.types.Expression value = 3;</code>
           *
           * <pre>
           ** The annotation value 
           * </pre>
           */
          public Builder mergeValue(boa.types.Ast.Expression value) {
            if (valueBuilder_ == null) {
              if (((bitField0_ & 0x00000004) == 0x00000004) &&
                  value_ != boa.types.Ast.Expression.getDefaultInstance()) {
                value_ =
                  boa.types.Ast.Expression.newBuilder(value_).mergeFrom(value).buildPartial();
              } else {
                value_ = value;
              }
              onChanged();
            } else {
              valueBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00000004;
            return this;
          }
          /**
           * <code>required .boa.types.Expression value = 3;</code>
           *
           * <pre>
           ** The annotation value 
           * </pre>
           */
          public Builder clearValue() {
            if (valueBuilder_ == null) {
              value_ = boa.types.Ast.Expression.getDefaultInstance();
              onChanged();
            } else {
              valueBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000004);
            return this;
          }
          /**
           * <code>required .boa.types.Expression value = 3;</code>
           *
           * <pre>
           ** The annotation value 
           * </pre>
           */
          public boa.types.Ast.Expression.Builder getValueBuilder() {
            bitField0_ |= 0x00000004;
            onChanged();
            return getValueFieldBuilder().getBuilder();
          }
          /**
           * <code>required .boa.types.Expression value = 3;</code>
           *
           * <pre>
           ** The annotation value 
           * </pre>
           */
          public boa.types.Ast.ExpressionOrBuilder getValueOrBuilder() {
            if (valueBuilder_ != null) {
              return valueBuilder_.getMessageOrBuilder();
            } else {
              return value_;
            }
          }
          /**
           * <code>required .boa.types.Expression value = 3;</code>
           *
           * <pre>
           ** The annotation value 
           * </pre>
           */
          private com.google.protobuf.SingleFieldBuilder<
              boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
              getValueFieldBuilder() {
            if (valueBuilder_ == null) {
              valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                  boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                      value_,
                      getParentForChildren(),
                      isClean());
              value_ = null;
            }
            return valueBuilder_;
          }

          // @@protoc_insertion_point(builder_scope:boa.types.Modifier.Annotation.SingleMemberAnnotation)
        }

        static {
          defaultInstance = new SingleMemberAnnotation(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:boa.types.Modifier.Annotation.SingleMemberAnnotation)
      }

      private int bitField0_;
      // optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Modifier.ModifierKind shadowKind_;
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Modifier.ModifierKind getShadowKind() {
        return shadowKind_;
      }

      // required string type_name = 2;
      public static final int TYPE_NAME_FIELD_NUMBER = 2;
      private java.lang.Object typeName_;
      /**
       * <code>required string type_name = 2;</code>
       *
       * <pre>
       ** The name of the annotation type 
       * </pre>
       */
      public boolean hasTypeName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string type_name = 2;</code>
       *
       * <pre>
       ** The name of the annotation type 
       * </pre>
       */
      public java.lang.String getTypeName() {
        java.lang.Object ref = typeName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            typeName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string type_name = 2;</code>
       *
       * <pre>
       ** The name of the annotation type 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTypeNameBytes() {
        java.lang.Object ref = typeName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          typeName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Modifier.ModifierKind.ANNOTATION;
        typeName_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasTypeName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getTypeNameBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getTypeNameBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Modifier.Annotation parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Modifier.Annotation parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Modifier.Annotation parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Modifier.Annotation parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Modifier.Annotation parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Modifier.Annotation parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Modifier.Annotation parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Modifier.Annotation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Modifier.Annotation parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Modifier.Annotation parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Modifier.Annotation prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Modifier.Annotation}
       *
       * <pre>
       ** An annotation 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Modifier.AnnotationOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Modifier_Annotation_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Modifier_Annotation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Modifier.Annotation.class, boa.types.Ast.Modifier.Annotation.Builder.class);
        }

        // Construct using boa.types.Ast.Modifier.Annotation.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Modifier.ModifierKind.ANNOTATION;
          bitField0_ = (bitField0_ & ~0x00000001);
          typeName_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Modifier_Annotation_descriptor;
        }

        public boa.types.Ast.Modifier.Annotation getDefaultInstanceForType() {
          return boa.types.Ast.Modifier.Annotation.getDefaultInstance();
        }

        public boa.types.Ast.Modifier.Annotation build() {
          boa.types.Ast.Modifier.Annotation result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Modifier.Annotation buildPartial() {
          boa.types.Ast.Modifier.Annotation result = new boa.types.Ast.Modifier.Annotation(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.typeName_ = typeName_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Modifier.Annotation) {
            return mergeFrom((boa.types.Ast.Modifier.Annotation)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Modifier.Annotation other) {
          if (other == boa.types.Ast.Modifier.Annotation.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasTypeName()) {
            bitField0_ |= 0x00000002;
            typeName_ = other.typeName_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasTypeName()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Modifier.Annotation parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Modifier.Annotation) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];
        private boa.types.Ast.Modifier.ModifierKind shadowKind_ = boa.types.Ast.Modifier.ModifierKind.ANNOTATION;
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Modifier.ModifierKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Modifier.ModifierKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Modifier.ModifierKind shadow_kind = 1 [default = ANNOTATION];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Modifier.ModifierKind.ANNOTATION;
          onChanged();
          return this;
        }

        // required string type_name = 2;
        private java.lang.Object typeName_ = "";
        /**
         * <code>required string type_name = 2;</code>
         *
         * <pre>
         ** The name of the annotation type 
         * </pre>
         */
        public boolean hasTypeName() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string type_name = 2;</code>
         *
         * <pre>
         ** The name of the annotation type 
         * </pre>
         */
        public java.lang.String getTypeName() {
          java.lang.Object ref = typeName_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            typeName_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string type_name = 2;</code>
         *
         * <pre>
         ** The name of the annotation type 
         * </pre>
         */
        public com.google.protobuf.ByteString
            getTypeNameBytes() {
          java.lang.Object ref = typeName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            typeName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string type_name = 2;</code>
         *
         * <pre>
         ** The name of the annotation type 
         * </pre>
         */
        public Builder setTypeName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          typeName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string type_name = 2;</code>
         *
         * <pre>
         ** The name of the annotation type 
         * </pre>
         */
        public Builder clearTypeName() {
          bitField0_ = (bitField0_ & ~0x00000002);
          typeName_ = getDefaultInstance().getTypeName();
          onChanged();
          return this;
        }
        /**
         * <code>required string type_name = 2;</code>
         *
         * <pre>
         ** The name of the annotation type 
         * </pre>
         */
        public Builder setTypeNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          typeName_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Modifier.Annotation)
      }

      static {
        defaultInstance = new Annotation(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Modifier.Annotation)
    }

    private int bitField0_;
    // required .boa.types.Modifier.ModifierKind kind = 1;
    public static final int KIND_FIELD_NUMBER = 1;
    private boa.types.Ast.Modifier.ModifierKind kind_;
    /**
     * <code>required .boa.types.Modifier.ModifierKind kind = 1;</code>
     *
     * <pre>
     ** The kind of modifier 
     * </pre>
     */
    public boolean hasKind() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .boa.types.Modifier.ModifierKind kind = 1;</code>
     *
     * <pre>
     ** The kind of modifier 
     * </pre>
     */
    public boa.types.Ast.Modifier.ModifierKind getKind() {
      return kind_;
    }

    // optional string string_1 = 2;
    public static final int STRING_1_FIELD_NUMBER = 2;
    private java.lang.Object string1_;
    /**
     * <code>optional string string_1 = 2;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boolean hasString1() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string string_1 = 2;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public java.lang.String getString1() {
      java.lang.Object ref = string1_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          string1_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string string_1 = 2;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getString1Bytes() {
      java.lang.Object ref = string1_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        string1_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated string strings_1 = 3;
    public static final int STRINGS_1_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList strings1_;
    /**
     * <code>repeated string strings_1 = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public java.util.List<java.lang.String>
        getStrings1List() {
      return strings1_;
    }
    /**
     * <code>repeated string strings_1 = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public int getStrings1Count() {
      return strings1_.size();
    }
    /**
     * <code>repeated string strings_1 = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public java.lang.String getStrings1(int index) {
      return strings1_.get(index);
    }
    /**
     * <code>repeated string strings_1 = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getStrings1Bytes(int index) {
      return strings1_.getByteString(index);
    }

    // repeated .boa.types.Expression expressions_1 = 4;
    public static final int EXPRESSIONS_1_FIELD_NUMBER = 4;
    private java.util.List<boa.types.Ast.Expression> expressions1_;
    /**
     * <code>repeated .boa.types.Expression expressions_1 = 4;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public java.util.List<boa.types.Ast.Expression> getExpressions1List() {
      return expressions1_;
    }
    /**
     * <code>repeated .boa.types.Expression expressions_1 = 4;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
        getExpressions1OrBuilderList() {
      return expressions1_;
    }
    /**
     * <code>repeated .boa.types.Expression expressions_1 = 4;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public int getExpressions1Count() {
      return expressions1_.size();
    }
    /**
     * <code>repeated .boa.types.Expression expressions_1 = 4;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.Expression getExpressions1(int index) {
      return expressions1_.get(index);
    }
    /**
     * <code>repeated .boa.types.Expression expressions_1 = 4;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.ExpressionOrBuilder getExpressions1OrBuilder(
        int index) {
      return expressions1_.get(index);
    }

    // optional .boa.types.Expression expression_1 = 5;
    public static final int EXPRESSION_1_FIELD_NUMBER = 5;
    private boa.types.Ast.Expression expression1_;
    /**
     * <code>optional .boa.types.Expression expression_1 = 5;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boolean hasExpression1() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .boa.types.Expression expression_1 = 5;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.Expression getExpression1() {
      return expression1_;
    }
    /**
     * <code>optional .boa.types.Expression expression_1 = 5;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.ExpressionOrBuilder getExpression1OrBuilder() {
      return expression1_;
    }

    // optional .boa.types.ChangeKind structural_change_kind = 6;
    public static final int STRUCTURAL_CHANGE_KIND_FIELD_NUMBER = 6;
    private boa.types.Shared.ChangeKind structuralChangeKind_;
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 6;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    public boolean hasStructuralChangeKind() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 6;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    public boa.types.Shared.ChangeKind getStructuralChangeKind() {
      return structuralChangeKind_;
    }

    // optional .boa.types.ChangeKind label_change_kind = 7;
    public static final int LABEL_CHANGE_KIND_FIELD_NUMBER = 7;
    private boa.types.Shared.ChangeKind labelChangeKind_;
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 7;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    public boolean hasLabelChangeKind() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 7;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    public boa.types.Shared.ChangeKind getLabelChangeKind() {
      return labelChangeKind_;
    }

    private void initFields() {
      kind_ = boa.types.Ast.Modifier.ModifierKind.OTHER;
      string1_ = "";
      strings1_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      expressions1_ = java.util.Collections.emptyList();
      expression1_ = boa.types.Ast.Expression.getDefaultInstance();
      structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
      labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKind()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getExpressions1Count(); i++) {
        if (!getExpressions1(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasExpression1()) {
        if (!getExpression1().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, kind_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getString1Bytes());
      }
      for (int i = 0; i < strings1_.size(); i++) {
        output.writeBytes(3, strings1_.getByteString(i));
      }
      for (int i = 0; i < expressions1_.size(); i++) {
        output.writeMessage(4, expressions1_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(5, expression1_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(6, structuralChangeKind_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(7, labelChangeKind_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, kind_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getString1Bytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < strings1_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(strings1_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getStrings1List().size();
      }
      for (int i = 0; i < expressions1_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, expressions1_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, expression1_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, structuralChangeKind_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, labelChangeKind_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static boa.types.Ast.Modifier parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static boa.types.Ast.Modifier parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static boa.types.Ast.Modifier parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static boa.types.Ast.Modifier parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static boa.types.Ast.Modifier parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static boa.types.Ast.Modifier parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static boa.types.Ast.Modifier parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static boa.types.Ast.Modifier parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static boa.types.Ast.Modifier parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static boa.types.Ast.Modifier parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(boa.types.Ast.Modifier prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code boa.types.Modifier}
     *
     * <pre>
     ** A single modifier 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements boa.types.Ast.ModifierOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Modifier_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Modifier_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Modifier.class, boa.types.Ast.Modifier.Builder.class);
      }

      // Construct using boa.types.Ast.Modifier.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getExpressions1FieldBuilder();
          getExpression1FieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        kind_ = boa.types.Ast.Modifier.ModifierKind.OTHER;
        bitField0_ = (bitField0_ & ~0x00000001);
        string1_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        strings1_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (expressions1Builder_ == null) {
          expressions1_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          expressions1Builder_.clear();
        }
        if (expression1Builder_ == null) {
          expression1_ = boa.types.Ast.Expression.getDefaultInstance();
        } else {
          expression1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        bitField0_ = (bitField0_ & ~0x00000020);
        labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return boa.types.Ast.internal_static_boa_types_Modifier_descriptor;
      }

      public boa.types.Ast.Modifier getDefaultInstanceForType() {
        return boa.types.Ast.Modifier.getDefaultInstance();
      }

      public boa.types.Ast.Modifier build() {
        boa.types.Ast.Modifier result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public boa.types.Ast.Modifier buildPartial() {
        boa.types.Ast.Modifier result = new boa.types.Ast.Modifier(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.kind_ = kind_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.string1_ = string1_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          strings1_ = new com.google.protobuf.UnmodifiableLazyStringList(
              strings1_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.strings1_ = strings1_;
        if (expressions1Builder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            expressions1_ = java.util.Collections.unmodifiableList(expressions1_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.expressions1_ = expressions1_;
        } else {
          result.expressions1_ = expressions1Builder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        if (expression1Builder_ == null) {
          result.expression1_ = expression1_;
        } else {
          result.expression1_ = expression1Builder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.structuralChangeKind_ = structuralChangeKind_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.labelChangeKind_ = labelChangeKind_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof boa.types.Ast.Modifier) {
          return mergeFrom((boa.types.Ast.Modifier)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(boa.types.Ast.Modifier other) {
        if (other == boa.types.Ast.Modifier.getDefaultInstance()) return this;
        if (other.hasKind()) {
          setKind(other.getKind());
        }
        if (other.hasString1()) {
          bitField0_ |= 0x00000002;
          string1_ = other.string1_;
          onChanged();
        }
        if (!other.strings1_.isEmpty()) {
          if (strings1_.isEmpty()) {
            strings1_ = other.strings1_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureStrings1IsMutable();
            strings1_.addAll(other.strings1_);
          }
          onChanged();
        }
        if (expressions1Builder_ == null) {
          if (!other.expressions1_.isEmpty()) {
            if (expressions1_.isEmpty()) {
              expressions1_ = other.expressions1_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureExpressions1IsMutable();
              expressions1_.addAll(other.expressions1_);
            }
            onChanged();
          }
        } else {
          if (!other.expressions1_.isEmpty()) {
            if (expressions1Builder_.isEmpty()) {
              expressions1Builder_.dispose();
              expressions1Builder_ = null;
              expressions1_ = other.expressions1_;
              bitField0_ = (bitField0_ & ~0x00000008);
              expressions1Builder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getExpressions1FieldBuilder() : null;
            } else {
              expressions1Builder_.addAllMessages(other.expressions1_);
            }
          }
        }
        if (other.hasExpression1()) {
          mergeExpression1(other.getExpression1());
        }
        if (other.hasStructuralChangeKind()) {
          setStructuralChangeKind(other.getStructuralChangeKind());
        }
        if (other.hasLabelChangeKind()) {
          setLabelChangeKind(other.getLabelChangeKind());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKind()) {
          
          return false;
        }
        for (int i = 0; i < getExpressions1Count(); i++) {
          if (!getExpressions1(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasExpression1()) {
          if (!getExpression1().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        boa.types.Ast.Modifier parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (boa.types.Ast.Modifier) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .boa.types.Modifier.ModifierKind kind = 1;
      private boa.types.Ast.Modifier.ModifierKind kind_ = boa.types.Ast.Modifier.ModifierKind.OTHER;
      /**
       * <code>required .boa.types.Modifier.ModifierKind kind = 1;</code>
       *
       * <pre>
       ** The kind of modifier 
       * </pre>
       */
      public boolean hasKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .boa.types.Modifier.ModifierKind kind = 1;</code>
       *
       * <pre>
       ** The kind of modifier 
       * </pre>
       */
      public boa.types.Ast.Modifier.ModifierKind getKind() {
        return kind_;
      }
      /**
       * <code>required .boa.types.Modifier.ModifierKind kind = 1;</code>
       *
       * <pre>
       ** The kind of modifier 
       * </pre>
       */
      public Builder setKind(boa.types.Ast.Modifier.ModifierKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        kind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .boa.types.Modifier.ModifierKind kind = 1;</code>
       *
       * <pre>
       ** The kind of modifier 
       * </pre>
       */
      public Builder clearKind() {
        bitField0_ = (bitField0_ & ~0x00000001);
        kind_ = boa.types.Ast.Modifier.ModifierKind.OTHER;
        onChanged();
        return this;
      }

      // optional string string_1 = 2;
      private java.lang.Object string1_ = "";
      /**
       * <code>optional string string_1 = 2;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasString1() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string string_1 = 2;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.lang.String getString1() {
        java.lang.Object ref = string1_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          string1_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string string_1 = 2;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getString1Bytes() {
        java.lang.Object ref = string1_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          string1_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string string_1 = 2;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setString1(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        string1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string string_1 = 2;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearString1() {
        bitField0_ = (bitField0_ & ~0x00000002);
        string1_ = getDefaultInstance().getString1();
        onChanged();
        return this;
      }
      /**
       * <code>optional string string_1 = 2;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setString1Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        string1_ = value;
        onChanged();
        return this;
      }

      // repeated string strings_1 = 3;
      private com.google.protobuf.LazyStringList strings1_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureStrings1IsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          strings1_ = new com.google.protobuf.LazyStringArrayList(strings1_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated string strings_1 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.util.List<java.lang.String>
          getStrings1List() {
        return java.util.Collections.unmodifiableList(strings1_);
      }
      /**
       * <code>repeated string strings_1 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public int getStrings1Count() {
        return strings1_.size();
      }
      /**
       * <code>repeated string strings_1 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.lang.String getStrings1(int index) {
        return strings1_.get(index);
      }
      /**
       * <code>repeated string strings_1 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getStrings1Bytes(int index) {
        return strings1_.getByteString(index);
      }
      /**
       * <code>repeated string strings_1 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setStrings1(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrings1IsMutable();
        strings1_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strings_1 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addStrings1(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrings1IsMutable();
        strings1_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strings_1 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addAllStrings1(
          java.lang.Iterable<java.lang.String> values) {
        ensureStrings1IsMutable();
        super.addAll(values, strings1_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strings_1 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearStrings1() {
        strings1_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strings_1 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addStrings1Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrings1IsMutable();
        strings1_.add(value);
        onChanged();
        return this;
      }

      // repeated .boa.types.Expression expressions_1 = 4;
      private java.util.List<boa.types.Ast.Expression> expressions1_ =
        java.util.Collections.emptyList();
      private void ensureExpressions1IsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          expressions1_ = new java.util.ArrayList<boa.types.Ast.Expression>(expressions1_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> expressions1Builder_;

      /**
       * <code>repeated .boa.types.Expression expressions_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Expression> getExpressions1List() {
        if (expressions1Builder_ == null) {
          return java.util.Collections.unmodifiableList(expressions1_);
        } else {
          return expressions1Builder_.getMessageList();
        }
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public int getExpressions1Count() {
        if (expressions1Builder_ == null) {
          return expressions1_.size();
        } else {
          return expressions1Builder_.getCount();
        }
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression getExpressions1(int index) {
        if (expressions1Builder_ == null) {
          return expressions1_.get(index);
        } else {
          return expressions1Builder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setExpressions1(
          int index, boa.types.Ast.Expression value) {
        if (expressions1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExpressions1IsMutable();
          expressions1_.set(index, value);
          onChanged();
        } else {
          expressions1Builder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setExpressions1(
          int index, boa.types.Ast.Expression.Builder builderForValue) {
        if (expressions1Builder_ == null) {
          ensureExpressions1IsMutable();
          expressions1_.set(index, builderForValue.build());
          onChanged();
        } else {
          expressions1Builder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addExpressions1(boa.types.Ast.Expression value) {
        if (expressions1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExpressions1IsMutable();
          expressions1_.add(value);
          onChanged();
        } else {
          expressions1Builder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addExpressions1(
          int index, boa.types.Ast.Expression value) {
        if (expressions1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExpressions1IsMutable();
          expressions1_.add(index, value);
          onChanged();
        } else {
          expressions1Builder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addExpressions1(
          boa.types.Ast.Expression.Builder builderForValue) {
        if (expressions1Builder_ == null) {
          ensureExpressions1IsMutable();
          expressions1_.add(builderForValue.build());
          onChanged();
        } else {
          expressions1Builder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addExpressions1(
          int index, boa.types.Ast.Expression.Builder builderForValue) {
        if (expressions1Builder_ == null) {
          ensureExpressions1IsMutable();
          expressions1_.add(index, builderForValue.build());
          onChanged();
        } else {
          expressions1Builder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder addAllExpressions1(
          java.lang.Iterable<? extends boa.types.Ast.Expression> values) {
        if (expressions1Builder_ == null) {
          ensureExpressions1IsMutable();
          super.addAll(values, expressions1_);
          onChanged();
        } else {
          expressions1Builder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearExpressions1() {
        if (expressions1Builder_ == null) {
          expressions1_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          expressions1Builder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder removeExpressions1(int index) {
        if (expressions1Builder_ == null) {
          ensureExpressions1IsMutable();
          expressions1_.remove(index);
          onChanged();
        } else {
          expressions1Builder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.Builder getExpressions1Builder(
          int index) {
        return getExpressions1FieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getExpressions1OrBuilder(
          int index) {
        if (expressions1Builder_ == null) {
          return expressions1_.get(index);  } else {
          return expressions1Builder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.util.List<? extends boa.types.Ast.ExpressionOrBuilder> 
           getExpressions1OrBuilderList() {
        if (expressions1Builder_ != null) {
          return expressions1Builder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(expressions1_);
        }
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.Builder addExpressions1Builder() {
        return getExpressions1FieldBuilder().addBuilder(
            boa.types.Ast.Expression.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.Builder addExpressions1Builder(
          int index) {
        return getExpressions1FieldBuilder().addBuilder(
            index, boa.types.Ast.Expression.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.Expression expressions_1 = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.util.List<boa.types.Ast.Expression.Builder> 
           getExpressions1BuilderList() {
        return getExpressions1FieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
          getExpressions1FieldBuilder() {
        if (expressions1Builder_ == null) {
          expressions1Builder_ = new com.google.protobuf.RepeatedFieldBuilder<
              boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                  expressions1_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          expressions1_ = null;
        }
        return expressions1Builder_;
      }

      // optional .boa.types.Expression expression_1 = 5;
      private boa.types.Ast.Expression expression1_ = boa.types.Ast.Expression.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> expression1Builder_;
      /**
       * <code>optional .boa.types.Expression expression_1 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasExpression1() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .boa.types.Expression expression_1 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression getExpression1() {
        if (expression1Builder_ == null) {
          return expression1_;
        } else {
          return expression1Builder_.getMessage();
        }
      }
      /**
       * <code>optional .boa.types.Expression expression_1 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setExpression1(boa.types.Ast.Expression value) {
        if (expression1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          expression1_ = value;
          onChanged();
        } else {
          expression1Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .boa.types.Expression expression_1 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setExpression1(
          boa.types.Ast.Expression.Builder builderForValue) {
        if (expression1Builder_ == null) {
          expression1_ = builderForValue.build();
          onChanged();
        } else {
          expression1Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .boa.types.Expression expression_1 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder mergeExpression1(boa.types.Ast.Expression value) {
        if (expression1Builder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              expression1_ != boa.types.Ast.Expression.getDefaultInstance()) {
            expression1_ =
              boa.types.Ast.Expression.newBuilder(expression1_).mergeFrom(value).buildPartial();
          } else {
            expression1_ = value;
          }
          onChanged();
        } else {
          expression1Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .boa.types.Expression expression_1 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearExpression1() {
        if (expression1Builder_ == null) {
          expression1_ = boa.types.Ast.Expression.getDefaultInstance();
          onChanged();
        } else {
          expression1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .boa.types.Expression expression_1 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Expression.Builder getExpression1Builder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getExpression1FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .boa.types.Expression expression_1 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.ExpressionOrBuilder getExpression1OrBuilder() {
        if (expression1Builder_ != null) {
          return expression1Builder_.getMessageOrBuilder();
        } else {
          return expression1_;
        }
      }
      /**
       * <code>optional .boa.types.Expression expression_1 = 5;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder> 
          getExpression1FieldBuilder() {
        if (expression1Builder_ == null) {
          expression1Builder_ = new com.google.protobuf.SingleFieldBuilder<
              boa.types.Ast.Expression, boa.types.Ast.Expression.Builder, boa.types.Ast.ExpressionOrBuilder>(
                  expression1_,
                  getParentForChildren(),
                  isClean());
          expression1_ = null;
        }
        return expression1Builder_;
      }

      // optional .boa.types.ChangeKind structural_change_kind = 6;
      private boa.types.Shared.ChangeKind structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 6;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public boolean hasStructuralChangeKind() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 6;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public boa.types.Shared.ChangeKind getStructuralChangeKind() {
        return structuralChangeKind_;
      }
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 6;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public Builder setStructuralChangeKind(boa.types.Shared.ChangeKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        structuralChangeKind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 6;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public Builder clearStructuralChangeKind() {
        bitField0_ = (bitField0_ & ~0x00000020);
        structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        onChanged();
        return this;
      }

      // optional .boa.types.ChangeKind label_change_kind = 7;
      private boa.types.Shared.ChangeKind labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 7;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public boolean hasLabelChangeKind() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 7;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public boa.types.Shared.ChangeKind getLabelChangeKind() {
        return labelChangeKind_;
      }
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 7;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public Builder setLabelChangeKind(boa.types.Shared.ChangeKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        labelChangeKind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 7;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public Builder clearLabelChangeKind() {
        bitField0_ = (bitField0_ & ~0x00000040);
        labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:boa.types.Modifier)
    }

    static {
      defaultInstance = new Modifier(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:boa.types.Modifier)
  }

  public interface CommentOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .boa.types.Comment.CommentKind kind = 1;
    /**
     * <code>required .boa.types.Comment.CommentKind kind = 1;</code>
     *
     * <pre>
     ** The kind of comment 
     * </pre>
     */
    boolean hasKind();
    /**
     * <code>required .boa.types.Comment.CommentKind kind = 1;</code>
     *
     * <pre>
     ** The kind of comment 
     * </pre>
     */
    boa.types.Ast.Comment.CommentKind getKind();

    // required string string_1 = 2;
    /**
     * <code>required string string_1 = 2;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boolean hasString1();
    /**
     * <code>required string string_1 = 2;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    java.lang.String getString1();
    /**
     * <code>required string string_1 = 2;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    com.google.protobuf.ByteString
        getString1Bytes();

    // required .boa.types.Comment.PositionInfo positioninfo_1 = 3;
    /**
     * <code>required .boa.types.Comment.PositionInfo positioninfo_1 = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boolean hasPositioninfo1();
    /**
     * <code>required .boa.types.Comment.PositionInfo positioninfo_1 = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.Comment.PositionInfo getPositioninfo1();
    /**
     * <code>required .boa.types.Comment.PositionInfo positioninfo_1 = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    boa.types.Ast.Comment.PositionInfoOrBuilder getPositioninfo1OrBuilder();

    // optional .boa.types.ChangeKind structural_change_kind = 4;
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 4;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    boolean hasStructuralChangeKind();
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 4;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    boa.types.Shared.ChangeKind getStructuralChangeKind();

    // optional .boa.types.ChangeKind label_change_kind = 5;
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 5;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    boolean hasLabelChangeKind();
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 5;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    boa.types.Shared.ChangeKind getLabelChangeKind();
  }
  /**
   * Protobuf type {@code boa.types.Comment}
   *
   * <pre>
   ** @exclude A single comment 
   * </pre>
   */
  public static final class Comment extends
      com.google.protobuf.GeneratedMessage
      implements CommentOrBuilder {
    // Use Comment.newBuilder() to construct.
    private Comment(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Comment(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Comment defaultInstance;
    public static Comment getDefaultInstance() {
      return defaultInstance;
    }

    public Comment getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Comment(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              boa.types.Ast.Comment.CommentKind value = boa.types.Ast.Comment.CommentKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                kind_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              string1_ = input.readBytes();
              break;
            }
            case 26: {
              boa.types.Ast.Comment.PositionInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = positioninfo1_.toBuilder();
              }
              positioninfo1_ = input.readMessage(boa.types.Ast.Comment.PositionInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(positioninfo1_);
                positioninfo1_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              boa.types.Shared.ChangeKind value = boa.types.Shared.ChangeKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                structuralChangeKind_ = value;
              }
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              boa.types.Shared.ChangeKind value = boa.types.Shared.ChangeKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                labelChangeKind_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return boa.types.Ast.internal_static_boa_types_Comment_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return boa.types.Ast.internal_static_boa_types_Comment_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              boa.types.Ast.Comment.class, boa.types.Ast.Comment.Builder.class);
    }

    public static com.google.protobuf.Parser<Comment> PARSER =
        new com.google.protobuf.AbstractParser<Comment>() {
      public Comment parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Comment(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Comment> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code boa.types.Comment.CommentKind}
     *
     * <pre>
     ** @exclude The kind of comment 
     * </pre>
     */
    public enum CommentKind
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>OTHER = 0;</code>
       *
       * <pre>
       ** Any other kind of comment 
       * </pre>
       */
      OTHER(0, 0),
      /**
       * <code>LINE = 1;</code>
       *
       * <pre>
       ** A line comment 
       * </pre>
       */
      LINE(1, 1),
      /**
       * <code>BLOCK = 2;</code>
       *
       * <pre>
       ** A block comment 
       * </pre>
       */
      BLOCK(2, 2),
      /**
       * <code>DOC = 3;</code>
       *
       * <pre>
       ** A documentation comment 
       * </pre>
       */
      DOC(3, 3),
      /**
       * <code>SPEC = 4;</code>
       *
       * <pre>
       ** A specification comment 
       * </pre>
       */
      SPEC(5, 4),
      ;

      /**
       * <code>DOCUMENTATION = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public static final CommentKind DOCUMENTATION = DOC;
      /**
       * <code>SPECIFICATION = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public static final CommentKind SPECIFICATION = SPEC;
      /**
       * <code>OTHER = 0;</code>
       *
       * <pre>
       ** Any other kind of comment 
       * </pre>
       */
      public static final int OTHER_VALUE = 0;
      /**
       * <code>LINE = 1;</code>
       *
       * <pre>
       ** A line comment 
       * </pre>
       */
      public static final int LINE_VALUE = 1;
      /**
       * <code>BLOCK = 2;</code>
       *
       * <pre>
       ** A block comment 
       * </pre>
       */
      public static final int BLOCK_VALUE = 2;
      /**
       * <code>DOC = 3;</code>
       *
       * <pre>
       ** A documentation comment 
       * </pre>
       */
      public static final int DOC_VALUE = 3;
      /**
       * <code>DOCUMENTATION = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public static final int DOCUMENTATION_VALUE = 3;
      /**
       * <code>SPEC = 4;</code>
       *
       * <pre>
       ** A specification comment 
       * </pre>
       */
      public static final int SPEC_VALUE = 4;
      /**
       * <code>SPECIFICATION = 4;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public static final int SPECIFICATION_VALUE = 4;


      public final int getNumber() { return value; }

      public static CommentKind valueOf(int value) {
        switch (value) {
          case 0: return OTHER;
          case 1: return LINE;
          case 2: return BLOCK;
          case 3: return DOC;
          case 4: return SPEC;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<CommentKind>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<CommentKind>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<CommentKind>() {
              public CommentKind findValueByNumber(int number) {
                return CommentKind.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return boa.types.Ast.Comment.getDescriptor().getEnumTypes().get(0);
      }

      private static final CommentKind[] VALUES = {
        OTHER, LINE, BLOCK, DOC, DOCUMENTATION, SPEC, SPECIFICATION, 
      };

      public static CommentKind valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private CommentKind(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:boa.types.Comment.CommentKind)
    }

    public interface PositionInfoOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required int32 start_pos = 1;
      /**
       * <code>required int32 start_pos = 1;</code>
       *
       * <pre>
       ** The starting position of the element, in characters from the start of the file 
       * </pre>
       */
      boolean hasStartPos();
      /**
       * <code>required int32 start_pos = 1;</code>
       *
       * <pre>
       ** The starting position of the element, in characters from the start of the file 
       * </pre>
       */
      int getStartPos();

      // required int32 length = 2;
      /**
       * <code>required int32 length = 2;</code>
       *
       * <pre>
       ** The length of the element, in characters 
       * </pre>
       */
      boolean hasLength();
      /**
       * <code>required int32 length = 2;</code>
       *
       * <pre>
       ** The length of the element, in characters 
       * </pre>
       */
      int getLength();

      // required int32 start_line = 3;
      /**
       * <code>required int32 start_line = 3;</code>
       *
       * <pre>
       ** The starting line of the element, in lines from the start of the file 
       * </pre>
       */
      boolean hasStartLine();
      /**
       * <code>required int32 start_line = 3;</code>
       *
       * <pre>
       ** The starting line of the element, in lines from the start of the file 
       * </pre>
       */
      int getStartLine();

      // required int32 start_col = 4;
      /**
       * <code>required int32 start_col = 4;</code>
       *
       * <pre>
       ** The starting column of the element, in characters from the start of the line 
       * </pre>
       */
      boolean hasStartCol();
      /**
       * <code>required int32 start_col = 4;</code>
       *
       * <pre>
       ** The starting column of the element, in characters from the start of the line 
       * </pre>
       */
      int getStartCol();

      // required int32 end_line = 5;
      /**
       * <code>required int32 end_line = 5;</code>
       *
       * <pre>
       ** The ending line of the element, in lines from the start of the file 
       * </pre>
       */
      boolean hasEndLine();
      /**
       * <code>required int32 end_line = 5;</code>
       *
       * <pre>
       ** The ending line of the element, in lines from the start of the file 
       * </pre>
       */
      int getEndLine();

      // required int32 end_col = 6;
      /**
       * <code>required int32 end_col = 6;</code>
       *
       * <pre>
       ** The ending column of the element, in characters from the start of the line 
       * </pre>
       */
      boolean hasEndCol();
      /**
       * <code>required int32 end_col = 6;</code>
       *
       * <pre>
       ** The ending column of the element, in characters from the start of the line 
       * </pre>
       */
      int getEndCol();
    }
    /**
     * Protobuf type {@code boa.types.Comment.PositionInfo}
     *
     * <pre>
     ** @exclude Position information for a node 
     * </pre>
     */
    public static final class PositionInfo extends
        com.google.protobuf.GeneratedMessage
        implements PositionInfoOrBuilder {
      // Use PositionInfo.newBuilder() to construct.
      private PositionInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private PositionInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final PositionInfo defaultInstance;
      public static PositionInfo getDefaultInstance() {
        return defaultInstance;
      }

      public PositionInfo getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private PositionInfo(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                startPos_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                length_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                startLine_ = input.readInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                startCol_ = input.readInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                endLine_ = input.readInt32();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                endCol_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Comment_PositionInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Comment_PositionInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Comment.PositionInfo.class, boa.types.Ast.Comment.PositionInfo.Builder.class);
      }

      public static com.google.protobuf.Parser<PositionInfo> PARSER =
          new com.google.protobuf.AbstractParser<PositionInfo>() {
        public PositionInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PositionInfo(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<PositionInfo> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required int32 start_pos = 1;
      public static final int START_POS_FIELD_NUMBER = 1;
      private int startPos_;
      /**
       * <code>required int32 start_pos = 1;</code>
       *
       * <pre>
       ** The starting position of the element, in characters from the start of the file 
       * </pre>
       */
      public boolean hasStartPos() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 start_pos = 1;</code>
       *
       * <pre>
       ** The starting position of the element, in characters from the start of the file 
       * </pre>
       */
      public int getStartPos() {
        return startPos_;
      }

      // required int32 length = 2;
      public static final int LENGTH_FIELD_NUMBER = 2;
      private int length_;
      /**
       * <code>required int32 length = 2;</code>
       *
       * <pre>
       ** The length of the element, in characters 
       * </pre>
       */
      public boolean hasLength() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 length = 2;</code>
       *
       * <pre>
       ** The length of the element, in characters 
       * </pre>
       */
      public int getLength() {
        return length_;
      }

      // required int32 start_line = 3;
      public static final int START_LINE_FIELD_NUMBER = 3;
      private int startLine_;
      /**
       * <code>required int32 start_line = 3;</code>
       *
       * <pre>
       ** The starting line of the element, in lines from the start of the file 
       * </pre>
       */
      public boolean hasStartLine() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 start_line = 3;</code>
       *
       * <pre>
       ** The starting line of the element, in lines from the start of the file 
       * </pre>
       */
      public int getStartLine() {
        return startLine_;
      }

      // required int32 start_col = 4;
      public static final int START_COL_FIELD_NUMBER = 4;
      private int startCol_;
      /**
       * <code>required int32 start_col = 4;</code>
       *
       * <pre>
       ** The starting column of the element, in characters from the start of the line 
       * </pre>
       */
      public boolean hasStartCol() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 start_col = 4;</code>
       *
       * <pre>
       ** The starting column of the element, in characters from the start of the line 
       * </pre>
       */
      public int getStartCol() {
        return startCol_;
      }

      // required int32 end_line = 5;
      public static final int END_LINE_FIELD_NUMBER = 5;
      private int endLine_;
      /**
       * <code>required int32 end_line = 5;</code>
       *
       * <pre>
       ** The ending line of the element, in lines from the start of the file 
       * </pre>
       */
      public boolean hasEndLine() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 end_line = 5;</code>
       *
       * <pre>
       ** The ending line of the element, in lines from the start of the file 
       * </pre>
       */
      public int getEndLine() {
        return endLine_;
      }

      // required int32 end_col = 6;
      public static final int END_COL_FIELD_NUMBER = 6;
      private int endCol_;
      /**
       * <code>required int32 end_col = 6;</code>
       *
       * <pre>
       ** The ending column of the element, in characters from the start of the line 
       * </pre>
       */
      public boolean hasEndCol() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 end_col = 6;</code>
       *
       * <pre>
       ** The ending column of the element, in characters from the start of the line 
       * </pre>
       */
      public int getEndCol() {
        return endCol_;
      }

      private void initFields() {
        startPos_ = 0;
        length_ = 0;
        startLine_ = 0;
        startCol_ = 0;
        endLine_ = 0;
        endCol_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasStartPos()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasLength()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasStartLine()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasStartCol()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasEndLine()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasEndCol()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, startPos_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, length_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, startLine_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(4, startCol_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeInt32(5, endLine_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeInt32(6, endCol_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, startPos_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, length_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, startLine_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, startCol_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(5, endLine_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(6, endCol_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Comment.PositionInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Comment.PositionInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Comment.PositionInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Comment.PositionInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Comment.PositionInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Comment.PositionInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Comment.PositionInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Comment.PositionInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Comment.PositionInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Comment.PositionInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Comment.PositionInfo prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Comment.PositionInfo}
       *
       * <pre>
       ** @exclude Position information for a node 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Comment.PositionInfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Comment_PositionInfo_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Comment_PositionInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Comment.PositionInfo.class, boa.types.Ast.Comment.PositionInfo.Builder.class);
        }

        // Construct using boa.types.Ast.Comment.PositionInfo.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          startPos_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          length_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          startLine_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          startCol_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          endLine_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          endCol_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Comment_PositionInfo_descriptor;
        }

        public boa.types.Ast.Comment.PositionInfo getDefaultInstanceForType() {
          return boa.types.Ast.Comment.PositionInfo.getDefaultInstance();
        }

        public boa.types.Ast.Comment.PositionInfo build() {
          boa.types.Ast.Comment.PositionInfo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Comment.PositionInfo buildPartial() {
          boa.types.Ast.Comment.PositionInfo result = new boa.types.Ast.Comment.PositionInfo(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.startPos_ = startPos_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.length_ = length_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.startLine_ = startLine_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.startCol_ = startCol_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.endLine_ = endLine_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.endCol_ = endCol_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Comment.PositionInfo) {
            return mergeFrom((boa.types.Ast.Comment.PositionInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Comment.PositionInfo other) {
          if (other == boa.types.Ast.Comment.PositionInfo.getDefaultInstance()) return this;
          if (other.hasStartPos()) {
            setStartPos(other.getStartPos());
          }
          if (other.hasLength()) {
            setLength(other.getLength());
          }
          if (other.hasStartLine()) {
            setStartLine(other.getStartLine());
          }
          if (other.hasStartCol()) {
            setStartCol(other.getStartCol());
          }
          if (other.hasEndLine()) {
            setEndLine(other.getEndLine());
          }
          if (other.hasEndCol()) {
            setEndCol(other.getEndCol());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasStartPos()) {
            
            return false;
          }
          if (!hasLength()) {
            
            return false;
          }
          if (!hasStartLine()) {
            
            return false;
          }
          if (!hasStartCol()) {
            
            return false;
          }
          if (!hasEndLine()) {
            
            return false;
          }
          if (!hasEndCol()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Comment.PositionInfo parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Comment.PositionInfo) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required int32 start_pos = 1;
        private int startPos_ ;
        /**
         * <code>required int32 start_pos = 1;</code>
         *
         * <pre>
         ** The starting position of the element, in characters from the start of the file 
         * </pre>
         */
        public boolean hasStartPos() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required int32 start_pos = 1;</code>
         *
         * <pre>
         ** The starting position of the element, in characters from the start of the file 
         * </pre>
         */
        public int getStartPos() {
          return startPos_;
        }
        /**
         * <code>required int32 start_pos = 1;</code>
         *
         * <pre>
         ** The starting position of the element, in characters from the start of the file 
         * </pre>
         */
        public Builder setStartPos(int value) {
          bitField0_ |= 0x00000001;
          startPos_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 start_pos = 1;</code>
         *
         * <pre>
         ** The starting position of the element, in characters from the start of the file 
         * </pre>
         */
        public Builder clearStartPos() {
          bitField0_ = (bitField0_ & ~0x00000001);
          startPos_ = 0;
          onChanged();
          return this;
        }

        // required int32 length = 2;
        private int length_ ;
        /**
         * <code>required int32 length = 2;</code>
         *
         * <pre>
         ** The length of the element, in characters 
         * </pre>
         */
        public boolean hasLength() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required int32 length = 2;</code>
         *
         * <pre>
         ** The length of the element, in characters 
         * </pre>
         */
        public int getLength() {
          return length_;
        }
        /**
         * <code>required int32 length = 2;</code>
         *
         * <pre>
         ** The length of the element, in characters 
         * </pre>
         */
        public Builder setLength(int value) {
          bitField0_ |= 0x00000002;
          length_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 length = 2;</code>
         *
         * <pre>
         ** The length of the element, in characters 
         * </pre>
         */
        public Builder clearLength() {
          bitField0_ = (bitField0_ & ~0x00000002);
          length_ = 0;
          onChanged();
          return this;
        }

        // required int32 start_line = 3;
        private int startLine_ ;
        /**
         * <code>required int32 start_line = 3;</code>
         *
         * <pre>
         ** The starting line of the element, in lines from the start of the file 
         * </pre>
         */
        public boolean hasStartLine() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required int32 start_line = 3;</code>
         *
         * <pre>
         ** The starting line of the element, in lines from the start of the file 
         * </pre>
         */
        public int getStartLine() {
          return startLine_;
        }
        /**
         * <code>required int32 start_line = 3;</code>
         *
         * <pre>
         ** The starting line of the element, in lines from the start of the file 
         * </pre>
         */
        public Builder setStartLine(int value) {
          bitField0_ |= 0x00000004;
          startLine_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 start_line = 3;</code>
         *
         * <pre>
         ** The starting line of the element, in lines from the start of the file 
         * </pre>
         */
        public Builder clearStartLine() {
          bitField0_ = (bitField0_ & ~0x00000004);
          startLine_ = 0;
          onChanged();
          return this;
        }

        // required int32 start_col = 4;
        private int startCol_ ;
        /**
         * <code>required int32 start_col = 4;</code>
         *
         * <pre>
         ** The starting column of the element, in characters from the start of the line 
         * </pre>
         */
        public boolean hasStartCol() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>required int32 start_col = 4;</code>
         *
         * <pre>
         ** The starting column of the element, in characters from the start of the line 
         * </pre>
         */
        public int getStartCol() {
          return startCol_;
        }
        /**
         * <code>required int32 start_col = 4;</code>
         *
         * <pre>
         ** The starting column of the element, in characters from the start of the line 
         * </pre>
         */
        public Builder setStartCol(int value) {
          bitField0_ |= 0x00000008;
          startCol_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 start_col = 4;</code>
         *
         * <pre>
         ** The starting column of the element, in characters from the start of the line 
         * </pre>
         */
        public Builder clearStartCol() {
          bitField0_ = (bitField0_ & ~0x00000008);
          startCol_ = 0;
          onChanged();
          return this;
        }

        // required int32 end_line = 5;
        private int endLine_ ;
        /**
         * <code>required int32 end_line = 5;</code>
         *
         * <pre>
         ** The ending line of the element, in lines from the start of the file 
         * </pre>
         */
        public boolean hasEndLine() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>required int32 end_line = 5;</code>
         *
         * <pre>
         ** The ending line of the element, in lines from the start of the file 
         * </pre>
         */
        public int getEndLine() {
          return endLine_;
        }
        /**
         * <code>required int32 end_line = 5;</code>
         *
         * <pre>
         ** The ending line of the element, in lines from the start of the file 
         * </pre>
         */
        public Builder setEndLine(int value) {
          bitField0_ |= 0x00000010;
          endLine_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 end_line = 5;</code>
         *
         * <pre>
         ** The ending line of the element, in lines from the start of the file 
         * </pre>
         */
        public Builder clearEndLine() {
          bitField0_ = (bitField0_ & ~0x00000010);
          endLine_ = 0;
          onChanged();
          return this;
        }

        // required int32 end_col = 6;
        private int endCol_ ;
        /**
         * <code>required int32 end_col = 6;</code>
         *
         * <pre>
         ** The ending column of the element, in characters from the start of the line 
         * </pre>
         */
        public boolean hasEndCol() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>required int32 end_col = 6;</code>
         *
         * <pre>
         ** The ending column of the element, in characters from the start of the line 
         * </pre>
         */
        public int getEndCol() {
          return endCol_;
        }
        /**
         * <code>required int32 end_col = 6;</code>
         *
         * <pre>
         ** The ending column of the element, in characters from the start of the line 
         * </pre>
         */
        public Builder setEndCol(int value) {
          bitField0_ |= 0x00000020;
          endCol_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 end_col = 6;</code>
         *
         * <pre>
         ** The ending column of the element, in characters from the start of the line 
         * </pre>
         */
        public Builder clearEndCol() {
          bitField0_ = (bitField0_ & ~0x00000020);
          endCol_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Comment.PositionInfo)
      }

      static {
        defaultInstance = new PositionInfo(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Comment.PositionInfo)
    }

    public interface LineCommentOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = LINE];
      /**
       * <code>optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = LINE];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = LINE];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Comment.CommentKind getShadowKind();

      // required string value = 2;
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       ** The value of the comment 
       * </pre>
       */
      boolean hasValue();
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       ** The value of the comment 
       * </pre>
       */
      java.lang.String getValue();
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       ** The value of the comment 
       * </pre>
       */
      com.google.protobuf.ByteString
          getValueBytes();

      // required .boa.types.Comment.PositionInfo position = 3;
      /**
       * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
       *
       * <pre>
       ** Position information for the comment 
       * </pre>
       */
      boolean hasPosition();
      /**
       * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
       *
       * <pre>
       ** Position information for the comment 
       * </pre>
       */
      boa.types.Ast.Comment.PositionInfo getPosition();
      /**
       * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
       *
       * <pre>
       ** Position information for the comment 
       * </pre>
       */
      boa.types.Ast.Comment.PositionInfoOrBuilder getPositionOrBuilder();
    }
    /**
     * Protobuf type {@code boa.types.Comment.LineComment}
     *
     * <pre>
     ** @exclude A single line comment 
     * </pre>
     */
    public static final class LineComment extends
        com.google.protobuf.GeneratedMessage
        implements LineCommentOrBuilder {
      // Use LineComment.newBuilder() to construct.
      private LineComment(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private LineComment(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final LineComment defaultInstance;
      public static LineComment getDefaultInstance() {
        return defaultInstance;
      }

      public LineComment getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private LineComment(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Comment.CommentKind value = boa.types.Ast.Comment.CommentKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                value_ = input.readBytes();
                break;
              }
              case 26: {
                boa.types.Ast.Comment.PositionInfo.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = position_.toBuilder();
                }
                position_ = input.readMessage(boa.types.Ast.Comment.PositionInfo.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(position_);
                  position_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Comment_LineComment_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Comment_LineComment_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Comment.LineComment.class, boa.types.Ast.Comment.LineComment.Builder.class);
      }

      public static com.google.protobuf.Parser<LineComment> PARSER =
          new com.google.protobuf.AbstractParser<LineComment>() {
        public LineComment parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new LineComment(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<LineComment> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = LINE];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Comment.CommentKind shadowKind_;
      /**
       * <code>optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = LINE];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = LINE];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Comment.CommentKind getShadowKind() {
        return shadowKind_;
      }

      // required string value = 2;
      public static final int VALUE_FIELD_NUMBER = 2;
      private java.lang.Object value_;
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       ** The value of the comment 
       * </pre>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       ** The value of the comment 
       * </pre>
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            value_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       ** The value of the comment 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // required .boa.types.Comment.PositionInfo position = 3;
      public static final int POSITION_FIELD_NUMBER = 3;
      private boa.types.Ast.Comment.PositionInfo position_;
      /**
       * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
       *
       * <pre>
       ** Position information for the comment 
       * </pre>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
       *
       * <pre>
       ** Position information for the comment 
       * </pre>
       */
      public boa.types.Ast.Comment.PositionInfo getPosition() {
        return position_;
      }
      /**
       * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
       *
       * <pre>
       ** Position information for the comment 
       * </pre>
       */
      public boa.types.Ast.Comment.PositionInfoOrBuilder getPositionOrBuilder() {
        return position_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Comment.CommentKind.LINE;
        value_ = "";
        position_ = boa.types.Ast.Comment.PositionInfo.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasValue()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasPosition()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getPosition().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getValueBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(3, position_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getValueBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, position_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Comment.LineComment parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Comment.LineComment parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Comment.LineComment parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Comment.LineComment parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Comment.LineComment parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Comment.LineComment parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Comment.LineComment parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Comment.LineComment parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Comment.LineComment parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Comment.LineComment parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Comment.LineComment prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Comment.LineComment}
       *
       * <pre>
       ** @exclude A single line comment 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Comment.LineCommentOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Comment_LineComment_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Comment_LineComment_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Comment.LineComment.class, boa.types.Ast.Comment.LineComment.Builder.class);
        }

        // Construct using boa.types.Ast.Comment.LineComment.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getPositionFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Comment.CommentKind.LINE;
          bitField0_ = (bitField0_ & ~0x00000001);
          value_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          if (positionBuilder_ == null) {
            position_ = boa.types.Ast.Comment.PositionInfo.getDefaultInstance();
          } else {
            positionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Comment_LineComment_descriptor;
        }

        public boa.types.Ast.Comment.LineComment getDefaultInstanceForType() {
          return boa.types.Ast.Comment.LineComment.getDefaultInstance();
        }

        public boa.types.Ast.Comment.LineComment build() {
          boa.types.Ast.Comment.LineComment result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Comment.LineComment buildPartial() {
          boa.types.Ast.Comment.LineComment result = new boa.types.Ast.Comment.LineComment(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.value_ = value_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          if (positionBuilder_ == null) {
            result.position_ = position_;
          } else {
            result.position_ = positionBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Comment.LineComment) {
            return mergeFrom((boa.types.Ast.Comment.LineComment)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Comment.LineComment other) {
          if (other == boa.types.Ast.Comment.LineComment.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasValue()) {
            bitField0_ |= 0x00000002;
            value_ = other.value_;
            onChanged();
          }
          if (other.hasPosition()) {
            mergePosition(other.getPosition());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasValue()) {
            
            return false;
          }
          if (!hasPosition()) {
            
            return false;
          }
          if (!getPosition().isInitialized()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Comment.LineComment parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Comment.LineComment) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = LINE];
        private boa.types.Ast.Comment.CommentKind shadowKind_ = boa.types.Ast.Comment.CommentKind.LINE;
        /**
         * <code>optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = LINE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = LINE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Comment.CommentKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = LINE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Comment.CommentKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = LINE];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Comment.CommentKind.LINE;
          onChanged();
          return this;
        }

        // required string value = 2;
        private java.lang.Object value_ = "";
        /**
         * <code>required string value = 2;</code>
         *
         * <pre>
         ** The value of the comment 
         * </pre>
         */
        public boolean hasValue() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string value = 2;</code>
         *
         * <pre>
         ** The value of the comment 
         * </pre>
         */
        public java.lang.String getValue() {
          java.lang.Object ref = value_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            value_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string value = 2;</code>
         *
         * <pre>
         ** The value of the comment 
         * </pre>
         */
        public com.google.protobuf.ByteString
            getValueBytes() {
          java.lang.Object ref = value_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            value_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string value = 2;</code>
         *
         * <pre>
         ** The value of the comment 
         * </pre>
         */
        public Builder setValue(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string value = 2;</code>
         *
         * <pre>
         ** The value of the comment 
         * </pre>
         */
        public Builder clearValue() {
          bitField0_ = (bitField0_ & ~0x00000002);
          value_ = getDefaultInstance().getValue();
          onChanged();
          return this;
        }
        /**
         * <code>required string value = 2;</code>
         *
         * <pre>
         ** The value of the comment 
         * </pre>
         */
        public Builder setValueBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          value_ = value;
          onChanged();
          return this;
        }

        // required .boa.types.Comment.PositionInfo position = 3;
        private boa.types.Ast.Comment.PositionInfo position_ = boa.types.Ast.Comment.PositionInfo.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Comment.PositionInfo, boa.types.Ast.Comment.PositionInfo.Builder, boa.types.Ast.Comment.PositionInfoOrBuilder> positionBuilder_;
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        public boolean hasPosition() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        public boa.types.Ast.Comment.PositionInfo getPosition() {
          if (positionBuilder_ == null) {
            return position_;
          } else {
            return positionBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        public Builder setPosition(boa.types.Ast.Comment.PositionInfo value) {
          if (positionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            position_ = value;
            onChanged();
          } else {
            positionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        public Builder setPosition(
            boa.types.Ast.Comment.PositionInfo.Builder builderForValue) {
          if (positionBuilder_ == null) {
            position_ = builderForValue.build();
            onChanged();
          } else {
            positionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        public Builder mergePosition(boa.types.Ast.Comment.PositionInfo value) {
          if (positionBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                position_ != boa.types.Ast.Comment.PositionInfo.getDefaultInstance()) {
              position_ =
                boa.types.Ast.Comment.PositionInfo.newBuilder(position_).mergeFrom(value).buildPartial();
            } else {
              position_ = value;
            }
            onChanged();
          } else {
            positionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        public Builder clearPosition() {
          if (positionBuilder_ == null) {
            position_ = boa.types.Ast.Comment.PositionInfo.getDefaultInstance();
            onChanged();
          } else {
            positionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        public boa.types.Ast.Comment.PositionInfo.Builder getPositionBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getPositionFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        public boa.types.Ast.Comment.PositionInfoOrBuilder getPositionOrBuilder() {
          if (positionBuilder_ != null) {
            return positionBuilder_.getMessageOrBuilder();
          } else {
            return position_;
          }
        }
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Comment.PositionInfo, boa.types.Ast.Comment.PositionInfo.Builder, boa.types.Ast.Comment.PositionInfoOrBuilder> 
            getPositionFieldBuilder() {
          if (positionBuilder_ == null) {
            positionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Comment.PositionInfo, boa.types.Ast.Comment.PositionInfo.Builder, boa.types.Ast.Comment.PositionInfoOrBuilder>(
                    position_,
                    getParentForChildren(),
                    isClean());
            position_ = null;
          }
          return positionBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Comment.LineComment)
      }

      static {
        defaultInstance = new LineComment(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Comment.LineComment)
    }

    public interface BlockCommentOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = BLOCK];
      /**
       * <code>optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = BLOCK];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = BLOCK];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Comment.CommentKind getShadowKind();

      // required string value = 2;
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       ** The value of the comment 
       * </pre>
       */
      boolean hasValue();
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       ** The value of the comment 
       * </pre>
       */
      java.lang.String getValue();
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       ** The value of the comment 
       * </pre>
       */
      com.google.protobuf.ByteString
          getValueBytes();

      // required .boa.types.Comment.PositionInfo position = 3;
      /**
       * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
       *
       * <pre>
       ** Position information for the comment 
       * </pre>
       */
      boolean hasPosition();
      /**
       * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
       *
       * <pre>
       ** Position information for the comment 
       * </pre>
       */
      boa.types.Ast.Comment.PositionInfo getPosition();
      /**
       * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
       *
       * <pre>
       ** Position information for the comment 
       * </pre>
       */
      boa.types.Ast.Comment.PositionInfoOrBuilder getPositionOrBuilder();
    }
    /**
     * Protobuf type {@code boa.types.Comment.BlockComment}
     *
     * <pre>
     ** @exclude A single block comment 
     * </pre>
     */
    public static final class BlockComment extends
        com.google.protobuf.GeneratedMessage
        implements BlockCommentOrBuilder {
      // Use BlockComment.newBuilder() to construct.
      private BlockComment(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private BlockComment(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final BlockComment defaultInstance;
      public static BlockComment getDefaultInstance() {
        return defaultInstance;
      }

      public BlockComment getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private BlockComment(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Comment.CommentKind value = boa.types.Ast.Comment.CommentKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                value_ = input.readBytes();
                break;
              }
              case 26: {
                boa.types.Ast.Comment.PositionInfo.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = position_.toBuilder();
                }
                position_ = input.readMessage(boa.types.Ast.Comment.PositionInfo.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(position_);
                  position_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Comment_BlockComment_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Comment_BlockComment_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Comment.BlockComment.class, boa.types.Ast.Comment.BlockComment.Builder.class);
      }

      public static com.google.protobuf.Parser<BlockComment> PARSER =
          new com.google.protobuf.AbstractParser<BlockComment>() {
        public BlockComment parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new BlockComment(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<BlockComment> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = BLOCK];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Comment.CommentKind shadowKind_;
      /**
       * <code>optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = BLOCK];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = BLOCK];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Comment.CommentKind getShadowKind() {
        return shadowKind_;
      }

      // required string value = 2;
      public static final int VALUE_FIELD_NUMBER = 2;
      private java.lang.Object value_;
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       ** The value of the comment 
       * </pre>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       ** The value of the comment 
       * </pre>
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            value_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       ** The value of the comment 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // required .boa.types.Comment.PositionInfo position = 3;
      public static final int POSITION_FIELD_NUMBER = 3;
      private boa.types.Ast.Comment.PositionInfo position_;
      /**
       * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
       *
       * <pre>
       ** Position information for the comment 
       * </pre>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
       *
       * <pre>
       ** Position information for the comment 
       * </pre>
       */
      public boa.types.Ast.Comment.PositionInfo getPosition() {
        return position_;
      }
      /**
       * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
       *
       * <pre>
       ** Position information for the comment 
       * </pre>
       */
      public boa.types.Ast.Comment.PositionInfoOrBuilder getPositionOrBuilder() {
        return position_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Comment.CommentKind.BLOCK;
        value_ = "";
        position_ = boa.types.Ast.Comment.PositionInfo.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasValue()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasPosition()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getPosition().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getValueBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(3, position_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getValueBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, position_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Comment.BlockComment parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Comment.BlockComment parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Comment.BlockComment parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Comment.BlockComment parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Comment.BlockComment parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Comment.BlockComment parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Comment.BlockComment parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Comment.BlockComment parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Comment.BlockComment parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Comment.BlockComment parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Comment.BlockComment prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Comment.BlockComment}
       *
       * <pre>
       ** @exclude A single block comment 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Comment.BlockCommentOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Comment_BlockComment_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Comment_BlockComment_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Comment.BlockComment.class, boa.types.Ast.Comment.BlockComment.Builder.class);
        }

        // Construct using boa.types.Ast.Comment.BlockComment.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getPositionFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Comment.CommentKind.BLOCK;
          bitField0_ = (bitField0_ & ~0x00000001);
          value_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          if (positionBuilder_ == null) {
            position_ = boa.types.Ast.Comment.PositionInfo.getDefaultInstance();
          } else {
            positionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Comment_BlockComment_descriptor;
        }

        public boa.types.Ast.Comment.BlockComment getDefaultInstanceForType() {
          return boa.types.Ast.Comment.BlockComment.getDefaultInstance();
        }

        public boa.types.Ast.Comment.BlockComment build() {
          boa.types.Ast.Comment.BlockComment result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Comment.BlockComment buildPartial() {
          boa.types.Ast.Comment.BlockComment result = new boa.types.Ast.Comment.BlockComment(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.value_ = value_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          if (positionBuilder_ == null) {
            result.position_ = position_;
          } else {
            result.position_ = positionBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Comment.BlockComment) {
            return mergeFrom((boa.types.Ast.Comment.BlockComment)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Comment.BlockComment other) {
          if (other == boa.types.Ast.Comment.BlockComment.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasValue()) {
            bitField0_ |= 0x00000002;
            value_ = other.value_;
            onChanged();
          }
          if (other.hasPosition()) {
            mergePosition(other.getPosition());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasValue()) {
            
            return false;
          }
          if (!hasPosition()) {
            
            return false;
          }
          if (!getPosition().isInitialized()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Comment.BlockComment parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Comment.BlockComment) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = BLOCK];
        private boa.types.Ast.Comment.CommentKind shadowKind_ = boa.types.Ast.Comment.CommentKind.BLOCK;
        /**
         * <code>optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = BLOCK];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = BLOCK];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Comment.CommentKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = BLOCK];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Comment.CommentKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = BLOCK];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Comment.CommentKind.BLOCK;
          onChanged();
          return this;
        }

        // required string value = 2;
        private java.lang.Object value_ = "";
        /**
         * <code>required string value = 2;</code>
         *
         * <pre>
         ** The value of the comment 
         * </pre>
         */
        public boolean hasValue() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string value = 2;</code>
         *
         * <pre>
         ** The value of the comment 
         * </pre>
         */
        public java.lang.String getValue() {
          java.lang.Object ref = value_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            value_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string value = 2;</code>
         *
         * <pre>
         ** The value of the comment 
         * </pre>
         */
        public com.google.protobuf.ByteString
            getValueBytes() {
          java.lang.Object ref = value_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            value_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string value = 2;</code>
         *
         * <pre>
         ** The value of the comment 
         * </pre>
         */
        public Builder setValue(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string value = 2;</code>
         *
         * <pre>
         ** The value of the comment 
         * </pre>
         */
        public Builder clearValue() {
          bitField0_ = (bitField0_ & ~0x00000002);
          value_ = getDefaultInstance().getValue();
          onChanged();
          return this;
        }
        /**
         * <code>required string value = 2;</code>
         *
         * <pre>
         ** The value of the comment 
         * </pre>
         */
        public Builder setValueBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          value_ = value;
          onChanged();
          return this;
        }

        // required .boa.types.Comment.PositionInfo position = 3;
        private boa.types.Ast.Comment.PositionInfo position_ = boa.types.Ast.Comment.PositionInfo.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Comment.PositionInfo, boa.types.Ast.Comment.PositionInfo.Builder, boa.types.Ast.Comment.PositionInfoOrBuilder> positionBuilder_;
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        public boolean hasPosition() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        public boa.types.Ast.Comment.PositionInfo getPosition() {
          if (positionBuilder_ == null) {
            return position_;
          } else {
            return positionBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        public Builder setPosition(boa.types.Ast.Comment.PositionInfo value) {
          if (positionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            position_ = value;
            onChanged();
          } else {
            positionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        public Builder setPosition(
            boa.types.Ast.Comment.PositionInfo.Builder builderForValue) {
          if (positionBuilder_ == null) {
            position_ = builderForValue.build();
            onChanged();
          } else {
            positionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        public Builder mergePosition(boa.types.Ast.Comment.PositionInfo value) {
          if (positionBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                position_ != boa.types.Ast.Comment.PositionInfo.getDefaultInstance()) {
              position_ =
                boa.types.Ast.Comment.PositionInfo.newBuilder(position_).mergeFrom(value).buildPartial();
            } else {
              position_ = value;
            }
            onChanged();
          } else {
            positionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        public Builder clearPosition() {
          if (positionBuilder_ == null) {
            position_ = boa.types.Ast.Comment.PositionInfo.getDefaultInstance();
            onChanged();
          } else {
            positionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        public boa.types.Ast.Comment.PositionInfo.Builder getPositionBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getPositionFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        public boa.types.Ast.Comment.PositionInfoOrBuilder getPositionOrBuilder() {
          if (positionBuilder_ != null) {
            return positionBuilder_.getMessageOrBuilder();
          } else {
            return position_;
          }
        }
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Comment.PositionInfo, boa.types.Ast.Comment.PositionInfo.Builder, boa.types.Ast.Comment.PositionInfoOrBuilder> 
            getPositionFieldBuilder() {
          if (positionBuilder_ == null) {
            positionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Comment.PositionInfo, boa.types.Ast.Comment.PositionInfo.Builder, boa.types.Ast.Comment.PositionInfoOrBuilder>(
                    position_,
                    getParentForChildren(),
                    isClean());
            position_ = null;
          }
          return positionBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Comment.BlockComment)
      }

      static {
        defaultInstance = new BlockComment(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Comment.BlockComment)
    }

    public interface DocCommentOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = DOC];
      /**
       * <code>optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = DOC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = DOC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Comment.CommentKind getShadowKind();

      // required string value = 2;
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       ** The value of the comment 
       * </pre>
       */
      boolean hasValue();
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       ** The value of the comment 
       * </pre>
       */
      java.lang.String getValue();
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       ** The value of the comment 
       * </pre>
       */
      com.google.protobuf.ByteString
          getValueBytes();

      // required .boa.types.Comment.PositionInfo position = 3;
      /**
       * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
       *
       * <pre>
       ** Position information for the comment 
       * </pre>
       */
      boolean hasPosition();
      /**
       * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
       *
       * <pre>
       ** Position information for the comment 
       * </pre>
       */
      boa.types.Ast.Comment.PositionInfo getPosition();
      /**
       * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
       *
       * <pre>
       ** Position information for the comment 
       * </pre>
       */
      boa.types.Ast.Comment.PositionInfoOrBuilder getPositionOrBuilder();
    }
    /**
     * Protobuf type {@code boa.types.Comment.DocComment}
     *
     * <pre>
     ** @exclude A single documentation comment 
     * </pre>
     */
    public static final class DocComment extends
        com.google.protobuf.GeneratedMessage
        implements DocCommentOrBuilder {
      // Use DocComment.newBuilder() to construct.
      private DocComment(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private DocComment(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final DocComment defaultInstance;
      public static DocComment getDefaultInstance() {
        return defaultInstance;
      }

      public DocComment getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private DocComment(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Comment.CommentKind value = boa.types.Ast.Comment.CommentKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                value_ = input.readBytes();
                break;
              }
              case 26: {
                boa.types.Ast.Comment.PositionInfo.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = position_.toBuilder();
                }
                position_ = input.readMessage(boa.types.Ast.Comment.PositionInfo.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(position_);
                  position_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Comment_DocComment_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Comment_DocComment_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Comment.DocComment.class, boa.types.Ast.Comment.DocComment.Builder.class);
      }

      public static com.google.protobuf.Parser<DocComment> PARSER =
          new com.google.protobuf.AbstractParser<DocComment>() {
        public DocComment parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new DocComment(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<DocComment> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = DOC];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Comment.CommentKind shadowKind_;
      /**
       * <code>optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = DOC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = DOC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Comment.CommentKind getShadowKind() {
        return shadowKind_;
      }

      // required string value = 2;
      public static final int VALUE_FIELD_NUMBER = 2;
      private java.lang.Object value_;
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       ** The value of the comment 
       * </pre>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       ** The value of the comment 
       * </pre>
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            value_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       ** The value of the comment 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // required .boa.types.Comment.PositionInfo position = 3;
      public static final int POSITION_FIELD_NUMBER = 3;
      private boa.types.Ast.Comment.PositionInfo position_;
      /**
       * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
       *
       * <pre>
       ** Position information for the comment 
       * </pre>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
       *
       * <pre>
       ** Position information for the comment 
       * </pre>
       */
      public boa.types.Ast.Comment.PositionInfo getPosition() {
        return position_;
      }
      /**
       * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
       *
       * <pre>
       ** Position information for the comment 
       * </pre>
       */
      public boa.types.Ast.Comment.PositionInfoOrBuilder getPositionOrBuilder() {
        return position_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Comment.CommentKind.DOC;
        value_ = "";
        position_ = boa.types.Ast.Comment.PositionInfo.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasValue()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasPosition()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getPosition().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getValueBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(3, position_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getValueBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, position_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Comment.DocComment parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Comment.DocComment parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Comment.DocComment parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Comment.DocComment parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Comment.DocComment parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Comment.DocComment parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Comment.DocComment parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Comment.DocComment parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Comment.DocComment parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Comment.DocComment parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Comment.DocComment prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Comment.DocComment}
       *
       * <pre>
       ** @exclude A single documentation comment 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Comment.DocCommentOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Comment_DocComment_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Comment_DocComment_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Comment.DocComment.class, boa.types.Ast.Comment.DocComment.Builder.class);
        }

        // Construct using boa.types.Ast.Comment.DocComment.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getPositionFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Comment.CommentKind.DOC;
          bitField0_ = (bitField0_ & ~0x00000001);
          value_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          if (positionBuilder_ == null) {
            position_ = boa.types.Ast.Comment.PositionInfo.getDefaultInstance();
          } else {
            positionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Comment_DocComment_descriptor;
        }

        public boa.types.Ast.Comment.DocComment getDefaultInstanceForType() {
          return boa.types.Ast.Comment.DocComment.getDefaultInstance();
        }

        public boa.types.Ast.Comment.DocComment build() {
          boa.types.Ast.Comment.DocComment result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Comment.DocComment buildPartial() {
          boa.types.Ast.Comment.DocComment result = new boa.types.Ast.Comment.DocComment(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.value_ = value_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          if (positionBuilder_ == null) {
            result.position_ = position_;
          } else {
            result.position_ = positionBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Comment.DocComment) {
            return mergeFrom((boa.types.Ast.Comment.DocComment)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Comment.DocComment other) {
          if (other == boa.types.Ast.Comment.DocComment.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasValue()) {
            bitField0_ |= 0x00000002;
            value_ = other.value_;
            onChanged();
          }
          if (other.hasPosition()) {
            mergePosition(other.getPosition());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasValue()) {
            
            return false;
          }
          if (!hasPosition()) {
            
            return false;
          }
          if (!getPosition().isInitialized()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Comment.DocComment parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Comment.DocComment) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = DOC];
        private boa.types.Ast.Comment.CommentKind shadowKind_ = boa.types.Ast.Comment.CommentKind.DOC;
        /**
         * <code>optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = DOC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = DOC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Comment.CommentKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = DOC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Comment.CommentKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = DOC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Comment.CommentKind.DOC;
          onChanged();
          return this;
        }

        // required string value = 2;
        private java.lang.Object value_ = "";
        /**
         * <code>required string value = 2;</code>
         *
         * <pre>
         ** The value of the comment 
         * </pre>
         */
        public boolean hasValue() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string value = 2;</code>
         *
         * <pre>
         ** The value of the comment 
         * </pre>
         */
        public java.lang.String getValue() {
          java.lang.Object ref = value_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            value_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string value = 2;</code>
         *
         * <pre>
         ** The value of the comment 
         * </pre>
         */
        public com.google.protobuf.ByteString
            getValueBytes() {
          java.lang.Object ref = value_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            value_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string value = 2;</code>
         *
         * <pre>
         ** The value of the comment 
         * </pre>
         */
        public Builder setValue(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string value = 2;</code>
         *
         * <pre>
         ** The value of the comment 
         * </pre>
         */
        public Builder clearValue() {
          bitField0_ = (bitField0_ & ~0x00000002);
          value_ = getDefaultInstance().getValue();
          onChanged();
          return this;
        }
        /**
         * <code>required string value = 2;</code>
         *
         * <pre>
         ** The value of the comment 
         * </pre>
         */
        public Builder setValueBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          value_ = value;
          onChanged();
          return this;
        }

        // required .boa.types.Comment.PositionInfo position = 3;
        private boa.types.Ast.Comment.PositionInfo position_ = boa.types.Ast.Comment.PositionInfo.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Comment.PositionInfo, boa.types.Ast.Comment.PositionInfo.Builder, boa.types.Ast.Comment.PositionInfoOrBuilder> positionBuilder_;
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        public boolean hasPosition() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        public boa.types.Ast.Comment.PositionInfo getPosition() {
          if (positionBuilder_ == null) {
            return position_;
          } else {
            return positionBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        public Builder setPosition(boa.types.Ast.Comment.PositionInfo value) {
          if (positionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            position_ = value;
            onChanged();
          } else {
            positionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        public Builder setPosition(
            boa.types.Ast.Comment.PositionInfo.Builder builderForValue) {
          if (positionBuilder_ == null) {
            position_ = builderForValue.build();
            onChanged();
          } else {
            positionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        public Builder mergePosition(boa.types.Ast.Comment.PositionInfo value) {
          if (positionBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                position_ != boa.types.Ast.Comment.PositionInfo.getDefaultInstance()) {
              position_ =
                boa.types.Ast.Comment.PositionInfo.newBuilder(position_).mergeFrom(value).buildPartial();
            } else {
              position_ = value;
            }
            onChanged();
          } else {
            positionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        public Builder clearPosition() {
          if (positionBuilder_ == null) {
            position_ = boa.types.Ast.Comment.PositionInfo.getDefaultInstance();
            onChanged();
          } else {
            positionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        public boa.types.Ast.Comment.PositionInfo.Builder getPositionBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getPositionFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        public boa.types.Ast.Comment.PositionInfoOrBuilder getPositionOrBuilder() {
          if (positionBuilder_ != null) {
            return positionBuilder_.getMessageOrBuilder();
          } else {
            return position_;
          }
        }
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Comment.PositionInfo, boa.types.Ast.Comment.PositionInfo.Builder, boa.types.Ast.Comment.PositionInfoOrBuilder> 
            getPositionFieldBuilder() {
          if (positionBuilder_ == null) {
            positionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Comment.PositionInfo, boa.types.Ast.Comment.PositionInfo.Builder, boa.types.Ast.Comment.PositionInfoOrBuilder>(
                    position_,
                    getParentForChildren(),
                    isClean());
            position_ = null;
          }
          return positionBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Comment.DocComment)
      }

      static {
        defaultInstance = new DocComment(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Comment.DocComment)
    }

    public interface SpecificationCommentOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = SPEC];
      /**
       * <code>optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = SPEC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boolean hasShadowKind();
      /**
       * <code>optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = SPEC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      boa.types.Ast.Comment.CommentKind getShadowKind();

      // required string value = 2;
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       ** The value of the comment 
       * </pre>
       */
      boolean hasValue();
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       ** The value of the comment 
       * </pre>
       */
      java.lang.String getValue();
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       ** The value of the comment 
       * </pre>
       */
      com.google.protobuf.ByteString
          getValueBytes();

      // required .boa.types.Comment.PositionInfo position = 3;
      /**
       * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
       *
       * <pre>
       ** Position information for the comment 
       * </pre>
       */
      boolean hasPosition();
      /**
       * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
       *
       * <pre>
       ** Position information for the comment 
       * </pre>
       */
      boa.types.Ast.Comment.PositionInfo getPosition();
      /**
       * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
       *
       * <pre>
       ** Position information for the comment 
       * </pre>
       */
      boa.types.Ast.Comment.PositionInfoOrBuilder getPositionOrBuilder();
    }
    /**
     * Protobuf type {@code boa.types.Comment.SpecificationComment}
     *
     * <pre>
     ** @exclude A single specification comment 
     * </pre>
     */
    public static final class SpecificationComment extends
        com.google.protobuf.GeneratedMessage
        implements SpecificationCommentOrBuilder {
      // Use SpecificationComment.newBuilder() to construct.
      private SpecificationComment(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private SpecificationComment(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final SpecificationComment defaultInstance;
      public static SpecificationComment getDefaultInstance() {
        return defaultInstance;
      }

      public SpecificationComment getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private SpecificationComment(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                boa.types.Ast.Comment.CommentKind value = boa.types.Ast.Comment.CommentKind.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  shadowKind_ = value;
                }
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                value_ = input.readBytes();
                break;
              }
              case 26: {
                boa.types.Ast.Comment.PositionInfo.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = position_.toBuilder();
                }
                position_ = input.readMessage(boa.types.Ast.Comment.PositionInfo.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(position_);
                  position_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Comment_SpecificationComment_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Comment_SpecificationComment_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Comment.SpecificationComment.class, boa.types.Ast.Comment.SpecificationComment.Builder.class);
      }

      public static com.google.protobuf.Parser<SpecificationComment> PARSER =
          new com.google.protobuf.AbstractParser<SpecificationComment>() {
        public SpecificationComment parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SpecificationComment(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<SpecificationComment> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = SPEC];
      public static final int SHADOW_KIND_FIELD_NUMBER = 1;
      private boa.types.Ast.Comment.CommentKind shadowKind_;
      /**
       * <code>optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = SPEC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasShadowKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = SPEC];</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Comment.CommentKind getShadowKind() {
        return shadowKind_;
      }

      // required string value = 2;
      public static final int VALUE_FIELD_NUMBER = 2;
      private java.lang.Object value_;
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       ** The value of the comment 
       * </pre>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       ** The value of the comment 
       * </pre>
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            value_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       ** The value of the comment 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // required .boa.types.Comment.PositionInfo position = 3;
      public static final int POSITION_FIELD_NUMBER = 3;
      private boa.types.Ast.Comment.PositionInfo position_;
      /**
       * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
       *
       * <pre>
       ** Position information for the comment 
       * </pre>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
       *
       * <pre>
       ** Position information for the comment 
       * </pre>
       */
      public boa.types.Ast.Comment.PositionInfo getPosition() {
        return position_;
      }
      /**
       * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
       *
       * <pre>
       ** Position information for the comment 
       * </pre>
       */
      public boa.types.Ast.Comment.PositionInfoOrBuilder getPositionOrBuilder() {
        return position_;
      }

      private void initFields() {
        shadowKind_ = boa.types.Ast.Comment.CommentKind.SPEC;
        value_ = "";
        position_ = boa.types.Ast.Comment.PositionInfo.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasValue()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasPosition()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getPosition().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getValueBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(3, position_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, shadowKind_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getValueBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, position_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static boa.types.Ast.Comment.SpecificationComment parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Comment.SpecificationComment parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Comment.SpecificationComment parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static boa.types.Ast.Comment.SpecificationComment parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static boa.types.Ast.Comment.SpecificationComment parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Comment.SpecificationComment parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Comment.SpecificationComment parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static boa.types.Ast.Comment.SpecificationComment parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static boa.types.Ast.Comment.SpecificationComment parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static boa.types.Ast.Comment.SpecificationComment parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(boa.types.Ast.Comment.SpecificationComment prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code boa.types.Comment.SpecificationComment}
       *
       * <pre>
       ** @exclude A single specification comment 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements boa.types.Ast.Comment.SpecificationCommentOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return boa.types.Ast.internal_static_boa_types_Comment_SpecificationComment_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return boa.types.Ast.internal_static_boa_types_Comment_SpecificationComment_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  boa.types.Ast.Comment.SpecificationComment.class, boa.types.Ast.Comment.SpecificationComment.Builder.class);
        }

        // Construct using boa.types.Ast.Comment.SpecificationComment.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getPositionFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          shadowKind_ = boa.types.Ast.Comment.CommentKind.SPEC;
          bitField0_ = (bitField0_ & ~0x00000001);
          value_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          if (positionBuilder_ == null) {
            position_ = boa.types.Ast.Comment.PositionInfo.getDefaultInstance();
          } else {
            positionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return boa.types.Ast.internal_static_boa_types_Comment_SpecificationComment_descriptor;
        }

        public boa.types.Ast.Comment.SpecificationComment getDefaultInstanceForType() {
          return boa.types.Ast.Comment.SpecificationComment.getDefaultInstance();
        }

        public boa.types.Ast.Comment.SpecificationComment build() {
          boa.types.Ast.Comment.SpecificationComment result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public boa.types.Ast.Comment.SpecificationComment buildPartial() {
          boa.types.Ast.Comment.SpecificationComment result = new boa.types.Ast.Comment.SpecificationComment(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.shadowKind_ = shadowKind_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.value_ = value_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          if (positionBuilder_ == null) {
            result.position_ = position_;
          } else {
            result.position_ = positionBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof boa.types.Ast.Comment.SpecificationComment) {
            return mergeFrom((boa.types.Ast.Comment.SpecificationComment)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(boa.types.Ast.Comment.SpecificationComment other) {
          if (other == boa.types.Ast.Comment.SpecificationComment.getDefaultInstance()) return this;
          if (other.hasShadowKind()) {
            setShadowKind(other.getShadowKind());
          }
          if (other.hasValue()) {
            bitField0_ |= 0x00000002;
            value_ = other.value_;
            onChanged();
          }
          if (other.hasPosition()) {
            mergePosition(other.getPosition());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasValue()) {
            
            return false;
          }
          if (!hasPosition()) {
            
            return false;
          }
          if (!getPosition().isInitialized()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          boa.types.Ast.Comment.SpecificationComment parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (boa.types.Ast.Comment.SpecificationComment) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = SPEC];
        private boa.types.Ast.Comment.CommentKind shadowKind_ = boa.types.Ast.Comment.CommentKind.SPEC;
        /**
         * <code>optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = SPEC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boolean hasShadowKind() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = SPEC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public boa.types.Ast.Comment.CommentKind getShadowKind() {
          return shadowKind_;
        }
        /**
         * <code>optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = SPEC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder setShadowKind(boa.types.Ast.Comment.CommentKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          shadowKind_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .boa.types.Comment.CommentKind shadow_kind = 1 [default = SPEC];</code>
         *
         * <pre>
         ** @exclude 
         * </pre>
         */
        public Builder clearShadowKind() {
          bitField0_ = (bitField0_ & ~0x00000001);
          shadowKind_ = boa.types.Ast.Comment.CommentKind.SPEC;
          onChanged();
          return this;
        }

        // required string value = 2;
        private java.lang.Object value_ = "";
        /**
         * <code>required string value = 2;</code>
         *
         * <pre>
         ** The value of the comment 
         * </pre>
         */
        public boolean hasValue() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string value = 2;</code>
         *
         * <pre>
         ** The value of the comment 
         * </pre>
         */
        public java.lang.String getValue() {
          java.lang.Object ref = value_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            value_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string value = 2;</code>
         *
         * <pre>
         ** The value of the comment 
         * </pre>
         */
        public com.google.protobuf.ByteString
            getValueBytes() {
          java.lang.Object ref = value_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            value_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string value = 2;</code>
         *
         * <pre>
         ** The value of the comment 
         * </pre>
         */
        public Builder setValue(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string value = 2;</code>
         *
         * <pre>
         ** The value of the comment 
         * </pre>
         */
        public Builder clearValue() {
          bitField0_ = (bitField0_ & ~0x00000002);
          value_ = getDefaultInstance().getValue();
          onChanged();
          return this;
        }
        /**
         * <code>required string value = 2;</code>
         *
         * <pre>
         ** The value of the comment 
         * </pre>
         */
        public Builder setValueBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          value_ = value;
          onChanged();
          return this;
        }

        // required .boa.types.Comment.PositionInfo position = 3;
        private boa.types.Ast.Comment.PositionInfo position_ = boa.types.Ast.Comment.PositionInfo.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Comment.PositionInfo, boa.types.Ast.Comment.PositionInfo.Builder, boa.types.Ast.Comment.PositionInfoOrBuilder> positionBuilder_;
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        public boolean hasPosition() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        public boa.types.Ast.Comment.PositionInfo getPosition() {
          if (positionBuilder_ == null) {
            return position_;
          } else {
            return positionBuilder_.getMessage();
          }
        }
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        public Builder setPosition(boa.types.Ast.Comment.PositionInfo value) {
          if (positionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            position_ = value;
            onChanged();
          } else {
            positionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        public Builder setPosition(
            boa.types.Ast.Comment.PositionInfo.Builder builderForValue) {
          if (positionBuilder_ == null) {
            position_ = builderForValue.build();
            onChanged();
          } else {
            positionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        public Builder mergePosition(boa.types.Ast.Comment.PositionInfo value) {
          if (positionBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                position_ != boa.types.Ast.Comment.PositionInfo.getDefaultInstance()) {
              position_ =
                boa.types.Ast.Comment.PositionInfo.newBuilder(position_).mergeFrom(value).buildPartial();
            } else {
              position_ = value;
            }
            onChanged();
          } else {
            positionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        public Builder clearPosition() {
          if (positionBuilder_ == null) {
            position_ = boa.types.Ast.Comment.PositionInfo.getDefaultInstance();
            onChanged();
          } else {
            positionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        public boa.types.Ast.Comment.PositionInfo.Builder getPositionBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getPositionFieldBuilder().getBuilder();
        }
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        public boa.types.Ast.Comment.PositionInfoOrBuilder getPositionOrBuilder() {
          if (positionBuilder_ != null) {
            return positionBuilder_.getMessageOrBuilder();
          } else {
            return position_;
          }
        }
        /**
         * <code>required .boa.types.Comment.PositionInfo position = 3;</code>
         *
         * <pre>
         ** Position information for the comment 
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            boa.types.Ast.Comment.PositionInfo, boa.types.Ast.Comment.PositionInfo.Builder, boa.types.Ast.Comment.PositionInfoOrBuilder> 
            getPositionFieldBuilder() {
          if (positionBuilder_ == null) {
            positionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                boa.types.Ast.Comment.PositionInfo, boa.types.Ast.Comment.PositionInfo.Builder, boa.types.Ast.Comment.PositionInfoOrBuilder>(
                    position_,
                    getParentForChildren(),
                    isClean());
            position_ = null;
          }
          return positionBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:boa.types.Comment.SpecificationComment)
      }

      static {
        defaultInstance = new SpecificationComment(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:boa.types.Comment.SpecificationComment)
    }

    private int bitField0_;
    // required .boa.types.Comment.CommentKind kind = 1;
    public static final int KIND_FIELD_NUMBER = 1;
    private boa.types.Ast.Comment.CommentKind kind_;
    /**
     * <code>required .boa.types.Comment.CommentKind kind = 1;</code>
     *
     * <pre>
     ** The kind of comment 
     * </pre>
     */
    public boolean hasKind() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .boa.types.Comment.CommentKind kind = 1;</code>
     *
     * <pre>
     ** The kind of comment 
     * </pre>
     */
    public boa.types.Ast.Comment.CommentKind getKind() {
      return kind_;
    }

    // required string string_1 = 2;
    public static final int STRING_1_FIELD_NUMBER = 2;
    private java.lang.Object string1_;
    /**
     * <code>required string string_1 = 2;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boolean hasString1() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string string_1 = 2;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public java.lang.String getString1() {
      java.lang.Object ref = string1_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          string1_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string string_1 = 2;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getString1Bytes() {
      java.lang.Object ref = string1_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        string1_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .boa.types.Comment.PositionInfo positioninfo_1 = 3;
    public static final int POSITIONINFO_1_FIELD_NUMBER = 3;
    private boa.types.Ast.Comment.PositionInfo positioninfo1_;
    /**
     * <code>required .boa.types.Comment.PositionInfo positioninfo_1 = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boolean hasPositioninfo1() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .boa.types.Comment.PositionInfo positioninfo_1 = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.Comment.PositionInfo getPositioninfo1() {
      return positioninfo1_;
    }
    /**
     * <code>required .boa.types.Comment.PositionInfo positioninfo_1 = 3;</code>
     *
     * <pre>
     ** @exclude 
     * </pre>
     */
    public boa.types.Ast.Comment.PositionInfoOrBuilder getPositioninfo1OrBuilder() {
      return positioninfo1_;
    }

    // optional .boa.types.ChangeKind structural_change_kind = 4;
    public static final int STRUCTURAL_CHANGE_KIND_FIELD_NUMBER = 4;
    private boa.types.Shared.ChangeKind structuralChangeKind_;
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 4;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    public boolean hasStructuralChangeKind() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .boa.types.ChangeKind structural_change_kind = 4;</code>
     *
     * <pre>
     ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
     * </pre>
     */
    public boa.types.Shared.ChangeKind getStructuralChangeKind() {
      return structuralChangeKind_;
    }

    // optional .boa.types.ChangeKind label_change_kind = 5;
    public static final int LABEL_CHANGE_KIND_FIELD_NUMBER = 5;
    private boa.types.Shared.ChangeKind labelChangeKind_;
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 5;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    public boolean hasLabelChangeKind() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .boa.types.ChangeKind label_change_kind = 5;</code>
     *
     * <pre>
     ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
     * </pre>
     */
    public boa.types.Shared.ChangeKind getLabelChangeKind() {
      return labelChangeKind_;
    }

    private void initFields() {
      kind_ = boa.types.Ast.Comment.CommentKind.OTHER;
      string1_ = "";
      positioninfo1_ = boa.types.Ast.Comment.PositionInfo.getDefaultInstance();
      structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
      labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKind()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasString1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPositioninfo1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPositioninfo1().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, kind_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getString1Bytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, positioninfo1_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, structuralChangeKind_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, labelChangeKind_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, kind_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getString1Bytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, positioninfo1_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, structuralChangeKind_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, labelChangeKind_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static boa.types.Ast.Comment parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static boa.types.Ast.Comment parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static boa.types.Ast.Comment parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static boa.types.Ast.Comment parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static boa.types.Ast.Comment parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static boa.types.Ast.Comment parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static boa.types.Ast.Comment parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static boa.types.Ast.Comment parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static boa.types.Ast.Comment parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static boa.types.Ast.Comment parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(boa.types.Ast.Comment prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code boa.types.Comment}
     *
     * <pre>
     ** @exclude A single comment 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements boa.types.Ast.CommentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.Ast.internal_static_boa_types_Comment_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.Ast.internal_static_boa_types_Comment_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.Ast.Comment.class, boa.types.Ast.Comment.Builder.class);
      }

      // Construct using boa.types.Ast.Comment.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPositioninfo1FieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        kind_ = boa.types.Ast.Comment.CommentKind.OTHER;
        bitField0_ = (bitField0_ & ~0x00000001);
        string1_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (positioninfo1Builder_ == null) {
          positioninfo1_ = boa.types.Ast.Comment.PositionInfo.getDefaultInstance();
        } else {
          positioninfo1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        bitField0_ = (bitField0_ & ~0x00000008);
        labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return boa.types.Ast.internal_static_boa_types_Comment_descriptor;
      }

      public boa.types.Ast.Comment getDefaultInstanceForType() {
        return boa.types.Ast.Comment.getDefaultInstance();
      }

      public boa.types.Ast.Comment build() {
        boa.types.Ast.Comment result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public boa.types.Ast.Comment buildPartial() {
        boa.types.Ast.Comment result = new boa.types.Ast.Comment(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.kind_ = kind_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.string1_ = string1_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (positioninfo1Builder_ == null) {
          result.positioninfo1_ = positioninfo1_;
        } else {
          result.positioninfo1_ = positioninfo1Builder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.structuralChangeKind_ = structuralChangeKind_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.labelChangeKind_ = labelChangeKind_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof boa.types.Ast.Comment) {
          return mergeFrom((boa.types.Ast.Comment)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(boa.types.Ast.Comment other) {
        if (other == boa.types.Ast.Comment.getDefaultInstance()) return this;
        if (other.hasKind()) {
          setKind(other.getKind());
        }
        if (other.hasString1()) {
          bitField0_ |= 0x00000002;
          string1_ = other.string1_;
          onChanged();
        }
        if (other.hasPositioninfo1()) {
          mergePositioninfo1(other.getPositioninfo1());
        }
        if (other.hasStructuralChangeKind()) {
          setStructuralChangeKind(other.getStructuralChangeKind());
        }
        if (other.hasLabelChangeKind()) {
          setLabelChangeKind(other.getLabelChangeKind());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKind()) {
          
          return false;
        }
        if (!hasString1()) {
          
          return false;
        }
        if (!hasPositioninfo1()) {
          
          return false;
        }
        if (!getPositioninfo1().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        boa.types.Ast.Comment parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (boa.types.Ast.Comment) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .boa.types.Comment.CommentKind kind = 1;
      private boa.types.Ast.Comment.CommentKind kind_ = boa.types.Ast.Comment.CommentKind.OTHER;
      /**
       * <code>required .boa.types.Comment.CommentKind kind = 1;</code>
       *
       * <pre>
       ** The kind of comment 
       * </pre>
       */
      public boolean hasKind() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .boa.types.Comment.CommentKind kind = 1;</code>
       *
       * <pre>
       ** The kind of comment 
       * </pre>
       */
      public boa.types.Ast.Comment.CommentKind getKind() {
        return kind_;
      }
      /**
       * <code>required .boa.types.Comment.CommentKind kind = 1;</code>
       *
       * <pre>
       ** The kind of comment 
       * </pre>
       */
      public Builder setKind(boa.types.Ast.Comment.CommentKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        kind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .boa.types.Comment.CommentKind kind = 1;</code>
       *
       * <pre>
       ** The kind of comment 
       * </pre>
       */
      public Builder clearKind() {
        bitField0_ = (bitField0_ & ~0x00000001);
        kind_ = boa.types.Ast.Comment.CommentKind.OTHER;
        onChanged();
        return this;
      }

      // required string string_1 = 2;
      private java.lang.Object string1_ = "";
      /**
       * <code>required string string_1 = 2;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasString1() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string string_1 = 2;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public java.lang.String getString1() {
        java.lang.Object ref = string1_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          string1_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string string_1 = 2;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getString1Bytes() {
        java.lang.Object ref = string1_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          string1_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string string_1 = 2;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setString1(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        string1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string string_1 = 2;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearString1() {
        bitField0_ = (bitField0_ & ~0x00000002);
        string1_ = getDefaultInstance().getString1();
        onChanged();
        return this;
      }
      /**
       * <code>required string string_1 = 2;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setString1Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        string1_ = value;
        onChanged();
        return this;
      }

      // required .boa.types.Comment.PositionInfo positioninfo_1 = 3;
      private boa.types.Ast.Comment.PositionInfo positioninfo1_ = boa.types.Ast.Comment.PositionInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Comment.PositionInfo, boa.types.Ast.Comment.PositionInfo.Builder, boa.types.Ast.Comment.PositionInfoOrBuilder> positioninfo1Builder_;
      /**
       * <code>required .boa.types.Comment.PositionInfo positioninfo_1 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boolean hasPositioninfo1() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .boa.types.Comment.PositionInfo positioninfo_1 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Comment.PositionInfo getPositioninfo1() {
        if (positioninfo1Builder_ == null) {
          return positioninfo1_;
        } else {
          return positioninfo1Builder_.getMessage();
        }
      }
      /**
       * <code>required .boa.types.Comment.PositionInfo positioninfo_1 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setPositioninfo1(boa.types.Ast.Comment.PositionInfo value) {
        if (positioninfo1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          positioninfo1_ = value;
          onChanged();
        } else {
          positioninfo1Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .boa.types.Comment.PositionInfo positioninfo_1 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder setPositioninfo1(
          boa.types.Ast.Comment.PositionInfo.Builder builderForValue) {
        if (positioninfo1Builder_ == null) {
          positioninfo1_ = builderForValue.build();
          onChanged();
        } else {
          positioninfo1Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .boa.types.Comment.PositionInfo positioninfo_1 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder mergePositioninfo1(boa.types.Ast.Comment.PositionInfo value) {
        if (positioninfo1Builder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              positioninfo1_ != boa.types.Ast.Comment.PositionInfo.getDefaultInstance()) {
            positioninfo1_ =
              boa.types.Ast.Comment.PositionInfo.newBuilder(positioninfo1_).mergeFrom(value).buildPartial();
          } else {
            positioninfo1_ = value;
          }
          onChanged();
        } else {
          positioninfo1Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .boa.types.Comment.PositionInfo positioninfo_1 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public Builder clearPositioninfo1() {
        if (positioninfo1Builder_ == null) {
          positioninfo1_ = boa.types.Ast.Comment.PositionInfo.getDefaultInstance();
          onChanged();
        } else {
          positioninfo1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>required .boa.types.Comment.PositionInfo positioninfo_1 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Comment.PositionInfo.Builder getPositioninfo1Builder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getPositioninfo1FieldBuilder().getBuilder();
      }
      /**
       * <code>required .boa.types.Comment.PositionInfo positioninfo_1 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      public boa.types.Ast.Comment.PositionInfoOrBuilder getPositioninfo1OrBuilder() {
        if (positioninfo1Builder_ != null) {
          return positioninfo1Builder_.getMessageOrBuilder();
        } else {
          return positioninfo1_;
        }
      }
      /**
       * <code>required .boa.types.Comment.PositionInfo positioninfo_1 = 3;</code>
       *
       * <pre>
       ** @exclude 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          boa.types.Ast.Comment.PositionInfo, boa.types.Ast.Comment.PositionInfo.Builder, boa.types.Ast.Comment.PositionInfoOrBuilder> 
          getPositioninfo1FieldBuilder() {
        if (positioninfo1Builder_ == null) {
          positioninfo1Builder_ = new com.google.protobuf.SingleFieldBuilder<
              boa.types.Ast.Comment.PositionInfo, boa.types.Ast.Comment.PositionInfo.Builder, boa.types.Ast.Comment.PositionInfoOrBuilder>(
                  positioninfo1_,
                  getParentForChildren(),
                  isClean());
          positioninfo1_ = null;
        }
        return positioninfo1Builder_;
      }

      // optional .boa.types.ChangeKind structural_change_kind = 4;
      private boa.types.Shared.ChangeKind structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 4;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public boolean hasStructuralChangeKind() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 4;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public boa.types.Shared.ChangeKind getStructuralChangeKind() {
        return structuralChangeKind_;
      }
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 4;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public Builder setStructuralChangeKind(boa.types.Shared.ChangeKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        structuralChangeKind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .boa.types.ChangeKind structural_change_kind = 4;</code>
       *
       * <pre>
       ** Kind of change on the structure: UNCHANGED, ADDED, DELETED/REMOVED, MOVED 
       * </pre>
       */
      public Builder clearStructuralChangeKind() {
        bitField0_ = (bitField0_ & ~0x00000008);
        structuralChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        onChanged();
        return this;
      }

      // optional .boa.types.ChangeKind label_change_kind = 5;
      private boa.types.Shared.ChangeKind labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 5;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public boolean hasLabelChangeKind() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 5;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public boa.types.Shared.ChangeKind getLabelChangeKind() {
        return labelChangeKind_;
      }
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 5;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public Builder setLabelChangeKind(boa.types.Shared.ChangeKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        labelChangeKind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .boa.types.ChangeKind label_change_kind = 5;</code>
       *
       * <pre>
       ** Kind of change on the label: UNCHANGED, ADDED, DELETED/REMOVED, RENAMED 
       * </pre>
       */
      public Builder clearLabelChangeKind() {
        bitField0_ = (bitField0_ & ~0x00000010);
        labelChangeKind_ = boa.types.Shared.ChangeKind.ADDED;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:boa.types.Comment)
    }

    static {
      defaultInstance = new Comment(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:boa.types.Comment)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_CommentsRoot_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_CommentsRoot_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_ASTRoot_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_ASTRoot_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Namespace_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Namespace_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Declaration_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Declaration_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Type_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Type_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Method_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Method_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Variable_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Variable_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Statement_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Statement_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Statement_AssertStatement_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Statement_AssertStatement_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Statement_Block_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Statement_Block_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Statement_BreakStatement_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Statement_BreakStatement_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Statement_CatchClause_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Statement_CatchClause_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Statement_ContinueStatement_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Statement_ContinueStatement_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Statement_DoStatement_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Statement_DoStatement_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Statement_EmptyStatement_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Statement_EmptyStatement_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Statement_EnhancedForStatement_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Statement_EnhancedForStatement_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Statement_ExpressionStatement_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Statement_ExpressionStatement_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Statement_ForStatement_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Statement_ForStatement_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Statement_IfStatement_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Statement_IfStatement_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Statement_LabeledStatement_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Statement_LabeledStatement_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Statement_ReturnStatement_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Statement_ReturnStatement_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Statement_SwitchCase_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Statement_SwitchCase_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Statement_SwitchStatement_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Statement_SwitchStatement_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Statement_SynchronizedStatement_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Statement_SynchronizedStatement_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Statement_ThrowStatement_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Statement_ThrowStatement_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Statement_TryStatement_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Statement_TryStatement_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Statement_TypeDeclarationStatement_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Statement_TypeDeclarationStatement_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Statement_WhileStatement_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Statement_WhileStatement_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Expression_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Expression_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Expression_AnnotationExpression_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Expression_AnnotationExpression_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Expression_ArrayAccess_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Expression_ArrayAccess_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Expression_ArrayCreation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Expression_ArrayCreation_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Expression_ArrayInitializer_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Expression_ArrayInitializer_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Expression_Assignment_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Expression_Assignment_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Expression_BooleanLiteral_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Expression_BooleanLiteral_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Expression_CastExpression_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Expression_CastExpression_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Expression_CharacterLiteral_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Expression_CharacterLiteral_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Expression_ClassInstanceCreation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Expression_ClassInstanceCreation_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Expression_ConditionalExpression_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Expression_ConditionalExpression_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Expression_InfixExpression_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Expression_InfixExpression_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Expression_InstanceofExpression_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Expression_InstanceofExpression_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Expression_LambdaExpression_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Expression_LambdaExpression_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Expression_MethodInvocation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Expression_MethodInvocation_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Expression_MethodReference_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Expression_MethodReference_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Expression_MethodReference_CreationReference_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Expression_MethodReference_CreationReference_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Expression_MethodReference_ExpressionMethodReference_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Expression_MethodReference_ExpressionMethodReference_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Expression_MethodReference_SuperMethodReference_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Expression_MethodReference_SuperMethodReference_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Expression_MethodReference_TypeMethodReference_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Expression_MethodReference_TypeMethodReference_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Expression_NullCoalesceExpression_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Expression_NullCoalesceExpression_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Expression_NullLiteral_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Expression_NullLiteral_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Expression_NumberLiteral_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Expression_NumberLiteral_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Expression_ParenthesizedExpression_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Expression_ParenthesizedExpression_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Expression_PostfixExpression_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Expression_PostfixExpression_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Expression_PrefixExpression_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Expression_PrefixExpression_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Expression_StringLiteral_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Expression_StringLiteral_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Expression_SuperMethodInvocation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Expression_SuperMethodInvocation_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Expression_ThisExpression_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Expression_ThisExpression_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Expression_TypeLiteral_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Expression_TypeLiteral_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Expression_VariableDeclarationExpression_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Expression_VariableDeclarationExpression_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Expression_VarAccessExpression_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Expression_VarAccessExpression_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Modifier_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Modifier_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Modifier_NormalModifier_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Modifier_NormalModifier_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Modifier_VisibilityModifier_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Modifier_VisibilityModifier_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Modifier_Annotation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Modifier_Annotation_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Modifier_Annotation_MarkerAnnotation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Modifier_Annotation_MarkerAnnotation_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Modifier_Annotation_NormalAnnotation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Modifier_Annotation_NormalAnnotation_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Modifier_Annotation_SingleMemberAnnotation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Modifier_Annotation_SingleMemberAnnotation_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Comment_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Comment_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Comment_PositionInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Comment_PositionInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Comment_LineComment_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Comment_LineComment_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Comment_BlockComment_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Comment_BlockComment_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Comment_DocComment_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Comment_DocComment_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_Comment_SpecificationComment_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_Comment_SpecificationComment_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\tast.proto\022\tboa.types\032\014shared.proto\032\014hi" +
      "dden.proto\"4\n\014CommentsRoot\022$\n\010comments\030\001" +
      " \003(\0132\022.boa.types.Comment\"\302\001\n\007ASTRoot\022(\n\n" +
      "namespaces\030\001 \003(\0132\024.boa.types.Namespace\022\017" +
      "\n\007imports\030\002 \003(\t\022\023\n\005names\030\003 \003(\tB\004\200\265\030\001\0225\n\026" +
      "structural_change_kind\030\004 \001(\0162\025.boa.types" +
      ".ChangeKind\0220\n\021label_change_kind\030\005 \001(\0162\025" +
      ".boa.types.ChangeKind\"\322\002\n\tNamespace\022\014\n\004n" +
      "ame\030\001 \002(\t\022&\n\tmodifiers\030\002 \003(\0132\023.boa.types" +
      ".Modifier\022,\n\014declarations\030\003 \003(\0132\026.boa.ty",
      "pes.Declaration\022(\n\nstatements\030\004 \003(\0132\024.bo" +
      "a.types.Statement\022\"\n\007methods\030\005 \003(\0132\021.boa" +
      ".types.Method\022*\n\013expressions\030\006 \003(\0132\025.boa" +
      ".types.Expression\0225\n\026structural_change_k" +
      "ind\030\007 \001(\0162\025.boa.types.ChangeKind\0220\n\021labe" +
      "l_change_kind\030\010 \001(\0162\025.boa.types.ChangeKi" +
      "nd\"\234\003\n\013Declaration\022\014\n\004name\030\001 \002(\t\022!\n\004kind" +
      "\030\002 \002(\0162\023.boa.types.TypeKind\022&\n\tmodifiers" +
      "\030\003 \003(\0132\023.boa.types.Modifier\022+\n\022generic_p" +
      "arameters\030\004 \003(\0132\017.boa.types.Type\022 \n\007pare",
      "nts\030\005 \003(\0132\017.boa.types.Type\022\"\n\007methods\030\006 " +
      "\003(\0132\021.boa.types.Method\022#\n\006fields\030\007 \003(\0132\023" +
      ".boa.types.Variable\0223\n\023nested_declaratio" +
      "ns\030\010 \003(\0132\026.boa.types.Declaration\0225\n\026stru" +
      "ctural_change_kind\030\t \001(\0162\025.boa.types.Cha" +
      "ngeKind\0220\n\021label_change_kind\030\n \001(\0162\025.boa" +
      ".types.ChangeKind\"\254\001\n\004Type\022\014\n\004name\030\001 \002(\t" +
      "\022!\n\004kind\030\002 \002(\0162\023.boa.types.TypeKind\022\n\n\002i" +
      "d\030\003 \001(\t\0225\n\026structural_change_kind\030\004 \001(\0162" +
      "\025.boa.types.ChangeKind\0220\n\021label_change_k",
      "ind\030\005 \001(\0162\025.boa.types.ChangeKind\"\366\002\n\006Met" +
      "hod\022\014\n\004name\030\001 \001(\t\022&\n\tmodifiers\030\002 \003(\0132\023.b" +
      "oa.types.Modifier\022$\n\013return_type\030\003 \002(\0132\017" +
      ".boa.types.Type\022+\n\022generic_parameters\030\004 " +
      "\003(\0132\017.boa.types.Type\022&\n\targuments\030\005 \003(\0132" +
      "\023.boa.types.Variable\022(\n\017exception_types\030" +
      "\006 \003(\0132\017.boa.types.Type\022(\n\nstatements\030\007 \003" +
      "(\0132\024.boa.types.Statement\0225\n\026structural_c" +
      "hange_kind\030\010 \001(\0162\025.boa.types.ChangeKind\022" +
      "0\n\021label_change_kind\030\t \001(\0162\025.boa.types.C",
      "hangeKind\"\375\001\n\010Variable\022\014\n\004name\030\001 \002(\t\022&\n\r" +
      "variable_type\030\002 \002(\0132\017.boa.types.Type\022&\n\t" +
      "modifiers\030\003 \003(\0132\023.boa.types.Modifier\022*\n\013" +
      "initializer\030\004 \001(\0132\025.boa.types.Expression" +
      "\0225\n\026structural_change_kind\030\005 \001(\0162\025.boa.t" +
      "ypes.ChangeKind\0220\n\021label_change_kind\030\006 \001" +
      "(\0162\025.boa.types.ChangeKind\"\210 \n\tStatement\022" +
      "0\n\004kind\030\001 \002(\0162\".boa.types.Statement.Stat" +
      "ementKind\022)\n\013statement_1\030\002 \001(\0132\024.boa.typ" +
      "es.Statement\022)\n\013statement_2\030\003 \001(\0132\024.boa.",
      "types.Statement\022*\n\014statements_1\030\004 \003(\0132\024." +
      "boa.types.Statement\022*\n\014statements_2\030\005 \003(" +
      "\0132\024.boa.types.Statement\022+\n\014expression_1\030" +
      "\006 \001(\0132\025.boa.types.Expression\022+\n\014expressi" +
      "on_2\030\007 \001(\0132\025.boa.types.Expression\022,\n\rexp" +
      "ressions_1\030\010 \003(\0132\025.boa.types.Expression\022" +
      ",\n\rexpressions_2\030\t \003(\0132\025.boa.types.Expre" +
      "ssion\022\'\n\nvariable_1\030\n \001(\0132\023.boa.types.Va" +
      "riable\022-\n\rdeclaration_1\030\013 \001(\0132\026.boa.type" +
      "s.Declaration\022\025\n\006bool_1\030\014 \001(\010:\005false\0225\n\026",
      "structural_change_kind\030\r \001(\0162\025.boa.types" +
      ".ChangeKind\0220\n\021label_change_kind\030\016 \001(\0162\025" +
      ".boa.types.ChangeKind\032\247\001\n\017AssertStatemen" +
      "t\022?\n\013shadow_kind\030\001 \001(\0162\".boa.types.State" +
      "ment.StatementKind:\006ASSERT\022(\n\tcondition\030" +
      "\002 \002(\0132\025.boa.types.Expression\022)\n\nexpressi" +
      "on\030\003 \001(\0132\025.boa.types.Expression\032q\n\005Block" +
      "\022>\n\013shadow_kind\030\001 \001(\0162\".boa.types.Statem" +
      "ent.StatementKind:\005BLOCK\022(\n\nstatements\030\002" +
      " \003(\0132\024.boa.types.Statement\032v\n\016BreakState",
      "ment\022>\n\013shadow_kind\030\001 \001(\0162\".boa.types.St" +
      "atement.StatementKind:\005BREAK\022$\n\005label\030\002 " +
      "\001(\0132\025.boa.types.Expression\032\231\001\n\013CatchClau" +
      "se\022>\n\013shadow_kind\030\001 \001(\0162\".boa.types.Stat" +
      "ement.StatementKind:\005CATCH\022&\n\texception\030" +
      "\002 \002(\0132\023.boa.types.Variable\022\"\n\004body\030\003 \003(\013" +
      "2\024.boa.types.Statement\032|\n\021ContinueStatem" +
      "ent\022A\n\013shadow_kind\030\001 \001(\0162\".boa.types.Sta" +
      "tement.StatementKind:\010CONTINUE\022$\n\005label\030" +
      "\002 \001(\0132\025.boa.types.Expression\032\230\001\n\013DoState",
      "ment\022;\n\013shadow_kind\030\001 \001(\0162\".boa.types.St" +
      "atement.StatementKind:\002DO\022(\n\tcondition\030\002" +
      " \002(\0132\025.boa.types.Expression\022\"\n\004body\030\003 \002(" +
      "\0132\024.boa.types.Statement\032P\n\016EmptyStatemen" +
      "t\022>\n\013shadow_kind\030\001 \001(\0162\".boa.types.State" +
      "ment.StatementKind:\005EMPTY\032\351\001\n\024EnhancedFo" +
      "rStatement\022<\n\013shadow_kind\030\001 \001(\0162\".boa.ty" +
      "pes.Statement.StatementKind:\003FOR\022)\n\nexpr" +
      "ession\030\002 \002(\0132\025.boa.types.Expression\0221\n\024v" +
      "ariable_declaration\030\003 \002(\0132\023.boa.types.Va",
      "riable\022\"\n\004body\030\004 \002(\0132\024.boa.types.Stateme" +
      "nt:\021\212\265\030\risenhancedfor\032\177\n\023ExpressionState" +
      "ment\022=\n\013shadow_kind\030\001 \001(\0162\".boa.types.St" +
      "atement.StatementKind:\004EXPR\022)\n\nexpressio" +
      "n\030\002 \002(\0132\025.boa.types.Expression\032\203\002\n\014ForSt" +
      "atement\022<\n\013shadow_kind\030\001 \001(\0162\".boa.types" +
      ".Statement.StatementKind:\003FOR\022.\n\017initial" +
      "izations\030\002 \003(\0132\025.boa.types.Expression\022(\n" +
      "\tcondition\030\003 \002(\0132\025.boa.types.Expression\022" +
      "&\n\007updates\030\004 \003(\0132\025.boa.types.Expression\022",
      "\"\n\004body\030\005 \002(\0132\024.boa.types.Statement:\017\212\265\030" +
      "\013isnormalfor\032\321\001\n\013IfStatement\022;\n\013shadow_k" +
      "ind\030\001 \001(\0162\".boa.types.Statement.Statemen" +
      "tKind:\002IF\022)\n\nexpression\030\002 \002(\0132\025.boa.type" +
      "s.Expression\022,\n\016then_statement\030\003 \002(\0132\024.b" +
      "oa.types.Statement\022,\n\016else_statement\030\004 \001" +
      "(\0132\024.boa.types.Statement\032\241\001\n\020LabeledStat" +
      "ement\022>\n\013shadow_kind\030\001 \001(\0162\".boa.types.S" +
      "tatement.StatementKind:\005LABEL\022$\n\005label\030\002" +
      " \002(\0132\025.boa.types.Expression\022\'\n\tstatement",
      "\030\003 \002(\0132\024.boa.types.Statement\032}\n\017ReturnSt" +
      "atement\022?\n\013shadow_kind\030\001 \001(\0162\".boa.types" +
      ".Statement.StatementKind:\006RETURN\022)\n\nexpr" +
      "ession\030\002 \001(\0132\025.boa.types.Expression\032\221\001\n\n" +
      "SwitchCase\022=\n\013shadow_kind\030\001 \001(\0162\".boa.ty" +
      "pes.Statement.StatementKind:\004CASE\022)\n\nexp" +
      "ression\030\002 \002(\0132\025.boa.types.Expression\022\031\n\n" +
      "is_default\030\003 \001(\010:\005false\032\247\001\n\017SwitchStatem" +
      "ent\022?\n\013shadow_kind\030\001 \001(\0162\".boa.types.Sta" +
      "tement.StatementKind:\006SWITCH\022)\n\nexpressi",
      "on\030\002 \002(\0132\025.boa.types.Expression\022(\n\nstate" +
      "ments\030\003 \003(\0132\024.boa.types.Statement\032\245\001\n\025Sy" +
      "nchronizedStatement\022=\n\013shadow_kind\030\001 \001(\016" +
      "2\".boa.types.Statement.StatementKind:\004SY" +
      "NC\022)\n\nexpression\030\002 \002(\0132\025.boa.types.Expre" +
      "ssion\022\"\n\004body\030\003 \002(\0132\024.boa.types.Statemen" +
      "t\032{\n\016ThrowStatement\022>\n\013shadow_kind\030\001 \001(\016" +
      "2\".boa.types.Statement.StatementKind:\005TH" +
      "ROW\022)\n\nexpression\030\002 \002(\0132\025.boa.types.Expr" +
      "ession\032\350\001\n\014TryStatement\022<\n\013shadow_kind\030\001",
      " \001(\0162\".boa.types.Statement.StatementKind" +
      ":\003TRY\022\"\n\004body\030\002 \002(\0132\024.boa.types.Statemen" +
      "t\022%\n\007catches\030\003 \003(\0132\024.boa.types.Statement" +
      "\022%\n\007finally\030\004 \001(\0132\024.boa.types.Statement\022" +
      "(\n\tresources\030\005 \003(\0132\025.boa.types.Expressio" +
      "n\032\207\001\n\030TypeDeclarationStatement\022A\n\013shadow" +
      "_kind\030\001 \001(\0162\".boa.types.Statement.Statem" +
      "entKind:\010TYPEDECL\022(\n\010new_type\030\002 \002(\0132\026.bo" +
      "a.types.Declaration\032\236\001\n\016WhileStatement\022>" +
      "\n\013shadow_kind\030\001 \001(\0162\".boa.types.Statemen",
      "t.StatementKind:\005WHILE\022(\n\tcondition\030\002 \002(" +
      "\0132\025.boa.types.Expression\022\"\n\004body\030\003 \002(\0132\024" +
      ".boa.types.Statement\"\215\002\n\rStatementKind\022\t" +
      "\n\005OTHER\020\000\022\n\n\006ASSERT\020\001\022\t\n\005BLOCK\020\002\022\t\n\005BREA" +
      "K\020\003\022\010\n\004CASE\020\004\022\t\n\005CATCH\020\005\022\014\n\010CONTINUE\020\006\022\006" +
      "\n\002DO\020\007\022\t\n\005EMPTY\020\010\022\016\n\nEXPRESSION\020\t\022\010\n\004EXP" +
      "R\020\t\022\007\n\003FOR\020\n\022\006\n\002IF\020\013\022\t\n\005LABEL\020\014\022\n\n\006RETUR" +
      "N\020\r\022\n\n\006SWITCH\020\016\022\020\n\014SYNCHRONIZED\020\017\022\010\n\004SYN" +
      "C\020\017\022\t\n\005THROW\020\020\022\007\n\003TRY\020\021\022\014\n\010TYPEDECL\020\022\022\t\n" +
      "\005WHILE\020\023\032\002\020\001\"\217L\n\nExpression\0222\n\004kind\030\001 \002(",
      "\0162$.boa.types.Expression.ExpressionKind\022" +
      "\020\n\010string_1\030\002 \001(\t\022\020\n\010string_2\030\003 \001(\t\022+\n\014e" +
      "xpression_1\030\004 \001(\0132\025.boa.types.Expression" +
      "\022+\n\014expression_2\030\005 \001(\0132\025.boa.types.Expre" +
      "ssion\022+\n\014expression_3\030\006 \001(\0132\025.boa.types." +
      "Expression\022,\n\rexpressions_1\030\007 \003(\0132\025.boa." +
      "types.Expression\022\037\n\006type_1\030\010 \001(\0132\017.boa.t" +
      "ypes.Type\022 \n\007types_1\030\t \003(\0132\017.boa.types.T" +
      "ype\022-\n\rdeclaration_1\030\n \001(\0132\026.boa.types.D" +
      "eclaration\022\016\n\006bool_1\030\013 \001(\010\022\017\n\007int32_1\030\014 ",
      "\001(\005\022(\n\013variables_1\030\r \003(\0132\023.boa.types.Var" +
      "iable\022)\n\013statement_1\030\016 \001(\0132\024.boa.types.S" +
      "tatement\022(\n\013modifiers_1\030\017 \003(\0132\023.boa.type" +
      "s.Modifier\022\021\n\tstrings_1\030\020 \003(\t\022\'\n\nmodifie" +
      "r_1\030\021 \001(\0132\023.boa.types.Modifier\0225\n\026struct" +
      "ural_change_kind\030\022 \001(\0162\025.boa.types.Chang" +
      "eKind\0220\n\021label_change_kind\030\023 \001(\0162\025.boa.t" +
      "ypes.ChangeKind\032\206\001\n\024AnnotationExpression" +
      "\022E\n\013shadow_kind\030\001 \001(\0162$.boa.types.Expres" +
      "sion.ExpressionKind:\nANNOTATION\022\'\n\nannot",
      "ation\030\002 \002(\0132\023.boa.types.Modifier\032\240\001\n\013Arr" +
      "ayAccess\022E\n\013shadow_kind\030\001 \001(\0162$.boa.type" +
      "s.Expression.ExpressionKind:\nARRAYINDEX\022" +
      "$\n\005array\030\002 \002(\0132\025.boa.types.Expression\022$\n" +
      "\005index\030\003 \002(\0132\025.boa.types.Expression\032\316\001\n\r" +
      "ArrayCreation\022C\n\013shadow_kind\030\001 \001(\0162$.boa" +
      ".types.Expression.ExpressionKind:\010NEWARR" +
      "AY\022!\n\010new_type\030\002 \002(\0132\017.boa.types.Type\022)\n" +
      "\ndimensions\030\003 \003(\0132\025.boa.types.Expression" +
      "\022*\n\013initializer\030\004 \001(\0132\025.boa.types.Expres",
      "sion\032\204\001\n\020ArrayInitializer\022D\n\013shadow_kind" +
      "\030\001 \001(\0162$.boa.types.Expression.Expression" +
      "Kind:\tARRAYINIT\022*\n\013expressions\030\002 \003(\0132\025.b" +
      "oa.types.Expression\032\262\010\n\nAssignment\022C\n\rsh" +
      "adow_kind_1\030\001 \001(\0162$.boa.types.Expression" +
      ".ExpressionKind:\006ASSIGN\022G\n\rshadow_kind_2" +
      "\030\002 \001(\0162$.boa.types.Expression.Expression" +
      "Kind:\nASSIGN_ADD\022G\n\rshadow_kind_3\030\003 \001(\0162" +
      "$.boa.types.Expression.ExpressionKind:\nA" +
      "SSIGN_SUB\022H\n\rshadow_kind_4\030\004 \001(\0162$.boa.t",
      "ypes.Expression.ExpressionKind:\013ASSIGN_M" +
      "ULT\022G\n\rshadow_kind_5\030\005 \001(\0162$.boa.types.E" +
      "xpression.ExpressionKind:\nASSIGN_DIV\022G\n\r" +
      "shadow_kind_6\030\006 \001(\0162$.boa.types.Expressi" +
      "on.ExpressionKind:\nASSIGN_MOD\022J\n\rshadow_" +
      "kind_7\030\007 \001(\0162$.boa.types.Expression.Expr" +
      "essionKind:\rASSIGN_BITXOR\022J\n\rshadow_kind" +
      "_8\030\010 \001(\0162$.boa.types.Expression.Expressi" +
      "onKind:\rASSIGN_BITAND\022I\n\rshadow_kind_9\030\t" +
      " \001(\0162$.boa.types.Expression.ExpressionKi",
      "nd:\014ASSIGN_BITOR\022K\n\016shadow_kind_10\030\n \001(\016" +
      "2$.boa.types.Expression.ExpressionKind:\r" +
      "ASSIGN_LSHIFT\022K\n\016shadow_kind_11\030\013 \001(\0162$." +
      "boa.types.Expression.ExpressionKind:\rASS" +
      "IGN_RSHIFT\022S\n\016shadow_kind_12\030\014 \001(\0162$.boa" +
      ".types.Expression.ExpressionKind:\025ASSIGN" +
      "_UNSIGNEDRSHIFT\022-\n\016left_hand_side\030\r \002(\0132" +
      "\025.boa.types.Expression\022.\n\017right_hand_sid" +
      "e\030\016 \002(\0132\025.boa.types.Expression\022@\n\010operat" +
      "or\030\017 \002(\0162$.boa.types.Expression.Expressi",
      "onKindB\010\222\265\030\004kind\032z\n\016BooleanLiteral\022B\n\013sh" +
      "adow_kind\030\001 \001(\0162$.boa.types.Expression.E" +
      "xpressionKind:\007LITERAL\022\025\n\rboolean_value\030" +
      "\002 \002(\010:\r\212\265\030\tisboollit\032\237\001\n\016CastExpression\022" +
      "?\n\013shadow_kind\030\001 \001(\0162$.boa.types.Express" +
      "ion.ExpressionKind:\004CAST\022)\n\nexpression\030\002" +
      " \002(\0132\025.boa.types.Expression\022!\n\010new_type\030" +
      "\003 \002(\0132\017.boa.types.Type\032\220\001\n\020CharacterLite" +
      "ral\022B\n\013shadow_kind\030\001 \001(\0162$.boa.types.Exp" +
      "ression.ExpressionKind:\007LITERAL\022\025\n\rescap",
      "ed_value\030\002 \002(\t\022\022\n\nchar_value\030\003 \002(\005:\r\212\265\030\t" +
      "ischarlit\032\256\002\n\025ClassInstanceCreation\022>\n\013s" +
      "hadow_kind\030\001 \001(\0162$.boa.types.Expression." +
      "ExpressionKind:\003NEW\022!\n\010new_type\030\002 \002(\0132\017." +
      "boa.types.Type\022)\n\nexpression\030\003 \001(\0132\025.boa" +
      ".types.Expression\022(\n\targuments\030\004 \003(\0132\025.b" +
      "oa.types.Expression\022\'\n\016type_arguments\030\005 " +
      "\003(\0132\017.boa.types.Type\0224\n\024anonymous_class_" +
      "decl\030\006 \001(\0132\026.boa.types.Declaration\032\352\001\n\025C" +
      "onditionalExpression\022F\n\013shadow_kind\030\001 \001(",
      "\0162$.boa.types.Expression.ExpressionKind:" +
      "\013CONDITIONAL\022)\n\nexpression\030\002 \002(\0132\025.boa.t" +
      "ypes.Expression\022.\n\017then_expression\030\003 \002(\013" +
      "2\025.boa.types.Expression\022.\n\017else_expressi" +
      "on\030\004 \002(\0132\025.boa.types.Expression\032\243\014\n\017Infi" +
      "xExpression\022C\n\rshadow_kind_1\030\001 \001(\0162$.boa" +
      ".types.Expression.ExpressionKind:\006OP_ADD" +
      "\022D\n\rshadow_kind_2\030\002 \001(\0162$.boa.types.Expr" +
      "ession.ExpressionKind:\007BIT_AND\022H\n\rshadow" +
      "_kind_3\030\003 \001(\0162$.boa.types.Expression.Exp",
      "ressionKind:\013LOGICAL_AND\022G\n\rshadow_kind_" +
      "4\030\004 \001(\0162$.boa.types.Expression.Expressio" +
      "nKind:\nLOGICAL_OR\022C\n\rshadow_kind_5\030\005 \001(\016" +
      "2$.boa.types.Expression.ExpressionKind:\006" +
      "OP_DIV\022?\n\rshadow_kind_6\030\006 \001(\0162$.boa.type" +
      "s.Expression.ExpressionKind:\002EQ\022?\n\rshado" +
      "w_kind_7\030\007 \001(\0162$.boa.types.Expression.Ex" +
      "pressionKind:\002GT\022A\n\rshadow_kind_8\030\010 \001(\0162" +
      "$.boa.types.Expression.ExpressionKind:\004G" +
      "TEQ\022G\n\rshadow_kind_9\030\t \001(\0162$.boa.types.E",
      "xpression.ExpressionKind:\nBIT_LSHIFT\022@\n\016" +
      "shadow_kind_10\030\n \001(\0162$.boa.types.Express" +
      "ion.ExpressionKind:\002LT\022B\n\016shadow_kind_11" +
      "\030\013 \001(\0162$.boa.types.Expression.Expression" +
      "Kind:\004LTEQ\022D\n\016shadow_kind_12\030\014 \001(\0162$.boa" +
      ".types.Expression.ExpressionKind:\006OP_SUB" +
      "\022A\n\016shadow_kind_13\030\r \001(\0162$.boa.types.Exp" +
      "ression.ExpressionKind:\003NEQ\022D\n\016shadow_ki" +
      "nd_14\030\016 \001(\0162$.boa.types.Expression.Expre" +
      "ssionKind:\006BIT_OR\022D\n\016shadow_kind_15\030\017 \001(",
      "\0162$.boa.types.Expression.ExpressionKind:" +
      "\006OP_MOD\022H\n\016shadow_kind_16\030\020 \001(\0162$.boa.ty" +
      "pes.Expression.ExpressionKind:\nBIT_RSHIF" +
      "T\022P\n\016shadow_kind_17\030\021 \001(\0162$.boa.types.Ex" +
      "pression.ExpressionKind:\022BIT_UNSIGNEDRSH" +
      "IFT\022E\n\016shadow_kind_18\030\022 \001(\0162$.boa.types." +
      "Expression.ExpressionKind:\007OP_MULT\022E\n\016sh" +
      "adow_kind_19\030\023 \001(\0162$.boa.types.Expressio" +
      "n.ExpressionKind:\007BIT_XOR\022+\n\014left_operan" +
      "d\030\024 \002(\0132\025.boa.types.Expression\022,\n\rright_",
      "operand\030\025 \002(\0132\025.boa.types.Expression\0220\n\021" +
      "extended_operands\030\026 \003(\0132\025.boa.types.Expr" +
      "ession\022@\n\010operator\030\027 \002(\0162$.boa.types.Exp" +
      "ression.ExpressionKindB\010\222\265\030\004kind:\013\212\265\030\007is" +
      "infix\032\263\001\n\024InstanceofExpression\022F\n\013shadow" +
      "_kind\030\001 \001(\0162$.boa.types.Expression.Expre" +
      "ssionKind:\013TYPECOMPARE\022+\n\014left_operand\030\002" +
      " \002(\0132\025.boa.types.Expression\022&\n\rright_ope" +
      "rand\030\003 \002(\0132\017.boa.types.Type\032\273\001\n\020LambdaEx" +
      "pression\022A\n\013shadow_kind\030\001 \001(\0162$.boa.type",
      "s.Expression.ExpressionKind:\006LAMBDA\022\027\n\017h" +
      "as_parentheses\030\002 \002(\010\022\'\n\nparameters\030\003 \003(\013" +
      "2\023.boa.types.Variable\022\"\n\004body\030\004 \002(\0132\024.bo" +
      "a.types.Statement\032\363\001\n\020MethodInvocation\022E" +
      "\n\013shadow_kind\030\001 \001(\0162$.boa.types.Expressi" +
      "on.ExpressionKind:\nMETHODCALL\022)\n\nexpress" +
      "ion\030\002 \001(\0132\025.boa.types.Expression\022\'\n\016type" +
      "_arguments\030\003 \003(\0132\017.boa.types.Type\022\014\n\004nam" +
      "e\030\004 \002(\t\022(\n\targuments\030\005 \003(\0132\025.boa.types.E" +
      "xpression:\014\212\265\030\010ismethod\032\303\007\n\017MethodRefere",
      "nce\022K\n\013shadow_kind\030\001 \001(\0162$.boa.types.Exp" +
      "ression.ExpressionKind:\020METHOD_REFERENCE" +
      "\022\'\n\016type_arguments\030\002 \003(\0132\017.boa.types.Typ" +
      "e\032\277\001\n\021CreationReference\022K\n\013shadow_kind\030\001" +
      " \001(\0162$.boa.types.Expression.ExpressionKi" +
      "nd:\020METHOD_REFERENCE\022\'\n\016type_arguments\030\002" +
      " \003(\0132\017.boa.types.Type\022!\n\010new_type\030\003 \002(\0132" +
      "\017.boa.types.Type:\021\212\265\030\riscreationref\032\330\001\n\031" +
      "ExpressionMethodReference\022K\n\013shadow_kind" +
      "\030\001 \001(\0162$.boa.types.Expression.Expression",
      "Kind:\020METHOD_REFERENCE\022\'\n\016type_arguments" +
      "\030\002 \003(\0132\017.boa.types.Type\022)\n\nexpression\030\003 " +
      "\002(\0132\025.boa.types.Expression\022\014\n\004name\030\004 \002(\t" +
      ":\014\212\265\030\010isexpref\032\275\001\n\024SuperMethodReference\022" +
      "K\n\013shadow_kind\030\001 \001(\0162$.boa.types.Express" +
      "ion.ExpressionKind:\020METHOD_REFERENCE\022\'\n\016" +
      "type_arguments\030\002 \003(\0132\017.boa.types.Type\022\021\n" +
      "\tqualifier\030\003 \001(\t\022\014\n\004name\030\004 \002(\t:\016\212\265\030\nissu" +
      "perref\032\313\001\n\023TypeMethodReference\022K\n\013shadow" +
      "_kind\030\001 \001(\0162$.boa.types.Expression.Expre",
      "ssionKind:\020METHOD_REFERENCE\022\'\n\016type_argu" +
      "ments\030\002 \003(\0132\017.boa.types.Type\022!\n\010new_type" +
      "\030\003 \002(\0132\017.boa.types.Type\022\014\n\004name\030\004 \002(\t:\r\212" +
      "\265\030\tistyperef:\017\212\265\030\013ismethodref\032\251\001\n\026NullCo" +
      "alesceExpression\022G\n\013shadow_kind\030\001 \001(\0162$." +
      "boa.types.Expression.ExpressionKind:\014NUL" +
      "LCOALESCE\022\"\n\003lhs\030\002 \002(\0132\025.boa.types.Expre" +
      "ssion\022\"\n\003rhs\030\003 \002(\0132\025.boa.types.Expressio" +
      "n\032`\n\013NullLiteral\022B\n\013shadow_kind\030\001 \001(\0162$." +
      "boa.types.Expression.ExpressionKind:\007LIT",
      "ERAL:\r\212\265\030\tisnulllit\032s\n\rNumberLiteral\022B\n\013" +
      "shadow_kind\030\001 \001(\0162$.boa.types.Expression" +
      ".ExpressionKind:\007LITERAL\022\r\n\005token\030\002 \002(\t:" +
      "\017\212\265\030\013isnumberlit\032\206\001\n\027ParenthesizedExpres" +
      "sion\022@\n\013shadow_kind\030\001 \001(\0162$.boa.types.Ex" +
      "pression.ExpressionKind:\005PAREN\022)\n\nexpres" +
      "sion\030\002 \002(\0132\025.boa.types.Expression\032\226\002\n\021Po" +
      "stfixExpression\022C\n\rshadow_kind_1\030\001 \001(\0162$" +
      ".boa.types.Expression.ExpressionKind:\006OP" +
      "_INC\022C\n\rshadow_kind_2\030\002 \001(\0162$.boa.types.",
      "Expression.ExpressionKind:\006OP_DEC\022&\n\007ope" +
      "rand\030\003 \002(\0132\025.boa.types.Expression\022@\n\010ope" +
      "rator\030\004 \002(\0162$.boa.types.Expression.Expre" +
      "ssionKindB\010\222\265\030\004kind:\r\212\265\030\tispostfix\032\256\004\n\020P" +
      "refixExpression\022C\n\rshadow_kind_1\030\001 \001(\0162$" +
      ".boa.types.Expression.ExpressionKind:\006OP" +
      "_DEC\022C\n\rshadow_kind_2\030\002 \001(\0162$.boa.types." +
      "Expression.ExpressionKind:\006OP_INC\022C\n\rsha" +
      "dow_kind_3\030\003 \001(\0162$.boa.types.Expression." +
      "ExpressionKind:\006OP_ADD\022C\n\rshadow_kind_4\030",
      "\004 \001(\0162$.boa.types.Expression.ExpressionK" +
      "ind:\006OP_SUB\022D\n\rshadow_kind_5\030\005 \001(\0162$.boa" +
      ".types.Expression.ExpressionKind:\007BIT_NO" +
      "T\022H\n\rshadow_kind_6\030\006 \001(\0162$.boa.types.Exp" +
      "ression.ExpressionKind:\013LOGICAL_NOT\022&\n\007o" +
      "perand\030\007 \002(\0132\025.boa.types.Expression\022@\n\010o" +
      "perator\030\010 \002(\0162$.boa.types.Expression.Exp" +
      "ressionKindB\010\222\265\030\004kind:\014\212\265\030\010isprefix\032\222\001\n\r" +
      "StringLiteral\022B\n\013shadow_kind\030\001 \001(\0162$.boa" +
      ".types.Expression.ExpressionKind:\007LITERA",
      "L\022\025\n\rescaped_value\030\002 \002(\t\022\025\n\rliteral_valu" +
      "e\030\003 \002(\t:\017\212\265\030\013isstringlit\032\374\001\n\025SuperMethod" +
      "Invocation\022E\n\013shadow_kind\030\001 \001(\0162$.boa.ty" +
      "pes.Expression.ExpressionKind:\nMETHODCAL" +
      "L\022(\n\tqualifier\030\002 \001(\0132\025.boa.types.Express" +
      "ion\022\'\n\016type_arguments\030\003 \003(\0132\017.boa.types." +
      "Type\022\014\n\004name\030\004 \002(\t\022(\n\targuments\030\005 \003(\0132\025." +
      "boa.types.Expression:\021\212\265\030\rissupermethod\032" +
      "v\n\016ThisExpression\022B\n\013shadow_kind\030\001 \001(\0162$" +
      ".boa.types.Expression.ExpressionKind:\007LI",
      "TERAL\022\021\n\tqualifier\030\002 \001(\t:\r\212\265\030\tisthislit\032" +
      "r\n\013TypeLiteral\022B\n\013shadow_kind\030\001 \001(\0162$.bo" +
      "a.types.Expression.ExpressionKind:\007LITER" +
      "AL\022\020\n\010type_lit\030\002 \002(\t:\r\212\265\030\tistypelit\032\326\001\n\035" +
      "VariableDeclarationExpression\022B\n\013shadow_" +
      "kind\030\001 \001(\0162$.boa.types.Expression.Expres" +
      "sionKind:\007VARDECL\022&\n\tmodifiers\030\002 \003(\0132\023.b" +
      "oa.types.Modifier\022!\n\010new_type\030\003 \002(\0132\017.bo" +
      "a.types.Type\022&\n\tfragments\030\004 \003(\0132\023.boa.ty" +
      "pes.Variable\032\231\001\n\023VarAccessExpression\022D\n\013",
      "shadow_kind\030\001 \001(\0162$.boa.types.Expression" +
      ".ExpressionKind:\tVARACCESS\022\022\n\nidentifier" +
      "\030\002 \002(\t\022(\n\tqualifier\030\003 \001(\0132\025.boa.types.Ex" +
      "pression\"\223\006\n\016ExpressionKind\022\t\n\005OTHER\020\000\022\013" +
      "\n\007LITERAL\020\001\022\r\n\tVARACCESS\020\002\022\013\n\007VARDECL\020\003\022" +
      "\016\n\nMETHODCALL\020\004\022\010\n\004CAST\020\005\022\016\n\nARRAYINDEX\020" +
      "\006\022\r\n\tARRAYINIT\020\007\022\017\n\013TYPECOMPARE\020\010\022\007\n\003NEW" +
      "\020\t\022\014\n\010NEWARRAY\020\n\022\n\n\006OP_ADD\020\013\022\n\n\006OP_SUB\020\014" +
      "\022\013\n\007OP_MULT\020\r\022\n\n\006OP_DIV\020\016\022\n\n\006OP_MOD\020\017\022\n\n" +
      "\006OP_INC\020\020\022\n\n\006OP_DEC\020\021\022\016\n\nBIT_LSHIFT\020\022\022\016\n",
      "\nBIT_RSHIFT\020\023\022\026\n\022BIT_UNSIGNEDRSHIFT\020\024\022\013\n" +
      "\007BIT_AND\020\025\022\n\n\006BIT_OR\020\026\022\013\n\007BIT_NOT\020\027\022\013\n\007B" +
      "IT_XOR\020\030\022\017\n\013LOGICAL_NOT\020\031\022\017\n\013LOGICAL_AND" +
      "\020\032\022\016\n\nLOGICAL_OR\020\033\022\006\n\002EQ\020\034\022\007\n\003NEQ\020\035\022\006\n\002L" +
      "T\020\036\022\006\n\002GT\020\037\022\010\n\004LTEQ\020 \022\010\n\004GTEQ\020!\022\017\n\013CONDI" +
      "TIONAL\020\"\022\020\n\014NULLCOALESCE\020#\022\n\n\006ASSIGN\020$\022\016" +
      "\n\nASSIGN_ADD\020%\022\016\n\nASSIGN_SUB\020&\022\017\n\013ASSIGN" +
      "_MULT\020\'\022\016\n\nASSIGN_DIV\020(\022\016\n\nASSIGN_MOD\020)\022" +
      "\021\n\rASSIGN_BITXOR\020*\022\021\n\rASSIGN_BITAND\020+\022\020\n" +
      "\014ASSIGN_BITOR\020,\022\021\n\rASSIGN_LSHIFT\020-\022\021\n\rAS",
      "SIGN_RSHIFT\020.\022\031\n\025ASSIGN_UNSIGNEDRSHIFT\020/" +
      "\022\016\n\nANNOTATION\0200\022\t\n\005PAREN\0201\022\024\n\020METHOD_RE" +
      "FERENCE\0202\022\n\n\006LAMBDA\0203\022\017\n\013ANON_METHOD\0204\"\237" +
      "\016\n\010Modifier\022.\n\004kind\030\001 \002(\0162 .boa.types.Mo" +
      "difier.ModifierKind\022\020\n\010string_1\030\002 \001(\t\022\021\n" +
      "\tstrings_1\030\003 \003(\t\022,\n\rexpressions_1\030\004 \003(\0132" +
      "\025.boa.types.Expression\022+\n\014expression_1\030\005" +
      " \001(\0132\025.boa.types.Expression\0225\n\026structura" +
      "l_change_kind\030\006 \001(\0162\025.boa.types.ChangeKi" +
      "nd\0220\n\021label_change_kind\030\007 \001(\0162\025.boa.type",
      "s.ChangeKind\032\244\003\n\016NormalModifier\022>\n\rshado" +
      "w_kind_1\030\001 \001(\0162 .boa.types.Modifier.Modi" +
      "fierKind:\005OTHER\022>\n\rshadow_kind_2\030\002 \001(\0162 " +
      ".boa.types.Modifier.ModifierKind:\005FINAL\022" +
      "?\n\rshadow_kind_3\030\003 \001(\0162 .boa.types.Modif" +
      "ier.ModifierKind:\006STATIC\022E\n\rshadow_kind_" +
      "4\030\004 \001(\0162 .boa.types.Modifier.ModifierKin" +
      "d:\014SYNCHRONIZED\022A\n\rshadow_kind_5\030\005 \001(\0162 " +
      ".boa.types.Modifier.ModifierKind:\010ABSTRA" +
      "CT\0228\n\004kind\030\006 \002(\0162 .boa.types.Modifier.Mo",
      "difierKindB\010\222\265\030\004kind\022\r\n\005other\030\007 \001(\t\032\330\002\n\022" +
      "VisibilityModifier\022?\n\rshadow_kind_1\030\001 \001(" +
      "\0162 .boa.types.Modifier.ModifierKind:\006PUB" +
      "LIC\022@\n\rshadow_kind_2\030\002 \001(\0162 .boa.types.M" +
      "odifier.ModifierKind:\007PRIVATE\022B\n\rshadow_" +
      "kind_3\030\003 \001(\0162 .boa.types.Modifier.Modifi" +
      "erKind:\tPROTECTED\022A\n\rshadow_kind_4\030\004 \001(\016" +
      "2 .boa.types.Modifier.ModifierKind:\010INTE" +
      "RNAL\0228\n\004kind\030\006 \002(\0162 .boa.types.Modifier." +
      "ModifierKindB\010\222\265\030\004kind\032\320\004\n\nAnnotation\022A\n",
      "\013shadow_kind\030\001 \001(\0162 .boa.types.Modifier." +
      "ModifierKind:\nANNOTATION\022\021\n\ttype_name\030\002 " +
      "\002(\t\032{\n\020MarkerAnnotation\022A\n\013shadow_kind\030\001" +
      " \001(\0162 .boa.types.Modifier.ModifierKind:\n" +
      "ANNOTATION\022\021\n\ttype_name\030\002 \002(\t:\021\212\265\030\rismar" +
      "kerannot\032\261\001\n\020NormalAnnotation\022A\n\013shadow_" +
      "kind\030\001 \001(\0162 .boa.types.Modifier.Modifier" +
      "Kind:\nANNOTATION\022\021\n\ttype_name\030\002 \002(\t\022\r\n\005n" +
      "ames\030\003 \003(\t\022%\n\006values\030\004 \003(\0132\025.boa.types.E" +
      "xpression:\021\212\265\030\risnormalannot\032\255\001\n\026SingleM",
      "emberAnnotation\022A\n\013shadow_kind\030\001 \001(\0162 .b" +
      "oa.types.Modifier.ModifierKind:\nANNOTATI" +
      "ON\022\021\n\ttype_name\030\002 \002(\t\022$\n\005value\030\003 \002(\0132\025.b" +
      "oa.types.Expression:\027\212\265\030\023issinglemembera" +
      "nnot:\013\212\265\030\007isannot\"\244\001\n\014ModifierKind\022\t\n\005OT" +
      "HER\020\000\022\016\n\nANNOTATION\020\001\022\t\n\005FINAL\020\002\022\n\n\006STAT" +
      "IC\020\003\022\020\n\014SYNCHRONIZED\020\004\022\010\n\004SYNC\020\004\022\014\n\010ABST" +
      "RACT\020\005\022\n\n\006PUBLIC\020\006\022\013\n\007PRIVATE\020\007\022\r\n\tPROTE" +
      "CTED\020\010\022\014\n\010INTERNAL\020\t\032\002\020\001\"\221\010\n\007Comment\022,\n\004" +
      "kind\030\001 \002(\0162\036.boa.types.Comment.CommentKi",
      "nd\022\020\n\010string_1\030\002 \002(\t\0227\n\016positioninfo_1\030\003" +
      " \002(\0132\037.boa.types.Comment.PositionInfo\0225\n" +
      "\026structural_change_kind\030\004 \001(\0162\025.boa.type" +
      "s.ChangeKind\0220\n\021label_change_kind\030\005 \001(\0162" +
      "\025.boa.types.ChangeKind\032{\n\014PositionInfo\022\021" +
      "\n\tstart_pos\030\001 \002(\005\022\016\n\006length\030\002 \002(\005\022\022\n\nsta" +
      "rt_line\030\003 \002(\005\022\021\n\tstart_col\030\004 \002(\005\022\020\n\010end_" +
      "line\030\005 \002(\005\022\017\n\007end_col\030\006 \002(\005\032\212\001\n\013LineComm" +
      "ent\0229\n\013shadow_kind\030\001 \001(\0162\036.boa.types.Com" +
      "ment.CommentKind:\004LINE\022\r\n\005value\030\002 \002(\t\0221\n",
      "\010position\030\003 \002(\0132\037.boa.types.Comment.Posi" +
      "tionInfo\032\214\001\n\014BlockComment\022:\n\013shadow_kind" +
      "\030\001 \001(\0162\036.boa.types.Comment.CommentKind:\005" +
      "BLOCK\022\r\n\005value\030\002 \002(\t\0221\n\010position\030\003 \002(\0132\037" +
      ".boa.types.Comment.PositionInfo\032\210\001\n\nDocC" +
      "omment\0228\n\013shadow_kind\030\001 \001(\0162\036.boa.types." +
      "Comment.CommentKind:\003DOC\022\r\n\005value\030\002 \002(\t\022" +
      "1\n\010position\030\003 \002(\0132\037.boa.types.Comment.Po" +
      "sitionInfo\032\223\001\n\024SpecificationComment\0229\n\013s" +
      "hadow_kind\030\001 \001(\0162\036.boa.types.Comment.Com",
      "mentKind:\004SPEC\022\r\n\005value\030\002 \002(\t\0221\n\010positio" +
      "n\030\003 \002(\0132\037.boa.types.Comment.PositionInfo" +
      "\"j\n\013CommentKind\022\t\n\005OTHER\020\000\022\010\n\004LINE\020\001\022\t\n\005" +
      "BLOCK\020\002\022\007\n\003DOC\020\003\022\021\n\rDOCUMENTATION\020\003\022\010\n\004S" +
      "PEC\020\004\022\021\n\rSPECIFICATION\020\004\032\002\020\001*\236\001\n\010TypeKin" +
      "d\022\t\n\005OTHER\020\000\022\t\n\005CLASS\020\001\022\r\n\tINTERFACE\020\002\022\r" +
      "\n\tANONYMOUS\020\003\022\010\n\004ANON\020\003\022\n\n\006STRUCT\020\004\022\010\n\004E" +
      "NUM\020\005\022\017\n\013ENUMERATION\020\005\022\016\n\nANNOTATION\020\006\022\014" +
      "\n\010DELEGATE\020\007\022\013\n\007GENERIC\020\010\032\002\020\001B\002H\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_boa_types_CommentsRoot_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_boa_types_CommentsRoot_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_CommentsRoot_descriptor,
              new java.lang.String[] { "Comments", });
          internal_static_boa_types_ASTRoot_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_boa_types_ASTRoot_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_ASTRoot_descriptor,
              new java.lang.String[] { "Namespaces", "Imports", "Names", "StructuralChangeKind", "LabelChangeKind", });
          internal_static_boa_types_Namespace_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_boa_types_Namespace_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Namespace_descriptor,
              new java.lang.String[] { "Name", "Modifiers", "Declarations", "Statements", "Methods", "Expressions", "StructuralChangeKind", "LabelChangeKind", });
          internal_static_boa_types_Declaration_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_boa_types_Declaration_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Declaration_descriptor,
              new java.lang.String[] { "Name", "Kind", "Modifiers", "GenericParameters", "Parents", "Methods", "Fields", "NestedDeclarations", "StructuralChangeKind", "LabelChangeKind", });
          internal_static_boa_types_Type_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_boa_types_Type_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Type_descriptor,
              new java.lang.String[] { "Name", "Kind", "Id", "StructuralChangeKind", "LabelChangeKind", });
          internal_static_boa_types_Method_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_boa_types_Method_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Method_descriptor,
              new java.lang.String[] { "Name", "Modifiers", "ReturnType", "GenericParameters", "Arguments", "ExceptionTypes", "Statements", "StructuralChangeKind", "LabelChangeKind", });
          internal_static_boa_types_Variable_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_boa_types_Variable_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Variable_descriptor,
              new java.lang.String[] { "Name", "VariableType", "Modifiers", "Initializer", "StructuralChangeKind", "LabelChangeKind", });
          internal_static_boa_types_Statement_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_boa_types_Statement_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Statement_descriptor,
              new java.lang.String[] { "Kind", "Statement1", "Statement2", "Statements1", "Statements2", "Expression1", "Expression2", "Expressions1", "Expressions2", "Variable1", "Declaration1", "Bool1", "StructuralChangeKind", "LabelChangeKind", });
          internal_static_boa_types_Statement_AssertStatement_descriptor =
            internal_static_boa_types_Statement_descriptor.getNestedTypes().get(0);
          internal_static_boa_types_Statement_AssertStatement_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Statement_AssertStatement_descriptor,
              new java.lang.String[] { "ShadowKind", "Condition", "Expression", });
          internal_static_boa_types_Statement_Block_descriptor =
            internal_static_boa_types_Statement_descriptor.getNestedTypes().get(1);
          internal_static_boa_types_Statement_Block_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Statement_Block_descriptor,
              new java.lang.String[] { "ShadowKind", "Statements", });
          internal_static_boa_types_Statement_BreakStatement_descriptor =
            internal_static_boa_types_Statement_descriptor.getNestedTypes().get(2);
          internal_static_boa_types_Statement_BreakStatement_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Statement_BreakStatement_descriptor,
              new java.lang.String[] { "ShadowKind", "Label", });
          internal_static_boa_types_Statement_CatchClause_descriptor =
            internal_static_boa_types_Statement_descriptor.getNestedTypes().get(3);
          internal_static_boa_types_Statement_CatchClause_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Statement_CatchClause_descriptor,
              new java.lang.String[] { "ShadowKind", "Exception", "Body", });
          internal_static_boa_types_Statement_ContinueStatement_descriptor =
            internal_static_boa_types_Statement_descriptor.getNestedTypes().get(4);
          internal_static_boa_types_Statement_ContinueStatement_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Statement_ContinueStatement_descriptor,
              new java.lang.String[] { "ShadowKind", "Label", });
          internal_static_boa_types_Statement_DoStatement_descriptor =
            internal_static_boa_types_Statement_descriptor.getNestedTypes().get(5);
          internal_static_boa_types_Statement_DoStatement_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Statement_DoStatement_descriptor,
              new java.lang.String[] { "ShadowKind", "Condition", "Body", });
          internal_static_boa_types_Statement_EmptyStatement_descriptor =
            internal_static_boa_types_Statement_descriptor.getNestedTypes().get(6);
          internal_static_boa_types_Statement_EmptyStatement_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Statement_EmptyStatement_descriptor,
              new java.lang.String[] { "ShadowKind", });
          internal_static_boa_types_Statement_EnhancedForStatement_descriptor =
            internal_static_boa_types_Statement_descriptor.getNestedTypes().get(7);
          internal_static_boa_types_Statement_EnhancedForStatement_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Statement_EnhancedForStatement_descriptor,
              new java.lang.String[] { "ShadowKind", "Expression", "VariableDeclaration", "Body", });
          internal_static_boa_types_Statement_ExpressionStatement_descriptor =
            internal_static_boa_types_Statement_descriptor.getNestedTypes().get(8);
          internal_static_boa_types_Statement_ExpressionStatement_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Statement_ExpressionStatement_descriptor,
              new java.lang.String[] { "ShadowKind", "Expression", });
          internal_static_boa_types_Statement_ForStatement_descriptor =
            internal_static_boa_types_Statement_descriptor.getNestedTypes().get(9);
          internal_static_boa_types_Statement_ForStatement_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Statement_ForStatement_descriptor,
              new java.lang.String[] { "ShadowKind", "Initializations", "Condition", "Updates", "Body", });
          internal_static_boa_types_Statement_IfStatement_descriptor =
            internal_static_boa_types_Statement_descriptor.getNestedTypes().get(10);
          internal_static_boa_types_Statement_IfStatement_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Statement_IfStatement_descriptor,
              new java.lang.String[] { "ShadowKind", "Expression", "ThenStatement", "ElseStatement", });
          internal_static_boa_types_Statement_LabeledStatement_descriptor =
            internal_static_boa_types_Statement_descriptor.getNestedTypes().get(11);
          internal_static_boa_types_Statement_LabeledStatement_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Statement_LabeledStatement_descriptor,
              new java.lang.String[] { "ShadowKind", "Label", "Statement", });
          internal_static_boa_types_Statement_ReturnStatement_descriptor =
            internal_static_boa_types_Statement_descriptor.getNestedTypes().get(12);
          internal_static_boa_types_Statement_ReturnStatement_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Statement_ReturnStatement_descriptor,
              new java.lang.String[] { "ShadowKind", "Expression", });
          internal_static_boa_types_Statement_SwitchCase_descriptor =
            internal_static_boa_types_Statement_descriptor.getNestedTypes().get(13);
          internal_static_boa_types_Statement_SwitchCase_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Statement_SwitchCase_descriptor,
              new java.lang.String[] { "ShadowKind", "Expression", "IsDefault", });
          internal_static_boa_types_Statement_SwitchStatement_descriptor =
            internal_static_boa_types_Statement_descriptor.getNestedTypes().get(14);
          internal_static_boa_types_Statement_SwitchStatement_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Statement_SwitchStatement_descriptor,
              new java.lang.String[] { "ShadowKind", "Expression", "Statements", });
          internal_static_boa_types_Statement_SynchronizedStatement_descriptor =
            internal_static_boa_types_Statement_descriptor.getNestedTypes().get(15);
          internal_static_boa_types_Statement_SynchronizedStatement_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Statement_SynchronizedStatement_descriptor,
              new java.lang.String[] { "ShadowKind", "Expression", "Body", });
          internal_static_boa_types_Statement_ThrowStatement_descriptor =
            internal_static_boa_types_Statement_descriptor.getNestedTypes().get(16);
          internal_static_boa_types_Statement_ThrowStatement_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Statement_ThrowStatement_descriptor,
              new java.lang.String[] { "ShadowKind", "Expression", });
          internal_static_boa_types_Statement_TryStatement_descriptor =
            internal_static_boa_types_Statement_descriptor.getNestedTypes().get(17);
          internal_static_boa_types_Statement_TryStatement_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Statement_TryStatement_descriptor,
              new java.lang.String[] { "ShadowKind", "Body", "Catches", "Finally", "Resources", });
          internal_static_boa_types_Statement_TypeDeclarationStatement_descriptor =
            internal_static_boa_types_Statement_descriptor.getNestedTypes().get(18);
          internal_static_boa_types_Statement_TypeDeclarationStatement_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Statement_TypeDeclarationStatement_descriptor,
              new java.lang.String[] { "ShadowKind", "NewType", });
          internal_static_boa_types_Statement_WhileStatement_descriptor =
            internal_static_boa_types_Statement_descriptor.getNestedTypes().get(19);
          internal_static_boa_types_Statement_WhileStatement_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Statement_WhileStatement_descriptor,
              new java.lang.String[] { "ShadowKind", "Condition", "Body", });
          internal_static_boa_types_Expression_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_boa_types_Expression_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Expression_descriptor,
              new java.lang.String[] { "Kind", "String1", "String2", "Expression1", "Expression2", "Expression3", "Expressions1", "Type1", "Types1", "Declaration1", "Bool1", "Int321", "Variables1", "Statement1", "Modifiers1", "Strings1", "Modifier1", "StructuralChangeKind", "LabelChangeKind", });
          internal_static_boa_types_Expression_AnnotationExpression_descriptor =
            internal_static_boa_types_Expression_descriptor.getNestedTypes().get(0);
          internal_static_boa_types_Expression_AnnotationExpression_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Expression_AnnotationExpression_descriptor,
              new java.lang.String[] { "ShadowKind", "Annotation", });
          internal_static_boa_types_Expression_ArrayAccess_descriptor =
            internal_static_boa_types_Expression_descriptor.getNestedTypes().get(1);
          internal_static_boa_types_Expression_ArrayAccess_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Expression_ArrayAccess_descriptor,
              new java.lang.String[] { "ShadowKind", "Array", "Index", });
          internal_static_boa_types_Expression_ArrayCreation_descriptor =
            internal_static_boa_types_Expression_descriptor.getNestedTypes().get(2);
          internal_static_boa_types_Expression_ArrayCreation_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Expression_ArrayCreation_descriptor,
              new java.lang.String[] { "ShadowKind", "NewType", "Dimensions", "Initializer", });
          internal_static_boa_types_Expression_ArrayInitializer_descriptor =
            internal_static_boa_types_Expression_descriptor.getNestedTypes().get(3);
          internal_static_boa_types_Expression_ArrayInitializer_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Expression_ArrayInitializer_descriptor,
              new java.lang.String[] { "ShadowKind", "Expressions", });
          internal_static_boa_types_Expression_Assignment_descriptor =
            internal_static_boa_types_Expression_descriptor.getNestedTypes().get(4);
          internal_static_boa_types_Expression_Assignment_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Expression_Assignment_descriptor,
              new java.lang.String[] { "ShadowKind1", "ShadowKind2", "ShadowKind3", "ShadowKind4", "ShadowKind5", "ShadowKind6", "ShadowKind7", "ShadowKind8", "ShadowKind9", "ShadowKind10", "ShadowKind11", "ShadowKind12", "LeftHandSide", "RightHandSide", "Operator", });
          internal_static_boa_types_Expression_BooleanLiteral_descriptor =
            internal_static_boa_types_Expression_descriptor.getNestedTypes().get(5);
          internal_static_boa_types_Expression_BooleanLiteral_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Expression_BooleanLiteral_descriptor,
              new java.lang.String[] { "ShadowKind", "BooleanValue", });
          internal_static_boa_types_Expression_CastExpression_descriptor =
            internal_static_boa_types_Expression_descriptor.getNestedTypes().get(6);
          internal_static_boa_types_Expression_CastExpression_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Expression_CastExpression_descriptor,
              new java.lang.String[] { "ShadowKind", "Expression", "NewType", });
          internal_static_boa_types_Expression_CharacterLiteral_descriptor =
            internal_static_boa_types_Expression_descriptor.getNestedTypes().get(7);
          internal_static_boa_types_Expression_CharacterLiteral_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Expression_CharacterLiteral_descriptor,
              new java.lang.String[] { "ShadowKind", "EscapedValue", "CharValue", });
          internal_static_boa_types_Expression_ClassInstanceCreation_descriptor =
            internal_static_boa_types_Expression_descriptor.getNestedTypes().get(8);
          internal_static_boa_types_Expression_ClassInstanceCreation_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Expression_ClassInstanceCreation_descriptor,
              new java.lang.String[] { "ShadowKind", "NewType", "Expression", "Arguments", "TypeArguments", "AnonymousClassDecl", });
          internal_static_boa_types_Expression_ConditionalExpression_descriptor =
            internal_static_boa_types_Expression_descriptor.getNestedTypes().get(9);
          internal_static_boa_types_Expression_ConditionalExpression_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Expression_ConditionalExpression_descriptor,
              new java.lang.String[] { "ShadowKind", "Expression", "ThenExpression", "ElseExpression", });
          internal_static_boa_types_Expression_InfixExpression_descriptor =
            internal_static_boa_types_Expression_descriptor.getNestedTypes().get(10);
          internal_static_boa_types_Expression_InfixExpression_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Expression_InfixExpression_descriptor,
              new java.lang.String[] { "ShadowKind1", "ShadowKind2", "ShadowKind3", "ShadowKind4", "ShadowKind5", "ShadowKind6", "ShadowKind7", "ShadowKind8", "ShadowKind9", "ShadowKind10", "ShadowKind11", "ShadowKind12", "ShadowKind13", "ShadowKind14", "ShadowKind15", "ShadowKind16", "ShadowKind17", "ShadowKind18", "ShadowKind19", "LeftOperand", "RightOperand", "ExtendedOperands", "Operator", });
          internal_static_boa_types_Expression_InstanceofExpression_descriptor =
            internal_static_boa_types_Expression_descriptor.getNestedTypes().get(11);
          internal_static_boa_types_Expression_InstanceofExpression_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Expression_InstanceofExpression_descriptor,
              new java.lang.String[] { "ShadowKind", "LeftOperand", "RightOperand", });
          internal_static_boa_types_Expression_LambdaExpression_descriptor =
            internal_static_boa_types_Expression_descriptor.getNestedTypes().get(12);
          internal_static_boa_types_Expression_LambdaExpression_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Expression_LambdaExpression_descriptor,
              new java.lang.String[] { "ShadowKind", "HasParentheses", "Parameters", "Body", });
          internal_static_boa_types_Expression_MethodInvocation_descriptor =
            internal_static_boa_types_Expression_descriptor.getNestedTypes().get(13);
          internal_static_boa_types_Expression_MethodInvocation_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Expression_MethodInvocation_descriptor,
              new java.lang.String[] { "ShadowKind", "Expression", "TypeArguments", "Name", "Arguments", });
          internal_static_boa_types_Expression_MethodReference_descriptor =
            internal_static_boa_types_Expression_descriptor.getNestedTypes().get(14);
          internal_static_boa_types_Expression_MethodReference_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Expression_MethodReference_descriptor,
              new java.lang.String[] { "ShadowKind", "TypeArguments", });
          internal_static_boa_types_Expression_MethodReference_CreationReference_descriptor =
            internal_static_boa_types_Expression_MethodReference_descriptor.getNestedTypes().get(0);
          internal_static_boa_types_Expression_MethodReference_CreationReference_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Expression_MethodReference_CreationReference_descriptor,
              new java.lang.String[] { "ShadowKind", "TypeArguments", "NewType", });
          internal_static_boa_types_Expression_MethodReference_ExpressionMethodReference_descriptor =
            internal_static_boa_types_Expression_MethodReference_descriptor.getNestedTypes().get(1);
          internal_static_boa_types_Expression_MethodReference_ExpressionMethodReference_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Expression_MethodReference_ExpressionMethodReference_descriptor,
              new java.lang.String[] { "ShadowKind", "TypeArguments", "Expression", "Name", });
          internal_static_boa_types_Expression_MethodReference_SuperMethodReference_descriptor =
            internal_static_boa_types_Expression_MethodReference_descriptor.getNestedTypes().get(2);
          internal_static_boa_types_Expression_MethodReference_SuperMethodReference_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Expression_MethodReference_SuperMethodReference_descriptor,
              new java.lang.String[] { "ShadowKind", "TypeArguments", "Qualifier", "Name", });
          internal_static_boa_types_Expression_MethodReference_TypeMethodReference_descriptor =
            internal_static_boa_types_Expression_MethodReference_descriptor.getNestedTypes().get(3);
          internal_static_boa_types_Expression_MethodReference_TypeMethodReference_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Expression_MethodReference_TypeMethodReference_descriptor,
              new java.lang.String[] { "ShadowKind", "TypeArguments", "NewType", "Name", });
          internal_static_boa_types_Expression_NullCoalesceExpression_descriptor =
            internal_static_boa_types_Expression_descriptor.getNestedTypes().get(15);
          internal_static_boa_types_Expression_NullCoalesceExpression_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Expression_NullCoalesceExpression_descriptor,
              new java.lang.String[] { "ShadowKind", "Lhs", "Rhs", });
          internal_static_boa_types_Expression_NullLiteral_descriptor =
            internal_static_boa_types_Expression_descriptor.getNestedTypes().get(16);
          internal_static_boa_types_Expression_NullLiteral_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Expression_NullLiteral_descriptor,
              new java.lang.String[] { "ShadowKind", });
          internal_static_boa_types_Expression_NumberLiteral_descriptor =
            internal_static_boa_types_Expression_descriptor.getNestedTypes().get(17);
          internal_static_boa_types_Expression_NumberLiteral_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Expression_NumberLiteral_descriptor,
              new java.lang.String[] { "ShadowKind", "Token", });
          internal_static_boa_types_Expression_ParenthesizedExpression_descriptor =
            internal_static_boa_types_Expression_descriptor.getNestedTypes().get(18);
          internal_static_boa_types_Expression_ParenthesizedExpression_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Expression_ParenthesizedExpression_descriptor,
              new java.lang.String[] { "ShadowKind", "Expression", });
          internal_static_boa_types_Expression_PostfixExpression_descriptor =
            internal_static_boa_types_Expression_descriptor.getNestedTypes().get(19);
          internal_static_boa_types_Expression_PostfixExpression_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Expression_PostfixExpression_descriptor,
              new java.lang.String[] { "ShadowKind1", "ShadowKind2", "Operand", "Operator", });
          internal_static_boa_types_Expression_PrefixExpression_descriptor =
            internal_static_boa_types_Expression_descriptor.getNestedTypes().get(20);
          internal_static_boa_types_Expression_PrefixExpression_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Expression_PrefixExpression_descriptor,
              new java.lang.String[] { "ShadowKind1", "ShadowKind2", "ShadowKind3", "ShadowKind4", "ShadowKind5", "ShadowKind6", "Operand", "Operator", });
          internal_static_boa_types_Expression_StringLiteral_descriptor =
            internal_static_boa_types_Expression_descriptor.getNestedTypes().get(21);
          internal_static_boa_types_Expression_StringLiteral_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Expression_StringLiteral_descriptor,
              new java.lang.String[] { "ShadowKind", "EscapedValue", "LiteralValue", });
          internal_static_boa_types_Expression_SuperMethodInvocation_descriptor =
            internal_static_boa_types_Expression_descriptor.getNestedTypes().get(22);
          internal_static_boa_types_Expression_SuperMethodInvocation_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Expression_SuperMethodInvocation_descriptor,
              new java.lang.String[] { "ShadowKind", "Qualifier", "TypeArguments", "Name", "Arguments", });
          internal_static_boa_types_Expression_ThisExpression_descriptor =
            internal_static_boa_types_Expression_descriptor.getNestedTypes().get(23);
          internal_static_boa_types_Expression_ThisExpression_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Expression_ThisExpression_descriptor,
              new java.lang.String[] { "ShadowKind", "Qualifier", });
          internal_static_boa_types_Expression_TypeLiteral_descriptor =
            internal_static_boa_types_Expression_descriptor.getNestedTypes().get(24);
          internal_static_boa_types_Expression_TypeLiteral_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Expression_TypeLiteral_descriptor,
              new java.lang.String[] { "ShadowKind", "TypeLit", });
          internal_static_boa_types_Expression_VariableDeclarationExpression_descriptor =
            internal_static_boa_types_Expression_descriptor.getNestedTypes().get(25);
          internal_static_boa_types_Expression_VariableDeclarationExpression_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Expression_VariableDeclarationExpression_descriptor,
              new java.lang.String[] { "ShadowKind", "Modifiers", "NewType", "Fragments", });
          internal_static_boa_types_Expression_VarAccessExpression_descriptor =
            internal_static_boa_types_Expression_descriptor.getNestedTypes().get(26);
          internal_static_boa_types_Expression_VarAccessExpression_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Expression_VarAccessExpression_descriptor,
              new java.lang.String[] { "ShadowKind", "Identifier", "Qualifier", });
          internal_static_boa_types_Modifier_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_boa_types_Modifier_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Modifier_descriptor,
              new java.lang.String[] { "Kind", "String1", "Strings1", "Expressions1", "Expression1", "StructuralChangeKind", "LabelChangeKind", });
          internal_static_boa_types_Modifier_NormalModifier_descriptor =
            internal_static_boa_types_Modifier_descriptor.getNestedTypes().get(0);
          internal_static_boa_types_Modifier_NormalModifier_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Modifier_NormalModifier_descriptor,
              new java.lang.String[] { "ShadowKind1", "ShadowKind2", "ShadowKind3", "ShadowKind4", "ShadowKind5", "Kind", "Other", });
          internal_static_boa_types_Modifier_VisibilityModifier_descriptor =
            internal_static_boa_types_Modifier_descriptor.getNestedTypes().get(1);
          internal_static_boa_types_Modifier_VisibilityModifier_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Modifier_VisibilityModifier_descriptor,
              new java.lang.String[] { "ShadowKind1", "ShadowKind2", "ShadowKind3", "ShadowKind4", "Kind", });
          internal_static_boa_types_Modifier_Annotation_descriptor =
            internal_static_boa_types_Modifier_descriptor.getNestedTypes().get(2);
          internal_static_boa_types_Modifier_Annotation_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Modifier_Annotation_descriptor,
              new java.lang.String[] { "ShadowKind", "TypeName", });
          internal_static_boa_types_Modifier_Annotation_MarkerAnnotation_descriptor =
            internal_static_boa_types_Modifier_Annotation_descriptor.getNestedTypes().get(0);
          internal_static_boa_types_Modifier_Annotation_MarkerAnnotation_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Modifier_Annotation_MarkerAnnotation_descriptor,
              new java.lang.String[] { "ShadowKind", "TypeName", });
          internal_static_boa_types_Modifier_Annotation_NormalAnnotation_descriptor =
            internal_static_boa_types_Modifier_Annotation_descriptor.getNestedTypes().get(1);
          internal_static_boa_types_Modifier_Annotation_NormalAnnotation_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Modifier_Annotation_NormalAnnotation_descriptor,
              new java.lang.String[] { "ShadowKind", "TypeName", "Names", "Values", });
          internal_static_boa_types_Modifier_Annotation_SingleMemberAnnotation_descriptor =
            internal_static_boa_types_Modifier_Annotation_descriptor.getNestedTypes().get(2);
          internal_static_boa_types_Modifier_Annotation_SingleMemberAnnotation_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Modifier_Annotation_SingleMemberAnnotation_descriptor,
              new java.lang.String[] { "ShadowKind", "TypeName", "Value", });
          internal_static_boa_types_Comment_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_boa_types_Comment_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Comment_descriptor,
              new java.lang.String[] { "Kind", "String1", "Positioninfo1", "StructuralChangeKind", "LabelChangeKind", });
          internal_static_boa_types_Comment_PositionInfo_descriptor =
            internal_static_boa_types_Comment_descriptor.getNestedTypes().get(0);
          internal_static_boa_types_Comment_PositionInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Comment_PositionInfo_descriptor,
              new java.lang.String[] { "StartPos", "Length", "StartLine", "StartCol", "EndLine", "EndCol", });
          internal_static_boa_types_Comment_LineComment_descriptor =
            internal_static_boa_types_Comment_descriptor.getNestedTypes().get(1);
          internal_static_boa_types_Comment_LineComment_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Comment_LineComment_descriptor,
              new java.lang.String[] { "ShadowKind", "Value", "Position", });
          internal_static_boa_types_Comment_BlockComment_descriptor =
            internal_static_boa_types_Comment_descriptor.getNestedTypes().get(2);
          internal_static_boa_types_Comment_BlockComment_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Comment_BlockComment_descriptor,
              new java.lang.String[] { "ShadowKind", "Value", "Position", });
          internal_static_boa_types_Comment_DocComment_descriptor =
            internal_static_boa_types_Comment_descriptor.getNestedTypes().get(3);
          internal_static_boa_types_Comment_DocComment_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Comment_DocComment_descriptor,
              new java.lang.String[] { "ShadowKind", "Value", "Position", });
          internal_static_boa_types_Comment_SpecificationComment_descriptor =
            internal_static_boa_types_Comment_descriptor.getNestedTypes().get(4);
          internal_static_boa_types_Comment_SpecificationComment_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_Comment_SpecificationComment_descriptor,
              new java.lang.String[] { "ShadowKind", "Value", "Position", });
          com.google.protobuf.ExtensionRegistry registry =
            com.google.protobuf.ExtensionRegistry.newInstance();
          registry.add(boa.types.Hidden.hidden);
          registry.add(boa.types.Hidden.kindFunc);
          registry.add(boa.types.Hidden.kindFunc);
          registry.add(boa.types.Hidden.alias);
          registry.add(boa.types.Hidden.kindFunc);
          registry.add(boa.types.Hidden.kindFunc);
          registry.add(boa.types.Hidden.alias);
          registry.add(boa.types.Hidden.kindFunc);
          registry.add(boa.types.Hidden.kindFunc);
          registry.add(boa.types.Hidden.kindFunc);
          registry.add(boa.types.Hidden.kindFunc);
          registry.add(boa.types.Hidden.kindFunc);
          registry.add(boa.types.Hidden.kindFunc);
          registry.add(boa.types.Hidden.kindFunc);
          registry.add(boa.types.Hidden.kindFunc);
          registry.add(boa.types.Hidden.kindFunc);
          registry.add(boa.types.Hidden.alias);
          registry.add(boa.types.Hidden.kindFunc);
          registry.add(boa.types.Hidden.alias);
          registry.add(boa.types.Hidden.kindFunc);
          registry.add(boa.types.Hidden.kindFunc);
          registry.add(boa.types.Hidden.kindFunc);
          registry.add(boa.types.Hidden.kindFunc);
          registry.add(boa.types.Hidden.kindFunc);
          registry.add(boa.types.Hidden.alias);
          registry.add(boa.types.Hidden.alias);
          registry.add(boa.types.Hidden.kindFunc);
          registry.add(boa.types.Hidden.kindFunc);
          registry.add(boa.types.Hidden.kindFunc);
          registry.add(boa.types.Hidden.kindFunc);
          return registry;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          boa.types.Shared.getDescriptor(),
          boa.types.Hidden.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
