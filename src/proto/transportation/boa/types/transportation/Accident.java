// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: accident.proto

package boa.types.transportation;

public final class Accident {
  private Accident() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface CrashOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .boa.types.transportation.STATE state = 1;
    /**
     * <code>required .boa.types.transportation.STATE state = 1;</code>
     */
    boolean hasState();
    /**
     * <code>required .boa.types.transportation.STATE state = 1;</code>
     */
    boa.types.transportation.State.STATE getState();

    // required int32 ST_CASE = 2;
    /**
     * <code>required int32 ST_CASE = 2;</code>
     */
    boolean hasSTCASE();
    /**
     * <code>required int32 ST_CASE = 2;</code>
     */
    int getSTCASE();

    // required int32 VE_TOTAL = 3;
    /**
     * <code>required int32 VE_TOTAL = 3;</code>
     */
    boolean hasVETOTAL();
    /**
     * <code>required int32 VE_TOTAL = 3;</code>
     */
    int getVETOTAL();

    // required int32 VE_FORMS = 4;
    /**
     * <code>required int32 VE_FORMS = 4;</code>
     */
    boolean hasVEFORMS();
    /**
     * <code>required int32 VE_FORMS = 4;</code>
     */
    int getVEFORMS();

    // required int32 PVH_INVL = 5;
    /**
     * <code>required int32 PVH_INVL = 5;</code>
     */
    boolean hasPVHINVL();
    /**
     * <code>required int32 PVH_INVL = 5;</code>
     */
    int getPVHINVL();

    // required int32 PEDS = 6;
    /**
     * <code>required int32 PEDS = 6;</code>
     */
    boolean hasPEDS();
    /**
     * <code>required int32 PEDS = 6;</code>
     */
    int getPEDS();

    // required int32 PERNOTMVIT = 7;
    /**
     * <code>required int32 PERNOTMVIT = 7;</code>
     */
    boolean hasPERNOTMVIT();
    /**
     * <code>required int32 PERNOTMVIT = 7;</code>
     */
    int getPERNOTMVIT();

    // required int32 PERMVIT = 8;
    /**
     * <code>required int32 PERMVIT = 8;</code>
     */
    boolean hasPERMVIT();
    /**
     * <code>required int32 PERMVIT = 8;</code>
     */
    int getPERMVIT();

    // required int32 person_count = 9;
    /**
     * <code>required int32 person_count = 9;</code>
     */
    boolean hasPersonCount();
    /**
     * <code>required int32 person_count = 9;</code>
     */
    int getPersonCount();

    // required int32 COUNTY = 10;
    /**
     * <code>required int32 COUNTY = 10;</code>
     */
    boolean hasCOUNTY();
    /**
     * <code>required int32 COUNTY = 10;</code>
     */
    int getCOUNTY();

    // required int32 CITY = 11;
    /**
     * <code>required int32 CITY = 11;</code>
     */
    boolean hasCITY();
    /**
     * <code>required int32 CITY = 11;</code>
     */
    int getCITY();

    // required int32 DAY = 12;
    /**
     * <code>required int32 DAY = 12;</code>
     */
    boolean hasDAY();
    /**
     * <code>required int32 DAY = 12;</code>
     */
    int getDAY();

    // required int32 MONTH = 13;
    /**
     * <code>required int32 MONTH = 13;</code>
     */
    boolean hasMONTH();
    /**
     * <code>required int32 MONTH = 13;</code>
     */
    int getMONTH();

    // required int32 YEAR = 14;
    /**
     * <code>required int32 YEAR = 14;</code>
     */
    boolean hasYEAR();
    /**
     * <code>required int32 YEAR = 14;</code>
     */
    int getYEAR();

    // required int32 DAY_WEEK = 15;
    /**
     * <code>required int32 DAY_WEEK = 15;</code>
     */
    boolean hasDAYWEEK();
    /**
     * <code>required int32 DAY_WEEK = 15;</code>
     */
    int getDAYWEEK();

    // required int32 HOUR = 16;
    /**
     * <code>required int32 HOUR = 16;</code>
     */
    boolean hasHOUR();
    /**
     * <code>required int32 HOUR = 16;</code>
     */
    int getHOUR();

    // required int32 MINUTE = 17;
    /**
     * <code>required int32 MINUTE = 17;</code>
     */
    boolean hasMINUTE();
    /**
     * <code>required int32 MINUTE = 17;</code>
     */
    int getMINUTE();

    // required int32 NHS = 18;
    /**
     * <code>required int32 NHS = 18;</code>
     */
    boolean hasNHS();
    /**
     * <code>required int32 NHS = 18;</code>
     */
    int getNHS();

    // required int32 RUR_URB = 19;
    /**
     * <code>required int32 RUR_URB = 19;</code>
     */
    boolean hasRURURB();
    /**
     * <code>required int32 RUR_URB = 19;</code>
     */
    int getRURURB();

    // required int32 FUNC_SYS = 20;
    /**
     * <code>required int32 FUNC_SYS = 20;</code>
     */
    boolean hasFUNCSYS();
    /**
     * <code>required int32 FUNC_SYS = 20;</code>
     */
    int getFUNCSYS();

    // required int32 RD_OWNER = 21;
    /**
     * <code>required int32 RD_OWNER = 21;</code>
     */
    boolean hasRDOWNER();
    /**
     * <code>required int32 RD_OWNER = 21;</code>
     */
    int getRDOWNER();

    // required int32 ROUTE = 22;
    /**
     * <code>required int32 ROUTE = 22;</code>
     */
    boolean hasROUTE();
    /**
     * <code>required int32 ROUTE = 22;</code>
     */
    int getROUTE();

    // required string TWAY_ID = 23;
    /**
     * <code>required string TWAY_ID = 23;</code>
     */
    boolean hasTWAYID();
    /**
     * <code>required string TWAY_ID = 23;</code>
     */
    java.lang.String getTWAYID();
    /**
     * <code>required string TWAY_ID = 23;</code>
     */
    com.google.protobuf.ByteString
        getTWAYIDBytes();

    // optional string TWAY_ID2 = 24;
    /**
     * <code>optional string TWAY_ID2 = 24;</code>
     */
    boolean hasTWAYID2();
    /**
     * <code>optional string TWAY_ID2 = 24;</code>
     */
    java.lang.String getTWAYID2();
    /**
     * <code>optional string TWAY_ID2 = 24;</code>
     */
    com.google.protobuf.ByteString
        getTWAYID2Bytes();

    // required int32 MILEPT = 25;
    /**
     * <code>required int32 MILEPT = 25;</code>
     */
    boolean hasMILEPT();
    /**
     * <code>required int32 MILEPT = 25;</code>
     */
    int getMILEPT();

    // optional float LATITUDE = 26;
    /**
     * <code>optional float LATITUDE = 26;</code>
     */
    boolean hasLATITUDE();
    /**
     * <code>optional float LATITUDE = 26;</code>
     */
    float getLATITUDE();

    // optional float LONGITUD = 27;
    /**
     * <code>optional float LONGITUD = 27;</code>
     */
    boolean hasLONGITUD();
    /**
     * <code>optional float LONGITUD = 27;</code>
     */
    float getLONGITUD();

    // required int32 SP_JUR = 28;
    /**
     * <code>required int32 SP_JUR = 28;</code>
     */
    boolean hasSPJUR();
    /**
     * <code>required int32 SP_JUR = 28;</code>
     */
    int getSPJUR();

    // required int32 HARM_EV = 29;
    /**
     * <code>required int32 HARM_EV = 29;</code>
     */
    boolean hasHARMEV();
    /**
     * <code>required int32 HARM_EV = 29;</code>
     */
    int getHARMEV();

    // required int32 MAN_COLL = 30;
    /**
     * <code>required int32 MAN_COLL = 30;</code>
     */
    boolean hasMANCOLL();
    /**
     * <code>required int32 MAN_COLL = 30;</code>
     */
    int getMANCOLL();

    // required int32 RELJCT1 = 31;
    /**
     * <code>required int32 RELJCT1 = 31;</code>
     */
    boolean hasRELJCT1();
    /**
     * <code>required int32 RELJCT1 = 31;</code>
     */
    int getRELJCT1();

    // required int32 RELJCT2 = 32;
    /**
     * <code>required int32 RELJCT2 = 32;</code>
     */
    boolean hasRELJCT2();
    /**
     * <code>required int32 RELJCT2 = 32;</code>
     */
    int getRELJCT2();

    // required int32 TYP_INT = 33;
    /**
     * <code>required int32 TYP_INT = 33;</code>
     */
    boolean hasTYPINT();
    /**
     * <code>required int32 TYP_INT = 33;</code>
     */
    int getTYPINT();

    // required int32 WRK_ZONE = 34;
    /**
     * <code>required int32 WRK_ZONE = 34;</code>
     */
    boolean hasWRKZONE();
    /**
     * <code>required int32 WRK_ZONE = 34;</code>
     */
    int getWRKZONE();

    // required int32 REL_ROAD = 35;
    /**
     * <code>required int32 REL_ROAD = 35;</code>
     */
    boolean hasRELROAD();
    /**
     * <code>required int32 REL_ROAD = 35;</code>
     */
    int getRELROAD();

    // required int32 LGT_COND = 36;
    /**
     * <code>required int32 LGT_COND = 36;</code>
     */
    boolean hasLGTCOND();
    /**
     * <code>required int32 LGT_COND = 36;</code>
     */
    int getLGTCOND();

    // required int32 WEATHER1 = 37;
    /**
     * <code>required int32 WEATHER1 = 37;</code>
     */
    boolean hasWEATHER1();
    /**
     * <code>required int32 WEATHER1 = 37;</code>
     */
    int getWEATHER1();

    // required int32 WEATHER2 = 38;
    /**
     * <code>required int32 WEATHER2 = 38;</code>
     */
    boolean hasWEATHER2();
    /**
     * <code>required int32 WEATHER2 = 38;</code>
     */
    int getWEATHER2();

    // required int32 WEATHER = 39;
    /**
     * <code>required int32 WEATHER = 39;</code>
     */
    boolean hasWEATHER();
    /**
     * <code>required int32 WEATHER = 39;</code>
     */
    int getWEATHER();

    // required int32 SCH_BUS = 40;
    /**
     * <code>required int32 SCH_BUS = 40;</code>
     */
    boolean hasSCHBUS();
    /**
     * <code>required int32 SCH_BUS = 40;</code>
     */
    int getSCHBUS();

    // required string RAIL = 41;
    /**
     * <code>required string RAIL = 41;</code>
     */
    boolean hasRAIL();
    /**
     * <code>required string RAIL = 41;</code>
     */
    java.lang.String getRAIL();
    /**
     * <code>required string RAIL = 41;</code>
     */
    com.google.protobuf.ByteString
        getRAILBytes();

    // required int32 NOT_HOUR = 42;
    /**
     * <code>required int32 NOT_HOUR = 42;</code>
     */
    boolean hasNOTHOUR();
    /**
     * <code>required int32 NOT_HOUR = 42;</code>
     */
    int getNOTHOUR();

    // required int32 NOT_MIN = 43;
    /**
     * <code>required int32 NOT_MIN = 43;</code>
     */
    boolean hasNOTMIN();
    /**
     * <code>required int32 NOT_MIN = 43;</code>
     */
    int getNOTMIN();

    // required int32 ARR_HOUR = 44;
    /**
     * <code>required int32 ARR_HOUR = 44;</code>
     */
    boolean hasARRHOUR();
    /**
     * <code>required int32 ARR_HOUR = 44;</code>
     */
    int getARRHOUR();

    // required int32 ARR_MIN = 45;
    /**
     * <code>required int32 ARR_MIN = 45;</code>
     */
    boolean hasARRMIN();
    /**
     * <code>required int32 ARR_MIN = 45;</code>
     */
    int getARRMIN();

    // required int32 HOSP_HR = 46;
    /**
     * <code>required int32 HOSP_HR = 46;</code>
     */
    boolean hasHOSPHR();
    /**
     * <code>required int32 HOSP_HR = 46;</code>
     */
    int getHOSPHR();

    // required int32 HOSP_MN = 47;
    /**
     * <code>required int32 HOSP_MN = 47;</code>
     */
    boolean hasHOSPMN();
    /**
     * <code>required int32 HOSP_MN = 47;</code>
     */
    int getHOSPMN();

    // required int32 CF1 = 48;
    /**
     * <code>required int32 CF1 = 48;</code>
     */
    boolean hasCF1();
    /**
     * <code>required int32 CF1 = 48;</code>
     */
    int getCF1();

    // required int32 CF2 = 49;
    /**
     * <code>required int32 CF2 = 49;</code>
     */
    boolean hasCF2();
    /**
     * <code>required int32 CF2 = 49;</code>
     */
    int getCF2();

    // required int32 CF3 = 50;
    /**
     * <code>required int32 CF3 = 50;</code>
     */
    boolean hasCF3();
    /**
     * <code>required int32 CF3 = 50;</code>
     */
    int getCF3();

    // required int32 FATALS = 51;
    /**
     * <code>required int32 FATALS = 51;</code>
     */
    boolean hasFATALS();
    /**
     * <code>required int32 FATALS = 51;</code>
     */
    int getFATALS();

    // required int32 DRUNK_DR = 52;
    /**
     * <code>required int32 DRUNK_DR = 52;</code>
     */
    boolean hasDRUNKDR();
    /**
     * <code>required int32 DRUNK_DR = 52;</code>
     */
    int getDRUNKDR();

    // repeated .boa.types.transportation.Person persons = 53;
    /**
     * <code>repeated .boa.types.transportation.Person persons = 53;</code>
     */
    java.util.List<boa.types.transportation.Individual.Person> 
        getPersonsList();
    /**
     * <code>repeated .boa.types.transportation.Person persons = 53;</code>
     */
    boa.types.transportation.Individual.Person getPersons(int index);
    /**
     * <code>repeated .boa.types.transportation.Person persons = 53;</code>
     */
    int getPersonsCount();
    /**
     * <code>repeated .boa.types.transportation.Person persons = 53;</code>
     */
    java.util.List<? extends boa.types.transportation.Individual.PersonOrBuilder> 
        getPersonsOrBuilderList();
    /**
     * <code>repeated .boa.types.transportation.Person persons = 53;</code>
     */
    boa.types.transportation.Individual.PersonOrBuilder getPersonsOrBuilder(
        int index);

    // repeated .boa.types.transportation.Vehicle vehicle = 54;
    /**
     * <code>repeated .boa.types.transportation.Vehicle vehicle = 54;</code>
     */
    java.util.List<boa.types.transportation.Motor.Vehicle> 
        getVehicleList();
    /**
     * <code>repeated .boa.types.transportation.Vehicle vehicle = 54;</code>
     */
    boa.types.transportation.Motor.Vehicle getVehicle(int index);
    /**
     * <code>repeated .boa.types.transportation.Vehicle vehicle = 54;</code>
     */
    int getVehicleCount();
    /**
     * <code>repeated .boa.types.transportation.Vehicle vehicle = 54;</code>
     */
    java.util.List<? extends boa.types.transportation.Motor.VehicleOrBuilder> 
        getVehicleOrBuilderList();
    /**
     * <code>repeated .boa.types.transportation.Vehicle vehicle = 54;</code>
     */
    boa.types.transportation.Motor.VehicleOrBuilder getVehicleOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code boa.types.transportation.Crash}
   */
  public static final class Crash extends
      com.google.protobuf.GeneratedMessage
      implements CrashOrBuilder {
    // Use Crash.newBuilder() to construct.
    private Crash(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Crash(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Crash defaultInstance;
    public static Crash getDefaultInstance() {
      return defaultInstance;
    }

    public Crash getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Crash(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              boa.types.transportation.State.STATE value = boa.types.transportation.State.STATE.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                state_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              sTCASE_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              vETOTAL_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              vEFORMS_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              pVHINVL_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              pEDS_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              pERNOTMVIT_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              pERMVIT_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              personCount_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              cOUNTY_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              cITY_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              dAY_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              mONTH_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              yEAR_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              dAYWEEK_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              hOUR_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              mINUTE_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              nHS_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              rURURB_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00080000;
              fUNCSYS_ = input.readInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00100000;
              rDOWNER_ = input.readInt32();
              break;
            }
            case 176: {
              bitField0_ |= 0x00200000;
              rOUTE_ = input.readInt32();
              break;
            }
            case 186: {
              bitField0_ |= 0x00400000;
              tWAYID_ = input.readBytes();
              break;
            }
            case 194: {
              bitField0_ |= 0x00800000;
              tWAYID2_ = input.readBytes();
              break;
            }
            case 200: {
              bitField0_ |= 0x01000000;
              mILEPT_ = input.readInt32();
              break;
            }
            case 213: {
              bitField0_ |= 0x02000000;
              lATITUDE_ = input.readFloat();
              break;
            }
            case 221: {
              bitField0_ |= 0x04000000;
              lONGITUD_ = input.readFloat();
              break;
            }
            case 224: {
              bitField0_ |= 0x08000000;
              sPJUR_ = input.readInt32();
              break;
            }
            case 232: {
              bitField0_ |= 0x10000000;
              hARMEV_ = input.readInt32();
              break;
            }
            case 240: {
              bitField0_ |= 0x20000000;
              mANCOLL_ = input.readInt32();
              break;
            }
            case 248: {
              bitField0_ |= 0x40000000;
              rELJCT1_ = input.readInt32();
              break;
            }
            case 256: {
              bitField0_ |= 0x80000000;
              rELJCT2_ = input.readInt32();
              break;
            }
            case 264: {
              bitField1_ |= 0x00000001;
              tYPINT_ = input.readInt32();
              break;
            }
            case 272: {
              bitField1_ |= 0x00000002;
              wRKZONE_ = input.readInt32();
              break;
            }
            case 280: {
              bitField1_ |= 0x00000004;
              rELROAD_ = input.readInt32();
              break;
            }
            case 288: {
              bitField1_ |= 0x00000008;
              lGTCOND_ = input.readInt32();
              break;
            }
            case 296: {
              bitField1_ |= 0x00000010;
              wEATHER1_ = input.readInt32();
              break;
            }
            case 304: {
              bitField1_ |= 0x00000020;
              wEATHER2_ = input.readInt32();
              break;
            }
            case 312: {
              bitField1_ |= 0x00000040;
              wEATHER_ = input.readInt32();
              break;
            }
            case 320: {
              bitField1_ |= 0x00000080;
              sCHBUS_ = input.readInt32();
              break;
            }
            case 330: {
              bitField1_ |= 0x00000100;
              rAIL_ = input.readBytes();
              break;
            }
            case 336: {
              bitField1_ |= 0x00000200;
              nOTHOUR_ = input.readInt32();
              break;
            }
            case 344: {
              bitField1_ |= 0x00000400;
              nOTMIN_ = input.readInt32();
              break;
            }
            case 352: {
              bitField1_ |= 0x00000800;
              aRRHOUR_ = input.readInt32();
              break;
            }
            case 360: {
              bitField1_ |= 0x00001000;
              aRRMIN_ = input.readInt32();
              break;
            }
            case 368: {
              bitField1_ |= 0x00002000;
              hOSPHR_ = input.readInt32();
              break;
            }
            case 376: {
              bitField1_ |= 0x00004000;
              hOSPMN_ = input.readInt32();
              break;
            }
            case 384: {
              bitField1_ |= 0x00008000;
              cF1_ = input.readInt32();
              break;
            }
            case 392: {
              bitField1_ |= 0x00010000;
              cF2_ = input.readInt32();
              break;
            }
            case 400: {
              bitField1_ |= 0x00020000;
              cF3_ = input.readInt32();
              break;
            }
            case 408: {
              bitField1_ |= 0x00040000;
              fATALS_ = input.readInt32();
              break;
            }
            case 416: {
              bitField1_ |= 0x00080000;
              dRUNKDR_ = input.readInt32();
              break;
            }
            case 426: {
              if (!((mutable_bitField1_ & 0x00100000) == 0x00100000)) {
                persons_ = new java.util.ArrayList<boa.types.transportation.Individual.Person>();
                mutable_bitField1_ |= 0x00100000;
              }
              persons_.add(input.readMessage(boa.types.transportation.Individual.Person.PARSER, extensionRegistry));
              break;
            }
            case 434: {
              if (!((mutable_bitField1_ & 0x00200000) == 0x00200000)) {
                vehicle_ = new java.util.ArrayList<boa.types.transportation.Motor.Vehicle>();
                mutable_bitField1_ |= 0x00200000;
              }
              vehicle_.add(input.readMessage(boa.types.transportation.Motor.Vehicle.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField1_ & 0x00100000) == 0x00100000)) {
          persons_ = java.util.Collections.unmodifiableList(persons_);
        }
        if (((mutable_bitField1_ & 0x00200000) == 0x00200000)) {
          vehicle_ = java.util.Collections.unmodifiableList(vehicle_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return boa.types.transportation.Accident.internal_static_boa_types_transportation_Crash_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return boa.types.transportation.Accident.internal_static_boa_types_transportation_Crash_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              boa.types.transportation.Accident.Crash.class, boa.types.transportation.Accident.Crash.Builder.class);
    }

    public static com.google.protobuf.Parser<Crash> PARSER =
        new com.google.protobuf.AbstractParser<Crash>() {
      public Crash parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Crash(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Crash> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    private int bitField1_;
    // required .boa.types.transportation.STATE state = 1;
    public static final int STATE_FIELD_NUMBER = 1;
    private boa.types.transportation.State.STATE state_;
    /**
     * <code>required .boa.types.transportation.STATE state = 1;</code>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .boa.types.transportation.STATE state = 1;</code>
     */
    public boa.types.transportation.State.STATE getState() {
      return state_;
    }

    // required int32 ST_CASE = 2;
    public static final int ST_CASE_FIELD_NUMBER = 2;
    private int sTCASE_;
    /**
     * <code>required int32 ST_CASE = 2;</code>
     */
    public boolean hasSTCASE() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 ST_CASE = 2;</code>
     */
    public int getSTCASE() {
      return sTCASE_;
    }

    // required int32 VE_TOTAL = 3;
    public static final int VE_TOTAL_FIELD_NUMBER = 3;
    private int vETOTAL_;
    /**
     * <code>required int32 VE_TOTAL = 3;</code>
     */
    public boolean hasVETOTAL() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 VE_TOTAL = 3;</code>
     */
    public int getVETOTAL() {
      return vETOTAL_;
    }

    // required int32 VE_FORMS = 4;
    public static final int VE_FORMS_FIELD_NUMBER = 4;
    private int vEFORMS_;
    /**
     * <code>required int32 VE_FORMS = 4;</code>
     */
    public boolean hasVEFORMS() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 VE_FORMS = 4;</code>
     */
    public int getVEFORMS() {
      return vEFORMS_;
    }

    // required int32 PVH_INVL = 5;
    public static final int PVH_INVL_FIELD_NUMBER = 5;
    private int pVHINVL_;
    /**
     * <code>required int32 PVH_INVL = 5;</code>
     */
    public boolean hasPVHINVL() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 PVH_INVL = 5;</code>
     */
    public int getPVHINVL() {
      return pVHINVL_;
    }

    // required int32 PEDS = 6;
    public static final int PEDS_FIELD_NUMBER = 6;
    private int pEDS_;
    /**
     * <code>required int32 PEDS = 6;</code>
     */
    public boolean hasPEDS() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 PEDS = 6;</code>
     */
    public int getPEDS() {
      return pEDS_;
    }

    // required int32 PERNOTMVIT = 7;
    public static final int PERNOTMVIT_FIELD_NUMBER = 7;
    private int pERNOTMVIT_;
    /**
     * <code>required int32 PERNOTMVIT = 7;</code>
     */
    public boolean hasPERNOTMVIT() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 PERNOTMVIT = 7;</code>
     */
    public int getPERNOTMVIT() {
      return pERNOTMVIT_;
    }

    // required int32 PERMVIT = 8;
    public static final int PERMVIT_FIELD_NUMBER = 8;
    private int pERMVIT_;
    /**
     * <code>required int32 PERMVIT = 8;</code>
     */
    public boolean hasPERMVIT() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 PERMVIT = 8;</code>
     */
    public int getPERMVIT() {
      return pERMVIT_;
    }

    // required int32 person_count = 9;
    public static final int PERSON_COUNT_FIELD_NUMBER = 9;
    private int personCount_;
    /**
     * <code>required int32 person_count = 9;</code>
     */
    public boolean hasPersonCount() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required int32 person_count = 9;</code>
     */
    public int getPersonCount() {
      return personCount_;
    }

    // required int32 COUNTY = 10;
    public static final int COUNTY_FIELD_NUMBER = 10;
    private int cOUNTY_;
    /**
     * <code>required int32 COUNTY = 10;</code>
     */
    public boolean hasCOUNTY() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required int32 COUNTY = 10;</code>
     */
    public int getCOUNTY() {
      return cOUNTY_;
    }

    // required int32 CITY = 11;
    public static final int CITY_FIELD_NUMBER = 11;
    private int cITY_;
    /**
     * <code>required int32 CITY = 11;</code>
     */
    public boolean hasCITY() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required int32 CITY = 11;</code>
     */
    public int getCITY() {
      return cITY_;
    }

    // required int32 DAY = 12;
    public static final int DAY_FIELD_NUMBER = 12;
    private int dAY_;
    /**
     * <code>required int32 DAY = 12;</code>
     */
    public boolean hasDAY() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>required int32 DAY = 12;</code>
     */
    public int getDAY() {
      return dAY_;
    }

    // required int32 MONTH = 13;
    public static final int MONTH_FIELD_NUMBER = 13;
    private int mONTH_;
    /**
     * <code>required int32 MONTH = 13;</code>
     */
    public boolean hasMONTH() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>required int32 MONTH = 13;</code>
     */
    public int getMONTH() {
      return mONTH_;
    }

    // required int32 YEAR = 14;
    public static final int YEAR_FIELD_NUMBER = 14;
    private int yEAR_;
    /**
     * <code>required int32 YEAR = 14;</code>
     */
    public boolean hasYEAR() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>required int32 YEAR = 14;</code>
     */
    public int getYEAR() {
      return yEAR_;
    }

    // required int32 DAY_WEEK = 15;
    public static final int DAY_WEEK_FIELD_NUMBER = 15;
    private int dAYWEEK_;
    /**
     * <code>required int32 DAY_WEEK = 15;</code>
     */
    public boolean hasDAYWEEK() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>required int32 DAY_WEEK = 15;</code>
     */
    public int getDAYWEEK() {
      return dAYWEEK_;
    }

    // required int32 HOUR = 16;
    public static final int HOUR_FIELD_NUMBER = 16;
    private int hOUR_;
    /**
     * <code>required int32 HOUR = 16;</code>
     */
    public boolean hasHOUR() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>required int32 HOUR = 16;</code>
     */
    public int getHOUR() {
      return hOUR_;
    }

    // required int32 MINUTE = 17;
    public static final int MINUTE_FIELD_NUMBER = 17;
    private int mINUTE_;
    /**
     * <code>required int32 MINUTE = 17;</code>
     */
    public boolean hasMINUTE() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>required int32 MINUTE = 17;</code>
     */
    public int getMINUTE() {
      return mINUTE_;
    }

    // required int32 NHS = 18;
    public static final int NHS_FIELD_NUMBER = 18;
    private int nHS_;
    /**
     * <code>required int32 NHS = 18;</code>
     */
    public boolean hasNHS() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>required int32 NHS = 18;</code>
     */
    public int getNHS() {
      return nHS_;
    }

    // required int32 RUR_URB = 19;
    public static final int RUR_URB_FIELD_NUMBER = 19;
    private int rURURB_;
    /**
     * <code>required int32 RUR_URB = 19;</code>
     */
    public boolean hasRURURB() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>required int32 RUR_URB = 19;</code>
     */
    public int getRURURB() {
      return rURURB_;
    }

    // required int32 FUNC_SYS = 20;
    public static final int FUNC_SYS_FIELD_NUMBER = 20;
    private int fUNCSYS_;
    /**
     * <code>required int32 FUNC_SYS = 20;</code>
     */
    public boolean hasFUNCSYS() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>required int32 FUNC_SYS = 20;</code>
     */
    public int getFUNCSYS() {
      return fUNCSYS_;
    }

    // required int32 RD_OWNER = 21;
    public static final int RD_OWNER_FIELD_NUMBER = 21;
    private int rDOWNER_;
    /**
     * <code>required int32 RD_OWNER = 21;</code>
     */
    public boolean hasRDOWNER() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>required int32 RD_OWNER = 21;</code>
     */
    public int getRDOWNER() {
      return rDOWNER_;
    }

    // required int32 ROUTE = 22;
    public static final int ROUTE_FIELD_NUMBER = 22;
    private int rOUTE_;
    /**
     * <code>required int32 ROUTE = 22;</code>
     */
    public boolean hasROUTE() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>required int32 ROUTE = 22;</code>
     */
    public int getROUTE() {
      return rOUTE_;
    }

    // required string TWAY_ID = 23;
    public static final int TWAY_ID_FIELD_NUMBER = 23;
    private java.lang.Object tWAYID_;
    /**
     * <code>required string TWAY_ID = 23;</code>
     */
    public boolean hasTWAYID() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>required string TWAY_ID = 23;</code>
     */
    public java.lang.String getTWAYID() {
      java.lang.Object ref = tWAYID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          tWAYID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string TWAY_ID = 23;</code>
     */
    public com.google.protobuf.ByteString
        getTWAYIDBytes() {
      java.lang.Object ref = tWAYID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tWAYID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string TWAY_ID2 = 24;
    public static final int TWAY_ID2_FIELD_NUMBER = 24;
    private java.lang.Object tWAYID2_;
    /**
     * <code>optional string TWAY_ID2 = 24;</code>
     */
    public boolean hasTWAYID2() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional string TWAY_ID2 = 24;</code>
     */
    public java.lang.String getTWAYID2() {
      java.lang.Object ref = tWAYID2_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          tWAYID2_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string TWAY_ID2 = 24;</code>
     */
    public com.google.protobuf.ByteString
        getTWAYID2Bytes() {
      java.lang.Object ref = tWAYID2_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tWAYID2_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 MILEPT = 25;
    public static final int MILEPT_FIELD_NUMBER = 25;
    private int mILEPT_;
    /**
     * <code>required int32 MILEPT = 25;</code>
     */
    public boolean hasMILEPT() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>required int32 MILEPT = 25;</code>
     */
    public int getMILEPT() {
      return mILEPT_;
    }

    // optional float LATITUDE = 26;
    public static final int LATITUDE_FIELD_NUMBER = 26;
    private float lATITUDE_;
    /**
     * <code>optional float LATITUDE = 26;</code>
     */
    public boolean hasLATITUDE() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional float LATITUDE = 26;</code>
     */
    public float getLATITUDE() {
      return lATITUDE_;
    }

    // optional float LONGITUD = 27;
    public static final int LONGITUD_FIELD_NUMBER = 27;
    private float lONGITUD_;
    /**
     * <code>optional float LONGITUD = 27;</code>
     */
    public boolean hasLONGITUD() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional float LONGITUD = 27;</code>
     */
    public float getLONGITUD() {
      return lONGITUD_;
    }

    // required int32 SP_JUR = 28;
    public static final int SP_JUR_FIELD_NUMBER = 28;
    private int sPJUR_;
    /**
     * <code>required int32 SP_JUR = 28;</code>
     */
    public boolean hasSPJUR() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>required int32 SP_JUR = 28;</code>
     */
    public int getSPJUR() {
      return sPJUR_;
    }

    // required int32 HARM_EV = 29;
    public static final int HARM_EV_FIELD_NUMBER = 29;
    private int hARMEV_;
    /**
     * <code>required int32 HARM_EV = 29;</code>
     */
    public boolean hasHARMEV() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>required int32 HARM_EV = 29;</code>
     */
    public int getHARMEV() {
      return hARMEV_;
    }

    // required int32 MAN_COLL = 30;
    public static final int MAN_COLL_FIELD_NUMBER = 30;
    private int mANCOLL_;
    /**
     * <code>required int32 MAN_COLL = 30;</code>
     */
    public boolean hasMANCOLL() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>required int32 MAN_COLL = 30;</code>
     */
    public int getMANCOLL() {
      return mANCOLL_;
    }

    // required int32 RELJCT1 = 31;
    public static final int RELJCT1_FIELD_NUMBER = 31;
    private int rELJCT1_;
    /**
     * <code>required int32 RELJCT1 = 31;</code>
     */
    public boolean hasRELJCT1() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>required int32 RELJCT1 = 31;</code>
     */
    public int getRELJCT1() {
      return rELJCT1_;
    }

    // required int32 RELJCT2 = 32;
    public static final int RELJCT2_FIELD_NUMBER = 32;
    private int rELJCT2_;
    /**
     * <code>required int32 RELJCT2 = 32;</code>
     */
    public boolean hasRELJCT2() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>required int32 RELJCT2 = 32;</code>
     */
    public int getRELJCT2() {
      return rELJCT2_;
    }

    // required int32 TYP_INT = 33;
    public static final int TYP_INT_FIELD_NUMBER = 33;
    private int tYPINT_;
    /**
     * <code>required int32 TYP_INT = 33;</code>
     */
    public boolean hasTYPINT() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 TYP_INT = 33;</code>
     */
    public int getTYPINT() {
      return tYPINT_;
    }

    // required int32 WRK_ZONE = 34;
    public static final int WRK_ZONE_FIELD_NUMBER = 34;
    private int wRKZONE_;
    /**
     * <code>required int32 WRK_ZONE = 34;</code>
     */
    public boolean hasWRKZONE() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 WRK_ZONE = 34;</code>
     */
    public int getWRKZONE() {
      return wRKZONE_;
    }

    // required int32 REL_ROAD = 35;
    public static final int REL_ROAD_FIELD_NUMBER = 35;
    private int rELROAD_;
    /**
     * <code>required int32 REL_ROAD = 35;</code>
     */
    public boolean hasRELROAD() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 REL_ROAD = 35;</code>
     */
    public int getRELROAD() {
      return rELROAD_;
    }

    // required int32 LGT_COND = 36;
    public static final int LGT_COND_FIELD_NUMBER = 36;
    private int lGTCOND_;
    /**
     * <code>required int32 LGT_COND = 36;</code>
     */
    public boolean hasLGTCOND() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 LGT_COND = 36;</code>
     */
    public int getLGTCOND() {
      return lGTCOND_;
    }

    // required int32 WEATHER1 = 37;
    public static final int WEATHER1_FIELD_NUMBER = 37;
    private int wEATHER1_;
    /**
     * <code>required int32 WEATHER1 = 37;</code>
     */
    public boolean hasWEATHER1() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 WEATHER1 = 37;</code>
     */
    public int getWEATHER1() {
      return wEATHER1_;
    }

    // required int32 WEATHER2 = 38;
    public static final int WEATHER2_FIELD_NUMBER = 38;
    private int wEATHER2_;
    /**
     * <code>required int32 WEATHER2 = 38;</code>
     */
    public boolean hasWEATHER2() {
      return ((bitField1_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 WEATHER2 = 38;</code>
     */
    public int getWEATHER2() {
      return wEATHER2_;
    }

    // required int32 WEATHER = 39;
    public static final int WEATHER_FIELD_NUMBER = 39;
    private int wEATHER_;
    /**
     * <code>required int32 WEATHER = 39;</code>
     */
    public boolean hasWEATHER() {
      return ((bitField1_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 WEATHER = 39;</code>
     */
    public int getWEATHER() {
      return wEATHER_;
    }

    // required int32 SCH_BUS = 40;
    public static final int SCH_BUS_FIELD_NUMBER = 40;
    private int sCHBUS_;
    /**
     * <code>required int32 SCH_BUS = 40;</code>
     */
    public boolean hasSCHBUS() {
      return ((bitField1_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 SCH_BUS = 40;</code>
     */
    public int getSCHBUS() {
      return sCHBUS_;
    }

    // required string RAIL = 41;
    public static final int RAIL_FIELD_NUMBER = 41;
    private java.lang.Object rAIL_;
    /**
     * <code>required string RAIL = 41;</code>
     */
    public boolean hasRAIL() {
      return ((bitField1_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required string RAIL = 41;</code>
     */
    public java.lang.String getRAIL() {
      java.lang.Object ref = rAIL_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          rAIL_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string RAIL = 41;</code>
     */
    public com.google.protobuf.ByteString
        getRAILBytes() {
      java.lang.Object ref = rAIL_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        rAIL_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 NOT_HOUR = 42;
    public static final int NOT_HOUR_FIELD_NUMBER = 42;
    private int nOTHOUR_;
    /**
     * <code>required int32 NOT_HOUR = 42;</code>
     */
    public boolean hasNOTHOUR() {
      return ((bitField1_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required int32 NOT_HOUR = 42;</code>
     */
    public int getNOTHOUR() {
      return nOTHOUR_;
    }

    // required int32 NOT_MIN = 43;
    public static final int NOT_MIN_FIELD_NUMBER = 43;
    private int nOTMIN_;
    /**
     * <code>required int32 NOT_MIN = 43;</code>
     */
    public boolean hasNOTMIN() {
      return ((bitField1_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required int32 NOT_MIN = 43;</code>
     */
    public int getNOTMIN() {
      return nOTMIN_;
    }

    // required int32 ARR_HOUR = 44;
    public static final int ARR_HOUR_FIELD_NUMBER = 44;
    private int aRRHOUR_;
    /**
     * <code>required int32 ARR_HOUR = 44;</code>
     */
    public boolean hasARRHOUR() {
      return ((bitField1_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>required int32 ARR_HOUR = 44;</code>
     */
    public int getARRHOUR() {
      return aRRHOUR_;
    }

    // required int32 ARR_MIN = 45;
    public static final int ARR_MIN_FIELD_NUMBER = 45;
    private int aRRMIN_;
    /**
     * <code>required int32 ARR_MIN = 45;</code>
     */
    public boolean hasARRMIN() {
      return ((bitField1_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>required int32 ARR_MIN = 45;</code>
     */
    public int getARRMIN() {
      return aRRMIN_;
    }

    // required int32 HOSP_HR = 46;
    public static final int HOSP_HR_FIELD_NUMBER = 46;
    private int hOSPHR_;
    /**
     * <code>required int32 HOSP_HR = 46;</code>
     */
    public boolean hasHOSPHR() {
      return ((bitField1_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>required int32 HOSP_HR = 46;</code>
     */
    public int getHOSPHR() {
      return hOSPHR_;
    }

    // required int32 HOSP_MN = 47;
    public static final int HOSP_MN_FIELD_NUMBER = 47;
    private int hOSPMN_;
    /**
     * <code>required int32 HOSP_MN = 47;</code>
     */
    public boolean hasHOSPMN() {
      return ((bitField1_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>required int32 HOSP_MN = 47;</code>
     */
    public int getHOSPMN() {
      return hOSPMN_;
    }

    // required int32 CF1 = 48;
    public static final int CF1_FIELD_NUMBER = 48;
    private int cF1_;
    /**
     * <code>required int32 CF1 = 48;</code>
     */
    public boolean hasCF1() {
      return ((bitField1_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>required int32 CF1 = 48;</code>
     */
    public int getCF1() {
      return cF1_;
    }

    // required int32 CF2 = 49;
    public static final int CF2_FIELD_NUMBER = 49;
    private int cF2_;
    /**
     * <code>required int32 CF2 = 49;</code>
     */
    public boolean hasCF2() {
      return ((bitField1_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>required int32 CF2 = 49;</code>
     */
    public int getCF2() {
      return cF2_;
    }

    // required int32 CF3 = 50;
    public static final int CF3_FIELD_NUMBER = 50;
    private int cF3_;
    /**
     * <code>required int32 CF3 = 50;</code>
     */
    public boolean hasCF3() {
      return ((bitField1_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>required int32 CF3 = 50;</code>
     */
    public int getCF3() {
      return cF3_;
    }

    // required int32 FATALS = 51;
    public static final int FATALS_FIELD_NUMBER = 51;
    private int fATALS_;
    /**
     * <code>required int32 FATALS = 51;</code>
     */
    public boolean hasFATALS() {
      return ((bitField1_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>required int32 FATALS = 51;</code>
     */
    public int getFATALS() {
      return fATALS_;
    }

    // required int32 DRUNK_DR = 52;
    public static final int DRUNK_DR_FIELD_NUMBER = 52;
    private int dRUNKDR_;
    /**
     * <code>required int32 DRUNK_DR = 52;</code>
     */
    public boolean hasDRUNKDR() {
      return ((bitField1_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>required int32 DRUNK_DR = 52;</code>
     */
    public int getDRUNKDR() {
      return dRUNKDR_;
    }

    // repeated .boa.types.transportation.Person persons = 53;
    public static final int PERSONS_FIELD_NUMBER = 53;
    private java.util.List<boa.types.transportation.Individual.Person> persons_;
    /**
     * <code>repeated .boa.types.transportation.Person persons = 53;</code>
     */
    public java.util.List<boa.types.transportation.Individual.Person> getPersonsList() {
      return persons_;
    }
    /**
     * <code>repeated .boa.types.transportation.Person persons = 53;</code>
     */
    public java.util.List<? extends boa.types.transportation.Individual.PersonOrBuilder> 
        getPersonsOrBuilderList() {
      return persons_;
    }
    /**
     * <code>repeated .boa.types.transportation.Person persons = 53;</code>
     */
    public int getPersonsCount() {
      return persons_.size();
    }
    /**
     * <code>repeated .boa.types.transportation.Person persons = 53;</code>
     */
    public boa.types.transportation.Individual.Person getPersons(int index) {
      return persons_.get(index);
    }
    /**
     * <code>repeated .boa.types.transportation.Person persons = 53;</code>
     */
    public boa.types.transportation.Individual.PersonOrBuilder getPersonsOrBuilder(
        int index) {
      return persons_.get(index);
    }

    // repeated .boa.types.transportation.Vehicle vehicle = 54;
    public static final int VEHICLE_FIELD_NUMBER = 54;
    private java.util.List<boa.types.transportation.Motor.Vehicle> vehicle_;
    /**
     * <code>repeated .boa.types.transportation.Vehicle vehicle = 54;</code>
     */
    public java.util.List<boa.types.transportation.Motor.Vehicle> getVehicleList() {
      return vehicle_;
    }
    /**
     * <code>repeated .boa.types.transportation.Vehicle vehicle = 54;</code>
     */
    public java.util.List<? extends boa.types.transportation.Motor.VehicleOrBuilder> 
        getVehicleOrBuilderList() {
      return vehicle_;
    }
    /**
     * <code>repeated .boa.types.transportation.Vehicle vehicle = 54;</code>
     */
    public int getVehicleCount() {
      return vehicle_.size();
    }
    /**
     * <code>repeated .boa.types.transportation.Vehicle vehicle = 54;</code>
     */
    public boa.types.transportation.Motor.Vehicle getVehicle(int index) {
      return vehicle_.get(index);
    }
    /**
     * <code>repeated .boa.types.transportation.Vehicle vehicle = 54;</code>
     */
    public boa.types.transportation.Motor.VehicleOrBuilder getVehicleOrBuilder(
        int index) {
      return vehicle_.get(index);
    }

    private void initFields() {
      state_ = boa.types.transportation.State.STATE.Alabama;
      sTCASE_ = 0;
      vETOTAL_ = 0;
      vEFORMS_ = 0;
      pVHINVL_ = 0;
      pEDS_ = 0;
      pERNOTMVIT_ = 0;
      pERMVIT_ = 0;
      personCount_ = 0;
      cOUNTY_ = 0;
      cITY_ = 0;
      dAY_ = 0;
      mONTH_ = 0;
      yEAR_ = 0;
      dAYWEEK_ = 0;
      hOUR_ = 0;
      mINUTE_ = 0;
      nHS_ = 0;
      rURURB_ = 0;
      fUNCSYS_ = 0;
      rDOWNER_ = 0;
      rOUTE_ = 0;
      tWAYID_ = "";
      tWAYID2_ = "";
      mILEPT_ = 0;
      lATITUDE_ = 0F;
      lONGITUD_ = 0F;
      sPJUR_ = 0;
      hARMEV_ = 0;
      mANCOLL_ = 0;
      rELJCT1_ = 0;
      rELJCT2_ = 0;
      tYPINT_ = 0;
      wRKZONE_ = 0;
      rELROAD_ = 0;
      lGTCOND_ = 0;
      wEATHER1_ = 0;
      wEATHER2_ = 0;
      wEATHER_ = 0;
      sCHBUS_ = 0;
      rAIL_ = "";
      nOTHOUR_ = 0;
      nOTMIN_ = 0;
      aRRHOUR_ = 0;
      aRRMIN_ = 0;
      hOSPHR_ = 0;
      hOSPMN_ = 0;
      cF1_ = 0;
      cF2_ = 0;
      cF3_ = 0;
      fATALS_ = 0;
      dRUNKDR_ = 0;
      persons_ = java.util.Collections.emptyList();
      vehicle_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasState()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSTCASE()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVETOTAL()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVEFORMS()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPVHINVL()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPEDS()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPERNOTMVIT()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPERMVIT()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPersonCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCOUNTY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCITY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDAY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMONTH()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasYEAR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDAYWEEK()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHOUR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMINUTE()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNHS()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRURURB()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFUNCSYS()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRDOWNER()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasROUTE()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTWAYID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMILEPT()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSPJUR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHARMEV()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMANCOLL()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRELJCT1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRELJCT2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTYPINT()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWRKZONE()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRELROAD()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLGTCOND()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWEATHER1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWEATHER2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWEATHER()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSCHBUS()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRAIL()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNOTHOUR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNOTMIN()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasARRHOUR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasARRMIN()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHOSPHR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHOSPMN()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCF1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCF2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCF3()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFATALS()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDRUNKDR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getPersonsCount(); i++) {
        if (!getPersons(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getVehicleCount(); i++) {
        if (!getVehicle(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, state_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, sTCASE_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, vETOTAL_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, vEFORMS_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, pVHINVL_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, pEDS_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, pERNOTMVIT_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, pERMVIT_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, personCount_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, cOUNTY_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, cITY_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, dAY_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, mONTH_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, yEAR_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(15, dAYWEEK_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(16, hOUR_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(17, mINUTE_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(18, nHS_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(19, rURURB_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(20, fUNCSYS_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(21, rDOWNER_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(22, rOUTE_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeBytes(23, getTWAYIDBytes());
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeBytes(24, getTWAYID2Bytes());
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeInt32(25, mILEPT_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeFloat(26, lATITUDE_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeFloat(27, lONGITUD_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeInt32(28, sPJUR_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeInt32(29, hARMEV_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeInt32(30, mANCOLL_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeInt32(31, rELJCT1_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeInt32(32, rELJCT2_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(33, tYPINT_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(34, wRKZONE_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(35, rELROAD_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(36, lGTCOND_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(37, wEATHER1_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(38, wEATHER2_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(39, wEATHER_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(40, sCHBUS_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(41, getRAILBytes());
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(42, nOTHOUR_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(43, nOTMIN_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(44, aRRHOUR_);
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(45, aRRMIN_);
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(46, hOSPHR_);
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(47, hOSPMN_);
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(48, cF1_);
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(49, cF2_);
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(50, cF3_);
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(51, fATALS_);
      }
      if (((bitField1_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(52, dRUNKDR_);
      }
      for (int i = 0; i < persons_.size(); i++) {
        output.writeMessage(53, persons_.get(i));
      }
      for (int i = 0; i < vehicle_.size(); i++) {
        output.writeMessage(54, vehicle_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, state_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, sTCASE_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, vETOTAL_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, vEFORMS_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, pVHINVL_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, pEDS_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, pERNOTMVIT_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, pERMVIT_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, personCount_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, cOUNTY_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, cITY_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, dAY_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, mONTH_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, yEAR_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, dAYWEEK_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, hOUR_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, mINUTE_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, nHS_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, rURURB_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, fUNCSYS_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, rDOWNER_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, rOUTE_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(23, getTWAYIDBytes());
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(24, getTWAYID2Bytes());
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(25, mILEPT_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(26, lATITUDE_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(27, lONGITUD_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(28, sPJUR_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(29, hARMEV_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(30, mANCOLL_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(31, rELJCT1_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(32, rELJCT2_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(33, tYPINT_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(34, wRKZONE_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(35, rELROAD_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(36, lGTCOND_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(37, wEATHER1_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(38, wEATHER2_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(39, wEATHER_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(40, sCHBUS_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(41, getRAILBytes());
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(42, nOTHOUR_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(43, nOTMIN_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(44, aRRHOUR_);
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(45, aRRMIN_);
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(46, hOSPHR_);
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(47, hOSPMN_);
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(48, cF1_);
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(49, cF2_);
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(50, cF3_);
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(51, fATALS_);
      }
      if (((bitField1_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(52, dRUNKDR_);
      }
      for (int i = 0; i < persons_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(53, persons_.get(i));
      }
      for (int i = 0; i < vehicle_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(54, vehicle_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static boa.types.transportation.Accident.Crash parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static boa.types.transportation.Accident.Crash parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static boa.types.transportation.Accident.Crash parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static boa.types.transportation.Accident.Crash parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static boa.types.transportation.Accident.Crash parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static boa.types.transportation.Accident.Crash parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static boa.types.transportation.Accident.Crash parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static boa.types.transportation.Accident.Crash parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static boa.types.transportation.Accident.Crash parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static boa.types.transportation.Accident.Crash parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(boa.types.transportation.Accident.Crash prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code boa.types.transportation.Crash}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements boa.types.transportation.Accident.CrashOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return boa.types.transportation.Accident.internal_static_boa_types_transportation_Crash_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return boa.types.transportation.Accident.internal_static_boa_types_transportation_Crash_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                boa.types.transportation.Accident.Crash.class, boa.types.transportation.Accident.Crash.Builder.class);
      }

      // Construct using boa.types.transportation.Accident.Crash.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPersonsFieldBuilder();
          getVehicleFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        state_ = boa.types.transportation.State.STATE.Alabama;
        bitField0_ = (bitField0_ & ~0x00000001);
        sTCASE_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        vETOTAL_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        vEFORMS_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        pVHINVL_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        pEDS_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        pERNOTMVIT_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        pERMVIT_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        personCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        cOUNTY_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        cITY_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        dAY_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        mONTH_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        yEAR_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        dAYWEEK_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        hOUR_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        mINUTE_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        nHS_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        rURURB_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        fUNCSYS_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        rDOWNER_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        rOUTE_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        tWAYID_ = "";
        bitField0_ = (bitField0_ & ~0x00400000);
        tWAYID2_ = "";
        bitField0_ = (bitField0_ & ~0x00800000);
        mILEPT_ = 0;
        bitField0_ = (bitField0_ & ~0x01000000);
        lATITUDE_ = 0F;
        bitField0_ = (bitField0_ & ~0x02000000);
        lONGITUD_ = 0F;
        bitField0_ = (bitField0_ & ~0x04000000);
        sPJUR_ = 0;
        bitField0_ = (bitField0_ & ~0x08000000);
        hARMEV_ = 0;
        bitField0_ = (bitField0_ & ~0x10000000);
        mANCOLL_ = 0;
        bitField0_ = (bitField0_ & ~0x20000000);
        rELJCT1_ = 0;
        bitField0_ = (bitField0_ & ~0x40000000);
        rELJCT2_ = 0;
        bitField0_ = (bitField0_ & ~0x80000000);
        tYPINT_ = 0;
        bitField1_ = (bitField1_ & ~0x00000001);
        wRKZONE_ = 0;
        bitField1_ = (bitField1_ & ~0x00000002);
        rELROAD_ = 0;
        bitField1_ = (bitField1_ & ~0x00000004);
        lGTCOND_ = 0;
        bitField1_ = (bitField1_ & ~0x00000008);
        wEATHER1_ = 0;
        bitField1_ = (bitField1_ & ~0x00000010);
        wEATHER2_ = 0;
        bitField1_ = (bitField1_ & ~0x00000020);
        wEATHER_ = 0;
        bitField1_ = (bitField1_ & ~0x00000040);
        sCHBUS_ = 0;
        bitField1_ = (bitField1_ & ~0x00000080);
        rAIL_ = "";
        bitField1_ = (bitField1_ & ~0x00000100);
        nOTHOUR_ = 0;
        bitField1_ = (bitField1_ & ~0x00000200);
        nOTMIN_ = 0;
        bitField1_ = (bitField1_ & ~0x00000400);
        aRRHOUR_ = 0;
        bitField1_ = (bitField1_ & ~0x00000800);
        aRRMIN_ = 0;
        bitField1_ = (bitField1_ & ~0x00001000);
        hOSPHR_ = 0;
        bitField1_ = (bitField1_ & ~0x00002000);
        hOSPMN_ = 0;
        bitField1_ = (bitField1_ & ~0x00004000);
        cF1_ = 0;
        bitField1_ = (bitField1_ & ~0x00008000);
        cF2_ = 0;
        bitField1_ = (bitField1_ & ~0x00010000);
        cF3_ = 0;
        bitField1_ = (bitField1_ & ~0x00020000);
        fATALS_ = 0;
        bitField1_ = (bitField1_ & ~0x00040000);
        dRUNKDR_ = 0;
        bitField1_ = (bitField1_ & ~0x00080000);
        if (personsBuilder_ == null) {
          persons_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00100000);
        } else {
          personsBuilder_.clear();
        }
        if (vehicleBuilder_ == null) {
          vehicle_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00200000);
        } else {
          vehicleBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return boa.types.transportation.Accident.internal_static_boa_types_transportation_Crash_descriptor;
      }

      public boa.types.transportation.Accident.Crash getDefaultInstanceForType() {
        return boa.types.transportation.Accident.Crash.getDefaultInstance();
      }

      public boa.types.transportation.Accident.Crash build() {
        boa.types.transportation.Accident.Crash result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public boa.types.transportation.Accident.Crash buildPartial() {
        boa.types.transportation.Accident.Crash result = new boa.types.transportation.Accident.Crash(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.state_ = state_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sTCASE_ = sTCASE_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.vETOTAL_ = vETOTAL_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.vEFORMS_ = vEFORMS_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.pVHINVL_ = pVHINVL_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.pEDS_ = pEDS_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.pERNOTMVIT_ = pERNOTMVIT_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.pERMVIT_ = pERMVIT_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.personCount_ = personCount_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.cOUNTY_ = cOUNTY_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.cITY_ = cITY_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.dAY_ = dAY_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.mONTH_ = mONTH_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.yEAR_ = yEAR_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.dAYWEEK_ = dAYWEEK_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.hOUR_ = hOUR_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.mINUTE_ = mINUTE_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.nHS_ = nHS_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.rURURB_ = rURURB_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.fUNCSYS_ = fUNCSYS_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.rDOWNER_ = rDOWNER_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.rOUTE_ = rOUTE_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.tWAYID_ = tWAYID_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.tWAYID2_ = tWAYID2_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.mILEPT_ = mILEPT_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.lATITUDE_ = lATITUDE_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.lONGITUD_ = lONGITUD_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.sPJUR_ = sPJUR_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.hARMEV_ = hARMEV_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.mANCOLL_ = mANCOLL_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x40000000;
        }
        result.rELJCT1_ = rELJCT1_;
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x80000000;
        }
        result.rELJCT2_ = rELJCT2_;
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField1_ |= 0x00000001;
        }
        result.tYPINT_ = tYPINT_;
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField1_ |= 0x00000002;
        }
        result.wRKZONE_ = wRKZONE_;
        if (((from_bitField1_ & 0x00000004) == 0x00000004)) {
          to_bitField1_ |= 0x00000004;
        }
        result.rELROAD_ = rELROAD_;
        if (((from_bitField1_ & 0x00000008) == 0x00000008)) {
          to_bitField1_ |= 0x00000008;
        }
        result.lGTCOND_ = lGTCOND_;
        if (((from_bitField1_ & 0x00000010) == 0x00000010)) {
          to_bitField1_ |= 0x00000010;
        }
        result.wEATHER1_ = wEATHER1_;
        if (((from_bitField1_ & 0x00000020) == 0x00000020)) {
          to_bitField1_ |= 0x00000020;
        }
        result.wEATHER2_ = wEATHER2_;
        if (((from_bitField1_ & 0x00000040) == 0x00000040)) {
          to_bitField1_ |= 0x00000040;
        }
        result.wEATHER_ = wEATHER_;
        if (((from_bitField1_ & 0x00000080) == 0x00000080)) {
          to_bitField1_ |= 0x00000080;
        }
        result.sCHBUS_ = sCHBUS_;
        if (((from_bitField1_ & 0x00000100) == 0x00000100)) {
          to_bitField1_ |= 0x00000100;
        }
        result.rAIL_ = rAIL_;
        if (((from_bitField1_ & 0x00000200) == 0x00000200)) {
          to_bitField1_ |= 0x00000200;
        }
        result.nOTHOUR_ = nOTHOUR_;
        if (((from_bitField1_ & 0x00000400) == 0x00000400)) {
          to_bitField1_ |= 0x00000400;
        }
        result.nOTMIN_ = nOTMIN_;
        if (((from_bitField1_ & 0x00000800) == 0x00000800)) {
          to_bitField1_ |= 0x00000800;
        }
        result.aRRHOUR_ = aRRHOUR_;
        if (((from_bitField1_ & 0x00001000) == 0x00001000)) {
          to_bitField1_ |= 0x00001000;
        }
        result.aRRMIN_ = aRRMIN_;
        if (((from_bitField1_ & 0x00002000) == 0x00002000)) {
          to_bitField1_ |= 0x00002000;
        }
        result.hOSPHR_ = hOSPHR_;
        if (((from_bitField1_ & 0x00004000) == 0x00004000)) {
          to_bitField1_ |= 0x00004000;
        }
        result.hOSPMN_ = hOSPMN_;
        if (((from_bitField1_ & 0x00008000) == 0x00008000)) {
          to_bitField1_ |= 0x00008000;
        }
        result.cF1_ = cF1_;
        if (((from_bitField1_ & 0x00010000) == 0x00010000)) {
          to_bitField1_ |= 0x00010000;
        }
        result.cF2_ = cF2_;
        if (((from_bitField1_ & 0x00020000) == 0x00020000)) {
          to_bitField1_ |= 0x00020000;
        }
        result.cF3_ = cF3_;
        if (((from_bitField1_ & 0x00040000) == 0x00040000)) {
          to_bitField1_ |= 0x00040000;
        }
        result.fATALS_ = fATALS_;
        if (((from_bitField1_ & 0x00080000) == 0x00080000)) {
          to_bitField1_ |= 0x00080000;
        }
        result.dRUNKDR_ = dRUNKDR_;
        if (personsBuilder_ == null) {
          if (((bitField1_ & 0x00100000) == 0x00100000)) {
            persons_ = java.util.Collections.unmodifiableList(persons_);
            bitField1_ = (bitField1_ & ~0x00100000);
          }
          result.persons_ = persons_;
        } else {
          result.persons_ = personsBuilder_.build();
        }
        if (vehicleBuilder_ == null) {
          if (((bitField1_ & 0x00200000) == 0x00200000)) {
            vehicle_ = java.util.Collections.unmodifiableList(vehicle_);
            bitField1_ = (bitField1_ & ~0x00200000);
          }
          result.vehicle_ = vehicle_;
        } else {
          result.vehicle_ = vehicleBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof boa.types.transportation.Accident.Crash) {
          return mergeFrom((boa.types.transportation.Accident.Crash)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(boa.types.transportation.Accident.Crash other) {
        if (other == boa.types.transportation.Accident.Crash.getDefaultInstance()) return this;
        if (other.hasState()) {
          setState(other.getState());
        }
        if (other.hasSTCASE()) {
          setSTCASE(other.getSTCASE());
        }
        if (other.hasVETOTAL()) {
          setVETOTAL(other.getVETOTAL());
        }
        if (other.hasVEFORMS()) {
          setVEFORMS(other.getVEFORMS());
        }
        if (other.hasPVHINVL()) {
          setPVHINVL(other.getPVHINVL());
        }
        if (other.hasPEDS()) {
          setPEDS(other.getPEDS());
        }
        if (other.hasPERNOTMVIT()) {
          setPERNOTMVIT(other.getPERNOTMVIT());
        }
        if (other.hasPERMVIT()) {
          setPERMVIT(other.getPERMVIT());
        }
        if (other.hasPersonCount()) {
          setPersonCount(other.getPersonCount());
        }
        if (other.hasCOUNTY()) {
          setCOUNTY(other.getCOUNTY());
        }
        if (other.hasCITY()) {
          setCITY(other.getCITY());
        }
        if (other.hasDAY()) {
          setDAY(other.getDAY());
        }
        if (other.hasMONTH()) {
          setMONTH(other.getMONTH());
        }
        if (other.hasYEAR()) {
          setYEAR(other.getYEAR());
        }
        if (other.hasDAYWEEK()) {
          setDAYWEEK(other.getDAYWEEK());
        }
        if (other.hasHOUR()) {
          setHOUR(other.getHOUR());
        }
        if (other.hasMINUTE()) {
          setMINUTE(other.getMINUTE());
        }
        if (other.hasNHS()) {
          setNHS(other.getNHS());
        }
        if (other.hasRURURB()) {
          setRURURB(other.getRURURB());
        }
        if (other.hasFUNCSYS()) {
          setFUNCSYS(other.getFUNCSYS());
        }
        if (other.hasRDOWNER()) {
          setRDOWNER(other.getRDOWNER());
        }
        if (other.hasROUTE()) {
          setROUTE(other.getROUTE());
        }
        if (other.hasTWAYID()) {
          bitField0_ |= 0x00400000;
          tWAYID_ = other.tWAYID_;
          onChanged();
        }
        if (other.hasTWAYID2()) {
          bitField0_ |= 0x00800000;
          tWAYID2_ = other.tWAYID2_;
          onChanged();
        }
        if (other.hasMILEPT()) {
          setMILEPT(other.getMILEPT());
        }
        if (other.hasLATITUDE()) {
          setLATITUDE(other.getLATITUDE());
        }
        if (other.hasLONGITUD()) {
          setLONGITUD(other.getLONGITUD());
        }
        if (other.hasSPJUR()) {
          setSPJUR(other.getSPJUR());
        }
        if (other.hasHARMEV()) {
          setHARMEV(other.getHARMEV());
        }
        if (other.hasMANCOLL()) {
          setMANCOLL(other.getMANCOLL());
        }
        if (other.hasRELJCT1()) {
          setRELJCT1(other.getRELJCT1());
        }
        if (other.hasRELJCT2()) {
          setRELJCT2(other.getRELJCT2());
        }
        if (other.hasTYPINT()) {
          setTYPINT(other.getTYPINT());
        }
        if (other.hasWRKZONE()) {
          setWRKZONE(other.getWRKZONE());
        }
        if (other.hasRELROAD()) {
          setRELROAD(other.getRELROAD());
        }
        if (other.hasLGTCOND()) {
          setLGTCOND(other.getLGTCOND());
        }
        if (other.hasWEATHER1()) {
          setWEATHER1(other.getWEATHER1());
        }
        if (other.hasWEATHER2()) {
          setWEATHER2(other.getWEATHER2());
        }
        if (other.hasWEATHER()) {
          setWEATHER(other.getWEATHER());
        }
        if (other.hasSCHBUS()) {
          setSCHBUS(other.getSCHBUS());
        }
        if (other.hasRAIL()) {
          bitField1_ |= 0x00000100;
          rAIL_ = other.rAIL_;
          onChanged();
        }
        if (other.hasNOTHOUR()) {
          setNOTHOUR(other.getNOTHOUR());
        }
        if (other.hasNOTMIN()) {
          setNOTMIN(other.getNOTMIN());
        }
        if (other.hasARRHOUR()) {
          setARRHOUR(other.getARRHOUR());
        }
        if (other.hasARRMIN()) {
          setARRMIN(other.getARRMIN());
        }
        if (other.hasHOSPHR()) {
          setHOSPHR(other.getHOSPHR());
        }
        if (other.hasHOSPMN()) {
          setHOSPMN(other.getHOSPMN());
        }
        if (other.hasCF1()) {
          setCF1(other.getCF1());
        }
        if (other.hasCF2()) {
          setCF2(other.getCF2());
        }
        if (other.hasCF3()) {
          setCF3(other.getCF3());
        }
        if (other.hasFATALS()) {
          setFATALS(other.getFATALS());
        }
        if (other.hasDRUNKDR()) {
          setDRUNKDR(other.getDRUNKDR());
        }
        if (personsBuilder_ == null) {
          if (!other.persons_.isEmpty()) {
            if (persons_.isEmpty()) {
              persons_ = other.persons_;
              bitField1_ = (bitField1_ & ~0x00100000);
            } else {
              ensurePersonsIsMutable();
              persons_.addAll(other.persons_);
            }
            onChanged();
          }
        } else {
          if (!other.persons_.isEmpty()) {
            if (personsBuilder_.isEmpty()) {
              personsBuilder_.dispose();
              personsBuilder_ = null;
              persons_ = other.persons_;
              bitField1_ = (bitField1_ & ~0x00100000);
              personsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPersonsFieldBuilder() : null;
            } else {
              personsBuilder_.addAllMessages(other.persons_);
            }
          }
        }
        if (vehicleBuilder_ == null) {
          if (!other.vehicle_.isEmpty()) {
            if (vehicle_.isEmpty()) {
              vehicle_ = other.vehicle_;
              bitField1_ = (bitField1_ & ~0x00200000);
            } else {
              ensureVehicleIsMutable();
              vehicle_.addAll(other.vehicle_);
            }
            onChanged();
          }
        } else {
          if (!other.vehicle_.isEmpty()) {
            if (vehicleBuilder_.isEmpty()) {
              vehicleBuilder_.dispose();
              vehicleBuilder_ = null;
              vehicle_ = other.vehicle_;
              bitField1_ = (bitField1_ & ~0x00200000);
              vehicleBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getVehicleFieldBuilder() : null;
            } else {
              vehicleBuilder_.addAllMessages(other.vehicle_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasState()) {
          
          return false;
        }
        if (!hasSTCASE()) {
          
          return false;
        }
        if (!hasVETOTAL()) {
          
          return false;
        }
        if (!hasVEFORMS()) {
          
          return false;
        }
        if (!hasPVHINVL()) {
          
          return false;
        }
        if (!hasPEDS()) {
          
          return false;
        }
        if (!hasPERNOTMVIT()) {
          
          return false;
        }
        if (!hasPERMVIT()) {
          
          return false;
        }
        if (!hasPersonCount()) {
          
          return false;
        }
        if (!hasCOUNTY()) {
          
          return false;
        }
        if (!hasCITY()) {
          
          return false;
        }
        if (!hasDAY()) {
          
          return false;
        }
        if (!hasMONTH()) {
          
          return false;
        }
        if (!hasYEAR()) {
          
          return false;
        }
        if (!hasDAYWEEK()) {
          
          return false;
        }
        if (!hasHOUR()) {
          
          return false;
        }
        if (!hasMINUTE()) {
          
          return false;
        }
        if (!hasNHS()) {
          
          return false;
        }
        if (!hasRURURB()) {
          
          return false;
        }
        if (!hasFUNCSYS()) {
          
          return false;
        }
        if (!hasRDOWNER()) {
          
          return false;
        }
        if (!hasROUTE()) {
          
          return false;
        }
        if (!hasTWAYID()) {
          
          return false;
        }
        if (!hasMILEPT()) {
          
          return false;
        }
        if (!hasSPJUR()) {
          
          return false;
        }
        if (!hasHARMEV()) {
          
          return false;
        }
        if (!hasMANCOLL()) {
          
          return false;
        }
        if (!hasRELJCT1()) {
          
          return false;
        }
        if (!hasRELJCT2()) {
          
          return false;
        }
        if (!hasTYPINT()) {
          
          return false;
        }
        if (!hasWRKZONE()) {
          
          return false;
        }
        if (!hasRELROAD()) {
          
          return false;
        }
        if (!hasLGTCOND()) {
          
          return false;
        }
        if (!hasWEATHER1()) {
          
          return false;
        }
        if (!hasWEATHER2()) {
          
          return false;
        }
        if (!hasWEATHER()) {
          
          return false;
        }
        if (!hasSCHBUS()) {
          
          return false;
        }
        if (!hasRAIL()) {
          
          return false;
        }
        if (!hasNOTHOUR()) {
          
          return false;
        }
        if (!hasNOTMIN()) {
          
          return false;
        }
        if (!hasARRHOUR()) {
          
          return false;
        }
        if (!hasARRMIN()) {
          
          return false;
        }
        if (!hasHOSPHR()) {
          
          return false;
        }
        if (!hasHOSPMN()) {
          
          return false;
        }
        if (!hasCF1()) {
          
          return false;
        }
        if (!hasCF2()) {
          
          return false;
        }
        if (!hasCF3()) {
          
          return false;
        }
        if (!hasFATALS()) {
          
          return false;
        }
        if (!hasDRUNKDR()) {
          
          return false;
        }
        for (int i = 0; i < getPersonsCount(); i++) {
          if (!getPersons(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getVehicleCount(); i++) {
          if (!getVehicle(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        boa.types.transportation.Accident.Crash parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (boa.types.transportation.Accident.Crash) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      // required .boa.types.transportation.STATE state = 1;
      private boa.types.transportation.State.STATE state_ = boa.types.transportation.State.STATE.Alabama;
      /**
       * <code>required .boa.types.transportation.STATE state = 1;</code>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .boa.types.transportation.STATE state = 1;</code>
       */
      public boa.types.transportation.State.STATE getState() {
        return state_;
      }
      /**
       * <code>required .boa.types.transportation.STATE state = 1;</code>
       */
      public Builder setState(boa.types.transportation.State.STATE value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .boa.types.transportation.STATE state = 1;</code>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000001);
        state_ = boa.types.transportation.State.STATE.Alabama;
        onChanged();
        return this;
      }

      // required int32 ST_CASE = 2;
      private int sTCASE_ ;
      /**
       * <code>required int32 ST_CASE = 2;</code>
       */
      public boolean hasSTCASE() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 ST_CASE = 2;</code>
       */
      public int getSTCASE() {
        return sTCASE_;
      }
      /**
       * <code>required int32 ST_CASE = 2;</code>
       */
      public Builder setSTCASE(int value) {
        bitField0_ |= 0x00000002;
        sTCASE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 ST_CASE = 2;</code>
       */
      public Builder clearSTCASE() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sTCASE_ = 0;
        onChanged();
        return this;
      }

      // required int32 VE_TOTAL = 3;
      private int vETOTAL_ ;
      /**
       * <code>required int32 VE_TOTAL = 3;</code>
       */
      public boolean hasVETOTAL() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 VE_TOTAL = 3;</code>
       */
      public int getVETOTAL() {
        return vETOTAL_;
      }
      /**
       * <code>required int32 VE_TOTAL = 3;</code>
       */
      public Builder setVETOTAL(int value) {
        bitField0_ |= 0x00000004;
        vETOTAL_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 VE_TOTAL = 3;</code>
       */
      public Builder clearVETOTAL() {
        bitField0_ = (bitField0_ & ~0x00000004);
        vETOTAL_ = 0;
        onChanged();
        return this;
      }

      // required int32 VE_FORMS = 4;
      private int vEFORMS_ ;
      /**
       * <code>required int32 VE_FORMS = 4;</code>
       */
      public boolean hasVEFORMS() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 VE_FORMS = 4;</code>
       */
      public int getVEFORMS() {
        return vEFORMS_;
      }
      /**
       * <code>required int32 VE_FORMS = 4;</code>
       */
      public Builder setVEFORMS(int value) {
        bitField0_ |= 0x00000008;
        vEFORMS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 VE_FORMS = 4;</code>
       */
      public Builder clearVEFORMS() {
        bitField0_ = (bitField0_ & ~0x00000008);
        vEFORMS_ = 0;
        onChanged();
        return this;
      }

      // required int32 PVH_INVL = 5;
      private int pVHINVL_ ;
      /**
       * <code>required int32 PVH_INVL = 5;</code>
       */
      public boolean hasPVHINVL() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 PVH_INVL = 5;</code>
       */
      public int getPVHINVL() {
        return pVHINVL_;
      }
      /**
       * <code>required int32 PVH_INVL = 5;</code>
       */
      public Builder setPVHINVL(int value) {
        bitField0_ |= 0x00000010;
        pVHINVL_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 PVH_INVL = 5;</code>
       */
      public Builder clearPVHINVL() {
        bitField0_ = (bitField0_ & ~0x00000010);
        pVHINVL_ = 0;
        onChanged();
        return this;
      }

      // required int32 PEDS = 6;
      private int pEDS_ ;
      /**
       * <code>required int32 PEDS = 6;</code>
       */
      public boolean hasPEDS() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 PEDS = 6;</code>
       */
      public int getPEDS() {
        return pEDS_;
      }
      /**
       * <code>required int32 PEDS = 6;</code>
       */
      public Builder setPEDS(int value) {
        bitField0_ |= 0x00000020;
        pEDS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 PEDS = 6;</code>
       */
      public Builder clearPEDS() {
        bitField0_ = (bitField0_ & ~0x00000020);
        pEDS_ = 0;
        onChanged();
        return this;
      }

      // required int32 PERNOTMVIT = 7;
      private int pERNOTMVIT_ ;
      /**
       * <code>required int32 PERNOTMVIT = 7;</code>
       */
      public boolean hasPERNOTMVIT() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 PERNOTMVIT = 7;</code>
       */
      public int getPERNOTMVIT() {
        return pERNOTMVIT_;
      }
      /**
       * <code>required int32 PERNOTMVIT = 7;</code>
       */
      public Builder setPERNOTMVIT(int value) {
        bitField0_ |= 0x00000040;
        pERNOTMVIT_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 PERNOTMVIT = 7;</code>
       */
      public Builder clearPERNOTMVIT() {
        bitField0_ = (bitField0_ & ~0x00000040);
        pERNOTMVIT_ = 0;
        onChanged();
        return this;
      }

      // required int32 PERMVIT = 8;
      private int pERMVIT_ ;
      /**
       * <code>required int32 PERMVIT = 8;</code>
       */
      public boolean hasPERMVIT() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 PERMVIT = 8;</code>
       */
      public int getPERMVIT() {
        return pERMVIT_;
      }
      /**
       * <code>required int32 PERMVIT = 8;</code>
       */
      public Builder setPERMVIT(int value) {
        bitField0_ |= 0x00000080;
        pERMVIT_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 PERMVIT = 8;</code>
       */
      public Builder clearPERMVIT() {
        bitField0_ = (bitField0_ & ~0x00000080);
        pERMVIT_ = 0;
        onChanged();
        return this;
      }

      // required int32 person_count = 9;
      private int personCount_ ;
      /**
       * <code>required int32 person_count = 9;</code>
       */
      public boolean hasPersonCount() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required int32 person_count = 9;</code>
       */
      public int getPersonCount() {
        return personCount_;
      }
      /**
       * <code>required int32 person_count = 9;</code>
       */
      public Builder setPersonCount(int value) {
        bitField0_ |= 0x00000100;
        personCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 person_count = 9;</code>
       */
      public Builder clearPersonCount() {
        bitField0_ = (bitField0_ & ~0x00000100);
        personCount_ = 0;
        onChanged();
        return this;
      }

      // required int32 COUNTY = 10;
      private int cOUNTY_ ;
      /**
       * <code>required int32 COUNTY = 10;</code>
       */
      public boolean hasCOUNTY() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required int32 COUNTY = 10;</code>
       */
      public int getCOUNTY() {
        return cOUNTY_;
      }
      /**
       * <code>required int32 COUNTY = 10;</code>
       */
      public Builder setCOUNTY(int value) {
        bitField0_ |= 0x00000200;
        cOUNTY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 COUNTY = 10;</code>
       */
      public Builder clearCOUNTY() {
        bitField0_ = (bitField0_ & ~0x00000200);
        cOUNTY_ = 0;
        onChanged();
        return this;
      }

      // required int32 CITY = 11;
      private int cITY_ ;
      /**
       * <code>required int32 CITY = 11;</code>
       */
      public boolean hasCITY() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required int32 CITY = 11;</code>
       */
      public int getCITY() {
        return cITY_;
      }
      /**
       * <code>required int32 CITY = 11;</code>
       */
      public Builder setCITY(int value) {
        bitField0_ |= 0x00000400;
        cITY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 CITY = 11;</code>
       */
      public Builder clearCITY() {
        bitField0_ = (bitField0_ & ~0x00000400);
        cITY_ = 0;
        onChanged();
        return this;
      }

      // required int32 DAY = 12;
      private int dAY_ ;
      /**
       * <code>required int32 DAY = 12;</code>
       */
      public boolean hasDAY() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required int32 DAY = 12;</code>
       */
      public int getDAY() {
        return dAY_;
      }
      /**
       * <code>required int32 DAY = 12;</code>
       */
      public Builder setDAY(int value) {
        bitField0_ |= 0x00000800;
        dAY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 DAY = 12;</code>
       */
      public Builder clearDAY() {
        bitField0_ = (bitField0_ & ~0x00000800);
        dAY_ = 0;
        onChanged();
        return this;
      }

      // required int32 MONTH = 13;
      private int mONTH_ ;
      /**
       * <code>required int32 MONTH = 13;</code>
       */
      public boolean hasMONTH() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required int32 MONTH = 13;</code>
       */
      public int getMONTH() {
        return mONTH_;
      }
      /**
       * <code>required int32 MONTH = 13;</code>
       */
      public Builder setMONTH(int value) {
        bitField0_ |= 0x00001000;
        mONTH_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 MONTH = 13;</code>
       */
      public Builder clearMONTH() {
        bitField0_ = (bitField0_ & ~0x00001000);
        mONTH_ = 0;
        onChanged();
        return this;
      }

      // required int32 YEAR = 14;
      private int yEAR_ ;
      /**
       * <code>required int32 YEAR = 14;</code>
       */
      public boolean hasYEAR() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>required int32 YEAR = 14;</code>
       */
      public int getYEAR() {
        return yEAR_;
      }
      /**
       * <code>required int32 YEAR = 14;</code>
       */
      public Builder setYEAR(int value) {
        bitField0_ |= 0x00002000;
        yEAR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 YEAR = 14;</code>
       */
      public Builder clearYEAR() {
        bitField0_ = (bitField0_ & ~0x00002000);
        yEAR_ = 0;
        onChanged();
        return this;
      }

      // required int32 DAY_WEEK = 15;
      private int dAYWEEK_ ;
      /**
       * <code>required int32 DAY_WEEK = 15;</code>
       */
      public boolean hasDAYWEEK() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>required int32 DAY_WEEK = 15;</code>
       */
      public int getDAYWEEK() {
        return dAYWEEK_;
      }
      /**
       * <code>required int32 DAY_WEEK = 15;</code>
       */
      public Builder setDAYWEEK(int value) {
        bitField0_ |= 0x00004000;
        dAYWEEK_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 DAY_WEEK = 15;</code>
       */
      public Builder clearDAYWEEK() {
        bitField0_ = (bitField0_ & ~0x00004000);
        dAYWEEK_ = 0;
        onChanged();
        return this;
      }

      // required int32 HOUR = 16;
      private int hOUR_ ;
      /**
       * <code>required int32 HOUR = 16;</code>
       */
      public boolean hasHOUR() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>required int32 HOUR = 16;</code>
       */
      public int getHOUR() {
        return hOUR_;
      }
      /**
       * <code>required int32 HOUR = 16;</code>
       */
      public Builder setHOUR(int value) {
        bitField0_ |= 0x00008000;
        hOUR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 HOUR = 16;</code>
       */
      public Builder clearHOUR() {
        bitField0_ = (bitField0_ & ~0x00008000);
        hOUR_ = 0;
        onChanged();
        return this;
      }

      // required int32 MINUTE = 17;
      private int mINUTE_ ;
      /**
       * <code>required int32 MINUTE = 17;</code>
       */
      public boolean hasMINUTE() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>required int32 MINUTE = 17;</code>
       */
      public int getMINUTE() {
        return mINUTE_;
      }
      /**
       * <code>required int32 MINUTE = 17;</code>
       */
      public Builder setMINUTE(int value) {
        bitField0_ |= 0x00010000;
        mINUTE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 MINUTE = 17;</code>
       */
      public Builder clearMINUTE() {
        bitField0_ = (bitField0_ & ~0x00010000);
        mINUTE_ = 0;
        onChanged();
        return this;
      }

      // required int32 NHS = 18;
      private int nHS_ ;
      /**
       * <code>required int32 NHS = 18;</code>
       */
      public boolean hasNHS() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>required int32 NHS = 18;</code>
       */
      public int getNHS() {
        return nHS_;
      }
      /**
       * <code>required int32 NHS = 18;</code>
       */
      public Builder setNHS(int value) {
        bitField0_ |= 0x00020000;
        nHS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 NHS = 18;</code>
       */
      public Builder clearNHS() {
        bitField0_ = (bitField0_ & ~0x00020000);
        nHS_ = 0;
        onChanged();
        return this;
      }

      // required int32 RUR_URB = 19;
      private int rURURB_ ;
      /**
       * <code>required int32 RUR_URB = 19;</code>
       */
      public boolean hasRURURB() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>required int32 RUR_URB = 19;</code>
       */
      public int getRURURB() {
        return rURURB_;
      }
      /**
       * <code>required int32 RUR_URB = 19;</code>
       */
      public Builder setRURURB(int value) {
        bitField0_ |= 0x00040000;
        rURURB_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 RUR_URB = 19;</code>
       */
      public Builder clearRURURB() {
        bitField0_ = (bitField0_ & ~0x00040000);
        rURURB_ = 0;
        onChanged();
        return this;
      }

      // required int32 FUNC_SYS = 20;
      private int fUNCSYS_ ;
      /**
       * <code>required int32 FUNC_SYS = 20;</code>
       */
      public boolean hasFUNCSYS() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>required int32 FUNC_SYS = 20;</code>
       */
      public int getFUNCSYS() {
        return fUNCSYS_;
      }
      /**
       * <code>required int32 FUNC_SYS = 20;</code>
       */
      public Builder setFUNCSYS(int value) {
        bitField0_ |= 0x00080000;
        fUNCSYS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 FUNC_SYS = 20;</code>
       */
      public Builder clearFUNCSYS() {
        bitField0_ = (bitField0_ & ~0x00080000);
        fUNCSYS_ = 0;
        onChanged();
        return this;
      }

      // required int32 RD_OWNER = 21;
      private int rDOWNER_ ;
      /**
       * <code>required int32 RD_OWNER = 21;</code>
       */
      public boolean hasRDOWNER() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>required int32 RD_OWNER = 21;</code>
       */
      public int getRDOWNER() {
        return rDOWNER_;
      }
      /**
       * <code>required int32 RD_OWNER = 21;</code>
       */
      public Builder setRDOWNER(int value) {
        bitField0_ |= 0x00100000;
        rDOWNER_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 RD_OWNER = 21;</code>
       */
      public Builder clearRDOWNER() {
        bitField0_ = (bitField0_ & ~0x00100000);
        rDOWNER_ = 0;
        onChanged();
        return this;
      }

      // required int32 ROUTE = 22;
      private int rOUTE_ ;
      /**
       * <code>required int32 ROUTE = 22;</code>
       */
      public boolean hasROUTE() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>required int32 ROUTE = 22;</code>
       */
      public int getROUTE() {
        return rOUTE_;
      }
      /**
       * <code>required int32 ROUTE = 22;</code>
       */
      public Builder setROUTE(int value) {
        bitField0_ |= 0x00200000;
        rOUTE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 ROUTE = 22;</code>
       */
      public Builder clearROUTE() {
        bitField0_ = (bitField0_ & ~0x00200000);
        rOUTE_ = 0;
        onChanged();
        return this;
      }

      // required string TWAY_ID = 23;
      private java.lang.Object tWAYID_ = "";
      /**
       * <code>required string TWAY_ID = 23;</code>
       */
      public boolean hasTWAYID() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>required string TWAY_ID = 23;</code>
       */
      public java.lang.String getTWAYID() {
        java.lang.Object ref = tWAYID_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          tWAYID_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string TWAY_ID = 23;</code>
       */
      public com.google.protobuf.ByteString
          getTWAYIDBytes() {
        java.lang.Object ref = tWAYID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tWAYID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string TWAY_ID = 23;</code>
       */
      public Builder setTWAYID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00400000;
        tWAYID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string TWAY_ID = 23;</code>
       */
      public Builder clearTWAYID() {
        bitField0_ = (bitField0_ & ~0x00400000);
        tWAYID_ = getDefaultInstance().getTWAYID();
        onChanged();
        return this;
      }
      /**
       * <code>required string TWAY_ID = 23;</code>
       */
      public Builder setTWAYIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00400000;
        tWAYID_ = value;
        onChanged();
        return this;
      }

      // optional string TWAY_ID2 = 24;
      private java.lang.Object tWAYID2_ = "";
      /**
       * <code>optional string TWAY_ID2 = 24;</code>
       */
      public boolean hasTWAYID2() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional string TWAY_ID2 = 24;</code>
       */
      public java.lang.String getTWAYID2() {
        java.lang.Object ref = tWAYID2_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          tWAYID2_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string TWAY_ID2 = 24;</code>
       */
      public com.google.protobuf.ByteString
          getTWAYID2Bytes() {
        java.lang.Object ref = tWAYID2_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tWAYID2_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string TWAY_ID2 = 24;</code>
       */
      public Builder setTWAYID2(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00800000;
        tWAYID2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string TWAY_ID2 = 24;</code>
       */
      public Builder clearTWAYID2() {
        bitField0_ = (bitField0_ & ~0x00800000);
        tWAYID2_ = getDefaultInstance().getTWAYID2();
        onChanged();
        return this;
      }
      /**
       * <code>optional string TWAY_ID2 = 24;</code>
       */
      public Builder setTWAYID2Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00800000;
        tWAYID2_ = value;
        onChanged();
        return this;
      }

      // required int32 MILEPT = 25;
      private int mILEPT_ ;
      /**
       * <code>required int32 MILEPT = 25;</code>
       */
      public boolean hasMILEPT() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>required int32 MILEPT = 25;</code>
       */
      public int getMILEPT() {
        return mILEPT_;
      }
      /**
       * <code>required int32 MILEPT = 25;</code>
       */
      public Builder setMILEPT(int value) {
        bitField0_ |= 0x01000000;
        mILEPT_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 MILEPT = 25;</code>
       */
      public Builder clearMILEPT() {
        bitField0_ = (bitField0_ & ~0x01000000);
        mILEPT_ = 0;
        onChanged();
        return this;
      }

      // optional float LATITUDE = 26;
      private float lATITUDE_ ;
      /**
       * <code>optional float LATITUDE = 26;</code>
       */
      public boolean hasLATITUDE() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional float LATITUDE = 26;</code>
       */
      public float getLATITUDE() {
        return lATITUDE_;
      }
      /**
       * <code>optional float LATITUDE = 26;</code>
       */
      public Builder setLATITUDE(float value) {
        bitField0_ |= 0x02000000;
        lATITUDE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float LATITUDE = 26;</code>
       */
      public Builder clearLATITUDE() {
        bitField0_ = (bitField0_ & ~0x02000000);
        lATITUDE_ = 0F;
        onChanged();
        return this;
      }

      // optional float LONGITUD = 27;
      private float lONGITUD_ ;
      /**
       * <code>optional float LONGITUD = 27;</code>
       */
      public boolean hasLONGITUD() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional float LONGITUD = 27;</code>
       */
      public float getLONGITUD() {
        return lONGITUD_;
      }
      /**
       * <code>optional float LONGITUD = 27;</code>
       */
      public Builder setLONGITUD(float value) {
        bitField0_ |= 0x04000000;
        lONGITUD_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float LONGITUD = 27;</code>
       */
      public Builder clearLONGITUD() {
        bitField0_ = (bitField0_ & ~0x04000000);
        lONGITUD_ = 0F;
        onChanged();
        return this;
      }

      // required int32 SP_JUR = 28;
      private int sPJUR_ ;
      /**
       * <code>required int32 SP_JUR = 28;</code>
       */
      public boolean hasSPJUR() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>required int32 SP_JUR = 28;</code>
       */
      public int getSPJUR() {
        return sPJUR_;
      }
      /**
       * <code>required int32 SP_JUR = 28;</code>
       */
      public Builder setSPJUR(int value) {
        bitField0_ |= 0x08000000;
        sPJUR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 SP_JUR = 28;</code>
       */
      public Builder clearSPJUR() {
        bitField0_ = (bitField0_ & ~0x08000000);
        sPJUR_ = 0;
        onChanged();
        return this;
      }

      // required int32 HARM_EV = 29;
      private int hARMEV_ ;
      /**
       * <code>required int32 HARM_EV = 29;</code>
       */
      public boolean hasHARMEV() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>required int32 HARM_EV = 29;</code>
       */
      public int getHARMEV() {
        return hARMEV_;
      }
      /**
       * <code>required int32 HARM_EV = 29;</code>
       */
      public Builder setHARMEV(int value) {
        bitField0_ |= 0x10000000;
        hARMEV_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 HARM_EV = 29;</code>
       */
      public Builder clearHARMEV() {
        bitField0_ = (bitField0_ & ~0x10000000);
        hARMEV_ = 0;
        onChanged();
        return this;
      }

      // required int32 MAN_COLL = 30;
      private int mANCOLL_ ;
      /**
       * <code>required int32 MAN_COLL = 30;</code>
       */
      public boolean hasMANCOLL() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>required int32 MAN_COLL = 30;</code>
       */
      public int getMANCOLL() {
        return mANCOLL_;
      }
      /**
       * <code>required int32 MAN_COLL = 30;</code>
       */
      public Builder setMANCOLL(int value) {
        bitField0_ |= 0x20000000;
        mANCOLL_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 MAN_COLL = 30;</code>
       */
      public Builder clearMANCOLL() {
        bitField0_ = (bitField0_ & ~0x20000000);
        mANCOLL_ = 0;
        onChanged();
        return this;
      }

      // required int32 RELJCT1 = 31;
      private int rELJCT1_ ;
      /**
       * <code>required int32 RELJCT1 = 31;</code>
       */
      public boolean hasRELJCT1() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>required int32 RELJCT1 = 31;</code>
       */
      public int getRELJCT1() {
        return rELJCT1_;
      }
      /**
       * <code>required int32 RELJCT1 = 31;</code>
       */
      public Builder setRELJCT1(int value) {
        bitField0_ |= 0x40000000;
        rELJCT1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 RELJCT1 = 31;</code>
       */
      public Builder clearRELJCT1() {
        bitField0_ = (bitField0_ & ~0x40000000);
        rELJCT1_ = 0;
        onChanged();
        return this;
      }

      // required int32 RELJCT2 = 32;
      private int rELJCT2_ ;
      /**
       * <code>required int32 RELJCT2 = 32;</code>
       */
      public boolean hasRELJCT2() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>required int32 RELJCT2 = 32;</code>
       */
      public int getRELJCT2() {
        return rELJCT2_;
      }
      /**
       * <code>required int32 RELJCT2 = 32;</code>
       */
      public Builder setRELJCT2(int value) {
        bitField0_ |= 0x80000000;
        rELJCT2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 RELJCT2 = 32;</code>
       */
      public Builder clearRELJCT2() {
        bitField0_ = (bitField0_ & ~0x80000000);
        rELJCT2_ = 0;
        onChanged();
        return this;
      }

      // required int32 TYP_INT = 33;
      private int tYPINT_ ;
      /**
       * <code>required int32 TYP_INT = 33;</code>
       */
      public boolean hasTYPINT() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 TYP_INT = 33;</code>
       */
      public int getTYPINT() {
        return tYPINT_;
      }
      /**
       * <code>required int32 TYP_INT = 33;</code>
       */
      public Builder setTYPINT(int value) {
        bitField1_ |= 0x00000001;
        tYPINT_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 TYP_INT = 33;</code>
       */
      public Builder clearTYPINT() {
        bitField1_ = (bitField1_ & ~0x00000001);
        tYPINT_ = 0;
        onChanged();
        return this;
      }

      // required int32 WRK_ZONE = 34;
      private int wRKZONE_ ;
      /**
       * <code>required int32 WRK_ZONE = 34;</code>
       */
      public boolean hasWRKZONE() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 WRK_ZONE = 34;</code>
       */
      public int getWRKZONE() {
        return wRKZONE_;
      }
      /**
       * <code>required int32 WRK_ZONE = 34;</code>
       */
      public Builder setWRKZONE(int value) {
        bitField1_ |= 0x00000002;
        wRKZONE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 WRK_ZONE = 34;</code>
       */
      public Builder clearWRKZONE() {
        bitField1_ = (bitField1_ & ~0x00000002);
        wRKZONE_ = 0;
        onChanged();
        return this;
      }

      // required int32 REL_ROAD = 35;
      private int rELROAD_ ;
      /**
       * <code>required int32 REL_ROAD = 35;</code>
       */
      public boolean hasRELROAD() {
        return ((bitField1_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 REL_ROAD = 35;</code>
       */
      public int getRELROAD() {
        return rELROAD_;
      }
      /**
       * <code>required int32 REL_ROAD = 35;</code>
       */
      public Builder setRELROAD(int value) {
        bitField1_ |= 0x00000004;
        rELROAD_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 REL_ROAD = 35;</code>
       */
      public Builder clearRELROAD() {
        bitField1_ = (bitField1_ & ~0x00000004);
        rELROAD_ = 0;
        onChanged();
        return this;
      }

      // required int32 LGT_COND = 36;
      private int lGTCOND_ ;
      /**
       * <code>required int32 LGT_COND = 36;</code>
       */
      public boolean hasLGTCOND() {
        return ((bitField1_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 LGT_COND = 36;</code>
       */
      public int getLGTCOND() {
        return lGTCOND_;
      }
      /**
       * <code>required int32 LGT_COND = 36;</code>
       */
      public Builder setLGTCOND(int value) {
        bitField1_ |= 0x00000008;
        lGTCOND_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 LGT_COND = 36;</code>
       */
      public Builder clearLGTCOND() {
        bitField1_ = (bitField1_ & ~0x00000008);
        lGTCOND_ = 0;
        onChanged();
        return this;
      }

      // required int32 WEATHER1 = 37;
      private int wEATHER1_ ;
      /**
       * <code>required int32 WEATHER1 = 37;</code>
       */
      public boolean hasWEATHER1() {
        return ((bitField1_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 WEATHER1 = 37;</code>
       */
      public int getWEATHER1() {
        return wEATHER1_;
      }
      /**
       * <code>required int32 WEATHER1 = 37;</code>
       */
      public Builder setWEATHER1(int value) {
        bitField1_ |= 0x00000010;
        wEATHER1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 WEATHER1 = 37;</code>
       */
      public Builder clearWEATHER1() {
        bitField1_ = (bitField1_ & ~0x00000010);
        wEATHER1_ = 0;
        onChanged();
        return this;
      }

      // required int32 WEATHER2 = 38;
      private int wEATHER2_ ;
      /**
       * <code>required int32 WEATHER2 = 38;</code>
       */
      public boolean hasWEATHER2() {
        return ((bitField1_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 WEATHER2 = 38;</code>
       */
      public int getWEATHER2() {
        return wEATHER2_;
      }
      /**
       * <code>required int32 WEATHER2 = 38;</code>
       */
      public Builder setWEATHER2(int value) {
        bitField1_ |= 0x00000020;
        wEATHER2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 WEATHER2 = 38;</code>
       */
      public Builder clearWEATHER2() {
        bitField1_ = (bitField1_ & ~0x00000020);
        wEATHER2_ = 0;
        onChanged();
        return this;
      }

      // required int32 WEATHER = 39;
      private int wEATHER_ ;
      /**
       * <code>required int32 WEATHER = 39;</code>
       */
      public boolean hasWEATHER() {
        return ((bitField1_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 WEATHER = 39;</code>
       */
      public int getWEATHER() {
        return wEATHER_;
      }
      /**
       * <code>required int32 WEATHER = 39;</code>
       */
      public Builder setWEATHER(int value) {
        bitField1_ |= 0x00000040;
        wEATHER_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 WEATHER = 39;</code>
       */
      public Builder clearWEATHER() {
        bitField1_ = (bitField1_ & ~0x00000040);
        wEATHER_ = 0;
        onChanged();
        return this;
      }

      // required int32 SCH_BUS = 40;
      private int sCHBUS_ ;
      /**
       * <code>required int32 SCH_BUS = 40;</code>
       */
      public boolean hasSCHBUS() {
        return ((bitField1_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 SCH_BUS = 40;</code>
       */
      public int getSCHBUS() {
        return sCHBUS_;
      }
      /**
       * <code>required int32 SCH_BUS = 40;</code>
       */
      public Builder setSCHBUS(int value) {
        bitField1_ |= 0x00000080;
        sCHBUS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 SCH_BUS = 40;</code>
       */
      public Builder clearSCHBUS() {
        bitField1_ = (bitField1_ & ~0x00000080);
        sCHBUS_ = 0;
        onChanged();
        return this;
      }

      // required string RAIL = 41;
      private java.lang.Object rAIL_ = "";
      /**
       * <code>required string RAIL = 41;</code>
       */
      public boolean hasRAIL() {
        return ((bitField1_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required string RAIL = 41;</code>
       */
      public java.lang.String getRAIL() {
        java.lang.Object ref = rAIL_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          rAIL_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string RAIL = 41;</code>
       */
      public com.google.protobuf.ByteString
          getRAILBytes() {
        java.lang.Object ref = rAIL_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          rAIL_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string RAIL = 41;</code>
       */
      public Builder setRAIL(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000100;
        rAIL_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string RAIL = 41;</code>
       */
      public Builder clearRAIL() {
        bitField1_ = (bitField1_ & ~0x00000100);
        rAIL_ = getDefaultInstance().getRAIL();
        onChanged();
        return this;
      }
      /**
       * <code>required string RAIL = 41;</code>
       */
      public Builder setRAILBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000100;
        rAIL_ = value;
        onChanged();
        return this;
      }

      // required int32 NOT_HOUR = 42;
      private int nOTHOUR_ ;
      /**
       * <code>required int32 NOT_HOUR = 42;</code>
       */
      public boolean hasNOTHOUR() {
        return ((bitField1_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required int32 NOT_HOUR = 42;</code>
       */
      public int getNOTHOUR() {
        return nOTHOUR_;
      }
      /**
       * <code>required int32 NOT_HOUR = 42;</code>
       */
      public Builder setNOTHOUR(int value) {
        bitField1_ |= 0x00000200;
        nOTHOUR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 NOT_HOUR = 42;</code>
       */
      public Builder clearNOTHOUR() {
        bitField1_ = (bitField1_ & ~0x00000200);
        nOTHOUR_ = 0;
        onChanged();
        return this;
      }

      // required int32 NOT_MIN = 43;
      private int nOTMIN_ ;
      /**
       * <code>required int32 NOT_MIN = 43;</code>
       */
      public boolean hasNOTMIN() {
        return ((bitField1_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required int32 NOT_MIN = 43;</code>
       */
      public int getNOTMIN() {
        return nOTMIN_;
      }
      /**
       * <code>required int32 NOT_MIN = 43;</code>
       */
      public Builder setNOTMIN(int value) {
        bitField1_ |= 0x00000400;
        nOTMIN_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 NOT_MIN = 43;</code>
       */
      public Builder clearNOTMIN() {
        bitField1_ = (bitField1_ & ~0x00000400);
        nOTMIN_ = 0;
        onChanged();
        return this;
      }

      // required int32 ARR_HOUR = 44;
      private int aRRHOUR_ ;
      /**
       * <code>required int32 ARR_HOUR = 44;</code>
       */
      public boolean hasARRHOUR() {
        return ((bitField1_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required int32 ARR_HOUR = 44;</code>
       */
      public int getARRHOUR() {
        return aRRHOUR_;
      }
      /**
       * <code>required int32 ARR_HOUR = 44;</code>
       */
      public Builder setARRHOUR(int value) {
        bitField1_ |= 0x00000800;
        aRRHOUR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 ARR_HOUR = 44;</code>
       */
      public Builder clearARRHOUR() {
        bitField1_ = (bitField1_ & ~0x00000800);
        aRRHOUR_ = 0;
        onChanged();
        return this;
      }

      // required int32 ARR_MIN = 45;
      private int aRRMIN_ ;
      /**
       * <code>required int32 ARR_MIN = 45;</code>
       */
      public boolean hasARRMIN() {
        return ((bitField1_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required int32 ARR_MIN = 45;</code>
       */
      public int getARRMIN() {
        return aRRMIN_;
      }
      /**
       * <code>required int32 ARR_MIN = 45;</code>
       */
      public Builder setARRMIN(int value) {
        bitField1_ |= 0x00001000;
        aRRMIN_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 ARR_MIN = 45;</code>
       */
      public Builder clearARRMIN() {
        bitField1_ = (bitField1_ & ~0x00001000);
        aRRMIN_ = 0;
        onChanged();
        return this;
      }

      // required int32 HOSP_HR = 46;
      private int hOSPHR_ ;
      /**
       * <code>required int32 HOSP_HR = 46;</code>
       */
      public boolean hasHOSPHR() {
        return ((bitField1_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>required int32 HOSP_HR = 46;</code>
       */
      public int getHOSPHR() {
        return hOSPHR_;
      }
      /**
       * <code>required int32 HOSP_HR = 46;</code>
       */
      public Builder setHOSPHR(int value) {
        bitField1_ |= 0x00002000;
        hOSPHR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 HOSP_HR = 46;</code>
       */
      public Builder clearHOSPHR() {
        bitField1_ = (bitField1_ & ~0x00002000);
        hOSPHR_ = 0;
        onChanged();
        return this;
      }

      // required int32 HOSP_MN = 47;
      private int hOSPMN_ ;
      /**
       * <code>required int32 HOSP_MN = 47;</code>
       */
      public boolean hasHOSPMN() {
        return ((bitField1_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>required int32 HOSP_MN = 47;</code>
       */
      public int getHOSPMN() {
        return hOSPMN_;
      }
      /**
       * <code>required int32 HOSP_MN = 47;</code>
       */
      public Builder setHOSPMN(int value) {
        bitField1_ |= 0x00004000;
        hOSPMN_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 HOSP_MN = 47;</code>
       */
      public Builder clearHOSPMN() {
        bitField1_ = (bitField1_ & ~0x00004000);
        hOSPMN_ = 0;
        onChanged();
        return this;
      }

      // required int32 CF1 = 48;
      private int cF1_ ;
      /**
       * <code>required int32 CF1 = 48;</code>
       */
      public boolean hasCF1() {
        return ((bitField1_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>required int32 CF1 = 48;</code>
       */
      public int getCF1() {
        return cF1_;
      }
      /**
       * <code>required int32 CF1 = 48;</code>
       */
      public Builder setCF1(int value) {
        bitField1_ |= 0x00008000;
        cF1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 CF1 = 48;</code>
       */
      public Builder clearCF1() {
        bitField1_ = (bitField1_ & ~0x00008000);
        cF1_ = 0;
        onChanged();
        return this;
      }

      // required int32 CF2 = 49;
      private int cF2_ ;
      /**
       * <code>required int32 CF2 = 49;</code>
       */
      public boolean hasCF2() {
        return ((bitField1_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>required int32 CF2 = 49;</code>
       */
      public int getCF2() {
        return cF2_;
      }
      /**
       * <code>required int32 CF2 = 49;</code>
       */
      public Builder setCF2(int value) {
        bitField1_ |= 0x00010000;
        cF2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 CF2 = 49;</code>
       */
      public Builder clearCF2() {
        bitField1_ = (bitField1_ & ~0x00010000);
        cF2_ = 0;
        onChanged();
        return this;
      }

      // required int32 CF3 = 50;
      private int cF3_ ;
      /**
       * <code>required int32 CF3 = 50;</code>
       */
      public boolean hasCF3() {
        return ((bitField1_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>required int32 CF3 = 50;</code>
       */
      public int getCF3() {
        return cF3_;
      }
      /**
       * <code>required int32 CF3 = 50;</code>
       */
      public Builder setCF3(int value) {
        bitField1_ |= 0x00020000;
        cF3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 CF3 = 50;</code>
       */
      public Builder clearCF3() {
        bitField1_ = (bitField1_ & ~0x00020000);
        cF3_ = 0;
        onChanged();
        return this;
      }

      // required int32 FATALS = 51;
      private int fATALS_ ;
      /**
       * <code>required int32 FATALS = 51;</code>
       */
      public boolean hasFATALS() {
        return ((bitField1_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>required int32 FATALS = 51;</code>
       */
      public int getFATALS() {
        return fATALS_;
      }
      /**
       * <code>required int32 FATALS = 51;</code>
       */
      public Builder setFATALS(int value) {
        bitField1_ |= 0x00040000;
        fATALS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 FATALS = 51;</code>
       */
      public Builder clearFATALS() {
        bitField1_ = (bitField1_ & ~0x00040000);
        fATALS_ = 0;
        onChanged();
        return this;
      }

      // required int32 DRUNK_DR = 52;
      private int dRUNKDR_ ;
      /**
       * <code>required int32 DRUNK_DR = 52;</code>
       */
      public boolean hasDRUNKDR() {
        return ((bitField1_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>required int32 DRUNK_DR = 52;</code>
       */
      public int getDRUNKDR() {
        return dRUNKDR_;
      }
      /**
       * <code>required int32 DRUNK_DR = 52;</code>
       */
      public Builder setDRUNKDR(int value) {
        bitField1_ |= 0x00080000;
        dRUNKDR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 DRUNK_DR = 52;</code>
       */
      public Builder clearDRUNKDR() {
        bitField1_ = (bitField1_ & ~0x00080000);
        dRUNKDR_ = 0;
        onChanged();
        return this;
      }

      // repeated .boa.types.transportation.Person persons = 53;
      private java.util.List<boa.types.transportation.Individual.Person> persons_ =
        java.util.Collections.emptyList();
      private void ensurePersonsIsMutable() {
        if (!((bitField1_ & 0x00100000) == 0x00100000)) {
          persons_ = new java.util.ArrayList<boa.types.transportation.Individual.Person>(persons_);
          bitField1_ |= 0x00100000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.transportation.Individual.Person, boa.types.transportation.Individual.Person.Builder, boa.types.transportation.Individual.PersonOrBuilder> personsBuilder_;

      /**
       * <code>repeated .boa.types.transportation.Person persons = 53;</code>
       */
      public java.util.List<boa.types.transportation.Individual.Person> getPersonsList() {
        if (personsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(persons_);
        } else {
          return personsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .boa.types.transportation.Person persons = 53;</code>
       */
      public int getPersonsCount() {
        if (personsBuilder_ == null) {
          return persons_.size();
        } else {
          return personsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .boa.types.transportation.Person persons = 53;</code>
       */
      public boa.types.transportation.Individual.Person getPersons(int index) {
        if (personsBuilder_ == null) {
          return persons_.get(index);
        } else {
          return personsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .boa.types.transportation.Person persons = 53;</code>
       */
      public Builder setPersons(
          int index, boa.types.transportation.Individual.Person value) {
        if (personsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePersonsIsMutable();
          persons_.set(index, value);
          onChanged();
        } else {
          personsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.transportation.Person persons = 53;</code>
       */
      public Builder setPersons(
          int index, boa.types.transportation.Individual.Person.Builder builderForValue) {
        if (personsBuilder_ == null) {
          ensurePersonsIsMutable();
          persons_.set(index, builderForValue.build());
          onChanged();
        } else {
          personsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.transportation.Person persons = 53;</code>
       */
      public Builder addPersons(boa.types.transportation.Individual.Person value) {
        if (personsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePersonsIsMutable();
          persons_.add(value);
          onChanged();
        } else {
          personsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.transportation.Person persons = 53;</code>
       */
      public Builder addPersons(
          int index, boa.types.transportation.Individual.Person value) {
        if (personsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePersonsIsMutable();
          persons_.add(index, value);
          onChanged();
        } else {
          personsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.transportation.Person persons = 53;</code>
       */
      public Builder addPersons(
          boa.types.transportation.Individual.Person.Builder builderForValue) {
        if (personsBuilder_ == null) {
          ensurePersonsIsMutable();
          persons_.add(builderForValue.build());
          onChanged();
        } else {
          personsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.transportation.Person persons = 53;</code>
       */
      public Builder addPersons(
          int index, boa.types.transportation.Individual.Person.Builder builderForValue) {
        if (personsBuilder_ == null) {
          ensurePersonsIsMutable();
          persons_.add(index, builderForValue.build());
          onChanged();
        } else {
          personsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.transportation.Person persons = 53;</code>
       */
      public Builder addAllPersons(
          java.lang.Iterable<? extends boa.types.transportation.Individual.Person> values) {
        if (personsBuilder_ == null) {
          ensurePersonsIsMutable();
          super.addAll(values, persons_);
          onChanged();
        } else {
          personsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.transportation.Person persons = 53;</code>
       */
      public Builder clearPersons() {
        if (personsBuilder_ == null) {
          persons_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00100000);
          onChanged();
        } else {
          personsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.transportation.Person persons = 53;</code>
       */
      public Builder removePersons(int index) {
        if (personsBuilder_ == null) {
          ensurePersonsIsMutable();
          persons_.remove(index);
          onChanged();
        } else {
          personsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.transportation.Person persons = 53;</code>
       */
      public boa.types.transportation.Individual.Person.Builder getPersonsBuilder(
          int index) {
        return getPersonsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .boa.types.transportation.Person persons = 53;</code>
       */
      public boa.types.transportation.Individual.PersonOrBuilder getPersonsOrBuilder(
          int index) {
        if (personsBuilder_ == null) {
          return persons_.get(index);  } else {
          return personsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .boa.types.transportation.Person persons = 53;</code>
       */
      public java.util.List<? extends boa.types.transportation.Individual.PersonOrBuilder> 
           getPersonsOrBuilderList() {
        if (personsBuilder_ != null) {
          return personsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(persons_);
        }
      }
      /**
       * <code>repeated .boa.types.transportation.Person persons = 53;</code>
       */
      public boa.types.transportation.Individual.Person.Builder addPersonsBuilder() {
        return getPersonsFieldBuilder().addBuilder(
            boa.types.transportation.Individual.Person.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.transportation.Person persons = 53;</code>
       */
      public boa.types.transportation.Individual.Person.Builder addPersonsBuilder(
          int index) {
        return getPersonsFieldBuilder().addBuilder(
            index, boa.types.transportation.Individual.Person.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.transportation.Person persons = 53;</code>
       */
      public java.util.List<boa.types.transportation.Individual.Person.Builder> 
           getPersonsBuilderList() {
        return getPersonsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.transportation.Individual.Person, boa.types.transportation.Individual.Person.Builder, boa.types.transportation.Individual.PersonOrBuilder> 
          getPersonsFieldBuilder() {
        if (personsBuilder_ == null) {
          personsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              boa.types.transportation.Individual.Person, boa.types.transportation.Individual.Person.Builder, boa.types.transportation.Individual.PersonOrBuilder>(
                  persons_,
                  ((bitField1_ & 0x00100000) == 0x00100000),
                  getParentForChildren(),
                  isClean());
          persons_ = null;
        }
        return personsBuilder_;
      }

      // repeated .boa.types.transportation.Vehicle vehicle = 54;
      private java.util.List<boa.types.transportation.Motor.Vehicle> vehicle_ =
        java.util.Collections.emptyList();
      private void ensureVehicleIsMutable() {
        if (!((bitField1_ & 0x00200000) == 0x00200000)) {
          vehicle_ = new java.util.ArrayList<boa.types.transportation.Motor.Vehicle>(vehicle_);
          bitField1_ |= 0x00200000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.transportation.Motor.Vehicle, boa.types.transportation.Motor.Vehicle.Builder, boa.types.transportation.Motor.VehicleOrBuilder> vehicleBuilder_;

      /**
       * <code>repeated .boa.types.transportation.Vehicle vehicle = 54;</code>
       */
      public java.util.List<boa.types.transportation.Motor.Vehicle> getVehicleList() {
        if (vehicleBuilder_ == null) {
          return java.util.Collections.unmodifiableList(vehicle_);
        } else {
          return vehicleBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .boa.types.transportation.Vehicle vehicle = 54;</code>
       */
      public int getVehicleCount() {
        if (vehicleBuilder_ == null) {
          return vehicle_.size();
        } else {
          return vehicleBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .boa.types.transportation.Vehicle vehicle = 54;</code>
       */
      public boa.types.transportation.Motor.Vehicle getVehicle(int index) {
        if (vehicleBuilder_ == null) {
          return vehicle_.get(index);
        } else {
          return vehicleBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .boa.types.transportation.Vehicle vehicle = 54;</code>
       */
      public Builder setVehicle(
          int index, boa.types.transportation.Motor.Vehicle value) {
        if (vehicleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVehicleIsMutable();
          vehicle_.set(index, value);
          onChanged();
        } else {
          vehicleBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.transportation.Vehicle vehicle = 54;</code>
       */
      public Builder setVehicle(
          int index, boa.types.transportation.Motor.Vehicle.Builder builderForValue) {
        if (vehicleBuilder_ == null) {
          ensureVehicleIsMutable();
          vehicle_.set(index, builderForValue.build());
          onChanged();
        } else {
          vehicleBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.transportation.Vehicle vehicle = 54;</code>
       */
      public Builder addVehicle(boa.types.transportation.Motor.Vehicle value) {
        if (vehicleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVehicleIsMutable();
          vehicle_.add(value);
          onChanged();
        } else {
          vehicleBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.transportation.Vehicle vehicle = 54;</code>
       */
      public Builder addVehicle(
          int index, boa.types.transportation.Motor.Vehicle value) {
        if (vehicleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVehicleIsMutable();
          vehicle_.add(index, value);
          onChanged();
        } else {
          vehicleBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.transportation.Vehicle vehicle = 54;</code>
       */
      public Builder addVehicle(
          boa.types.transportation.Motor.Vehicle.Builder builderForValue) {
        if (vehicleBuilder_ == null) {
          ensureVehicleIsMutable();
          vehicle_.add(builderForValue.build());
          onChanged();
        } else {
          vehicleBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.transportation.Vehicle vehicle = 54;</code>
       */
      public Builder addVehicle(
          int index, boa.types.transportation.Motor.Vehicle.Builder builderForValue) {
        if (vehicleBuilder_ == null) {
          ensureVehicleIsMutable();
          vehicle_.add(index, builderForValue.build());
          onChanged();
        } else {
          vehicleBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.transportation.Vehicle vehicle = 54;</code>
       */
      public Builder addAllVehicle(
          java.lang.Iterable<? extends boa.types.transportation.Motor.Vehicle> values) {
        if (vehicleBuilder_ == null) {
          ensureVehicleIsMutable();
          super.addAll(values, vehicle_);
          onChanged();
        } else {
          vehicleBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.transportation.Vehicle vehicle = 54;</code>
       */
      public Builder clearVehicle() {
        if (vehicleBuilder_ == null) {
          vehicle_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00200000);
          onChanged();
        } else {
          vehicleBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.transportation.Vehicle vehicle = 54;</code>
       */
      public Builder removeVehicle(int index) {
        if (vehicleBuilder_ == null) {
          ensureVehicleIsMutable();
          vehicle_.remove(index);
          onChanged();
        } else {
          vehicleBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .boa.types.transportation.Vehicle vehicle = 54;</code>
       */
      public boa.types.transportation.Motor.Vehicle.Builder getVehicleBuilder(
          int index) {
        return getVehicleFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .boa.types.transportation.Vehicle vehicle = 54;</code>
       */
      public boa.types.transportation.Motor.VehicleOrBuilder getVehicleOrBuilder(
          int index) {
        if (vehicleBuilder_ == null) {
          return vehicle_.get(index);  } else {
          return vehicleBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .boa.types.transportation.Vehicle vehicle = 54;</code>
       */
      public java.util.List<? extends boa.types.transportation.Motor.VehicleOrBuilder> 
           getVehicleOrBuilderList() {
        if (vehicleBuilder_ != null) {
          return vehicleBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(vehicle_);
        }
      }
      /**
       * <code>repeated .boa.types.transportation.Vehicle vehicle = 54;</code>
       */
      public boa.types.transportation.Motor.Vehicle.Builder addVehicleBuilder() {
        return getVehicleFieldBuilder().addBuilder(
            boa.types.transportation.Motor.Vehicle.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.transportation.Vehicle vehicle = 54;</code>
       */
      public boa.types.transportation.Motor.Vehicle.Builder addVehicleBuilder(
          int index) {
        return getVehicleFieldBuilder().addBuilder(
            index, boa.types.transportation.Motor.Vehicle.getDefaultInstance());
      }
      /**
       * <code>repeated .boa.types.transportation.Vehicle vehicle = 54;</code>
       */
      public java.util.List<boa.types.transportation.Motor.Vehicle.Builder> 
           getVehicleBuilderList() {
        return getVehicleFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          boa.types.transportation.Motor.Vehicle, boa.types.transportation.Motor.Vehicle.Builder, boa.types.transportation.Motor.VehicleOrBuilder> 
          getVehicleFieldBuilder() {
        if (vehicleBuilder_ == null) {
          vehicleBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              boa.types.transportation.Motor.Vehicle, boa.types.transportation.Motor.Vehicle.Builder, boa.types.transportation.Motor.VehicleOrBuilder>(
                  vehicle_,
                  ((bitField1_ & 0x00200000) == 0x00200000),
                  getParentForChildren(),
                  isClean());
          vehicle_ = null;
        }
        return vehicleBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:boa.types.transportation.Crash)
    }

    static {
      defaultInstance = new Crash(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:boa.types.transportation.Crash)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_boa_types_transportation_Crash_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_boa_types_transportation_Crash_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016accident.proto\022\030boa.types.transportati" +
      "on\032\013motor.proto\032\020individual.proto\032\013state" +
      ".proto\"\357\007\n\005Crash\022.\n\005state\030\001 \002(\0162\037.boa.ty" +
      "pes.transportation.STATE\022\017\n\007ST_CASE\030\002 \002(" +
      "\005\022\020\n\010VE_TOTAL\030\003 \002(\005\022\020\n\010VE_FORMS\030\004 \002(\005\022\020\n" +
      "\010PVH_INVL\030\005 \002(\005\022\014\n\004PEDS\030\006 \002(\005\022\022\n\nPERNOTM" +
      "VIT\030\007 \002(\005\022\017\n\007PERMVIT\030\010 \002(\005\022\024\n\014person_cou" +
      "nt\030\t \002(\005\022\016\n\006COUNTY\030\n \002(\005\022\014\n\004CITY\030\013 \002(\005\022\013" +
      "\n\003DAY\030\014 \002(\005\022\r\n\005MONTH\030\r \002(\005\022\014\n\004YEAR\030\016 \002(\005" +
      "\022\020\n\010DAY_WEEK\030\017 \002(\005\022\014\n\004HOUR\030\020 \002(\005\022\016\n\006MINU",
      "TE\030\021 \002(\005\022\013\n\003NHS\030\022 \002(\005\022\017\n\007RUR_URB\030\023 \002(\005\022\020" +
      "\n\010FUNC_SYS\030\024 \002(\005\022\020\n\010RD_OWNER\030\025 \002(\005\022\r\n\005RO" +
      "UTE\030\026 \002(\005\022\017\n\007TWAY_ID\030\027 \002(\t\022\020\n\010TWAY_ID2\030\030" +
      " \001(\t\022\016\n\006MILEPT\030\031 \002(\005\022\020\n\010LATITUDE\030\032 \001(\002\022\020" +
      "\n\010LONGITUD\030\033 \001(\002\022\016\n\006SP_JUR\030\034 \002(\005\022\017\n\007HARM" +
      "_EV\030\035 \002(\005\022\020\n\010MAN_COLL\030\036 \002(\005\022\017\n\007RELJCT1\030\037" +
      " \002(\005\022\017\n\007RELJCT2\030  \002(\005\022\017\n\007TYP_INT\030! \002(\005\022\020" +
      "\n\010WRK_ZONE\030\" \002(\005\022\020\n\010REL_ROAD\030# \002(\005\022\020\n\010LG" +
      "T_COND\030$ \002(\005\022\020\n\010WEATHER1\030% \002(\005\022\020\n\010WEATHE" +
      "R2\030& \002(\005\022\017\n\007WEATHER\030\' \002(\005\022\017\n\007SCH_BUS\030( \002",
      "(\005\022\014\n\004RAIL\030) \002(\t\022\020\n\010NOT_HOUR\030* \002(\005\022\017\n\007NO" +
      "T_MIN\030+ \002(\005\022\020\n\010ARR_HOUR\030, \002(\005\022\017\n\007ARR_MIN" +
      "\030- \002(\005\022\017\n\007HOSP_HR\030. \002(\005\022\017\n\007HOSP_MN\030/ \002(\005" +
      "\022\013\n\003CF1\0300 \002(\005\022\013\n\003CF2\0301 \002(\005\022\013\n\003CF3\0302 \002(\005\022" +
      "\016\n\006FATALS\0303 \002(\005\022\020\n\010DRUNK_DR\0304 \002(\005\0221\n\007per" +
      "sons\0305 \003(\0132 .boa.types.transportation.Pe" +
      "rson\0222\n\007vehicle\0306 \003(\0132!.boa.types.transp" +
      "ortation.VehicleB\002H\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_boa_types_transportation_Crash_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_boa_types_transportation_Crash_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_boa_types_transportation_Crash_descriptor,
              new java.lang.String[] { "State", "STCASE", "VETOTAL", "VEFORMS", "PVHINVL", "PEDS", "PERNOTMVIT", "PERMVIT", "PersonCount", "COUNTY", "CITY", "DAY", "MONTH", "YEAR", "DAYWEEK", "HOUR", "MINUTE", "NHS", "RURURB", "FUNCSYS", "RDOWNER", "ROUTE", "TWAYID", "TWAYID2", "MILEPT", "LATITUDE", "LONGITUD", "SPJUR", "HARMEV", "MANCOLL", "RELJCT1", "RELJCT2", "TYPINT", "WRKZONE", "RELROAD", "LGTCOND", "WEATHER1", "WEATHER2", "WEATHER", "SCHBUS", "RAIL", "NOTHOUR", "NOTMIN", "ARRHOUR", "ARRMIN", "HOSPHR", "HOSPMN", "CF1", "CF2", "CF3", "FATALS", "DRUNKDR", "Persons", "Vehicle", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          boa.types.transportation.Motor.getDescriptor(),
          boa.types.transportation.Individual.getDescriptor(),
          boa.types.transportation.State.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
