p: Project = input;
counts: output sum of int;
out: output collection of string;

v1: table[string][int][int][abc: string] of c: int = J12345/subv1/o;
r1: v1._row;
v2: table[string][int] of float = @rdyer/viewTag1/subv/subsubv/o;
v3: table[int][abc: string] of d: int = v1["foo"][5];
v4: table[string] of int = @rdyer/viewTag1/subv/subsubv/o2;
v5: table[string] of int = @rdyer/viewTag1/subv/subsubv/o3;
v6: table of int;
v7: table of int;
v8 := v1["foo"][_][_]["abc"];


v9: table of int = v4["abc"];
v10 := v4["foo"];
v11 := v4["sleepy"];

v8 = v3[_]["foo"];
v4 = v3[1];
v5 = v4;
v6 = v3[1]["abc"];
v7 = v6;

r3: v3._row;
r5: v5._row;
r7: v7._row;
r8: v5["temp"]._row;
r9: v1["foo"][_][3]._row;

v1 >> r1;

if (false && v3 >> r3) {
  out << r3.abc;
  counts << r3.d;
  counts << r3._1;
}

while (v5 >> r5 && true) {
  out << r5._1;
  counts << r5._2;
}

# TODO
# v := J12345/subv1/o
# v := v1["abc"];
#
# type t = {int, string, bool};
# v: table[t][int] of int;
