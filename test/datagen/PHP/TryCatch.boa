namespaces {
  name: ""
  statements {
    kind: TRY
    statements {
      kind: BLOCK
      statements {
        kind: EXPRESSION
        expression {
          kind: METHODCALL
          method: "echo"
          method_args {
            kind: OP_CONCAT
            expressions {
              kind: METHODCALL
              method: "inverse"
              method_args {
                kind: LITERAL
                literal: "5"
              }
            }
            expressions {
              kind: LITERAL
              literal: "\"\\n\""
            }
          }
        }
      }
    }
    statements {
      kind: CATCH
      statements {
        kind: BLOCK
        statements {
          kind: EXPRESSION
          expression {
            kind: METHODCALL
            method: "echo"
            method_args {
              kind: LITERAL
              literal: "\'Caught exception: \'"
            }
            method_args {
              kind: METHODCALL
              expressions {
                kind: VARACCESS
                variable: "e"
                dollar_sign: true
              }
              method: "getMessage"
            }
            method_args {
              kind: LITERAL
              literal: "\"\\n\""
            }
          }
        }
      }
      variable_declaration {
        name: "e"
        variable_type {
          name: "Exception"
          kind: OTHER
        }
        dollar_sign: true
      }
    }
    statements {
      kind: FINALLY
      statements {
        kind: BLOCK
        statements {
          kind: EXPRESSION
          expression {
            kind: METHODCALL
            method: "echo"
            method_args {
              kind: LITERAL
              literal: "\"First finally.\\n\""
            }
          }
        }
      }
    }
  }
}
