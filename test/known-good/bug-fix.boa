AddedNullCheck: output sum of int;
p: Project = input;

cur_rev: Revision;
count := 0;
files: map[string] of ChangedFile;
repo: CodeRepository;

visit(p, visitor {
	before node: CodeRepository -> repo = node;
	before node: Revision -> cur_rev = node;
	before node: ChangedFile -> {
		if (isfixingrevision(cur_rev.log) && haskey(files, node.name)) {
			count = 0;
			visit(getast(files[node.name]));
			last := count;

			count = 0;
			visit(getast(node));

			if (count > last)
					AddedNullCheck << 1;
		}
		if (node.change != ChangeKind.DELETED)
			files[node.name] = node;
		else
			remove(files, node.name);
		stop;
	}
	before node: Statement ->
		if (node.kind == StatementKind.IF)
			foreach(j: int; def(node.conditions[j]))
				visit(node.conditions[j], visitor {
					before node: Expression ->
						if (node.kind == ExpressionKind.EQ || node.kind == ExpressionKind.NEQ)
							exists (i: int; isliteral(node.expressions[i], "null"))
								count++;
				});
});
