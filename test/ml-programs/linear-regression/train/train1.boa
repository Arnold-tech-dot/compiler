p: Project = input;

filename : string;
totalmethod:= 0;
totalClass:=0;
totalloc :=0;

collect : output collection[string][int][int] of int;

train : output linearregression of {int,int};

lloc := function(node: ASTRoot) : int {
    count := 0;

    visit(node, visitor {
        before node: Statement ->
                count = count + 1;
    });

    return count;
};


if(rand() > 0.8) {
    visit(p, visitor {
        before n: CodeRepository -> {
            snapshot := getsnapshot(n);
            foreach (i: int; def(snapshot[i]))
                visit(snapshot[i]);
            stop;
        }

        before node: Declaration -> {
            if (node.kind == TypeKind.CLASS)
                totalClass++;
            foreach (i: int; def(node.methods[i]))
                totalmethod++;
        }

        before node: ASTRoot -> totalloc = totalloc + lloc(node);
    });
}


collect[p.project_url][totalClass][totalmethod] << totalloc;
train << {totalClass, totalloc};
