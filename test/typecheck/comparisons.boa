o: output sum of int;

# allow comparisons on proto maps
k := StatementKind.EXPRESSION;
k2 := StatementKind.EXPRESSION;
f1 := function() : StatementKind {
    return StatementKind.EXPRESSION;
};

if (k == k2 || k != k2)
    o << 1;
if (f1() == k2 || k != f1() || f1() == f1())
    o << 1;

# allow comparisons on proto lists
p := input.audiences;
p2 := input.databases;
#f2 := function() : array of string {
#    return input.databases;
#};

if (p == p2 || p != p2)
    o << 1;
#if (f2() == p2 || p != f2() || f2() == f2())
#    o << 1;

# allow comparisons on arrays
a: array of int = {1, 2};
a2: array of int = {1, 2};
f3 := function() : array of int {
    return {1, 2};
};

if (a == a2 || a != a2)
    o << 1;
if (f3() == a2 || a != f3() || f3() == f3())
    o << 1;
